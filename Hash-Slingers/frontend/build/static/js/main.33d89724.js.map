{"version":3,"file":"static/js/main.33d89724.js","mappings":"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","sources":["../node_modules/react-dom/cjs/react-dom.production.min.js","../node_modules/react-dom/client.js","../node_modules/react-dom/index.js","../node_modules/react/cjs/react-jsx-runtime.production.min.js","../node_modules/react/cjs/react.production.min.js","../node_modules/react/index.js","../node_modules/react/jsx-runtime.js","../node_modules/scheduler/cjs/scheduler.production.min.js","../node_modules/scheduler/index.js","../webpack/bootstrap","../webpack/runtime/create fake namespace object","../webpack/runtime/define property getters","../webpack/runtime/ensure chunk","../webpack/runtime/get javascript chunk filename","../webpack/runtime/get mini-css chunk filename","../webpack/runtime/hasOwnProperty shorthand","../webpack/runtime/load script","../webpack/runtime/make namespace object","../webpack/runtime/publicPath","../webpack/runtime/jsonp chunk loading","../node_modules/@remix-run/router/history.ts","../node_modules/@remix-run/router/utils.ts","../node_modules/@remix-run/router/router.ts","../node_modules/react-router/lib/context.ts","../node_modules/react-router/lib/hooks.tsx","../node_modules/react-router/lib/components.tsx","../node_modules/react-router-dom/dom.ts","../node_modules/react-router-dom/index.tsx","assets/svgs/fundIcon.svg","BalanceContext.js","components/Header.jsx","assets/svgs/pyramid.svg","components/HomePageWelcome.jsx","assets/svgs/blob1.svg","assets/svgs/blob2.svg","components/Footer.jsx","pages/Homepage.jsx","assets/svgs/mnyTruck.svg","pages/Funds.jsx","pages/Games.jsx","pages/Login.jsx","pages/Register.jsx","App.jsx","reportWebVitals.js","index.js"],"sourcesContent":["/**\r\n * @license React\r\n * react-dom.production.min.js\r\n *\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n/*\r\n Modernizr 3.0.0pre (Custom Build) | MIT\r\n*/\r\n'use strict';var aa=require(\"react\"),ca=require(\"scheduler\");function p(a){for(var b=\"https://reactjs.org/docs/error-decoder.html?invariant=\"+a,c=1;c<arguments.length;c++)b+=\"&args[]=\"+encodeURIComponent(arguments[c]);return\"Minified React error #\"+a+\"; visit \"+b+\" for the full message or use the non-minified dev environment for full errors and additional helpful warnings.\"}var da=new Set,ea={};function fa(a,b){ha(a,b);ha(a+\"Capture\",b)}\r\nfunction ha(a,b){ea[a]=b;for(a=0;a<b.length;a++)da.add(b[a])}\r\nvar ia=!(\"undefined\"===typeof window||\"undefined\"===typeof window.document||\"undefined\"===typeof window.document.createElement),ja=Object.prototype.hasOwnProperty,ka=/^[:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD][:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040]*$/,la=\r\n{},ma={};function oa(a){if(ja.call(ma,a))return!0;if(ja.call(la,a))return!1;if(ka.test(a))return ma[a]=!0;la[a]=!0;return!1}function pa(a,b,c,d){if(null!==c&&0===c.type)return!1;switch(typeof b){case \"function\":case \"symbol\":return!0;case \"boolean\":if(d)return!1;if(null!==c)return!c.acceptsBooleans;a=a.toLowerCase().slice(0,5);return\"data-\"!==a&&\"aria-\"!==a;default:return!1}}\r\nfunction qa(a,b,c,d){if(null===b||\"undefined\"===typeof b||pa(a,b,c,d))return!0;if(d)return!1;if(null!==c)switch(c.type){case 3:return!b;case 4:return!1===b;case 5:return isNaN(b);case 6:return isNaN(b)||1>b}return!1}function v(a,b,c,d,e,f,g){this.acceptsBooleans=2===b||3===b||4===b;this.attributeName=d;this.attributeNamespace=e;this.mustUseProperty=c;this.propertyName=a;this.type=b;this.sanitizeURL=f;this.removeEmptyString=g}var z={};\r\n\"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style\".split(\" \").forEach(function(a){z[a]=new v(a,0,!1,a,null,!1,!1)});[[\"acceptCharset\",\"accept-charset\"],[\"className\",\"class\"],[\"htmlFor\",\"for\"],[\"httpEquiv\",\"http-equiv\"]].forEach(function(a){var b=a[0];z[b]=new v(b,1,!1,a[1],null,!1,!1)});[\"contentEditable\",\"draggable\",\"spellCheck\",\"value\"].forEach(function(a){z[a]=new v(a,2,!1,a.toLowerCase(),null,!1,!1)});\r\n[\"autoReverse\",\"externalResourcesRequired\",\"focusable\",\"preserveAlpha\"].forEach(function(a){z[a]=new v(a,2,!1,a,null,!1,!1)});\"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope\".split(\" \").forEach(function(a){z[a]=new v(a,3,!1,a.toLowerCase(),null,!1,!1)});\r\n[\"checked\",\"multiple\",\"muted\",\"selected\"].forEach(function(a){z[a]=new v(a,3,!0,a,null,!1,!1)});[\"capture\",\"download\"].forEach(function(a){z[a]=new v(a,4,!1,a,null,!1,!1)});[\"cols\",\"rows\",\"size\",\"span\"].forEach(function(a){z[a]=new v(a,6,!1,a,null,!1,!1)});[\"rowSpan\",\"start\"].forEach(function(a){z[a]=new v(a,5,!1,a.toLowerCase(),null,!1,!1)});var ra=/[\\-:]([a-z])/g;function sa(a){return a[1].toUpperCase()}\r\n\"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height\".split(\" \").forEach(function(a){var b=a.replace(ra,\r\nsa);z[b]=new v(b,1,!1,a,null,!1,!1)});\"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type\".split(\" \").forEach(function(a){var b=a.replace(ra,sa);z[b]=new v(b,1,!1,a,\"http://www.w3.org/1999/xlink\",!1,!1)});[\"xml:base\",\"xml:lang\",\"xml:space\"].forEach(function(a){var b=a.replace(ra,sa);z[b]=new v(b,1,!1,a,\"http://www.w3.org/XML/1998/namespace\",!1,!1)});[\"tabIndex\",\"crossOrigin\"].forEach(function(a){z[a]=new v(a,1,!1,a.toLowerCase(),null,!1,!1)});\r\nz.xlinkHref=new v(\"xlinkHref\",1,!1,\"xlink:href\",\"http://www.w3.org/1999/xlink\",!0,!1);[\"src\",\"href\",\"action\",\"formAction\"].forEach(function(a){z[a]=new v(a,1,!1,a.toLowerCase(),null,!0,!0)});\r\nfunction ta(a,b,c,d){var e=z.hasOwnProperty(b)?z[b]:null;if(null!==e?0!==e.type:d||!(2<b.length)||\"o\"!==b[0]&&\"O\"!==b[0]||\"n\"!==b[1]&&\"N\"!==b[1])qa(b,c,e,d)&&(c=null),d||null===e?oa(b)&&(null===c?a.removeAttribute(b):a.setAttribute(b,\"\"+c)):e.mustUseProperty?a[e.propertyName]=null===c?3===e.type?!1:\"\":c:(b=e.attributeName,d=e.attributeNamespace,null===c?a.removeAttribute(b):(e=e.type,c=3===e||4===e&&!0===c?\"\":\"\"+c,d?a.setAttributeNS(d,b,c):a.setAttribute(b,c)))}\r\nvar ua=aa.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,va=Symbol.for(\"react.element\"),wa=Symbol.for(\"react.portal\"),ya=Symbol.for(\"react.fragment\"),za=Symbol.for(\"react.strict_mode\"),Aa=Symbol.for(\"react.profiler\"),Ba=Symbol.for(\"react.provider\"),Ca=Symbol.for(\"react.context\"),Da=Symbol.for(\"react.forward_ref\"),Ea=Symbol.for(\"react.suspense\"),Fa=Symbol.for(\"react.suspense_list\"),Ga=Symbol.for(\"react.memo\"),Ha=Symbol.for(\"react.lazy\");Symbol.for(\"react.scope\");Symbol.for(\"react.debug_trace_mode\");\r\nvar Ia=Symbol.for(\"react.offscreen\");Symbol.for(\"react.legacy_hidden\");Symbol.for(\"react.cache\");Symbol.for(\"react.tracing_marker\");var Ja=Symbol.iterator;function Ka(a){if(null===a||\"object\"!==typeof a)return null;a=Ja&&a[Ja]||a[\"@@iterator\"];return\"function\"===typeof a?a:null}var A=Object.assign,La;function Ma(a){if(void 0===La)try{throw Error();}catch(c){var b=c.stack.trim().match(/\\n( *(at )?)/);La=b&&b[1]||\"\"}return\"\\n\"+La+a}var Na=!1;\r\nfunction Oa(a,b){if(!a||Na)return\"\";Na=!0;var c=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{if(b)if(b=function(){throw Error();},Object.defineProperty(b.prototype,\"props\",{set:function(){throw Error();}}),\"object\"===typeof Reflect&&Reflect.construct){try{Reflect.construct(b,[])}catch(l){var d=l}Reflect.construct(a,[],b)}else{try{b.call()}catch(l){d=l}a.call(b.prototype)}else{try{throw Error();}catch(l){d=l}a()}}catch(l){if(l&&d&&\"string\"===typeof l.stack){for(var e=l.stack.split(\"\\n\"),\r\nf=d.stack.split(\"\\n\"),g=e.length-1,h=f.length-1;1<=g&&0<=h&&e[g]!==f[h];)h--;for(;1<=g&&0<=h;g--,h--)if(e[g]!==f[h]){if(1!==g||1!==h){do if(g--,h--,0>h||e[g]!==f[h]){var k=\"\\n\"+e[g].replace(\" at new \",\" at \");a.displayName&&k.includes(\"<anonymous>\")&&(k=k.replace(\"<anonymous>\",a.displayName));return k}while(1<=g&&0<=h)}break}}}finally{Na=!1,Error.prepareStackTrace=c}return(a=a?a.displayName||a.name:\"\")?Ma(a):\"\"}\r\nfunction Pa(a){switch(a.tag){case 5:return Ma(a.type);case 16:return Ma(\"Lazy\");case 13:return Ma(\"Suspense\");case 19:return Ma(\"SuspenseList\");case 0:case 2:case 15:return a=Oa(a.type,!1),a;case 11:return a=Oa(a.type.render,!1),a;case 1:return a=Oa(a.type,!0),a;default:return\"\"}}\r\nfunction Qa(a){if(null==a)return null;if(\"function\"===typeof a)return a.displayName||a.name||null;if(\"string\"===typeof a)return a;switch(a){case ya:return\"Fragment\";case wa:return\"Portal\";case Aa:return\"Profiler\";case za:return\"StrictMode\";case Ea:return\"Suspense\";case Fa:return\"SuspenseList\"}if(\"object\"===typeof a)switch(a.$$typeof){case Ca:return(a.displayName||\"Context\")+\".Consumer\";case Ba:return(a._context.displayName||\"Context\")+\".Provider\";case Da:var b=a.render;a=a.displayName;a||(a=b.displayName||\r\nb.name||\"\",a=\"\"!==a?\"ForwardRef(\"+a+\")\":\"ForwardRef\");return a;case Ga:return b=a.displayName||null,null!==b?b:Qa(a.type)||\"Memo\";case Ha:b=a._payload;a=a._init;try{return Qa(a(b))}catch(c){}}return null}\r\nfunction Ra(a){var b=a.type;switch(a.tag){case 24:return\"Cache\";case 9:return(b.displayName||\"Context\")+\".Consumer\";case 10:return(b._context.displayName||\"Context\")+\".Provider\";case 18:return\"DehydratedFragment\";case 11:return a=b.render,a=a.displayName||a.name||\"\",b.displayName||(\"\"!==a?\"ForwardRef(\"+a+\")\":\"ForwardRef\");case 7:return\"Fragment\";case 5:return b;case 4:return\"Portal\";case 3:return\"Root\";case 6:return\"Text\";case 16:return Qa(b);case 8:return b===za?\"StrictMode\":\"Mode\";case 22:return\"Offscreen\";\r\ncase 12:return\"Profiler\";case 21:return\"Scope\";case 13:return\"Suspense\";case 19:return\"SuspenseList\";case 25:return\"TracingMarker\";case 1:case 0:case 17:case 2:case 14:case 15:if(\"function\"===typeof b)return b.displayName||b.name||null;if(\"string\"===typeof b)return b}return null}function Sa(a){switch(typeof a){case \"boolean\":case \"number\":case \"string\":case \"undefined\":return a;case \"object\":return a;default:return\"\"}}\r\nfunction Ta(a){var b=a.type;return(a=a.nodeName)&&\"input\"===a.toLowerCase()&&(\"checkbox\"===b||\"radio\"===b)}\r\nfunction Ua(a){var b=Ta(a)?\"checked\":\"value\",c=Object.getOwnPropertyDescriptor(a.constructor.prototype,b),d=\"\"+a[b];if(!a.hasOwnProperty(b)&&\"undefined\"!==typeof c&&\"function\"===typeof c.get&&\"function\"===typeof c.set){var e=c.get,f=c.set;Object.defineProperty(a,b,{configurable:!0,get:function(){return e.call(this)},set:function(a){d=\"\"+a;f.call(this,a)}});Object.defineProperty(a,b,{enumerable:c.enumerable});return{getValue:function(){return d},setValue:function(a){d=\"\"+a},stopTracking:function(){a._valueTracker=\r\nnull;delete a[b]}}}}function Va(a){a._valueTracker||(a._valueTracker=Ua(a))}function Wa(a){if(!a)return!1;var b=a._valueTracker;if(!b)return!0;var c=b.getValue();var d=\"\";a&&(d=Ta(a)?a.checked?\"true\":\"false\":a.value);a=d;return a!==c?(b.setValue(a),!0):!1}function Xa(a){a=a||(\"undefined\"!==typeof document?document:void 0);if(\"undefined\"===typeof a)return null;try{return a.activeElement||a.body}catch(b){return a.body}}\r\nfunction Ya(a,b){var c=b.checked;return A({},b,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=c?c:a._wrapperState.initialChecked})}function Za(a,b){var c=null==b.defaultValue?\"\":b.defaultValue,d=null!=b.checked?b.checked:b.defaultChecked;c=Sa(null!=b.value?b.value:c);a._wrapperState={initialChecked:d,initialValue:c,controlled:\"checkbox\"===b.type||\"radio\"===b.type?null!=b.checked:null!=b.value}}function ab(a,b){b=b.checked;null!=b&&ta(a,\"checked\",b,!1)}\r\nfunction bb(a,b){ab(a,b);var c=Sa(b.value),d=b.type;if(null!=c)if(\"number\"===d){if(0===c&&\"\"===a.value||a.value!=c)a.value=\"\"+c}else a.value!==\"\"+c&&(a.value=\"\"+c);else if(\"submit\"===d||\"reset\"===d){a.removeAttribute(\"value\");return}b.hasOwnProperty(\"value\")?cb(a,b.type,c):b.hasOwnProperty(\"defaultValue\")&&cb(a,b.type,Sa(b.defaultValue));null==b.checked&&null!=b.defaultChecked&&(a.defaultChecked=!!b.defaultChecked)}\r\nfunction db(a,b,c){if(b.hasOwnProperty(\"value\")||b.hasOwnProperty(\"defaultValue\")){var d=b.type;if(!(\"submit\"!==d&&\"reset\"!==d||void 0!==b.value&&null!==b.value))return;b=\"\"+a._wrapperState.initialValue;c||b===a.value||(a.value=b);a.defaultValue=b}c=a.name;\"\"!==c&&(a.name=\"\");a.defaultChecked=!!a._wrapperState.initialChecked;\"\"!==c&&(a.name=c)}\r\nfunction cb(a,b,c){if(\"number\"!==b||Xa(a.ownerDocument)!==a)null==c?a.defaultValue=\"\"+a._wrapperState.initialValue:a.defaultValue!==\"\"+c&&(a.defaultValue=\"\"+c)}var eb=Array.isArray;\r\nfunction fb(a,b,c,d){a=a.options;if(b){b={};for(var e=0;e<c.length;e++)b[\"$\"+c[e]]=!0;for(c=0;c<a.length;c++)e=b.hasOwnProperty(\"$\"+a[c].value),a[c].selected!==e&&(a[c].selected=e),e&&d&&(a[c].defaultSelected=!0)}else{c=\"\"+Sa(c);b=null;for(e=0;e<a.length;e++){if(a[e].value===c){a[e].selected=!0;d&&(a[e].defaultSelected=!0);return}null!==b||a[e].disabled||(b=a[e])}null!==b&&(b.selected=!0)}}\r\nfunction gb(a,b){if(null!=b.dangerouslySetInnerHTML)throw Error(p(91));return A({},b,{value:void 0,defaultValue:void 0,children:\"\"+a._wrapperState.initialValue})}function hb(a,b){var c=b.value;if(null==c){c=b.children;b=b.defaultValue;if(null!=c){if(null!=b)throw Error(p(92));if(eb(c)){if(1<c.length)throw Error(p(93));c=c[0]}b=c}null==b&&(b=\"\");c=b}a._wrapperState={initialValue:Sa(c)}}\r\nfunction ib(a,b){var c=Sa(b.value),d=Sa(b.defaultValue);null!=c&&(c=\"\"+c,c!==a.value&&(a.value=c),null==b.defaultValue&&a.defaultValue!==c&&(a.defaultValue=c));null!=d&&(a.defaultValue=\"\"+d)}function jb(a){var b=a.textContent;b===a._wrapperState.initialValue&&\"\"!==b&&null!==b&&(a.value=b)}function kb(a){switch(a){case \"svg\":return\"http://www.w3.org/2000/svg\";case \"math\":return\"http://www.w3.org/1998/Math/MathML\";default:return\"http://www.w3.org/1999/xhtml\"}}\r\nfunction lb(a,b){return null==a||\"http://www.w3.org/1999/xhtml\"===a?kb(b):\"http://www.w3.org/2000/svg\"===a&&\"foreignObject\"===b?\"http://www.w3.org/1999/xhtml\":a}\r\nvar mb,nb=function(a){return\"undefined\"!==typeof MSApp&&MSApp.execUnsafeLocalFunction?function(b,c,d,e){MSApp.execUnsafeLocalFunction(function(){return a(b,c,d,e)})}:a}(function(a,b){if(\"http://www.w3.org/2000/svg\"!==a.namespaceURI||\"innerHTML\"in a)a.innerHTML=b;else{mb=mb||document.createElement(\"div\");mb.innerHTML=\"<svg>\"+b.valueOf().toString()+\"</svg>\";for(b=mb.firstChild;a.firstChild;)a.removeChild(a.firstChild);for(;b.firstChild;)a.appendChild(b.firstChild)}});\r\nfunction ob(a,b){if(b){var c=a.firstChild;if(c&&c===a.lastChild&&3===c.nodeType){c.nodeValue=b;return}}a.textContent=b}\r\nvar pb={animationIterationCount:!0,aspectRatio:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,\r\nzoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},qb=[\"Webkit\",\"ms\",\"Moz\",\"O\"];Object.keys(pb).forEach(function(a){qb.forEach(function(b){b=b+a.charAt(0).toUpperCase()+a.substring(1);pb[b]=pb[a]})});function rb(a,b,c){return null==b||\"boolean\"===typeof b||\"\"===b?\"\":c||\"number\"!==typeof b||0===b||pb.hasOwnProperty(a)&&pb[a]?(\"\"+b).trim():b+\"px\"}\r\nfunction sb(a,b){a=a.style;for(var c in b)if(b.hasOwnProperty(c)){var d=0===c.indexOf(\"--\"),e=rb(c,b[c],d);\"float\"===c&&(c=\"cssFloat\");d?a.setProperty(c,e):a[c]=e}}var tb=A({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});\r\nfunction ub(a,b){if(b){if(tb[a]&&(null!=b.children||null!=b.dangerouslySetInnerHTML))throw Error(p(137,a));if(null!=b.dangerouslySetInnerHTML){if(null!=b.children)throw Error(p(60));if(\"object\"!==typeof b.dangerouslySetInnerHTML||!(\"__html\"in b.dangerouslySetInnerHTML))throw Error(p(61));}if(null!=b.style&&\"object\"!==typeof b.style)throw Error(p(62));}}\r\nfunction vb(a,b){if(-1===a.indexOf(\"-\"))return\"string\"===typeof b.is;switch(a){case \"annotation-xml\":case \"color-profile\":case \"font-face\":case \"font-face-src\":case \"font-face-uri\":case \"font-face-format\":case \"font-face-name\":case \"missing-glyph\":return!1;default:return!0}}var wb=null;function xb(a){a=a.target||a.srcElement||window;a.correspondingUseElement&&(a=a.correspondingUseElement);return 3===a.nodeType?a.parentNode:a}var yb=null,zb=null,Ab=null;\r\nfunction Bb(a){if(a=Cb(a)){if(\"function\"!==typeof yb)throw Error(p(280));var b=a.stateNode;b&&(b=Db(b),yb(a.stateNode,a.type,b))}}function Eb(a){zb?Ab?Ab.push(a):Ab=[a]:zb=a}function Fb(){if(zb){var a=zb,b=Ab;Ab=zb=null;Bb(a);if(b)for(a=0;a<b.length;a++)Bb(b[a])}}function Gb(a,b){return a(b)}function Hb(){}var Ib=!1;function Jb(a,b,c){if(Ib)return a(b,c);Ib=!0;try{return Gb(a,b,c)}finally{if(Ib=!1,null!==zb||null!==Ab)Hb(),Fb()}}\r\nfunction Kb(a,b){var c=a.stateNode;if(null===c)return null;var d=Db(c);if(null===d)return null;c=d[b];a:switch(b){case \"onClick\":case \"onClickCapture\":case \"onDoubleClick\":case \"onDoubleClickCapture\":case \"onMouseDown\":case \"onMouseDownCapture\":case \"onMouseMove\":case \"onMouseMoveCapture\":case \"onMouseUp\":case \"onMouseUpCapture\":case \"onMouseEnter\":(d=!d.disabled)||(a=a.type,d=!(\"button\"===a||\"input\"===a||\"select\"===a||\"textarea\"===a));a=!d;break a;default:a=!1}if(a)return null;if(c&&\"function\"!==\r\ntypeof c)throw Error(p(231,b,typeof c));return c}var Lb=!1;if(ia)try{var Mb={};Object.defineProperty(Mb,\"passive\",{get:function(){Lb=!0}});window.addEventListener(\"test\",Mb,Mb);window.removeEventListener(\"test\",Mb,Mb)}catch(a){Lb=!1}function Nb(a,b,c,d,e,f,g,h,k){var l=Array.prototype.slice.call(arguments,3);try{b.apply(c,l)}catch(m){this.onError(m)}}var Ob=!1,Pb=null,Qb=!1,Rb=null,Sb={onError:function(a){Ob=!0;Pb=a}};function Tb(a,b,c,d,e,f,g,h,k){Ob=!1;Pb=null;Nb.apply(Sb,arguments)}\r\nfunction Ub(a,b,c,d,e,f,g,h,k){Tb.apply(this,arguments);if(Ob){if(Ob){var l=Pb;Ob=!1;Pb=null}else throw Error(p(198));Qb||(Qb=!0,Rb=l)}}function Vb(a){var b=a,c=a;if(a.alternate)for(;b.return;)b=b.return;else{a=b;do b=a,0!==(b.flags&4098)&&(c=b.return),a=b.return;while(a)}return 3===b.tag?c:null}function Wb(a){if(13===a.tag){var b=a.memoizedState;null===b&&(a=a.alternate,null!==a&&(b=a.memoizedState));if(null!==b)return b.dehydrated}return null}function Xb(a){if(Vb(a)!==a)throw Error(p(188));}\r\nfunction Yb(a){var b=a.alternate;if(!b){b=Vb(a);if(null===b)throw Error(p(188));return b!==a?null:a}for(var c=a,d=b;;){var e=c.return;if(null===e)break;var f=e.alternate;if(null===f){d=e.return;if(null!==d){c=d;continue}break}if(e.child===f.child){for(f=e.child;f;){if(f===c)return Xb(e),a;if(f===d)return Xb(e),b;f=f.sibling}throw Error(p(188));}if(c.return!==d.return)c=e,d=f;else{for(var g=!1,h=e.child;h;){if(h===c){g=!0;c=e;d=f;break}if(h===d){g=!0;d=e;c=f;break}h=h.sibling}if(!g){for(h=f.child;h;){if(h===\r\nc){g=!0;c=f;d=e;break}if(h===d){g=!0;d=f;c=e;break}h=h.sibling}if(!g)throw Error(p(189));}}if(c.alternate!==d)throw Error(p(190));}if(3!==c.tag)throw Error(p(188));return c.stateNode.current===c?a:b}function Zb(a){a=Yb(a);return null!==a?$b(a):null}function $b(a){if(5===a.tag||6===a.tag)return a;for(a=a.child;null!==a;){var b=$b(a);if(null!==b)return b;a=a.sibling}return null}\r\nvar ac=ca.unstable_scheduleCallback,bc=ca.unstable_cancelCallback,cc=ca.unstable_shouldYield,dc=ca.unstable_requestPaint,B=ca.unstable_now,ec=ca.unstable_getCurrentPriorityLevel,fc=ca.unstable_ImmediatePriority,gc=ca.unstable_UserBlockingPriority,hc=ca.unstable_NormalPriority,ic=ca.unstable_LowPriority,jc=ca.unstable_IdlePriority,kc=null,lc=null;function mc(a){if(lc&&\"function\"===typeof lc.onCommitFiberRoot)try{lc.onCommitFiberRoot(kc,a,void 0,128===(a.current.flags&128))}catch(b){}}\r\nvar oc=Math.clz32?Math.clz32:nc,pc=Math.log,qc=Math.LN2;function nc(a){a>>>=0;return 0===a?32:31-(pc(a)/qc|0)|0}var rc=64,sc=4194304;\r\nfunction tc(a){switch(a&-a){case 1:return 1;case 2:return 2;case 4:return 4;case 8:return 8;case 16:return 16;case 32:return 32;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return a&4194240;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return a&130023424;case 134217728:return 134217728;case 268435456:return 268435456;case 536870912:return 536870912;case 1073741824:return 1073741824;\r\ndefault:return a}}function uc(a,b){var c=a.pendingLanes;if(0===c)return 0;var d=0,e=a.suspendedLanes,f=a.pingedLanes,g=c&268435455;if(0!==g){var h=g&~e;0!==h?d=tc(h):(f&=g,0!==f&&(d=tc(f)))}else g=c&~e,0!==g?d=tc(g):0!==f&&(d=tc(f));if(0===d)return 0;if(0!==b&&b!==d&&0===(b&e)&&(e=d&-d,f=b&-b,e>=f||16===e&&0!==(f&4194240)))return b;0!==(d&4)&&(d|=c&16);b=a.entangledLanes;if(0!==b)for(a=a.entanglements,b&=d;0<b;)c=31-oc(b),e=1<<c,d|=a[c],b&=~e;return d}\r\nfunction vc(a,b){switch(a){case 1:case 2:case 4:return b+250;case 8:case 16:case 32:case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return b+5E3;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return-1;case 134217728:case 268435456:case 536870912:case 1073741824:return-1;default:return-1}}\r\nfunction wc(a,b){for(var c=a.suspendedLanes,d=a.pingedLanes,e=a.expirationTimes,f=a.pendingLanes;0<f;){var g=31-oc(f),h=1<<g,k=e[g];if(-1===k){if(0===(h&c)||0!==(h&d))e[g]=vc(h,b)}else k<=b&&(a.expiredLanes|=h);f&=~h}}function xc(a){a=a.pendingLanes&-1073741825;return 0!==a?a:a&1073741824?1073741824:0}function yc(){var a=rc;rc<<=1;0===(rc&4194240)&&(rc=64);return a}function zc(a){for(var b=[],c=0;31>c;c++)b.push(a);return b}\r\nfunction Ac(a,b,c){a.pendingLanes|=b;536870912!==b&&(a.suspendedLanes=0,a.pingedLanes=0);a=a.eventTimes;b=31-oc(b);a[b]=c}function Bc(a,b){var c=a.pendingLanes&~b;a.pendingLanes=b;a.suspendedLanes=0;a.pingedLanes=0;a.expiredLanes&=b;a.mutableReadLanes&=b;a.entangledLanes&=b;b=a.entanglements;var d=a.eventTimes;for(a=a.expirationTimes;0<c;){var e=31-oc(c),f=1<<e;b[e]=0;d[e]=-1;a[e]=-1;c&=~f}}\r\nfunction Cc(a,b){var c=a.entangledLanes|=b;for(a=a.entanglements;c;){var d=31-oc(c),e=1<<d;e&b|a[d]&b&&(a[d]|=b);c&=~e}}var C=0;function Dc(a){a&=-a;return 1<a?4<a?0!==(a&268435455)?16:536870912:4:1}var Ec,Fc,Gc,Hc,Ic,Jc=!1,Kc=[],Lc=null,Mc=null,Nc=null,Oc=new Map,Pc=new Map,Qc=[],Rc=\"mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit\".split(\" \");\r\nfunction Sc(a,b){switch(a){case \"focusin\":case \"focusout\":Lc=null;break;case \"dragenter\":case \"dragleave\":Mc=null;break;case \"mouseover\":case \"mouseout\":Nc=null;break;case \"pointerover\":case \"pointerout\":Oc.delete(b.pointerId);break;case \"gotpointercapture\":case \"lostpointercapture\":Pc.delete(b.pointerId)}}\r\nfunction Tc(a,b,c,d,e,f){if(null===a||a.nativeEvent!==f)return a={blockedOn:b,domEventName:c,eventSystemFlags:d,nativeEvent:f,targetContainers:[e]},null!==b&&(b=Cb(b),null!==b&&Fc(b)),a;a.eventSystemFlags|=d;b=a.targetContainers;null!==e&&-1===b.indexOf(e)&&b.push(e);return a}\r\nfunction Uc(a,b,c,d,e){switch(b){case \"focusin\":return Lc=Tc(Lc,a,b,c,d,e),!0;case \"dragenter\":return Mc=Tc(Mc,a,b,c,d,e),!0;case \"mouseover\":return Nc=Tc(Nc,a,b,c,d,e),!0;case \"pointerover\":var f=e.pointerId;Oc.set(f,Tc(Oc.get(f)||null,a,b,c,d,e));return!0;case \"gotpointercapture\":return f=e.pointerId,Pc.set(f,Tc(Pc.get(f)||null,a,b,c,d,e)),!0}return!1}\r\nfunction Vc(a){var b=Wc(a.target);if(null!==b){var c=Vb(b);if(null!==c)if(b=c.tag,13===b){if(b=Wb(c),null!==b){a.blockedOn=b;Ic(a.priority,function(){Gc(c)});return}}else if(3===b&&c.stateNode.current.memoizedState.isDehydrated){a.blockedOn=3===c.tag?c.stateNode.containerInfo:null;return}}a.blockedOn=null}\r\nfunction Xc(a){if(null!==a.blockedOn)return!1;for(var b=a.targetContainers;0<b.length;){var c=Yc(a.domEventName,a.eventSystemFlags,b[0],a.nativeEvent);if(null===c){c=a.nativeEvent;var d=new c.constructor(c.type,c);wb=d;c.target.dispatchEvent(d);wb=null}else return b=Cb(c),null!==b&&Fc(b),a.blockedOn=c,!1;b.shift()}return!0}function Zc(a,b,c){Xc(a)&&c.delete(b)}function $c(){Jc=!1;null!==Lc&&Xc(Lc)&&(Lc=null);null!==Mc&&Xc(Mc)&&(Mc=null);null!==Nc&&Xc(Nc)&&(Nc=null);Oc.forEach(Zc);Pc.forEach(Zc)}\r\nfunction ad(a,b){a.blockedOn===b&&(a.blockedOn=null,Jc||(Jc=!0,ca.unstable_scheduleCallback(ca.unstable_NormalPriority,$c)))}\r\nfunction bd(a){function b(b){return ad(b,a)}if(0<Kc.length){ad(Kc[0],a);for(var c=1;c<Kc.length;c++){var d=Kc[c];d.blockedOn===a&&(d.blockedOn=null)}}null!==Lc&&ad(Lc,a);null!==Mc&&ad(Mc,a);null!==Nc&&ad(Nc,a);Oc.forEach(b);Pc.forEach(b);for(c=0;c<Qc.length;c++)d=Qc[c],d.blockedOn===a&&(d.blockedOn=null);for(;0<Qc.length&&(c=Qc[0],null===c.blockedOn);)Vc(c),null===c.blockedOn&&Qc.shift()}var cd=ua.ReactCurrentBatchConfig,dd=!0;\r\nfunction ed(a,b,c,d){var e=C,f=cd.transition;cd.transition=null;try{C=1,fd(a,b,c,d)}finally{C=e,cd.transition=f}}function gd(a,b,c,d){var e=C,f=cd.transition;cd.transition=null;try{C=4,fd(a,b,c,d)}finally{C=e,cd.transition=f}}\r\nfunction fd(a,b,c,d){if(dd){var e=Yc(a,b,c,d);if(null===e)hd(a,b,d,id,c),Sc(a,d);else if(Uc(e,a,b,c,d))d.stopPropagation();else if(Sc(a,d),b&4&&-1<Rc.indexOf(a)){for(;null!==e;){var f=Cb(e);null!==f&&Ec(f);f=Yc(a,b,c,d);null===f&&hd(a,b,d,id,c);if(f===e)break;e=f}null!==e&&d.stopPropagation()}else hd(a,b,d,null,c)}}var id=null;\r\nfunction Yc(a,b,c,d){id=null;a=xb(d);a=Wc(a);if(null!==a)if(b=Vb(a),null===b)a=null;else if(c=b.tag,13===c){a=Wb(b);if(null!==a)return a;a=null}else if(3===c){if(b.stateNode.current.memoizedState.isDehydrated)return 3===b.tag?b.stateNode.containerInfo:null;a=null}else b!==a&&(a=null);id=a;return null}\r\nfunction jd(a){switch(a){case \"cancel\":case \"click\":case \"close\":case \"contextmenu\":case \"copy\":case \"cut\":case \"auxclick\":case \"dblclick\":case \"dragend\":case \"dragstart\":case \"drop\":case \"focusin\":case \"focusout\":case \"input\":case \"invalid\":case \"keydown\":case \"keypress\":case \"keyup\":case \"mousedown\":case \"mouseup\":case \"paste\":case \"pause\":case \"play\":case \"pointercancel\":case \"pointerdown\":case \"pointerup\":case \"ratechange\":case \"reset\":case \"resize\":case \"seeked\":case \"submit\":case \"touchcancel\":case \"touchend\":case \"touchstart\":case \"volumechange\":case \"change\":case \"selectionchange\":case \"textInput\":case \"compositionstart\":case \"compositionend\":case \"compositionupdate\":case \"beforeblur\":case \"afterblur\":case \"beforeinput\":case \"blur\":case \"fullscreenchange\":case \"focus\":case \"hashchange\":case \"popstate\":case \"select\":case \"selectstart\":return 1;case \"drag\":case \"dragenter\":case \"dragexit\":case \"dragleave\":case \"dragover\":case \"mousemove\":case \"mouseout\":case \"mouseover\":case \"pointermove\":case \"pointerout\":case \"pointerover\":case \"scroll\":case \"toggle\":case \"touchmove\":case \"wheel\":case \"mouseenter\":case \"mouseleave\":case \"pointerenter\":case \"pointerleave\":return 4;\r\ncase \"message\":switch(ec()){case fc:return 1;case gc:return 4;case hc:case ic:return 16;case jc:return 536870912;default:return 16}default:return 16}}var kd=null,ld=null,md=null;function nd(){if(md)return md;var a,b=ld,c=b.length,d,e=\"value\"in kd?kd.value:kd.textContent,f=e.length;for(a=0;a<c&&b[a]===e[a];a++);var g=c-a;for(d=1;d<=g&&b[c-d]===e[f-d];d++);return md=e.slice(a,1<d?1-d:void 0)}\r\nfunction od(a){var b=a.keyCode;\"charCode\"in a?(a=a.charCode,0===a&&13===b&&(a=13)):a=b;10===a&&(a=13);return 32<=a||13===a?a:0}function pd(){return!0}function qd(){return!1}\r\nfunction rd(a){function b(b,d,e,f,g){this._reactName=b;this._targetInst=e;this.type=d;this.nativeEvent=f;this.target=g;this.currentTarget=null;for(var c in a)a.hasOwnProperty(c)&&(b=a[c],this[c]=b?b(f):f[c]);this.isDefaultPrevented=(null!=f.defaultPrevented?f.defaultPrevented:!1===f.returnValue)?pd:qd;this.isPropagationStopped=qd;return this}A(b.prototype,{preventDefault:function(){this.defaultPrevented=!0;var a=this.nativeEvent;a&&(a.preventDefault?a.preventDefault():\"unknown\"!==typeof a.returnValue&&\r\n(a.returnValue=!1),this.isDefaultPrevented=pd)},stopPropagation:function(){var a=this.nativeEvent;a&&(a.stopPropagation?a.stopPropagation():\"unknown\"!==typeof a.cancelBubble&&(a.cancelBubble=!0),this.isPropagationStopped=pd)},persist:function(){},isPersistent:pd});return b}\r\nvar sd={eventPhase:0,bubbles:0,cancelable:0,timeStamp:function(a){return a.timeStamp||Date.now()},defaultPrevented:0,isTrusted:0},td=rd(sd),ud=A({},sd,{view:0,detail:0}),vd=rd(ud),wd,xd,yd,Ad=A({},ud,{screenX:0,screenY:0,clientX:0,clientY:0,pageX:0,pageY:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,getModifierState:zd,button:0,buttons:0,relatedTarget:function(a){return void 0===a.relatedTarget?a.fromElement===a.srcElement?a.toElement:a.fromElement:a.relatedTarget},movementX:function(a){if(\"movementX\"in\r\na)return a.movementX;a!==yd&&(yd&&\"mousemove\"===a.type?(wd=a.screenX-yd.screenX,xd=a.screenY-yd.screenY):xd=wd=0,yd=a);return wd},movementY:function(a){return\"movementY\"in a?a.movementY:xd}}),Bd=rd(Ad),Cd=A({},Ad,{dataTransfer:0}),Dd=rd(Cd),Ed=A({},ud,{relatedTarget:0}),Fd=rd(Ed),Gd=A({},sd,{animationName:0,elapsedTime:0,pseudoElement:0}),Hd=rd(Gd),Id=A({},sd,{clipboardData:function(a){return\"clipboardData\"in a?a.clipboardData:window.clipboardData}}),Jd=rd(Id),Kd=A({},sd,{data:0}),Ld=rd(Kd),Md={Esc:\"Escape\",\r\nSpacebar:\" \",Left:\"ArrowLeft\",Up:\"ArrowUp\",Right:\"ArrowRight\",Down:\"ArrowDown\",Del:\"Delete\",Win:\"OS\",Menu:\"ContextMenu\",Apps:\"ContextMenu\",Scroll:\"ScrollLock\",MozPrintableKey:\"Unidentified\"},Nd={8:\"Backspace\",9:\"Tab\",12:\"Clear\",13:\"Enter\",16:\"Shift\",17:\"Control\",18:\"Alt\",19:\"Pause\",20:\"CapsLock\",27:\"Escape\",32:\" \",33:\"PageUp\",34:\"PageDown\",35:\"End\",36:\"Home\",37:\"ArrowLeft\",38:\"ArrowUp\",39:\"ArrowRight\",40:\"ArrowDown\",45:\"Insert\",46:\"Delete\",112:\"F1\",113:\"F2\",114:\"F3\",115:\"F4\",116:\"F5\",117:\"F6\",118:\"F7\",\r\n119:\"F8\",120:\"F9\",121:\"F10\",122:\"F11\",123:\"F12\",144:\"NumLock\",145:\"ScrollLock\",224:\"Meta\"},Od={Alt:\"altKey\",Control:\"ctrlKey\",Meta:\"metaKey\",Shift:\"shiftKey\"};function Pd(a){var b=this.nativeEvent;return b.getModifierState?b.getModifierState(a):(a=Od[a])?!!b[a]:!1}function zd(){return Pd}\r\nvar Qd=A({},ud,{key:function(a){if(a.key){var b=Md[a.key]||a.key;if(\"Unidentified\"!==b)return b}return\"keypress\"===a.type?(a=od(a),13===a?\"Enter\":String.fromCharCode(a)):\"keydown\"===a.type||\"keyup\"===a.type?Nd[a.keyCode]||\"Unidentified\":\"\"},code:0,location:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,repeat:0,locale:0,getModifierState:zd,charCode:function(a){return\"keypress\"===a.type?od(a):0},keyCode:function(a){return\"keydown\"===a.type||\"keyup\"===a.type?a.keyCode:0},which:function(a){return\"keypress\"===\r\na.type?od(a):\"keydown\"===a.type||\"keyup\"===a.type?a.keyCode:0}}),Rd=rd(Qd),Sd=A({},Ad,{pointerId:0,width:0,height:0,pressure:0,tangentialPressure:0,tiltX:0,tiltY:0,twist:0,pointerType:0,isPrimary:0}),Td=rd(Sd),Ud=A({},ud,{touches:0,targetTouches:0,changedTouches:0,altKey:0,metaKey:0,ctrlKey:0,shiftKey:0,getModifierState:zd}),Vd=rd(Ud),Wd=A({},sd,{propertyName:0,elapsedTime:0,pseudoElement:0}),Xd=rd(Wd),Yd=A({},Ad,{deltaX:function(a){return\"deltaX\"in a?a.deltaX:\"wheelDeltaX\"in a?-a.wheelDeltaX:0},\r\ndeltaY:function(a){return\"deltaY\"in a?a.deltaY:\"wheelDeltaY\"in a?-a.wheelDeltaY:\"wheelDelta\"in a?-a.wheelDelta:0},deltaZ:0,deltaMode:0}),Zd=rd(Yd),$d=[9,13,27,32],ae=ia&&\"CompositionEvent\"in window,be=null;ia&&\"documentMode\"in document&&(be=document.documentMode);var ce=ia&&\"TextEvent\"in window&&!be,de=ia&&(!ae||be&&8<be&&11>=be),ee=String.fromCharCode(32),fe=!1;\r\nfunction ge(a,b){switch(a){case \"keyup\":return-1!==$d.indexOf(b.keyCode);case \"keydown\":return 229!==b.keyCode;case \"keypress\":case \"mousedown\":case \"focusout\":return!0;default:return!1}}function he(a){a=a.detail;return\"object\"===typeof a&&\"data\"in a?a.data:null}var ie=!1;function je(a,b){switch(a){case \"compositionend\":return he(b);case \"keypress\":if(32!==b.which)return null;fe=!0;return ee;case \"textInput\":return a=b.data,a===ee&&fe?null:a;default:return null}}\r\nfunction ke(a,b){if(ie)return\"compositionend\"===a||!ae&&ge(a,b)?(a=nd(),md=ld=kd=null,ie=!1,a):null;switch(a){case \"paste\":return null;case \"keypress\":if(!(b.ctrlKey||b.altKey||b.metaKey)||b.ctrlKey&&b.altKey){if(b.char&&1<b.char.length)return b.char;if(b.which)return String.fromCharCode(b.which)}return null;case \"compositionend\":return de&&\"ko\"!==b.locale?null:b.data;default:return null}}\r\nvar le={color:!0,date:!0,datetime:!0,\"datetime-local\":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function me(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return\"input\"===b?!!le[a.type]:\"textarea\"===b?!0:!1}function ne(a,b,c,d){Eb(d);b=oe(b,\"onChange\");0<b.length&&(c=new td(\"onChange\",\"change\",null,c,d),a.push({event:c,listeners:b}))}var pe=null,qe=null;function re(a){se(a,0)}function te(a){var b=ue(a);if(Wa(b))return a}\r\nfunction ve(a,b){if(\"change\"===a)return b}var we=!1;if(ia){var xe;if(ia){var ye=\"oninput\"in document;if(!ye){var ze=document.createElement(\"div\");ze.setAttribute(\"oninput\",\"return;\");ye=\"function\"===typeof ze.oninput}xe=ye}else xe=!1;we=xe&&(!document.documentMode||9<document.documentMode)}function Ae(){pe&&(pe.detachEvent(\"onpropertychange\",Be),qe=pe=null)}function Be(a){if(\"value\"===a.propertyName&&te(qe)){var b=[];ne(b,qe,a,xb(a));Jb(re,b)}}\r\nfunction Ce(a,b,c){\"focusin\"===a?(Ae(),pe=b,qe=c,pe.attachEvent(\"onpropertychange\",Be)):\"focusout\"===a&&Ae()}function De(a){if(\"selectionchange\"===a||\"keyup\"===a||\"keydown\"===a)return te(qe)}function Ee(a,b){if(\"click\"===a)return te(b)}function Fe(a,b){if(\"input\"===a||\"change\"===a)return te(b)}function Ge(a,b){return a===b&&(0!==a||1/a===1/b)||a!==a&&b!==b}var He=\"function\"===typeof Object.is?Object.is:Ge;\r\nfunction Ie(a,b){if(He(a,b))return!0;if(\"object\"!==typeof a||null===a||\"object\"!==typeof b||null===b)return!1;var c=Object.keys(a),d=Object.keys(b);if(c.length!==d.length)return!1;for(d=0;d<c.length;d++){var e=c[d];if(!ja.call(b,e)||!He(a[e],b[e]))return!1}return!0}function Je(a){for(;a&&a.firstChild;)a=a.firstChild;return a}\r\nfunction Ke(a,b){var c=Je(a);a=0;for(var d;c;){if(3===c.nodeType){d=a+c.textContent.length;if(a<=b&&d>=b)return{node:c,offset:b-a};a=d}a:{for(;c;){if(c.nextSibling){c=c.nextSibling;break a}c=c.parentNode}c=void 0}c=Je(c)}}function Le(a,b){return a&&b?a===b?!0:a&&3===a.nodeType?!1:b&&3===b.nodeType?Le(a,b.parentNode):\"contains\"in a?a.contains(b):a.compareDocumentPosition?!!(a.compareDocumentPosition(b)&16):!1:!1}\r\nfunction Me(){for(var a=window,b=Xa();b instanceof a.HTMLIFrameElement;){try{var c=\"string\"===typeof b.contentWindow.location.href}catch(d){c=!1}if(c)a=b.contentWindow;else break;b=Xa(a.document)}return b}function Ne(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return b&&(\"input\"===b&&(\"text\"===a.type||\"search\"===a.type||\"tel\"===a.type||\"url\"===a.type||\"password\"===a.type)||\"textarea\"===b||\"true\"===a.contentEditable)}\r\nfunction Oe(a){var b=Me(),c=a.focusedElem,d=a.selectionRange;if(b!==c&&c&&c.ownerDocument&&Le(c.ownerDocument.documentElement,c)){if(null!==d&&Ne(c))if(b=d.start,a=d.end,void 0===a&&(a=b),\"selectionStart\"in c)c.selectionStart=b,c.selectionEnd=Math.min(a,c.value.length);else if(a=(b=c.ownerDocument||document)&&b.defaultView||window,a.getSelection){a=a.getSelection();var e=c.textContent.length,f=Math.min(d.start,e);d=void 0===d.end?f:Math.min(d.end,e);!a.extend&&f>d&&(e=d,d=f,f=e);e=Ke(c,f);var g=Ke(c,\r\nd);e&&g&&(1!==a.rangeCount||a.anchorNode!==e.node||a.anchorOffset!==e.offset||a.focusNode!==g.node||a.focusOffset!==g.offset)&&(b=b.createRange(),b.setStart(e.node,e.offset),a.removeAllRanges(),f>d?(a.addRange(b),a.extend(g.node,g.offset)):(b.setEnd(g.node,g.offset),a.addRange(b)))}b=[];for(a=c;a=a.parentNode;)1===a.nodeType&&b.push({element:a,left:a.scrollLeft,top:a.scrollTop});\"function\"===typeof c.focus&&c.focus();for(c=0;c<b.length;c++)a=b[c],a.element.scrollLeft=a.left,a.element.scrollTop=a.top}}\r\nvar Pe=ia&&\"documentMode\"in document&&11>=document.documentMode,Qe=null,Re=null,Se=null,Te=!1;\r\nfunction Ue(a,b,c){var d=c.window===c?c.document:9===c.nodeType?c:c.ownerDocument;Te||null==Qe||Qe!==Xa(d)||(d=Qe,\"selectionStart\"in d&&Ne(d)?d={start:d.selectionStart,end:d.selectionEnd}:(d=(d.ownerDocument&&d.ownerDocument.defaultView||window).getSelection(),d={anchorNode:d.anchorNode,anchorOffset:d.anchorOffset,focusNode:d.focusNode,focusOffset:d.focusOffset}),Se&&Ie(Se,d)||(Se=d,d=oe(Re,\"onSelect\"),0<d.length&&(b=new td(\"onSelect\",\"select\",null,b,c),a.push({event:b,listeners:d}),b.target=Qe)))}\r\nfunction Ve(a,b){var c={};c[a.toLowerCase()]=b.toLowerCase();c[\"Webkit\"+a]=\"webkit\"+b;c[\"Moz\"+a]=\"moz\"+b;return c}var We={animationend:Ve(\"Animation\",\"AnimationEnd\"),animationiteration:Ve(\"Animation\",\"AnimationIteration\"),animationstart:Ve(\"Animation\",\"AnimationStart\"),transitionend:Ve(\"Transition\",\"TransitionEnd\")},Xe={},Ye={};\r\nia&&(Ye=document.createElement(\"div\").style,\"AnimationEvent\"in window||(delete We.animationend.animation,delete We.animationiteration.animation,delete We.animationstart.animation),\"TransitionEvent\"in window||delete We.transitionend.transition);function Ze(a){if(Xe[a])return Xe[a];if(!We[a])return a;var b=We[a],c;for(c in b)if(b.hasOwnProperty(c)&&c in Ye)return Xe[a]=b[c];return a}var $e=Ze(\"animationend\"),af=Ze(\"animationiteration\"),bf=Ze(\"animationstart\"),cf=Ze(\"transitionend\"),df=new Map,ef=\"abort auxClick cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll toggle touchMove waiting wheel\".split(\" \");\r\nfunction ff(a,b){df.set(a,b);fa(b,[a])}for(var gf=0;gf<ef.length;gf++){var hf=ef[gf],jf=hf.toLowerCase(),kf=hf[0].toUpperCase()+hf.slice(1);ff(jf,\"on\"+kf)}ff($e,\"onAnimationEnd\");ff(af,\"onAnimationIteration\");ff(bf,\"onAnimationStart\");ff(\"dblclick\",\"onDoubleClick\");ff(\"focusin\",\"onFocus\");ff(\"focusout\",\"onBlur\");ff(cf,\"onTransitionEnd\");ha(\"onMouseEnter\",[\"mouseout\",\"mouseover\"]);ha(\"onMouseLeave\",[\"mouseout\",\"mouseover\"]);ha(\"onPointerEnter\",[\"pointerout\",\"pointerover\"]);\r\nha(\"onPointerLeave\",[\"pointerout\",\"pointerover\"]);fa(\"onChange\",\"change click focusin focusout input keydown keyup selectionchange\".split(\" \"));fa(\"onSelect\",\"focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange\".split(\" \"));fa(\"onBeforeInput\",[\"compositionend\",\"keypress\",\"textInput\",\"paste\"]);fa(\"onCompositionEnd\",\"compositionend focusout keydown keypress keyup mousedown\".split(\" \"));fa(\"onCompositionStart\",\"compositionstart focusout keydown keypress keyup mousedown\".split(\" \"));\r\nfa(\"onCompositionUpdate\",\"compositionupdate focusout keydown keypress keyup mousedown\".split(\" \"));var lf=\"abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange resize seeked seeking stalled suspend timeupdate volumechange waiting\".split(\" \"),mf=new Set(\"cancel close invalid load scroll toggle\".split(\" \").concat(lf));\r\nfunction nf(a,b,c){var d=a.type||\"unknown-event\";a.currentTarget=c;Ub(d,b,void 0,a);a.currentTarget=null}\r\nfunction se(a,b){b=0!==(b&4);for(var c=0;c<a.length;c++){var d=a[c],e=d.event;d=d.listeners;a:{var f=void 0;if(b)for(var g=d.length-1;0<=g;g--){var h=d[g],k=h.instance,l=h.currentTarget;h=h.listener;if(k!==f&&e.isPropagationStopped())break a;nf(e,h,l);f=k}else for(g=0;g<d.length;g++){h=d[g];k=h.instance;l=h.currentTarget;h=h.listener;if(k!==f&&e.isPropagationStopped())break a;nf(e,h,l);f=k}}}if(Qb)throw a=Rb,Qb=!1,Rb=null,a;}\r\nfunction D(a,b){var c=b[of];void 0===c&&(c=b[of]=new Set);var d=a+\"__bubble\";c.has(d)||(pf(b,a,2,!1),c.add(d))}function qf(a,b,c){var d=0;b&&(d|=4);pf(c,a,d,b)}var rf=\"_reactListening\"+Math.random().toString(36).slice(2);function sf(a){if(!a[rf]){a[rf]=!0;da.forEach(function(b){\"selectionchange\"!==b&&(mf.has(b)||qf(b,!1,a),qf(b,!0,a))});var b=9===a.nodeType?a:a.ownerDocument;null===b||b[rf]||(b[rf]=!0,qf(\"selectionchange\",!1,b))}}\r\nfunction pf(a,b,c,d){switch(jd(b)){case 1:var e=ed;break;case 4:e=gd;break;default:e=fd}c=e.bind(null,b,c,a);e=void 0;!Lb||\"touchstart\"!==b&&\"touchmove\"!==b&&\"wheel\"!==b||(e=!0);d?void 0!==e?a.addEventListener(b,c,{capture:!0,passive:e}):a.addEventListener(b,c,!0):void 0!==e?a.addEventListener(b,c,{passive:e}):a.addEventListener(b,c,!1)}\r\nfunction hd(a,b,c,d,e){var f=d;if(0===(b&1)&&0===(b&2)&&null!==d)a:for(;;){if(null===d)return;var g=d.tag;if(3===g||4===g){var h=d.stateNode.containerInfo;if(h===e||8===h.nodeType&&h.parentNode===e)break;if(4===g)for(g=d.return;null!==g;){var k=g.tag;if(3===k||4===k)if(k=g.stateNode.containerInfo,k===e||8===k.nodeType&&k.parentNode===e)return;g=g.return}for(;null!==h;){g=Wc(h);if(null===g)return;k=g.tag;if(5===k||6===k){d=f=g;continue a}h=h.parentNode}}d=d.return}Jb(function(){var d=f,e=xb(c),g=[];\r\na:{var h=df.get(a);if(void 0!==h){var k=td,n=a;switch(a){case \"keypress\":if(0===od(c))break a;case \"keydown\":case \"keyup\":k=Rd;break;case \"focusin\":n=\"focus\";k=Fd;break;case \"focusout\":n=\"blur\";k=Fd;break;case \"beforeblur\":case \"afterblur\":k=Fd;break;case \"click\":if(2===c.button)break a;case \"auxclick\":case \"dblclick\":case \"mousedown\":case \"mousemove\":case \"mouseup\":case \"mouseout\":case \"mouseover\":case \"contextmenu\":k=Bd;break;case \"drag\":case \"dragend\":case \"dragenter\":case \"dragexit\":case \"dragleave\":case \"dragover\":case \"dragstart\":case \"drop\":k=\r\nDd;break;case \"touchcancel\":case \"touchend\":case \"touchmove\":case \"touchstart\":k=Vd;break;case $e:case af:case bf:k=Hd;break;case cf:k=Xd;break;case \"scroll\":k=vd;break;case \"wheel\":k=Zd;break;case \"copy\":case \"cut\":case \"paste\":k=Jd;break;case \"gotpointercapture\":case \"lostpointercapture\":case \"pointercancel\":case \"pointerdown\":case \"pointermove\":case \"pointerout\":case \"pointerover\":case \"pointerup\":k=Td}var t=0!==(b&4),J=!t&&\"scroll\"===a,x=t?null!==h?h+\"Capture\":null:h;t=[];for(var w=d,u;null!==\r\nw;){u=w;var F=u.stateNode;5===u.tag&&null!==F&&(u=F,null!==x&&(F=Kb(w,x),null!=F&&t.push(tf(w,F,u))));if(J)break;w=w.return}0<t.length&&(h=new k(h,n,null,c,e),g.push({event:h,listeners:t}))}}if(0===(b&7)){a:{h=\"mouseover\"===a||\"pointerover\"===a;k=\"mouseout\"===a||\"pointerout\"===a;if(h&&c!==wb&&(n=c.relatedTarget||c.fromElement)&&(Wc(n)||n[uf]))break a;if(k||h){h=e.window===e?e:(h=e.ownerDocument)?h.defaultView||h.parentWindow:window;if(k){if(n=c.relatedTarget||c.toElement,k=d,n=n?Wc(n):null,null!==\r\nn&&(J=Vb(n),n!==J||5!==n.tag&&6!==n.tag))n=null}else k=null,n=d;if(k!==n){t=Bd;F=\"onMouseLeave\";x=\"onMouseEnter\";w=\"mouse\";if(\"pointerout\"===a||\"pointerover\"===a)t=Td,F=\"onPointerLeave\",x=\"onPointerEnter\",w=\"pointer\";J=null==k?h:ue(k);u=null==n?h:ue(n);h=new t(F,w+\"leave\",k,c,e);h.target=J;h.relatedTarget=u;F=null;Wc(e)===d&&(t=new t(x,w+\"enter\",n,c,e),t.target=u,t.relatedTarget=J,F=t);J=F;if(k&&n)b:{t=k;x=n;w=0;for(u=t;u;u=vf(u))w++;u=0;for(F=x;F;F=vf(F))u++;for(;0<w-u;)t=vf(t),w--;for(;0<u-w;)x=\r\nvf(x),u--;for(;w--;){if(t===x||null!==x&&t===x.alternate)break b;t=vf(t);x=vf(x)}t=null}else t=null;null!==k&&wf(g,h,k,t,!1);null!==n&&null!==J&&wf(g,J,n,t,!0)}}}a:{h=d?ue(d):window;k=h.nodeName&&h.nodeName.toLowerCase();if(\"select\"===k||\"input\"===k&&\"file\"===h.type)var na=ve;else if(me(h))if(we)na=Fe;else{na=De;var xa=Ce}else(k=h.nodeName)&&\"input\"===k.toLowerCase()&&(\"checkbox\"===h.type||\"radio\"===h.type)&&(na=Ee);if(na&&(na=na(a,d))){ne(g,na,c,e);break a}xa&&xa(a,h,d);\"focusout\"===a&&(xa=h._wrapperState)&&\r\nxa.controlled&&\"number\"===h.type&&cb(h,\"number\",h.value)}xa=d?ue(d):window;switch(a){case \"focusin\":if(me(xa)||\"true\"===xa.contentEditable)Qe=xa,Re=d,Se=null;break;case \"focusout\":Se=Re=Qe=null;break;case \"mousedown\":Te=!0;break;case \"contextmenu\":case \"mouseup\":case \"dragend\":Te=!1;Ue(g,c,e);break;case \"selectionchange\":if(Pe)break;case \"keydown\":case \"keyup\":Ue(g,c,e)}var $a;if(ae)b:{switch(a){case \"compositionstart\":var ba=\"onCompositionStart\";break b;case \"compositionend\":ba=\"onCompositionEnd\";\r\nbreak b;case \"compositionupdate\":ba=\"onCompositionUpdate\";break b}ba=void 0}else ie?ge(a,c)&&(ba=\"onCompositionEnd\"):\"keydown\"===a&&229===c.keyCode&&(ba=\"onCompositionStart\");ba&&(de&&\"ko\"!==c.locale&&(ie||\"onCompositionStart\"!==ba?\"onCompositionEnd\"===ba&&ie&&($a=nd()):(kd=e,ld=\"value\"in kd?kd.value:kd.textContent,ie=!0)),xa=oe(d,ba),0<xa.length&&(ba=new Ld(ba,a,null,c,e),g.push({event:ba,listeners:xa}),$a?ba.data=$a:($a=he(c),null!==$a&&(ba.data=$a))));if($a=ce?je(a,c):ke(a,c))d=oe(d,\"onBeforeInput\"),\r\n0<d.length&&(e=new Ld(\"onBeforeInput\",\"beforeinput\",null,c,e),g.push({event:e,listeners:d}),e.data=$a)}se(g,b)})}function tf(a,b,c){return{instance:a,listener:b,currentTarget:c}}function oe(a,b){for(var c=b+\"Capture\",d=[];null!==a;){var e=a,f=e.stateNode;5===e.tag&&null!==f&&(e=f,f=Kb(a,c),null!=f&&d.unshift(tf(a,f,e)),f=Kb(a,b),null!=f&&d.push(tf(a,f,e)));a=a.return}return d}function vf(a){if(null===a)return null;do a=a.return;while(a&&5!==a.tag);return a?a:null}\r\nfunction wf(a,b,c,d,e){for(var f=b._reactName,g=[];null!==c&&c!==d;){var h=c,k=h.alternate,l=h.stateNode;if(null!==k&&k===d)break;5===h.tag&&null!==l&&(h=l,e?(k=Kb(c,f),null!=k&&g.unshift(tf(c,k,h))):e||(k=Kb(c,f),null!=k&&g.push(tf(c,k,h))));c=c.return}0!==g.length&&a.push({event:b,listeners:g})}var xf=/\\r\\n?/g,yf=/\\u0000|\\uFFFD/g;function zf(a){return(\"string\"===typeof a?a:\"\"+a).replace(xf,\"\\n\").replace(yf,\"\")}function Af(a,b,c){b=zf(b);if(zf(a)!==b&&c)throw Error(p(425));}function Bf(){}\r\nvar Cf=null,Df=null;function Ef(a,b){return\"textarea\"===a||\"noscript\"===a||\"string\"===typeof b.children||\"number\"===typeof b.children||\"object\"===typeof b.dangerouslySetInnerHTML&&null!==b.dangerouslySetInnerHTML&&null!=b.dangerouslySetInnerHTML.__html}\r\nvar Ff=\"function\"===typeof setTimeout?setTimeout:void 0,Gf=\"function\"===typeof clearTimeout?clearTimeout:void 0,Hf=\"function\"===typeof Promise?Promise:void 0,Jf=\"function\"===typeof queueMicrotask?queueMicrotask:\"undefined\"!==typeof Hf?function(a){return Hf.resolve(null).then(a).catch(If)}:Ff;function If(a){setTimeout(function(){throw a;})}\r\nfunction Kf(a,b){var c=b,d=0;do{var e=c.nextSibling;a.removeChild(c);if(e&&8===e.nodeType)if(c=e.data,\"/$\"===c){if(0===d){a.removeChild(e);bd(b);return}d--}else\"$\"!==c&&\"$?\"!==c&&\"$!\"!==c||d++;c=e}while(c);bd(b)}function Lf(a){for(;null!=a;a=a.nextSibling){var b=a.nodeType;if(1===b||3===b)break;if(8===b){b=a.data;if(\"$\"===b||\"$!\"===b||\"$?\"===b)break;if(\"/$\"===b)return null}}return a}\r\nfunction Mf(a){a=a.previousSibling;for(var b=0;a;){if(8===a.nodeType){var c=a.data;if(\"$\"===c||\"$!\"===c||\"$?\"===c){if(0===b)return a;b--}else\"/$\"===c&&b++}a=a.previousSibling}return null}var Nf=Math.random().toString(36).slice(2),Of=\"__reactFiber$\"+Nf,Pf=\"__reactProps$\"+Nf,uf=\"__reactContainer$\"+Nf,of=\"__reactEvents$\"+Nf,Qf=\"__reactListeners$\"+Nf,Rf=\"__reactHandles$\"+Nf;\r\nfunction Wc(a){var b=a[Of];if(b)return b;for(var c=a.parentNode;c;){if(b=c[uf]||c[Of]){c=b.alternate;if(null!==b.child||null!==c&&null!==c.child)for(a=Mf(a);null!==a;){if(c=a[Of])return c;a=Mf(a)}return b}a=c;c=a.parentNode}return null}function Cb(a){a=a[Of]||a[uf];return!a||5!==a.tag&&6!==a.tag&&13!==a.tag&&3!==a.tag?null:a}function ue(a){if(5===a.tag||6===a.tag)return a.stateNode;throw Error(p(33));}function Db(a){return a[Pf]||null}var Sf=[],Tf=-1;function Uf(a){return{current:a}}\r\nfunction E(a){0>Tf||(a.current=Sf[Tf],Sf[Tf]=null,Tf--)}function G(a,b){Tf++;Sf[Tf]=a.current;a.current=b}var Vf={},H=Uf(Vf),Wf=Uf(!1),Xf=Vf;function Yf(a,b){var c=a.type.contextTypes;if(!c)return Vf;var d=a.stateNode;if(d&&d.__reactInternalMemoizedUnmaskedChildContext===b)return d.__reactInternalMemoizedMaskedChildContext;var e={},f;for(f in c)e[f]=b[f];d&&(a=a.stateNode,a.__reactInternalMemoizedUnmaskedChildContext=b,a.__reactInternalMemoizedMaskedChildContext=e);return e}\r\nfunction Zf(a){a=a.childContextTypes;return null!==a&&void 0!==a}function $f(){E(Wf);E(H)}function ag(a,b,c){if(H.current!==Vf)throw Error(p(168));G(H,b);G(Wf,c)}function bg(a,b,c){var d=a.stateNode;b=b.childContextTypes;if(\"function\"!==typeof d.getChildContext)return c;d=d.getChildContext();for(var e in d)if(!(e in b))throw Error(p(108,Ra(a)||\"Unknown\",e));return A({},c,d)}\r\nfunction cg(a){a=(a=a.stateNode)&&a.__reactInternalMemoizedMergedChildContext||Vf;Xf=H.current;G(H,a);G(Wf,Wf.current);return!0}function dg(a,b,c){var d=a.stateNode;if(!d)throw Error(p(169));c?(a=bg(a,b,Xf),d.__reactInternalMemoizedMergedChildContext=a,E(Wf),E(H),G(H,a)):E(Wf);G(Wf,c)}var eg=null,fg=!1,gg=!1;function hg(a){null===eg?eg=[a]:eg.push(a)}function ig(a){fg=!0;hg(a)}\r\nfunction jg(){if(!gg&&null!==eg){gg=!0;var a=0,b=C;try{var c=eg;for(C=1;a<c.length;a++){var d=c[a];do d=d(!0);while(null!==d)}eg=null;fg=!1}catch(e){throw null!==eg&&(eg=eg.slice(a+1)),ac(fc,jg),e;}finally{C=b,gg=!1}}return null}var kg=[],lg=0,mg=null,ng=0,og=[],pg=0,qg=null,rg=1,sg=\"\";function tg(a,b){kg[lg++]=ng;kg[lg++]=mg;mg=a;ng=b}\r\nfunction ug(a,b,c){og[pg++]=rg;og[pg++]=sg;og[pg++]=qg;qg=a;var d=rg;a=sg;var e=32-oc(d)-1;d&=~(1<<e);c+=1;var f=32-oc(b)+e;if(30<f){var g=e-e%5;f=(d&(1<<g)-1).toString(32);d>>=g;e-=g;rg=1<<32-oc(b)+e|c<<e|d;sg=f+a}else rg=1<<f|c<<e|d,sg=a}function vg(a){null!==a.return&&(tg(a,1),ug(a,1,0))}function wg(a){for(;a===mg;)mg=kg[--lg],kg[lg]=null,ng=kg[--lg],kg[lg]=null;for(;a===qg;)qg=og[--pg],og[pg]=null,sg=og[--pg],og[pg]=null,rg=og[--pg],og[pg]=null}var xg=null,yg=null,I=!1,zg=null;\r\nfunction Ag(a,b){var c=Bg(5,null,null,0);c.elementType=\"DELETED\";c.stateNode=b;c.return=a;b=a.deletions;null===b?(a.deletions=[c],a.flags|=16):b.push(c)}\r\nfunction Cg(a,b){switch(a.tag){case 5:var c=a.type;b=1!==b.nodeType||c.toLowerCase()!==b.nodeName.toLowerCase()?null:b;return null!==b?(a.stateNode=b,xg=a,yg=Lf(b.firstChild),!0):!1;case 6:return b=\"\"===a.pendingProps||3!==b.nodeType?null:b,null!==b?(a.stateNode=b,xg=a,yg=null,!0):!1;case 13:return b=8!==b.nodeType?null:b,null!==b?(c=null!==qg?{id:rg,overflow:sg}:null,a.memoizedState={dehydrated:b,treeContext:c,retryLane:1073741824},c=Bg(18,null,null,0),c.stateNode=b,c.return=a,a.child=c,xg=a,yg=\r\nnull,!0):!1;default:return!1}}function Dg(a){return 0!==(a.mode&1)&&0===(a.flags&128)}function Eg(a){if(I){var b=yg;if(b){var c=b;if(!Cg(a,b)){if(Dg(a))throw Error(p(418));b=Lf(c.nextSibling);var d=xg;b&&Cg(a,b)?Ag(d,c):(a.flags=a.flags&-4097|2,I=!1,xg=a)}}else{if(Dg(a))throw Error(p(418));a.flags=a.flags&-4097|2;I=!1;xg=a}}}function Fg(a){for(a=a.return;null!==a&&5!==a.tag&&3!==a.tag&&13!==a.tag;)a=a.return;xg=a}\r\nfunction Gg(a){if(a!==xg)return!1;if(!I)return Fg(a),I=!0,!1;var b;(b=3!==a.tag)&&!(b=5!==a.tag)&&(b=a.type,b=\"head\"!==b&&\"body\"!==b&&!Ef(a.type,a.memoizedProps));if(b&&(b=yg)){if(Dg(a))throw Hg(),Error(p(418));for(;b;)Ag(a,b),b=Lf(b.nextSibling)}Fg(a);if(13===a.tag){a=a.memoizedState;a=null!==a?a.dehydrated:null;if(!a)throw Error(p(317));a:{a=a.nextSibling;for(b=0;a;){if(8===a.nodeType){var c=a.data;if(\"/$\"===c){if(0===b){yg=Lf(a.nextSibling);break a}b--}else\"$\"!==c&&\"$!\"!==c&&\"$?\"!==c||b++}a=a.nextSibling}yg=\r\nnull}}else yg=xg?Lf(a.stateNode.nextSibling):null;return!0}function Hg(){for(var a=yg;a;)a=Lf(a.nextSibling)}function Ig(){yg=xg=null;I=!1}function Jg(a){null===zg?zg=[a]:zg.push(a)}var Kg=ua.ReactCurrentBatchConfig;function Lg(a,b){if(a&&a.defaultProps){b=A({},b);a=a.defaultProps;for(var c in a)void 0===b[c]&&(b[c]=a[c]);return b}return b}var Mg=Uf(null),Ng=null,Og=null,Pg=null;function Qg(){Pg=Og=Ng=null}function Rg(a){var b=Mg.current;E(Mg);a._currentValue=b}\r\nfunction Sg(a,b,c){for(;null!==a;){var d=a.alternate;(a.childLanes&b)!==b?(a.childLanes|=b,null!==d&&(d.childLanes|=b)):null!==d&&(d.childLanes&b)!==b&&(d.childLanes|=b);if(a===c)break;a=a.return}}function Tg(a,b){Ng=a;Pg=Og=null;a=a.dependencies;null!==a&&null!==a.firstContext&&(0!==(a.lanes&b)&&(Ug=!0),a.firstContext=null)}\r\nfunction Vg(a){var b=a._currentValue;if(Pg!==a)if(a={context:a,memoizedValue:b,next:null},null===Og){if(null===Ng)throw Error(p(308));Og=a;Ng.dependencies={lanes:0,firstContext:a}}else Og=Og.next=a;return b}var Wg=null;function Xg(a){null===Wg?Wg=[a]:Wg.push(a)}function Yg(a,b,c,d){var e=b.interleaved;null===e?(c.next=c,Xg(b)):(c.next=e.next,e.next=c);b.interleaved=c;return Zg(a,d)}\r\nfunction Zg(a,b){a.lanes|=b;var c=a.alternate;null!==c&&(c.lanes|=b);c=a;for(a=a.return;null!==a;)a.childLanes|=b,c=a.alternate,null!==c&&(c.childLanes|=b),c=a,a=a.return;return 3===c.tag?c.stateNode:null}var $g=!1;function ah(a){a.updateQueue={baseState:a.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null,interleaved:null,lanes:0},effects:null}}\r\nfunction bh(a,b){a=a.updateQueue;b.updateQueue===a&&(b.updateQueue={baseState:a.baseState,firstBaseUpdate:a.firstBaseUpdate,lastBaseUpdate:a.lastBaseUpdate,shared:a.shared,effects:a.effects})}function ch(a,b){return{eventTime:a,lane:b,tag:0,payload:null,callback:null,next:null}}\r\nfunction dh(a,b,c){var d=a.updateQueue;if(null===d)return null;d=d.shared;if(0!==(K&2)){var e=d.pending;null===e?b.next=b:(b.next=e.next,e.next=b);d.pending=b;return Zg(a,c)}e=d.interleaved;null===e?(b.next=b,Xg(d)):(b.next=e.next,e.next=b);d.interleaved=b;return Zg(a,c)}function eh(a,b,c){b=b.updateQueue;if(null!==b&&(b=b.shared,0!==(c&4194240))){var d=b.lanes;d&=a.pendingLanes;c|=d;b.lanes=c;Cc(a,c)}}\r\nfunction fh(a,b){var c=a.updateQueue,d=a.alternate;if(null!==d&&(d=d.updateQueue,c===d)){var e=null,f=null;c=c.firstBaseUpdate;if(null!==c){do{var g={eventTime:c.eventTime,lane:c.lane,tag:c.tag,payload:c.payload,callback:c.callback,next:null};null===f?e=f=g:f=f.next=g;c=c.next}while(null!==c);null===f?e=f=b:f=f.next=b}else e=f=b;c={baseState:d.baseState,firstBaseUpdate:e,lastBaseUpdate:f,shared:d.shared,effects:d.effects};a.updateQueue=c;return}a=c.lastBaseUpdate;null===a?c.firstBaseUpdate=b:a.next=\r\nb;c.lastBaseUpdate=b}\r\nfunction gh(a,b,c,d){var e=a.updateQueue;$g=!1;var f=e.firstBaseUpdate,g=e.lastBaseUpdate,h=e.shared.pending;if(null!==h){e.shared.pending=null;var k=h,l=k.next;k.next=null;null===g?f=l:g.next=l;g=k;var m=a.alternate;null!==m&&(m=m.updateQueue,h=m.lastBaseUpdate,h!==g&&(null===h?m.firstBaseUpdate=l:h.next=l,m.lastBaseUpdate=k))}if(null!==f){var q=e.baseState;g=0;m=l=k=null;h=f;do{var r=h.lane,y=h.eventTime;if((d&r)===r){null!==m&&(m=m.next={eventTime:y,lane:0,tag:h.tag,payload:h.payload,callback:h.callback,\r\nnext:null});a:{var n=a,t=h;r=b;y=c;switch(t.tag){case 1:n=t.payload;if(\"function\"===typeof n){q=n.call(y,q,r);break a}q=n;break a;case 3:n.flags=n.flags&-65537|128;case 0:n=t.payload;r=\"function\"===typeof n?n.call(y,q,r):n;if(null===r||void 0===r)break a;q=A({},q,r);break a;case 2:$g=!0}}null!==h.callback&&0!==h.lane&&(a.flags|=64,r=e.effects,null===r?e.effects=[h]:r.push(h))}else y={eventTime:y,lane:r,tag:h.tag,payload:h.payload,callback:h.callback,next:null},null===m?(l=m=y,k=q):m=m.next=y,g|=r;\r\nh=h.next;if(null===h)if(h=e.shared.pending,null===h)break;else r=h,h=r.next,r.next=null,e.lastBaseUpdate=r,e.shared.pending=null}while(1);null===m&&(k=q);e.baseState=k;e.firstBaseUpdate=l;e.lastBaseUpdate=m;b=e.shared.interleaved;if(null!==b){e=b;do g|=e.lane,e=e.next;while(e!==b)}else null===f&&(e.shared.lanes=0);hh|=g;a.lanes=g;a.memoizedState=q}}\r\nfunction ih(a,b,c){a=b.effects;b.effects=null;if(null!==a)for(b=0;b<a.length;b++){var d=a[b],e=d.callback;if(null!==e){d.callback=null;d=c;if(\"function\"!==typeof e)throw Error(p(191,e));e.call(d)}}}var jh=(new aa.Component).refs;function kh(a,b,c,d){b=a.memoizedState;c=c(d,b);c=null===c||void 0===c?b:A({},b,c);a.memoizedState=c;0===a.lanes&&(a.updateQueue.baseState=c)}\r\nvar nh={isMounted:function(a){return(a=a._reactInternals)?Vb(a)===a:!1},enqueueSetState:function(a,b,c){a=a._reactInternals;var d=L(),e=lh(a),f=ch(d,e);f.payload=b;void 0!==c&&null!==c&&(f.callback=c);b=dh(a,f,e);null!==b&&(mh(b,a,e,d),eh(b,a,e))},enqueueReplaceState:function(a,b,c){a=a._reactInternals;var d=L(),e=lh(a),f=ch(d,e);f.tag=1;f.payload=b;void 0!==c&&null!==c&&(f.callback=c);b=dh(a,f,e);null!==b&&(mh(b,a,e,d),eh(b,a,e))},enqueueForceUpdate:function(a,b){a=a._reactInternals;var c=L(),d=\r\nlh(a),e=ch(c,d);e.tag=2;void 0!==b&&null!==b&&(e.callback=b);b=dh(a,e,d);null!==b&&(mh(b,a,d,c),eh(b,a,d))}};function oh(a,b,c,d,e,f,g){a=a.stateNode;return\"function\"===typeof a.shouldComponentUpdate?a.shouldComponentUpdate(d,f,g):b.prototype&&b.prototype.isPureReactComponent?!Ie(c,d)||!Ie(e,f):!0}\r\nfunction ph(a,b,c){var d=!1,e=Vf;var f=b.contextType;\"object\"===typeof f&&null!==f?f=Vg(f):(e=Zf(b)?Xf:H.current,d=b.contextTypes,f=(d=null!==d&&void 0!==d)?Yf(a,e):Vf);b=new b(c,f);a.memoizedState=null!==b.state&&void 0!==b.state?b.state:null;b.updater=nh;a.stateNode=b;b._reactInternals=a;d&&(a=a.stateNode,a.__reactInternalMemoizedUnmaskedChildContext=e,a.__reactInternalMemoizedMaskedChildContext=f);return b}\r\nfunction qh(a,b,c,d){a=b.state;\"function\"===typeof b.componentWillReceiveProps&&b.componentWillReceiveProps(c,d);\"function\"===typeof b.UNSAFE_componentWillReceiveProps&&b.UNSAFE_componentWillReceiveProps(c,d);b.state!==a&&nh.enqueueReplaceState(b,b.state,null)}\r\nfunction rh(a,b,c,d){var e=a.stateNode;e.props=c;e.state=a.memoizedState;e.refs=jh;ah(a);var f=b.contextType;\"object\"===typeof f&&null!==f?e.context=Vg(f):(f=Zf(b)?Xf:H.current,e.context=Yf(a,f));e.state=a.memoizedState;f=b.getDerivedStateFromProps;\"function\"===typeof f&&(kh(a,b,f,c),e.state=a.memoizedState);\"function\"===typeof b.getDerivedStateFromProps||\"function\"===typeof e.getSnapshotBeforeUpdate||\"function\"!==typeof e.UNSAFE_componentWillMount&&\"function\"!==typeof e.componentWillMount||(b=e.state,\r\n\"function\"===typeof e.componentWillMount&&e.componentWillMount(),\"function\"===typeof e.UNSAFE_componentWillMount&&e.UNSAFE_componentWillMount(),b!==e.state&&nh.enqueueReplaceState(e,e.state,null),gh(a,c,e,d),e.state=a.memoizedState);\"function\"===typeof e.componentDidMount&&(a.flags|=4194308)}\r\nfunction sh(a,b,c){a=c.ref;if(null!==a&&\"function\"!==typeof a&&\"object\"!==typeof a){if(c._owner){c=c._owner;if(c){if(1!==c.tag)throw Error(p(309));var d=c.stateNode}if(!d)throw Error(p(147,a));var e=d,f=\"\"+a;if(null!==b&&null!==b.ref&&\"function\"===typeof b.ref&&b.ref._stringRef===f)return b.ref;b=function(a){var b=e.refs;b===jh&&(b=e.refs={});null===a?delete b[f]:b[f]=a};b._stringRef=f;return b}if(\"string\"!==typeof a)throw Error(p(284));if(!c._owner)throw Error(p(290,a));}return a}\r\nfunction th(a,b){a=Object.prototype.toString.call(b);throw Error(p(31,\"[object Object]\"===a?\"object with keys {\"+Object.keys(b).join(\", \")+\"}\":a));}function uh(a){var b=a._init;return b(a._payload)}\r\nfunction vh(a){function b(b,c){if(a){var d=b.deletions;null===d?(b.deletions=[c],b.flags|=16):d.push(c)}}function c(c,d){if(!a)return null;for(;null!==d;)b(c,d),d=d.sibling;return null}function d(a,b){for(a=new Map;null!==b;)null!==b.key?a.set(b.key,b):a.set(b.index,b),b=b.sibling;return a}function e(a,b){a=wh(a,b);a.index=0;a.sibling=null;return a}function f(b,c,d){b.index=d;if(!a)return b.flags|=1048576,c;d=b.alternate;if(null!==d)return d=d.index,d<c?(b.flags|=2,c):d;b.flags|=2;return c}function g(b){a&&\r\nnull===b.alternate&&(b.flags|=2);return b}function h(a,b,c,d){if(null===b||6!==b.tag)return b=xh(c,a.mode,d),b.return=a,b;b=e(b,c);b.return=a;return b}function k(a,b,c,d){var f=c.type;if(f===ya)return m(a,b,c.props.children,d,c.key);if(null!==b&&(b.elementType===f||\"object\"===typeof f&&null!==f&&f.$$typeof===Ha&&uh(f)===b.type))return d=e(b,c.props),d.ref=sh(a,b,c),d.return=a,d;d=yh(c.type,c.key,c.props,null,a.mode,d);d.ref=sh(a,b,c);d.return=a;return d}function l(a,b,c,d){if(null===b||4!==b.tag||\r\nb.stateNode.containerInfo!==c.containerInfo||b.stateNode.implementation!==c.implementation)return b=zh(c,a.mode,d),b.return=a,b;b=e(b,c.children||[]);b.return=a;return b}function m(a,b,c,d,f){if(null===b||7!==b.tag)return b=Ah(c,a.mode,d,f),b.return=a,b;b=e(b,c);b.return=a;return b}function q(a,b,c){if(\"string\"===typeof b&&\"\"!==b||\"number\"===typeof b)return b=xh(\"\"+b,a.mode,c),b.return=a,b;if(\"object\"===typeof b&&null!==b){switch(b.$$typeof){case va:return c=yh(b.type,b.key,b.props,null,a.mode,c),\r\nc.ref=sh(a,null,b),c.return=a,c;case wa:return b=zh(b,a.mode,c),b.return=a,b;case Ha:var d=b._init;return q(a,d(b._payload),c)}if(eb(b)||Ka(b))return b=Ah(b,a.mode,c,null),b.return=a,b;th(a,b)}return null}function r(a,b,c,d){var e=null!==b?b.key:null;if(\"string\"===typeof c&&\"\"!==c||\"number\"===typeof c)return null!==e?null:h(a,b,\"\"+c,d);if(\"object\"===typeof c&&null!==c){switch(c.$$typeof){case va:return c.key===e?k(a,b,c,d):null;case wa:return c.key===e?l(a,b,c,d):null;case Ha:return e=c._init,r(a,\r\nb,e(c._payload),d)}if(eb(c)||Ka(c))return null!==e?null:m(a,b,c,d,null);th(a,c)}return null}function y(a,b,c,d,e){if(\"string\"===typeof d&&\"\"!==d||\"number\"===typeof d)return a=a.get(c)||null,h(b,a,\"\"+d,e);if(\"object\"===typeof d&&null!==d){switch(d.$$typeof){case va:return a=a.get(null===d.key?c:d.key)||null,k(b,a,d,e);case wa:return a=a.get(null===d.key?c:d.key)||null,l(b,a,d,e);case Ha:var f=d._init;return y(a,b,c,f(d._payload),e)}if(eb(d)||Ka(d))return a=a.get(c)||null,m(b,a,d,e,null);th(b,d)}return null}\r\nfunction n(e,g,h,k){for(var l=null,m=null,u=g,w=g=0,x=null;null!==u&&w<h.length;w++){u.index>w?(x=u,u=null):x=u.sibling;var n=r(e,u,h[w],k);if(null===n){null===u&&(u=x);break}a&&u&&null===n.alternate&&b(e,u);g=f(n,g,w);null===m?l=n:m.sibling=n;m=n;u=x}if(w===h.length)return c(e,u),I&&tg(e,w),l;if(null===u){for(;w<h.length;w++)u=q(e,h[w],k),null!==u&&(g=f(u,g,w),null===m?l=u:m.sibling=u,m=u);I&&tg(e,w);return l}for(u=d(e,u);w<h.length;w++)x=y(u,e,w,h[w],k),null!==x&&(a&&null!==x.alternate&&u.delete(null===\r\nx.key?w:x.key),g=f(x,g,w),null===m?l=x:m.sibling=x,m=x);a&&u.forEach(function(a){return b(e,a)});I&&tg(e,w);return l}function t(e,g,h,k){var l=Ka(h);if(\"function\"!==typeof l)throw Error(p(150));h=l.call(h);if(null==h)throw Error(p(151));for(var u=l=null,m=g,w=g=0,x=null,n=h.next();null!==m&&!n.done;w++,n=h.next()){m.index>w?(x=m,m=null):x=m.sibling;var t=r(e,m,n.value,k);if(null===t){null===m&&(m=x);break}a&&m&&null===t.alternate&&b(e,m);g=f(t,g,w);null===u?l=t:u.sibling=t;u=t;m=x}if(n.done)return c(e,\r\nm),I&&tg(e,w),l;if(null===m){for(;!n.done;w++,n=h.next())n=q(e,n.value,k),null!==n&&(g=f(n,g,w),null===u?l=n:u.sibling=n,u=n);I&&tg(e,w);return l}for(m=d(e,m);!n.done;w++,n=h.next())n=y(m,e,w,n.value,k),null!==n&&(a&&null!==n.alternate&&m.delete(null===n.key?w:n.key),g=f(n,g,w),null===u?l=n:u.sibling=n,u=n);a&&m.forEach(function(a){return b(e,a)});I&&tg(e,w);return l}function J(a,d,f,h){\"object\"===typeof f&&null!==f&&f.type===ya&&null===f.key&&(f=f.props.children);if(\"object\"===typeof f&&null!==f){switch(f.$$typeof){case va:a:{for(var k=\r\nf.key,l=d;null!==l;){if(l.key===k){k=f.type;if(k===ya){if(7===l.tag){c(a,l.sibling);d=e(l,f.props.children);d.return=a;a=d;break a}}else if(l.elementType===k||\"object\"===typeof k&&null!==k&&k.$$typeof===Ha&&uh(k)===l.type){c(a,l.sibling);d=e(l,f.props);d.ref=sh(a,l,f);d.return=a;a=d;break a}c(a,l);break}else b(a,l);l=l.sibling}f.type===ya?(d=Ah(f.props.children,a.mode,h,f.key),d.return=a,a=d):(h=yh(f.type,f.key,f.props,null,a.mode,h),h.ref=sh(a,d,f),h.return=a,a=h)}return g(a);case wa:a:{for(l=f.key;null!==\r\nd;){if(d.key===l)if(4===d.tag&&d.stateNode.containerInfo===f.containerInfo&&d.stateNode.implementation===f.implementation){c(a,d.sibling);d=e(d,f.children||[]);d.return=a;a=d;break a}else{c(a,d);break}else b(a,d);d=d.sibling}d=zh(f,a.mode,h);d.return=a;a=d}return g(a);case Ha:return l=f._init,J(a,d,l(f._payload),h)}if(eb(f))return n(a,d,f,h);if(Ka(f))return t(a,d,f,h);th(a,f)}return\"string\"===typeof f&&\"\"!==f||\"number\"===typeof f?(f=\"\"+f,null!==d&&6===d.tag?(c(a,d.sibling),d=e(d,f),d.return=a,a=d):\r\n(c(a,d),d=xh(f,a.mode,h),d.return=a,a=d),g(a)):c(a,d)}return J}var Bh=vh(!0),Ch=vh(!1),Dh={},Eh=Uf(Dh),Fh=Uf(Dh),Gh=Uf(Dh);function Hh(a){if(a===Dh)throw Error(p(174));return a}function Ih(a,b){G(Gh,b);G(Fh,a);G(Eh,Dh);a=b.nodeType;switch(a){case 9:case 11:b=(b=b.documentElement)?b.namespaceURI:lb(null,\"\");break;default:a=8===a?b.parentNode:b,b=a.namespaceURI||null,a=a.tagName,b=lb(b,a)}E(Eh);G(Eh,b)}function Jh(){E(Eh);E(Fh);E(Gh)}\r\nfunction Kh(a){Hh(Gh.current);var b=Hh(Eh.current);var c=lb(b,a.type);b!==c&&(G(Fh,a),G(Eh,c))}function Lh(a){Fh.current===a&&(E(Eh),E(Fh))}var M=Uf(0);\r\nfunction Mh(a){for(var b=a;null!==b;){if(13===b.tag){var c=b.memoizedState;if(null!==c&&(c=c.dehydrated,null===c||\"$?\"===c.data||\"$!\"===c.data))return b}else if(19===b.tag&&void 0!==b.memoizedProps.revealOrder){if(0!==(b.flags&128))return b}else if(null!==b.child){b.child.return=b;b=b.child;continue}if(b===a)break;for(;null===b.sibling;){if(null===b.return||b.return===a)return null;b=b.return}b.sibling.return=b.return;b=b.sibling}return null}var Nh=[];\r\nfunction Oh(){for(var a=0;a<Nh.length;a++)Nh[a]._workInProgressVersionPrimary=null;Nh.length=0}var Ph=ua.ReactCurrentDispatcher,Qh=ua.ReactCurrentBatchConfig,Rh=0,N=null,O=null,P=null,Sh=!1,Th=!1,Uh=0,Vh=0;function Q(){throw Error(p(321));}function Wh(a,b){if(null===b)return!1;for(var c=0;c<b.length&&c<a.length;c++)if(!He(a[c],b[c]))return!1;return!0}\r\nfunction Xh(a,b,c,d,e,f){Rh=f;N=b;b.memoizedState=null;b.updateQueue=null;b.lanes=0;Ph.current=null===a||null===a.memoizedState?Yh:Zh;a=c(d,e);if(Th){f=0;do{Th=!1;Uh=0;if(25<=f)throw Error(p(301));f+=1;P=O=null;b.updateQueue=null;Ph.current=$h;a=c(d,e)}while(Th)}Ph.current=ai;b=null!==O&&null!==O.next;Rh=0;P=O=N=null;Sh=!1;if(b)throw Error(p(300));return a}function bi(){var a=0!==Uh;Uh=0;return a}\r\nfunction ci(){var a={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};null===P?N.memoizedState=P=a:P=P.next=a;return P}function di(){if(null===O){var a=N.alternate;a=null!==a?a.memoizedState:null}else a=O.next;var b=null===P?N.memoizedState:P.next;if(null!==b)P=b,O=a;else{if(null===a)throw Error(p(310));O=a;a={memoizedState:O.memoizedState,baseState:O.baseState,baseQueue:O.baseQueue,queue:O.queue,next:null};null===P?N.memoizedState=P=a:P=P.next=a}return P}\r\nfunction ei(a,b){return\"function\"===typeof b?b(a):b}\r\nfunction fi(a){var b=di(),c=b.queue;if(null===c)throw Error(p(311));c.lastRenderedReducer=a;var d=O,e=d.baseQueue,f=c.pending;if(null!==f){if(null!==e){var g=e.next;e.next=f.next;f.next=g}d.baseQueue=e=f;c.pending=null}if(null!==e){f=e.next;d=d.baseState;var h=g=null,k=null,l=f;do{var m=l.lane;if((Rh&m)===m)null!==k&&(k=k.next={lane:0,action:l.action,hasEagerState:l.hasEagerState,eagerState:l.eagerState,next:null}),d=l.hasEagerState?l.eagerState:a(d,l.action);else{var q={lane:m,action:l.action,hasEagerState:l.hasEagerState,\r\neagerState:l.eagerState,next:null};null===k?(h=k=q,g=d):k=k.next=q;N.lanes|=m;hh|=m}l=l.next}while(null!==l&&l!==f);null===k?g=d:k.next=h;He(d,b.memoizedState)||(Ug=!0);b.memoizedState=d;b.baseState=g;b.baseQueue=k;c.lastRenderedState=d}a=c.interleaved;if(null!==a){e=a;do f=e.lane,N.lanes|=f,hh|=f,e=e.next;while(e!==a)}else null===e&&(c.lanes=0);return[b.memoizedState,c.dispatch]}\r\nfunction gi(a){var b=di(),c=b.queue;if(null===c)throw Error(p(311));c.lastRenderedReducer=a;var d=c.dispatch,e=c.pending,f=b.memoizedState;if(null!==e){c.pending=null;var g=e=e.next;do f=a(f,g.action),g=g.next;while(g!==e);He(f,b.memoizedState)||(Ug=!0);b.memoizedState=f;null===b.baseQueue&&(b.baseState=f);c.lastRenderedState=f}return[f,d]}function hi(){}\r\nfunction ii(a,b){var c=N,d=di(),e=b(),f=!He(d.memoizedState,e);f&&(d.memoizedState=e,Ug=!0);d=d.queue;ji(ki.bind(null,c,d,a),[a]);if(d.getSnapshot!==b||f||null!==P&&P.memoizedState.tag&1){c.flags|=2048;li(9,mi.bind(null,c,d,e,b),void 0,null);if(null===R)throw Error(p(349));0!==(Rh&30)||ni(c,b,e)}return e}function ni(a,b,c){a.flags|=16384;a={getSnapshot:b,value:c};b=N.updateQueue;null===b?(b={lastEffect:null,stores:null},N.updateQueue=b,b.stores=[a]):(c=b.stores,null===c?b.stores=[a]:c.push(a))}\r\nfunction mi(a,b,c,d){b.value=c;b.getSnapshot=d;oi(b)&&pi(a)}function ki(a,b,c){return c(function(){oi(b)&&pi(a)})}function oi(a){var b=a.getSnapshot;a=a.value;try{var c=b();return!He(a,c)}catch(d){return!0}}function pi(a){var b=Zg(a,1);null!==b&&mh(b,a,1,-1)}\r\nfunction qi(a){var b=ci();\"function\"===typeof a&&(a=a());b.memoizedState=b.baseState=a;a={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:ei,lastRenderedState:a};b.queue=a;a=a.dispatch=ri.bind(null,N,a);return[b.memoizedState,a]}\r\nfunction li(a,b,c,d){a={tag:a,create:b,destroy:c,deps:d,next:null};b=N.updateQueue;null===b?(b={lastEffect:null,stores:null},N.updateQueue=b,b.lastEffect=a.next=a):(c=b.lastEffect,null===c?b.lastEffect=a.next=a:(d=c.next,c.next=a,a.next=d,b.lastEffect=a));return a}function si(){return di().memoizedState}function ti(a,b,c,d){var e=ci();N.flags|=a;e.memoizedState=li(1|b,c,void 0,void 0===d?null:d)}\r\nfunction ui(a,b,c,d){var e=di();d=void 0===d?null:d;var f=void 0;if(null!==O){var g=O.memoizedState;f=g.destroy;if(null!==d&&Wh(d,g.deps)){e.memoizedState=li(b,c,f,d);return}}N.flags|=a;e.memoizedState=li(1|b,c,f,d)}function vi(a,b){return ti(8390656,8,a,b)}function ji(a,b){return ui(2048,8,a,b)}function wi(a,b){return ui(4,2,a,b)}function xi(a,b){return ui(4,4,a,b)}\r\nfunction yi(a,b){if(\"function\"===typeof b)return a=a(),b(a),function(){b(null)};if(null!==b&&void 0!==b)return a=a(),b.current=a,function(){b.current=null}}function zi(a,b,c){c=null!==c&&void 0!==c?c.concat([a]):null;return ui(4,4,yi.bind(null,b,a),c)}function Ai(){}function Bi(a,b){var c=di();b=void 0===b?null:b;var d=c.memoizedState;if(null!==d&&null!==b&&Wh(b,d[1]))return d[0];c.memoizedState=[a,b];return a}\r\nfunction Ci(a,b){var c=di();b=void 0===b?null:b;var d=c.memoizedState;if(null!==d&&null!==b&&Wh(b,d[1]))return d[0];a=a();c.memoizedState=[a,b];return a}function Di(a,b,c){if(0===(Rh&21))return a.baseState&&(a.baseState=!1,Ug=!0),a.memoizedState=c;He(c,b)||(c=yc(),N.lanes|=c,hh|=c,a.baseState=!0);return b}function Ei(a,b){var c=C;C=0!==c&&4>c?c:4;a(!0);var d=Qh.transition;Qh.transition={};try{a(!1),b()}finally{C=c,Qh.transition=d}}function Fi(){return di().memoizedState}\r\nfunction Gi(a,b,c){var d=lh(a);c={lane:d,action:c,hasEagerState:!1,eagerState:null,next:null};if(Hi(a))Ii(b,c);else if(c=Yg(a,b,c,d),null!==c){var e=L();mh(c,a,d,e);Ji(c,b,d)}}\r\nfunction ri(a,b,c){var d=lh(a),e={lane:d,action:c,hasEagerState:!1,eagerState:null,next:null};if(Hi(a))Ii(b,e);else{var f=a.alternate;if(0===a.lanes&&(null===f||0===f.lanes)&&(f=b.lastRenderedReducer,null!==f))try{var g=b.lastRenderedState,h=f(g,c);e.hasEagerState=!0;e.eagerState=h;if(He(h,g)){var k=b.interleaved;null===k?(e.next=e,Xg(b)):(e.next=k.next,k.next=e);b.interleaved=e;return}}catch(l){}finally{}c=Yg(a,b,e,d);null!==c&&(e=L(),mh(c,a,d,e),Ji(c,b,d))}}\r\nfunction Hi(a){var b=a.alternate;return a===N||null!==b&&b===N}function Ii(a,b){Th=Sh=!0;var c=a.pending;null===c?b.next=b:(b.next=c.next,c.next=b);a.pending=b}function Ji(a,b,c){if(0!==(c&4194240)){var d=b.lanes;d&=a.pendingLanes;c|=d;b.lanes=c;Cc(a,c)}}\r\nvar ai={readContext:Vg,useCallback:Q,useContext:Q,useEffect:Q,useImperativeHandle:Q,useInsertionEffect:Q,useLayoutEffect:Q,useMemo:Q,useReducer:Q,useRef:Q,useState:Q,useDebugValue:Q,useDeferredValue:Q,useTransition:Q,useMutableSource:Q,useSyncExternalStore:Q,useId:Q,unstable_isNewReconciler:!1},Yh={readContext:Vg,useCallback:function(a,b){ci().memoizedState=[a,void 0===b?null:b];return a},useContext:Vg,useEffect:vi,useImperativeHandle:function(a,b,c){c=null!==c&&void 0!==c?c.concat([a]):null;return ti(4194308,\r\n4,yi.bind(null,b,a),c)},useLayoutEffect:function(a,b){return ti(4194308,4,a,b)},useInsertionEffect:function(a,b){return ti(4,2,a,b)},useMemo:function(a,b){var c=ci();b=void 0===b?null:b;a=a();c.memoizedState=[a,b];return a},useReducer:function(a,b,c){var d=ci();b=void 0!==c?c(b):b;d.memoizedState=d.baseState=b;a={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:a,lastRenderedState:b};d.queue=a;a=a.dispatch=Gi.bind(null,N,a);return[d.memoizedState,a]},useRef:function(a){var b=\r\nci();a={current:a};return b.memoizedState=a},useState:qi,useDebugValue:Ai,useDeferredValue:function(a){return ci().memoizedState=a},useTransition:function(){var a=qi(!1),b=a[0];a=Ei.bind(null,a[1]);ci().memoizedState=a;return[b,a]},useMutableSource:function(){},useSyncExternalStore:function(a,b,c){var d=N,e=ci();if(I){if(void 0===c)throw Error(p(407));c=c()}else{c=b();if(null===R)throw Error(p(349));0!==(Rh&30)||ni(d,b,c)}e.memoizedState=c;var f={value:c,getSnapshot:b};e.queue=f;vi(ki.bind(null,d,\r\nf,a),[a]);d.flags|=2048;li(9,mi.bind(null,d,f,c,b),void 0,null);return c},useId:function(){var a=ci(),b=R.identifierPrefix;if(I){var c=sg;var d=rg;c=(d&~(1<<32-oc(d)-1)).toString(32)+c;b=\":\"+b+\"R\"+c;c=Uh++;0<c&&(b+=\"H\"+c.toString(32));b+=\":\"}else c=Vh++,b=\":\"+b+\"r\"+c.toString(32)+\":\";return a.memoizedState=b},unstable_isNewReconciler:!1},Zh={readContext:Vg,useCallback:Bi,useContext:Vg,useEffect:ji,useImperativeHandle:zi,useInsertionEffect:wi,useLayoutEffect:xi,useMemo:Ci,useReducer:fi,useRef:si,useState:function(){return fi(ei)},\r\nuseDebugValue:Ai,useDeferredValue:function(a){var b=di();return Di(b,O.memoizedState,a)},useTransition:function(){var a=fi(ei)[0],b=di().memoizedState;return[a,b]},useMutableSource:hi,useSyncExternalStore:ii,useId:Fi,unstable_isNewReconciler:!1},$h={readContext:Vg,useCallback:Bi,useContext:Vg,useEffect:ji,useImperativeHandle:zi,useInsertionEffect:wi,useLayoutEffect:xi,useMemo:Ci,useReducer:gi,useRef:si,useState:function(){return gi(ei)},useDebugValue:Ai,useDeferredValue:function(a){var b=di();return null===\r\nO?b.memoizedState=a:Di(b,O.memoizedState,a)},useTransition:function(){var a=gi(ei)[0],b=di().memoizedState;return[a,b]},useMutableSource:hi,useSyncExternalStore:ii,useId:Fi,unstable_isNewReconciler:!1};function Ki(a,b){try{var c=\"\",d=b;do c+=Pa(d),d=d.return;while(d);var e=c}catch(f){e=\"\\nError generating stack: \"+f.message+\"\\n\"+f.stack}return{value:a,source:b,stack:e,digest:null}}function Li(a,b,c){return{value:a,source:null,stack:null!=c?c:null,digest:null!=b?b:null}}\r\nfunction Mi(a,b){try{console.error(b.value)}catch(c){setTimeout(function(){throw c;})}}var Ni=\"function\"===typeof WeakMap?WeakMap:Map;function Oi(a,b,c){c=ch(-1,c);c.tag=3;c.payload={element:null};var d=b.value;c.callback=function(){Pi||(Pi=!0,Qi=d);Mi(a,b)};return c}\r\nfunction Ri(a,b,c){c=ch(-1,c);c.tag=3;var d=a.type.getDerivedStateFromError;if(\"function\"===typeof d){var e=b.value;c.payload=function(){return d(e)};c.callback=function(){Mi(a,b)}}var f=a.stateNode;null!==f&&\"function\"===typeof f.componentDidCatch&&(c.callback=function(){Mi(a,b);\"function\"!==typeof d&&(null===Si?Si=new Set([this]):Si.add(this));var c=b.stack;this.componentDidCatch(b.value,{componentStack:null!==c?c:\"\"})});return c}\r\nfunction Ti(a,b,c){var d=a.pingCache;if(null===d){d=a.pingCache=new Ni;var e=new Set;d.set(b,e)}else e=d.get(b),void 0===e&&(e=new Set,d.set(b,e));e.has(c)||(e.add(c),a=Ui.bind(null,a,b,c),b.then(a,a))}function Vi(a){do{var b;if(b=13===a.tag)b=a.memoizedState,b=null!==b?null!==b.dehydrated?!0:!1:!0;if(b)return a;a=a.return}while(null!==a);return null}\r\nfunction Wi(a,b,c,d,e){if(0===(a.mode&1))return a===b?a.flags|=65536:(a.flags|=128,c.flags|=131072,c.flags&=-52805,1===c.tag&&(null===c.alternate?c.tag=17:(b=ch(-1,1),b.tag=2,dh(c,b,1))),c.lanes|=1),a;a.flags|=65536;a.lanes=e;return a}var Xi=ua.ReactCurrentOwner,Ug=!1;function Yi(a,b,c,d){b.child=null===a?Ch(b,null,c,d):Bh(b,a.child,c,d)}\r\nfunction Zi(a,b,c,d,e){c=c.render;var f=b.ref;Tg(b,e);d=Xh(a,b,c,d,f,e);c=bi();if(null!==a&&!Ug)return b.updateQueue=a.updateQueue,b.flags&=-2053,a.lanes&=~e,$i(a,b,e);I&&c&&vg(b);b.flags|=1;Yi(a,b,d,e);return b.child}\r\nfunction aj(a,b,c,d,e){if(null===a){var f=c.type;if(\"function\"===typeof f&&!bj(f)&&void 0===f.defaultProps&&null===c.compare&&void 0===c.defaultProps)return b.tag=15,b.type=f,cj(a,b,f,d,e);a=yh(c.type,null,d,b,b.mode,e);a.ref=b.ref;a.return=b;return b.child=a}f=a.child;if(0===(a.lanes&e)){var g=f.memoizedProps;c=c.compare;c=null!==c?c:Ie;if(c(g,d)&&a.ref===b.ref)return $i(a,b,e)}b.flags|=1;a=wh(f,d);a.ref=b.ref;a.return=b;return b.child=a}\r\nfunction cj(a,b,c,d,e){if(null!==a){var f=a.memoizedProps;if(Ie(f,d)&&a.ref===b.ref)if(Ug=!1,b.pendingProps=d=f,0!==(a.lanes&e))0!==(a.flags&131072)&&(Ug=!0);else return b.lanes=a.lanes,$i(a,b,e)}return dj(a,b,c,d,e)}\r\nfunction ej(a,b,c){var d=b.pendingProps,e=d.children,f=null!==a?a.memoizedState:null;if(\"hidden\"===d.mode)if(0===(b.mode&1))b.memoizedState={baseLanes:0,cachePool:null,transitions:null},G(fj,gj),gj|=c;else{if(0===(c&1073741824))return a=null!==f?f.baseLanes|c:c,b.lanes=b.childLanes=1073741824,b.memoizedState={baseLanes:a,cachePool:null,transitions:null},b.updateQueue=null,G(fj,gj),gj|=a,null;b.memoizedState={baseLanes:0,cachePool:null,transitions:null};d=null!==f?f.baseLanes:c;G(fj,gj);gj|=d}else null!==\r\nf?(d=f.baseLanes|c,b.memoizedState=null):d=c,G(fj,gj),gj|=d;Yi(a,b,e,c);return b.child}function hj(a,b){var c=b.ref;if(null===a&&null!==c||null!==a&&a.ref!==c)b.flags|=512,b.flags|=2097152}function dj(a,b,c,d,e){var f=Zf(c)?Xf:H.current;f=Yf(b,f);Tg(b,e);c=Xh(a,b,c,d,f,e);d=bi();if(null!==a&&!Ug)return b.updateQueue=a.updateQueue,b.flags&=-2053,a.lanes&=~e,$i(a,b,e);I&&d&&vg(b);b.flags|=1;Yi(a,b,c,e);return b.child}\r\nfunction ij(a,b,c,d,e){if(Zf(c)){var f=!0;cg(b)}else f=!1;Tg(b,e);if(null===b.stateNode)jj(a,b),ph(b,c,d),rh(b,c,d,e),d=!0;else if(null===a){var g=b.stateNode,h=b.memoizedProps;g.props=h;var k=g.context,l=c.contextType;\"object\"===typeof l&&null!==l?l=Vg(l):(l=Zf(c)?Xf:H.current,l=Yf(b,l));var m=c.getDerivedStateFromProps,q=\"function\"===typeof m||\"function\"===typeof g.getSnapshotBeforeUpdate;q||\"function\"!==typeof g.UNSAFE_componentWillReceiveProps&&\"function\"!==typeof g.componentWillReceiveProps||\r\n(h!==d||k!==l)&&qh(b,g,d,l);$g=!1;var r=b.memoizedState;g.state=r;gh(b,d,g,e);k=b.memoizedState;h!==d||r!==k||Wf.current||$g?(\"function\"===typeof m&&(kh(b,c,m,d),k=b.memoizedState),(h=$g||oh(b,c,h,d,r,k,l))?(q||\"function\"!==typeof g.UNSAFE_componentWillMount&&\"function\"!==typeof g.componentWillMount||(\"function\"===typeof g.componentWillMount&&g.componentWillMount(),\"function\"===typeof g.UNSAFE_componentWillMount&&g.UNSAFE_componentWillMount()),\"function\"===typeof g.componentDidMount&&(b.flags|=4194308)):\r\n(\"function\"===typeof g.componentDidMount&&(b.flags|=4194308),b.memoizedProps=d,b.memoizedState=k),g.props=d,g.state=k,g.context=l,d=h):(\"function\"===typeof g.componentDidMount&&(b.flags|=4194308),d=!1)}else{g=b.stateNode;bh(a,b);h=b.memoizedProps;l=b.type===b.elementType?h:Lg(b.type,h);g.props=l;q=b.pendingProps;r=g.context;k=c.contextType;\"object\"===typeof k&&null!==k?k=Vg(k):(k=Zf(c)?Xf:H.current,k=Yf(b,k));var y=c.getDerivedStateFromProps;(m=\"function\"===typeof y||\"function\"===typeof g.getSnapshotBeforeUpdate)||\r\n\"function\"!==typeof g.UNSAFE_componentWillReceiveProps&&\"function\"!==typeof g.componentWillReceiveProps||(h!==q||r!==k)&&qh(b,g,d,k);$g=!1;r=b.memoizedState;g.state=r;gh(b,d,g,e);var n=b.memoizedState;h!==q||r!==n||Wf.current||$g?(\"function\"===typeof y&&(kh(b,c,y,d),n=b.memoizedState),(l=$g||oh(b,c,l,d,r,n,k)||!1)?(m||\"function\"!==typeof g.UNSAFE_componentWillUpdate&&\"function\"!==typeof g.componentWillUpdate||(\"function\"===typeof g.componentWillUpdate&&g.componentWillUpdate(d,n,k),\"function\"===typeof g.UNSAFE_componentWillUpdate&&\r\ng.UNSAFE_componentWillUpdate(d,n,k)),\"function\"===typeof g.componentDidUpdate&&(b.flags|=4),\"function\"===typeof g.getSnapshotBeforeUpdate&&(b.flags|=1024)):(\"function\"!==typeof g.componentDidUpdate||h===a.memoizedProps&&r===a.memoizedState||(b.flags|=4),\"function\"!==typeof g.getSnapshotBeforeUpdate||h===a.memoizedProps&&r===a.memoizedState||(b.flags|=1024),b.memoizedProps=d,b.memoizedState=n),g.props=d,g.state=n,g.context=k,d=l):(\"function\"!==typeof g.componentDidUpdate||h===a.memoizedProps&&r===\r\na.memoizedState||(b.flags|=4),\"function\"!==typeof g.getSnapshotBeforeUpdate||h===a.memoizedProps&&r===a.memoizedState||(b.flags|=1024),d=!1)}return kj(a,b,c,d,f,e)}\r\nfunction kj(a,b,c,d,e,f){hj(a,b);var g=0!==(b.flags&128);if(!d&&!g)return e&&dg(b,c,!1),$i(a,b,f);d=b.stateNode;Xi.current=b;var h=g&&\"function\"!==typeof c.getDerivedStateFromError?null:d.render();b.flags|=1;null!==a&&g?(b.child=Bh(b,a.child,null,f),b.child=Bh(b,null,h,f)):Yi(a,b,h,f);b.memoizedState=d.state;e&&dg(b,c,!0);return b.child}function lj(a){var b=a.stateNode;b.pendingContext?ag(a,b.pendingContext,b.pendingContext!==b.context):b.context&&ag(a,b.context,!1);Ih(a,b.containerInfo)}\r\nfunction mj(a,b,c,d,e){Ig();Jg(e);b.flags|=256;Yi(a,b,c,d);return b.child}var nj={dehydrated:null,treeContext:null,retryLane:0};function oj(a){return{baseLanes:a,cachePool:null,transitions:null}}\r\nfunction pj(a,b,c){var d=b.pendingProps,e=M.current,f=!1,g=0!==(b.flags&128),h;(h=g)||(h=null!==a&&null===a.memoizedState?!1:0!==(e&2));if(h)f=!0,b.flags&=-129;else if(null===a||null!==a.memoizedState)e|=1;G(M,e&1);if(null===a){Eg(b);a=b.memoizedState;if(null!==a&&(a=a.dehydrated,null!==a))return 0===(b.mode&1)?b.lanes=1:\"$!\"===a.data?b.lanes=8:b.lanes=1073741824,null;g=d.children;a=d.fallback;return f?(d=b.mode,f=b.child,g={mode:\"hidden\",children:g},0===(d&1)&&null!==f?(f.childLanes=0,f.pendingProps=\r\ng):f=qj(g,d,0,null),a=Ah(a,d,c,null),f.return=b,a.return=b,f.sibling=a,b.child=f,b.child.memoizedState=oj(c),b.memoizedState=nj,a):rj(b,g)}e=a.memoizedState;if(null!==e&&(h=e.dehydrated,null!==h))return sj(a,b,g,d,h,e,c);if(f){f=d.fallback;g=b.mode;e=a.child;h=e.sibling;var k={mode:\"hidden\",children:d.children};0===(g&1)&&b.child!==e?(d=b.child,d.childLanes=0,d.pendingProps=k,b.deletions=null):(d=wh(e,k),d.subtreeFlags=e.subtreeFlags&14680064);null!==h?f=wh(h,f):(f=Ah(f,g,c,null),f.flags|=2);f.return=\r\nb;d.return=b;d.sibling=f;b.child=d;d=f;f=b.child;g=a.child.memoizedState;g=null===g?oj(c):{baseLanes:g.baseLanes|c,cachePool:null,transitions:g.transitions};f.memoizedState=g;f.childLanes=a.childLanes&~c;b.memoizedState=nj;return d}f=a.child;a=f.sibling;d=wh(f,{mode:\"visible\",children:d.children});0===(b.mode&1)&&(d.lanes=c);d.return=b;d.sibling=null;null!==a&&(c=b.deletions,null===c?(b.deletions=[a],b.flags|=16):c.push(a));b.child=d;b.memoizedState=null;return d}\r\nfunction rj(a,b){b=qj({mode:\"visible\",children:b},a.mode,0,null);b.return=a;return a.child=b}function tj(a,b,c,d){null!==d&&Jg(d);Bh(b,a.child,null,c);a=rj(b,b.pendingProps.children);a.flags|=2;b.memoizedState=null;return a}\r\nfunction sj(a,b,c,d,e,f,g){if(c){if(b.flags&256)return b.flags&=-257,d=Li(Error(p(422))),tj(a,b,g,d);if(null!==b.memoizedState)return b.child=a.child,b.flags|=128,null;f=d.fallback;e=b.mode;d=qj({mode:\"visible\",children:d.children},e,0,null);f=Ah(f,e,g,null);f.flags|=2;d.return=b;f.return=b;d.sibling=f;b.child=d;0!==(b.mode&1)&&Bh(b,a.child,null,g);b.child.memoizedState=oj(g);b.memoizedState=nj;return f}if(0===(b.mode&1))return tj(a,b,g,null);if(\"$!\"===e.data){d=e.nextSibling&&e.nextSibling.dataset;\r\nif(d)var h=d.dgst;d=h;f=Error(p(419));d=Li(f,d,void 0);return tj(a,b,g,d)}h=0!==(g&a.childLanes);if(Ug||h){d=R;if(null!==d){switch(g&-g){case 4:e=2;break;case 16:e=8;break;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:e=32;break;case 536870912:e=268435456;break;default:e=0}e=0!==(e&(d.suspendedLanes|g))?0:e;\r\n0!==e&&e!==f.retryLane&&(f.retryLane=e,Zg(a,e),mh(d,a,e,-1))}uj();d=Li(Error(p(421)));return tj(a,b,g,d)}if(\"$?\"===e.data)return b.flags|=128,b.child=a.child,b=vj.bind(null,a),e._reactRetry=b,null;a=f.treeContext;yg=Lf(e.nextSibling);xg=b;I=!0;zg=null;null!==a&&(og[pg++]=rg,og[pg++]=sg,og[pg++]=qg,rg=a.id,sg=a.overflow,qg=b);b=rj(b,d.children);b.flags|=4096;return b}function wj(a,b,c){a.lanes|=b;var d=a.alternate;null!==d&&(d.lanes|=b);Sg(a.return,b,c)}\r\nfunction xj(a,b,c,d,e){var f=a.memoizedState;null===f?a.memoizedState={isBackwards:b,rendering:null,renderingStartTime:0,last:d,tail:c,tailMode:e}:(f.isBackwards=b,f.rendering=null,f.renderingStartTime=0,f.last=d,f.tail=c,f.tailMode=e)}\r\nfunction yj(a,b,c){var d=b.pendingProps,e=d.revealOrder,f=d.tail;Yi(a,b,d.children,c);d=M.current;if(0!==(d&2))d=d&1|2,b.flags|=128;else{if(null!==a&&0!==(a.flags&128))a:for(a=b.child;null!==a;){if(13===a.tag)null!==a.memoizedState&&wj(a,c,b);else if(19===a.tag)wj(a,c,b);else if(null!==a.child){a.child.return=a;a=a.child;continue}if(a===b)break a;for(;null===a.sibling;){if(null===a.return||a.return===b)break a;a=a.return}a.sibling.return=a.return;a=a.sibling}d&=1}G(M,d);if(0===(b.mode&1))b.memoizedState=\r\nnull;else switch(e){case \"forwards\":c=b.child;for(e=null;null!==c;)a=c.alternate,null!==a&&null===Mh(a)&&(e=c),c=c.sibling;c=e;null===c?(e=b.child,b.child=null):(e=c.sibling,c.sibling=null);xj(b,!1,e,c,f);break;case \"backwards\":c=null;e=b.child;for(b.child=null;null!==e;){a=e.alternate;if(null!==a&&null===Mh(a)){b.child=e;break}a=e.sibling;e.sibling=c;c=e;e=a}xj(b,!0,c,null,f);break;case \"together\":xj(b,!1,null,null,void 0);break;default:b.memoizedState=null}return b.child}\r\nfunction jj(a,b){0===(b.mode&1)&&null!==a&&(a.alternate=null,b.alternate=null,b.flags|=2)}function $i(a,b,c){null!==a&&(b.dependencies=a.dependencies);hh|=b.lanes;if(0===(c&b.childLanes))return null;if(null!==a&&b.child!==a.child)throw Error(p(153));if(null!==b.child){a=b.child;c=wh(a,a.pendingProps);b.child=c;for(c.return=b;null!==a.sibling;)a=a.sibling,c=c.sibling=wh(a,a.pendingProps),c.return=b;c.sibling=null}return b.child}\r\nfunction zj(a,b,c){switch(b.tag){case 3:lj(b);Ig();break;case 5:Kh(b);break;case 1:Zf(b.type)&&cg(b);break;case 4:Ih(b,b.stateNode.containerInfo);break;case 10:var d=b.type._context,e=b.memoizedProps.value;G(Mg,d._currentValue);d._currentValue=e;break;case 13:d=b.memoizedState;if(null!==d){if(null!==d.dehydrated)return G(M,M.current&1),b.flags|=128,null;if(0!==(c&b.child.childLanes))return pj(a,b,c);G(M,M.current&1);a=$i(a,b,c);return null!==a?a.sibling:null}G(M,M.current&1);break;case 19:d=0!==(c&\r\nb.childLanes);if(0!==(a.flags&128)){if(d)return yj(a,b,c);b.flags|=128}e=b.memoizedState;null!==e&&(e.rendering=null,e.tail=null,e.lastEffect=null);G(M,M.current);if(d)break;else return null;case 22:case 23:return b.lanes=0,ej(a,b,c)}return $i(a,b,c)}var Aj,Bj,Cj,Dj;\r\nAj=function(a,b){for(var c=b.child;null!==c;){if(5===c.tag||6===c.tag)a.appendChild(c.stateNode);else if(4!==c.tag&&null!==c.child){c.child.return=c;c=c.child;continue}if(c===b)break;for(;null===c.sibling;){if(null===c.return||c.return===b)return;c=c.return}c.sibling.return=c.return;c=c.sibling}};Bj=function(){};\r\nCj=function(a,b,c,d){var e=a.memoizedProps;if(e!==d){a=b.stateNode;Hh(Eh.current);var f=null;switch(c){case \"input\":e=Ya(a,e);d=Ya(a,d);f=[];break;case \"select\":e=A({},e,{value:void 0});d=A({},d,{value:void 0});f=[];break;case \"textarea\":e=gb(a,e);d=gb(a,d);f=[];break;default:\"function\"!==typeof e.onClick&&\"function\"===typeof d.onClick&&(a.onclick=Bf)}ub(c,d);var g;c=null;for(l in e)if(!d.hasOwnProperty(l)&&e.hasOwnProperty(l)&&null!=e[l])if(\"style\"===l){var h=e[l];for(g in h)h.hasOwnProperty(g)&&\r\n(c||(c={}),c[g]=\"\")}else\"dangerouslySetInnerHTML\"!==l&&\"children\"!==l&&\"suppressContentEditableWarning\"!==l&&\"suppressHydrationWarning\"!==l&&\"autoFocus\"!==l&&(ea.hasOwnProperty(l)?f||(f=[]):(f=f||[]).push(l,null));for(l in d){var k=d[l];h=null!=e?e[l]:void 0;if(d.hasOwnProperty(l)&&k!==h&&(null!=k||null!=h))if(\"style\"===l)if(h){for(g in h)!h.hasOwnProperty(g)||k&&k.hasOwnProperty(g)||(c||(c={}),c[g]=\"\");for(g in k)k.hasOwnProperty(g)&&h[g]!==k[g]&&(c||(c={}),c[g]=k[g])}else c||(f||(f=[]),f.push(l,\r\nc)),c=k;else\"dangerouslySetInnerHTML\"===l?(k=k?k.__html:void 0,h=h?h.__html:void 0,null!=k&&h!==k&&(f=f||[]).push(l,k)):\"children\"===l?\"string\"!==typeof k&&\"number\"!==typeof k||(f=f||[]).push(l,\"\"+k):\"suppressContentEditableWarning\"!==l&&\"suppressHydrationWarning\"!==l&&(ea.hasOwnProperty(l)?(null!=k&&\"onScroll\"===l&&D(\"scroll\",a),f||h===k||(f=[])):(f=f||[]).push(l,k))}c&&(f=f||[]).push(\"style\",c);var l=f;if(b.updateQueue=l)b.flags|=4}};Dj=function(a,b,c,d){c!==d&&(b.flags|=4)};\r\nfunction Ej(a,b){if(!I)switch(a.tailMode){case \"hidden\":b=a.tail;for(var c=null;null!==b;)null!==b.alternate&&(c=b),b=b.sibling;null===c?a.tail=null:c.sibling=null;break;case \"collapsed\":c=a.tail;for(var d=null;null!==c;)null!==c.alternate&&(d=c),c=c.sibling;null===d?b||null===a.tail?a.tail=null:a.tail.sibling=null:d.sibling=null}}\r\nfunction S(a){var b=null!==a.alternate&&a.alternate.child===a.child,c=0,d=0;if(b)for(var e=a.child;null!==e;)c|=e.lanes|e.childLanes,d|=e.subtreeFlags&14680064,d|=e.flags&14680064,e.return=a,e=e.sibling;else for(e=a.child;null!==e;)c|=e.lanes|e.childLanes,d|=e.subtreeFlags,d|=e.flags,e.return=a,e=e.sibling;a.subtreeFlags|=d;a.childLanes=c;return b}\r\nfunction Fj(a,b,c){var d=b.pendingProps;wg(b);switch(b.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return S(b),null;case 1:return Zf(b.type)&&$f(),S(b),null;case 3:d=b.stateNode;Jh();E(Wf);E(H);Oh();d.pendingContext&&(d.context=d.pendingContext,d.pendingContext=null);if(null===a||null===a.child)Gg(b)?b.flags|=4:null===a||a.memoizedState.isDehydrated&&0===(b.flags&256)||(b.flags|=1024,null!==zg&&(Gj(zg),zg=null));Bj(a,b);S(b);return null;case 5:Lh(b);var e=Hh(Gh.current);\r\nc=b.type;if(null!==a&&null!=b.stateNode)Cj(a,b,c,d,e),a.ref!==b.ref&&(b.flags|=512,b.flags|=2097152);else{if(!d){if(null===b.stateNode)throw Error(p(166));S(b);return null}a=Hh(Eh.current);if(Gg(b)){d=b.stateNode;c=b.type;var f=b.memoizedProps;d[Of]=b;d[Pf]=f;a=0!==(b.mode&1);switch(c){case \"dialog\":D(\"cancel\",d);D(\"close\",d);break;case \"iframe\":case \"object\":case \"embed\":D(\"load\",d);break;case \"video\":case \"audio\":for(e=0;e<lf.length;e++)D(lf[e],d);break;case \"source\":D(\"error\",d);break;case \"img\":case \"image\":case \"link\":D(\"error\",\r\nd);D(\"load\",d);break;case \"details\":D(\"toggle\",d);break;case \"input\":Za(d,f);D(\"invalid\",d);break;case \"select\":d._wrapperState={wasMultiple:!!f.multiple};D(\"invalid\",d);break;case \"textarea\":hb(d,f),D(\"invalid\",d)}ub(c,f);e=null;for(var g in f)if(f.hasOwnProperty(g)){var h=f[g];\"children\"===g?\"string\"===typeof h?d.textContent!==h&&(!0!==f.suppressHydrationWarning&&Af(d.textContent,h,a),e=[\"children\",h]):\"number\"===typeof h&&d.textContent!==\"\"+h&&(!0!==f.suppressHydrationWarning&&Af(d.textContent,\r\nh,a),e=[\"children\",\"\"+h]):ea.hasOwnProperty(g)&&null!=h&&\"onScroll\"===g&&D(\"scroll\",d)}switch(c){case \"input\":Va(d);db(d,f,!0);break;case \"textarea\":Va(d);jb(d);break;case \"select\":case \"option\":break;default:\"function\"===typeof f.onClick&&(d.onclick=Bf)}d=e;b.updateQueue=d;null!==d&&(b.flags|=4)}else{g=9===e.nodeType?e:e.ownerDocument;\"http://www.w3.org/1999/xhtml\"===a&&(a=kb(c));\"http://www.w3.org/1999/xhtml\"===a?\"script\"===c?(a=g.createElement(\"div\"),a.innerHTML=\"<script>\\x3c/script>\",a=a.removeChild(a.firstChild)):\r\n\"string\"===typeof d.is?a=g.createElement(c,{is:d.is}):(a=g.createElement(c),\"select\"===c&&(g=a,d.multiple?g.multiple=!0:d.size&&(g.size=d.size))):a=g.createElementNS(a,c);a[Of]=b;a[Pf]=d;Aj(a,b,!1,!1);b.stateNode=a;a:{g=vb(c,d);switch(c){case \"dialog\":D(\"cancel\",a);D(\"close\",a);e=d;break;case \"iframe\":case \"object\":case \"embed\":D(\"load\",a);e=d;break;case \"video\":case \"audio\":for(e=0;e<lf.length;e++)D(lf[e],a);e=d;break;case \"source\":D(\"error\",a);e=d;break;case \"img\":case \"image\":case \"link\":D(\"error\",\r\na);D(\"load\",a);e=d;break;case \"details\":D(\"toggle\",a);e=d;break;case \"input\":Za(a,d);e=Ya(a,d);D(\"invalid\",a);break;case \"option\":e=d;break;case \"select\":a._wrapperState={wasMultiple:!!d.multiple};e=A({},d,{value:void 0});D(\"invalid\",a);break;case \"textarea\":hb(a,d);e=gb(a,d);D(\"invalid\",a);break;default:e=d}ub(c,e);h=e;for(f in h)if(h.hasOwnProperty(f)){var k=h[f];\"style\"===f?sb(a,k):\"dangerouslySetInnerHTML\"===f?(k=k?k.__html:void 0,null!=k&&nb(a,k)):\"children\"===f?\"string\"===typeof k?(\"textarea\"!==\r\nc||\"\"!==k)&&ob(a,k):\"number\"===typeof k&&ob(a,\"\"+k):\"suppressContentEditableWarning\"!==f&&\"suppressHydrationWarning\"!==f&&\"autoFocus\"!==f&&(ea.hasOwnProperty(f)?null!=k&&\"onScroll\"===f&&D(\"scroll\",a):null!=k&&ta(a,f,k,g))}switch(c){case \"input\":Va(a);db(a,d,!1);break;case \"textarea\":Va(a);jb(a);break;case \"option\":null!=d.value&&a.setAttribute(\"value\",\"\"+Sa(d.value));break;case \"select\":a.multiple=!!d.multiple;f=d.value;null!=f?fb(a,!!d.multiple,f,!1):null!=d.defaultValue&&fb(a,!!d.multiple,d.defaultValue,\r\n!0);break;default:\"function\"===typeof e.onClick&&(a.onclick=Bf)}switch(c){case \"button\":case \"input\":case \"select\":case \"textarea\":d=!!d.autoFocus;break a;case \"img\":d=!0;break a;default:d=!1}}d&&(b.flags|=4)}null!==b.ref&&(b.flags|=512,b.flags|=2097152)}S(b);return null;case 6:if(a&&null!=b.stateNode)Dj(a,b,a.memoizedProps,d);else{if(\"string\"!==typeof d&&null===b.stateNode)throw Error(p(166));c=Hh(Gh.current);Hh(Eh.current);if(Gg(b)){d=b.stateNode;c=b.memoizedProps;d[Of]=b;if(f=d.nodeValue!==c)if(a=\r\nxg,null!==a)switch(a.tag){case 3:Af(d.nodeValue,c,0!==(a.mode&1));break;case 5:!0!==a.memoizedProps.suppressHydrationWarning&&Af(d.nodeValue,c,0!==(a.mode&1))}f&&(b.flags|=4)}else d=(9===c.nodeType?c:c.ownerDocument).createTextNode(d),d[Of]=b,b.stateNode=d}S(b);return null;case 13:E(M);d=b.memoizedState;if(null===a||null!==a.memoizedState&&null!==a.memoizedState.dehydrated){if(I&&null!==yg&&0!==(b.mode&1)&&0===(b.flags&128))Hg(),Ig(),b.flags|=98560,f=!1;else if(f=Gg(b),null!==d&&null!==d.dehydrated){if(null===\r\na){if(!f)throw Error(p(318));f=b.memoizedState;f=null!==f?f.dehydrated:null;if(!f)throw Error(p(317));f[Of]=b}else Ig(),0===(b.flags&128)&&(b.memoizedState=null),b.flags|=4;S(b);f=!1}else null!==zg&&(Gj(zg),zg=null),f=!0;if(!f)return b.flags&65536?b:null}if(0!==(b.flags&128))return b.lanes=c,b;d=null!==d;d!==(null!==a&&null!==a.memoizedState)&&d&&(b.child.flags|=8192,0!==(b.mode&1)&&(null===a||0!==(M.current&1)?0===T&&(T=3):uj()));null!==b.updateQueue&&(b.flags|=4);S(b);return null;case 4:return Jh(),\r\nBj(a,b),null===a&&sf(b.stateNode.containerInfo),S(b),null;case 10:return Rg(b.type._context),S(b),null;case 17:return Zf(b.type)&&$f(),S(b),null;case 19:E(M);f=b.memoizedState;if(null===f)return S(b),null;d=0!==(b.flags&128);g=f.rendering;if(null===g)if(d)Ej(f,!1);else{if(0!==T||null!==a&&0!==(a.flags&128))for(a=b.child;null!==a;){g=Mh(a);if(null!==g){b.flags|=128;Ej(f,!1);d=g.updateQueue;null!==d&&(b.updateQueue=d,b.flags|=4);b.subtreeFlags=0;d=c;for(c=b.child;null!==c;)f=c,a=d,f.flags&=14680066,\r\ng=f.alternate,null===g?(f.childLanes=0,f.lanes=a,f.child=null,f.subtreeFlags=0,f.memoizedProps=null,f.memoizedState=null,f.updateQueue=null,f.dependencies=null,f.stateNode=null):(f.childLanes=g.childLanes,f.lanes=g.lanes,f.child=g.child,f.subtreeFlags=0,f.deletions=null,f.memoizedProps=g.memoizedProps,f.memoizedState=g.memoizedState,f.updateQueue=g.updateQueue,f.type=g.type,a=g.dependencies,f.dependencies=null===a?null:{lanes:a.lanes,firstContext:a.firstContext}),c=c.sibling;G(M,M.current&1|2);return b.child}a=\r\na.sibling}null!==f.tail&&B()>Hj&&(b.flags|=128,d=!0,Ej(f,!1),b.lanes=4194304)}else{if(!d)if(a=Mh(g),null!==a){if(b.flags|=128,d=!0,c=a.updateQueue,null!==c&&(b.updateQueue=c,b.flags|=4),Ej(f,!0),null===f.tail&&\"hidden\"===f.tailMode&&!g.alternate&&!I)return S(b),null}else 2*B()-f.renderingStartTime>Hj&&1073741824!==c&&(b.flags|=128,d=!0,Ej(f,!1),b.lanes=4194304);f.isBackwards?(g.sibling=b.child,b.child=g):(c=f.last,null!==c?c.sibling=g:b.child=g,f.last=g)}if(null!==f.tail)return b=f.tail,f.rendering=\r\nb,f.tail=b.sibling,f.renderingStartTime=B(),b.sibling=null,c=M.current,G(M,d?c&1|2:c&1),b;S(b);return null;case 22:case 23:return Ij(),d=null!==b.memoizedState,null!==a&&null!==a.memoizedState!==d&&(b.flags|=8192),d&&0!==(b.mode&1)?0!==(gj&1073741824)&&(S(b),b.subtreeFlags&6&&(b.flags|=8192)):S(b),null;case 24:return null;case 25:return null}throw Error(p(156,b.tag));}\r\nfunction Jj(a,b){wg(b);switch(b.tag){case 1:return Zf(b.type)&&$f(),a=b.flags,a&65536?(b.flags=a&-65537|128,b):null;case 3:return Jh(),E(Wf),E(H),Oh(),a=b.flags,0!==(a&65536)&&0===(a&128)?(b.flags=a&-65537|128,b):null;case 5:return Lh(b),null;case 13:E(M);a=b.memoizedState;if(null!==a&&null!==a.dehydrated){if(null===b.alternate)throw Error(p(340));Ig()}a=b.flags;return a&65536?(b.flags=a&-65537|128,b):null;case 19:return E(M),null;case 4:return Jh(),null;case 10:return Rg(b.type._context),null;case 22:case 23:return Ij(),\r\nnull;case 24:return null;default:return null}}var Kj=!1,U=!1,Lj=\"function\"===typeof WeakSet?WeakSet:Set,V=null;function Mj(a,b){var c=a.ref;if(null!==c)if(\"function\"===typeof c)try{c(null)}catch(d){W(a,b,d)}else c.current=null}function Nj(a,b,c){try{c()}catch(d){W(a,b,d)}}var Oj=!1;\r\nfunction Pj(a,b){Cf=dd;a=Me();if(Ne(a)){if(\"selectionStart\"in a)var c={start:a.selectionStart,end:a.selectionEnd};else a:{c=(c=a.ownerDocument)&&c.defaultView||window;var d=c.getSelection&&c.getSelection();if(d&&0!==d.rangeCount){c=d.anchorNode;var e=d.anchorOffset,f=d.focusNode;d=d.focusOffset;try{c.nodeType,f.nodeType}catch(F){c=null;break a}var g=0,h=-1,k=-1,l=0,m=0,q=a,r=null;b:for(;;){for(var y;;){q!==c||0!==e&&3!==q.nodeType||(h=g+e);q!==f||0!==d&&3!==q.nodeType||(k=g+d);3===q.nodeType&&(g+=\r\nq.nodeValue.length);if(null===(y=q.firstChild))break;r=q;q=y}for(;;){if(q===a)break b;r===c&&++l===e&&(h=g);r===f&&++m===d&&(k=g);if(null!==(y=q.nextSibling))break;q=r;r=q.parentNode}q=y}c=-1===h||-1===k?null:{start:h,end:k}}else c=null}c=c||{start:0,end:0}}else c=null;Df={focusedElem:a,selectionRange:c};dd=!1;for(V=b;null!==V;)if(b=V,a=b.child,0!==(b.subtreeFlags&1028)&&null!==a)a.return=b,V=a;else for(;null!==V;){b=V;try{var n=b.alternate;if(0!==(b.flags&1024))switch(b.tag){case 0:case 11:case 15:break;\r\ncase 1:if(null!==n){var t=n.memoizedProps,J=n.memoizedState,x=b.stateNode,w=x.getSnapshotBeforeUpdate(b.elementType===b.type?t:Lg(b.type,t),J);x.__reactInternalSnapshotBeforeUpdate=w}break;case 3:var u=b.stateNode.containerInfo;1===u.nodeType?u.textContent=\"\":9===u.nodeType&&u.documentElement&&u.removeChild(u.documentElement);break;case 5:case 6:case 4:case 17:break;default:throw Error(p(163));}}catch(F){W(b,b.return,F)}a=b.sibling;if(null!==a){a.return=b.return;V=a;break}V=b.return}n=Oj;Oj=!1;return n}\r\nfunction Qj(a,b,c){var d=b.updateQueue;d=null!==d?d.lastEffect:null;if(null!==d){var e=d=d.next;do{if((e.tag&a)===a){var f=e.destroy;e.destroy=void 0;void 0!==f&&Nj(b,c,f)}e=e.next}while(e!==d)}}function Rj(a,b){b=b.updateQueue;b=null!==b?b.lastEffect:null;if(null!==b){var c=b=b.next;do{if((c.tag&a)===a){var d=c.create;c.destroy=d()}c=c.next}while(c!==b)}}function Sj(a){var b=a.ref;if(null!==b){var c=a.stateNode;switch(a.tag){case 5:a=c;break;default:a=c}\"function\"===typeof b?b(a):b.current=a}}\r\nfunction Tj(a){var b=a.alternate;null!==b&&(a.alternate=null,Tj(b));a.child=null;a.deletions=null;a.sibling=null;5===a.tag&&(b=a.stateNode,null!==b&&(delete b[Of],delete b[Pf],delete b[of],delete b[Qf],delete b[Rf]));a.stateNode=null;a.return=null;a.dependencies=null;a.memoizedProps=null;a.memoizedState=null;a.pendingProps=null;a.stateNode=null;a.updateQueue=null}function Uj(a){return 5===a.tag||3===a.tag||4===a.tag}\r\nfunction Vj(a){a:for(;;){for(;null===a.sibling;){if(null===a.return||Uj(a.return))return null;a=a.return}a.sibling.return=a.return;for(a=a.sibling;5!==a.tag&&6!==a.tag&&18!==a.tag;){if(a.flags&2)continue a;if(null===a.child||4===a.tag)continue a;else a.child.return=a,a=a.child}if(!(a.flags&2))return a.stateNode}}\r\nfunction Wj(a,b,c){var d=a.tag;if(5===d||6===d)a=a.stateNode,b?8===c.nodeType?c.parentNode.insertBefore(a,b):c.insertBefore(a,b):(8===c.nodeType?(b=c.parentNode,b.insertBefore(a,c)):(b=c,b.appendChild(a)),c=c._reactRootContainer,null!==c&&void 0!==c||null!==b.onclick||(b.onclick=Bf));else if(4!==d&&(a=a.child,null!==a))for(Wj(a,b,c),a=a.sibling;null!==a;)Wj(a,b,c),a=a.sibling}\r\nfunction Xj(a,b,c){var d=a.tag;if(5===d||6===d)a=a.stateNode,b?c.insertBefore(a,b):c.appendChild(a);else if(4!==d&&(a=a.child,null!==a))for(Xj(a,b,c),a=a.sibling;null!==a;)Xj(a,b,c),a=a.sibling}var X=null,Yj=!1;function Zj(a,b,c){for(c=c.child;null!==c;)ak(a,b,c),c=c.sibling}\r\nfunction ak(a,b,c){if(lc&&\"function\"===typeof lc.onCommitFiberUnmount)try{lc.onCommitFiberUnmount(kc,c)}catch(h){}switch(c.tag){case 5:U||Mj(c,b);case 6:var d=X,e=Yj;X=null;Zj(a,b,c);X=d;Yj=e;null!==X&&(Yj?(a=X,c=c.stateNode,8===a.nodeType?a.parentNode.removeChild(c):a.removeChild(c)):X.removeChild(c.stateNode));break;case 18:null!==X&&(Yj?(a=X,c=c.stateNode,8===a.nodeType?Kf(a.parentNode,c):1===a.nodeType&&Kf(a,c),bd(a)):Kf(X,c.stateNode));break;case 4:d=X;e=Yj;X=c.stateNode.containerInfo;Yj=!0;\r\nZj(a,b,c);X=d;Yj=e;break;case 0:case 11:case 14:case 15:if(!U&&(d=c.updateQueue,null!==d&&(d=d.lastEffect,null!==d))){e=d=d.next;do{var f=e,g=f.destroy;f=f.tag;void 0!==g&&(0!==(f&2)?Nj(c,b,g):0!==(f&4)&&Nj(c,b,g));e=e.next}while(e!==d)}Zj(a,b,c);break;case 1:if(!U&&(Mj(c,b),d=c.stateNode,\"function\"===typeof d.componentWillUnmount))try{d.props=c.memoizedProps,d.state=c.memoizedState,d.componentWillUnmount()}catch(h){W(c,b,h)}Zj(a,b,c);break;case 21:Zj(a,b,c);break;case 22:c.mode&1?(U=(d=U)||null!==\r\nc.memoizedState,Zj(a,b,c),U=d):Zj(a,b,c);break;default:Zj(a,b,c)}}function bk(a){var b=a.updateQueue;if(null!==b){a.updateQueue=null;var c=a.stateNode;null===c&&(c=a.stateNode=new Lj);b.forEach(function(b){var d=ck.bind(null,a,b);c.has(b)||(c.add(b),b.then(d,d))})}}\r\nfunction dk(a,b){var c=b.deletions;if(null!==c)for(var d=0;d<c.length;d++){var e=c[d];try{var f=a,g=b,h=g;a:for(;null!==h;){switch(h.tag){case 5:X=h.stateNode;Yj=!1;break a;case 3:X=h.stateNode.containerInfo;Yj=!0;break a;case 4:X=h.stateNode.containerInfo;Yj=!0;break a}h=h.return}if(null===X)throw Error(p(160));ak(f,g,e);X=null;Yj=!1;var k=e.alternate;null!==k&&(k.return=null);e.return=null}catch(l){W(e,b,l)}}if(b.subtreeFlags&12854)for(b=b.child;null!==b;)ek(b,a),b=b.sibling}\r\nfunction ek(a,b){var c=a.alternate,d=a.flags;switch(a.tag){case 0:case 11:case 14:case 15:dk(b,a);fk(a);if(d&4){try{Qj(3,a,a.return),Rj(3,a)}catch(t){W(a,a.return,t)}try{Qj(5,a,a.return)}catch(t){W(a,a.return,t)}}break;case 1:dk(b,a);fk(a);d&512&&null!==c&&Mj(c,c.return);break;case 5:dk(b,a);fk(a);d&512&&null!==c&&Mj(c,c.return);if(a.flags&32){var e=a.stateNode;try{ob(e,\"\")}catch(t){W(a,a.return,t)}}if(d&4&&(e=a.stateNode,null!=e)){var f=a.memoizedProps,g=null!==c?c.memoizedProps:f,h=a.type,k=a.updateQueue;\r\na.updateQueue=null;if(null!==k)try{\"input\"===h&&\"radio\"===f.type&&null!=f.name&&ab(e,f);vb(h,g);var l=vb(h,f);for(g=0;g<k.length;g+=2){var m=k[g],q=k[g+1];\"style\"===m?sb(e,q):\"dangerouslySetInnerHTML\"===m?nb(e,q):\"children\"===m?ob(e,q):ta(e,m,q,l)}switch(h){case \"input\":bb(e,f);break;case \"textarea\":ib(e,f);break;case \"select\":var r=e._wrapperState.wasMultiple;e._wrapperState.wasMultiple=!!f.multiple;var y=f.value;null!=y?fb(e,!!f.multiple,y,!1):r!==!!f.multiple&&(null!=f.defaultValue?fb(e,!!f.multiple,\r\nf.defaultValue,!0):fb(e,!!f.multiple,f.multiple?[]:\"\",!1))}e[Pf]=f}catch(t){W(a,a.return,t)}}break;case 6:dk(b,a);fk(a);if(d&4){if(null===a.stateNode)throw Error(p(162));e=a.stateNode;f=a.memoizedProps;try{e.nodeValue=f}catch(t){W(a,a.return,t)}}break;case 3:dk(b,a);fk(a);if(d&4&&null!==c&&c.memoizedState.isDehydrated)try{bd(b.containerInfo)}catch(t){W(a,a.return,t)}break;case 4:dk(b,a);fk(a);break;case 13:dk(b,a);fk(a);e=a.child;e.flags&8192&&(f=null!==e.memoizedState,e.stateNode.isHidden=f,!f||\r\nnull!==e.alternate&&null!==e.alternate.memoizedState||(gk=B()));d&4&&bk(a);break;case 22:m=null!==c&&null!==c.memoizedState;a.mode&1?(U=(l=U)||m,dk(b,a),U=l):dk(b,a);fk(a);if(d&8192){l=null!==a.memoizedState;if((a.stateNode.isHidden=l)&&!m&&0!==(a.mode&1))for(V=a,m=a.child;null!==m;){for(q=V=m;null!==V;){r=V;y=r.child;switch(r.tag){case 0:case 11:case 14:case 15:Qj(4,r,r.return);break;case 1:Mj(r,r.return);var n=r.stateNode;if(\"function\"===typeof n.componentWillUnmount){d=r;c=r.return;try{b=d,n.props=\r\nb.memoizedProps,n.state=b.memoizedState,n.componentWillUnmount()}catch(t){W(d,c,t)}}break;case 5:Mj(r,r.return);break;case 22:if(null!==r.memoizedState){hk(q);continue}}null!==y?(y.return=r,V=y):hk(q)}m=m.sibling}a:for(m=null,q=a;;){if(5===q.tag){if(null===m){m=q;try{e=q.stateNode,l?(f=e.style,\"function\"===typeof f.setProperty?f.setProperty(\"display\",\"none\",\"important\"):f.display=\"none\"):(h=q.stateNode,k=q.memoizedProps.style,g=void 0!==k&&null!==k&&k.hasOwnProperty(\"display\")?k.display:null,h.style.display=\r\nrb(\"display\",g))}catch(t){W(a,a.return,t)}}}else if(6===q.tag){if(null===m)try{q.stateNode.nodeValue=l?\"\":q.memoizedProps}catch(t){W(a,a.return,t)}}else if((22!==q.tag&&23!==q.tag||null===q.memoizedState||q===a)&&null!==q.child){q.child.return=q;q=q.child;continue}if(q===a)break a;for(;null===q.sibling;){if(null===q.return||q.return===a)break a;m===q&&(m=null);q=q.return}m===q&&(m=null);q.sibling.return=q.return;q=q.sibling}}break;case 19:dk(b,a);fk(a);d&4&&bk(a);break;case 21:break;default:dk(b,\r\na),fk(a)}}function fk(a){var b=a.flags;if(b&2){try{a:{for(var c=a.return;null!==c;){if(Uj(c)){var d=c;break a}c=c.return}throw Error(p(160));}switch(d.tag){case 5:var e=d.stateNode;d.flags&32&&(ob(e,\"\"),d.flags&=-33);var f=Vj(a);Xj(a,f,e);break;case 3:case 4:var g=d.stateNode.containerInfo,h=Vj(a);Wj(a,h,g);break;default:throw Error(p(161));}}catch(k){W(a,a.return,k)}a.flags&=-3}b&4096&&(a.flags&=-4097)}function ik(a,b,c){V=a;jk(a,b,c)}\r\nfunction jk(a,b,c){for(var d=0!==(a.mode&1);null!==V;){var e=V,f=e.child;if(22===e.tag&&d){var g=null!==e.memoizedState||Kj;if(!g){var h=e.alternate,k=null!==h&&null!==h.memoizedState||U;h=Kj;var l=U;Kj=g;if((U=k)&&!l)for(V=e;null!==V;)g=V,k=g.child,22===g.tag&&null!==g.memoizedState?kk(e):null!==k?(k.return=g,V=k):kk(e);for(;null!==f;)V=f,jk(f,b,c),f=f.sibling;V=e;Kj=h;U=l}lk(a,b,c)}else 0!==(e.subtreeFlags&8772)&&null!==f?(f.return=e,V=f):lk(a,b,c)}}\r\nfunction lk(a){for(;null!==V;){var b=V;if(0!==(b.flags&8772)){var c=b.alternate;try{if(0!==(b.flags&8772))switch(b.tag){case 0:case 11:case 15:U||Rj(5,b);break;case 1:var d=b.stateNode;if(b.flags&4&&!U)if(null===c)d.componentDidMount();else{var e=b.elementType===b.type?c.memoizedProps:Lg(b.type,c.memoizedProps);d.componentDidUpdate(e,c.memoizedState,d.__reactInternalSnapshotBeforeUpdate)}var f=b.updateQueue;null!==f&&ih(b,f,d);break;case 3:var g=b.updateQueue;if(null!==g){c=null;if(null!==b.child)switch(b.child.tag){case 5:c=\r\nb.child.stateNode;break;case 1:c=b.child.stateNode}ih(b,g,c)}break;case 5:var h=b.stateNode;if(null===c&&b.flags&4){c=h;var k=b.memoizedProps;switch(b.type){case \"button\":case \"input\":case \"select\":case \"textarea\":k.autoFocus&&c.focus();break;case \"img\":k.src&&(c.src=k.src)}}break;case 6:break;case 4:break;case 12:break;case 13:if(null===b.memoizedState){var l=b.alternate;if(null!==l){var m=l.memoizedState;if(null!==m){var q=m.dehydrated;null!==q&&bd(q)}}}break;case 19:case 17:case 21:case 22:case 23:case 25:break;\r\ndefault:throw Error(p(163));}U||b.flags&512&&Sj(b)}catch(r){W(b,b.return,r)}}if(b===a){V=null;break}c=b.sibling;if(null!==c){c.return=b.return;V=c;break}V=b.return}}function hk(a){for(;null!==V;){var b=V;if(b===a){V=null;break}var c=b.sibling;if(null!==c){c.return=b.return;V=c;break}V=b.return}}\r\nfunction kk(a){for(;null!==V;){var b=V;try{switch(b.tag){case 0:case 11:case 15:var c=b.return;try{Rj(4,b)}catch(k){W(b,c,k)}break;case 1:var d=b.stateNode;if(\"function\"===typeof d.componentDidMount){var e=b.return;try{d.componentDidMount()}catch(k){W(b,e,k)}}var f=b.return;try{Sj(b)}catch(k){W(b,f,k)}break;case 5:var g=b.return;try{Sj(b)}catch(k){W(b,g,k)}}}catch(k){W(b,b.return,k)}if(b===a){V=null;break}var h=b.sibling;if(null!==h){h.return=b.return;V=h;break}V=b.return}}\r\nvar mk=Math.ceil,nk=ua.ReactCurrentDispatcher,ok=ua.ReactCurrentOwner,pk=ua.ReactCurrentBatchConfig,K=0,R=null,Y=null,Z=0,gj=0,fj=Uf(0),T=0,qk=null,hh=0,rk=0,sk=0,tk=null,uk=null,gk=0,Hj=Infinity,vk=null,Pi=!1,Qi=null,Si=null,wk=!1,xk=null,yk=0,zk=0,Ak=null,Bk=-1,Ck=0;function L(){return 0!==(K&6)?B():-1!==Bk?Bk:Bk=B()}\r\nfunction lh(a){if(0===(a.mode&1))return 1;if(0!==(K&2)&&0!==Z)return Z&-Z;if(null!==Kg.transition)return 0===Ck&&(Ck=yc()),Ck;a=C;if(0!==a)return a;a=window.event;a=void 0===a?16:jd(a.type);return a}function mh(a,b,c,d){if(50<zk)throw zk=0,Ak=null,Error(p(185));Ac(a,c,d);if(0===(K&2)||a!==R)a===R&&(0===(K&2)&&(rk|=c),4===T&&Dk(a,Z)),Ek(a,d),1===c&&0===K&&0===(b.mode&1)&&(Hj=B()+500,fg&&jg())}\r\nfunction Ek(a,b){var c=a.callbackNode;wc(a,b);var d=uc(a,a===R?Z:0);if(0===d)null!==c&&bc(c),a.callbackNode=null,a.callbackPriority=0;else if(b=d&-d,a.callbackPriority!==b){null!=c&&bc(c);if(1===b)0===a.tag?ig(Fk.bind(null,a)):hg(Fk.bind(null,a)),Jf(function(){0===(K&6)&&jg()}),c=null;else{switch(Dc(d)){case 1:c=fc;break;case 4:c=gc;break;case 16:c=hc;break;case 536870912:c=jc;break;default:c=hc}c=Gk(c,Hk.bind(null,a))}a.callbackPriority=b;a.callbackNode=c}}\r\nfunction Hk(a,b){Bk=-1;Ck=0;if(0!==(K&6))throw Error(p(327));var c=a.callbackNode;if(Ik()&&a.callbackNode!==c)return null;var d=uc(a,a===R?Z:0);if(0===d)return null;if(0!==(d&30)||0!==(d&a.expiredLanes)||b)b=Jk(a,d);else{b=d;var e=K;K|=2;var f=Kk();if(R!==a||Z!==b)vk=null,Hj=B()+500,Lk(a,b);do try{Mk();break}catch(h){Nk(a,h)}while(1);Qg();nk.current=f;K=e;null!==Y?b=0:(R=null,Z=0,b=T)}if(0!==b){2===b&&(e=xc(a),0!==e&&(d=e,b=Ok(a,e)));if(1===b)throw c=qk,Lk(a,0),Dk(a,d),Ek(a,B()),c;if(6===b)Dk(a,d);\r\nelse{e=a.current.alternate;if(0===(d&30)&&!Pk(e)&&(b=Jk(a,d),2===b&&(f=xc(a),0!==f&&(d=f,b=Ok(a,f))),1===b))throw c=qk,Lk(a,0),Dk(a,d),Ek(a,B()),c;a.finishedWork=e;a.finishedLanes=d;switch(b){case 0:case 1:throw Error(p(345));case 2:Qk(a,uk,vk);break;case 3:Dk(a,d);if((d&130023424)===d&&(b=gk+500-B(),10<b)){if(0!==uc(a,0))break;e=a.suspendedLanes;if((e&d)!==d){L();a.pingedLanes|=a.suspendedLanes&e;break}a.timeoutHandle=Ff(Qk.bind(null,a,uk,vk),b);break}Qk(a,uk,vk);break;case 4:Dk(a,d);if((d&4194240)===\r\nd)break;b=a.eventTimes;for(e=-1;0<d;){var g=31-oc(d);f=1<<g;g=b[g];g>e&&(e=g);d&=~f}d=e;d=B()-d;d=(120>d?120:480>d?480:1080>d?1080:1920>d?1920:3E3>d?3E3:4320>d?4320:1960*mk(d/1960))-d;if(10<d){a.timeoutHandle=Ff(Qk.bind(null,a,uk,vk),d);break}Qk(a,uk,vk);break;case 5:Qk(a,uk,vk);break;default:throw Error(p(329));}}}Ek(a,B());return a.callbackNode===c?Hk.bind(null,a):null}\r\nfunction Ok(a,b){var c=tk;a.current.memoizedState.isDehydrated&&(Lk(a,b).flags|=256);a=Jk(a,b);2!==a&&(b=uk,uk=c,null!==b&&Gj(b));return a}function Gj(a){null===uk?uk=a:uk.push.apply(uk,a)}\r\nfunction Pk(a){for(var b=a;;){if(b.flags&16384){var c=b.updateQueue;if(null!==c&&(c=c.stores,null!==c))for(var d=0;d<c.length;d++){var e=c[d],f=e.getSnapshot;e=e.value;try{if(!He(f(),e))return!1}catch(g){return!1}}}c=b.child;if(b.subtreeFlags&16384&&null!==c)c.return=b,b=c;else{if(b===a)break;for(;null===b.sibling;){if(null===b.return||b.return===a)return!0;b=b.return}b.sibling.return=b.return;b=b.sibling}}return!0}\r\nfunction Dk(a,b){b&=~sk;b&=~rk;a.suspendedLanes|=b;a.pingedLanes&=~b;for(a=a.expirationTimes;0<b;){var c=31-oc(b),d=1<<c;a[c]=-1;b&=~d}}function Fk(a){if(0!==(K&6))throw Error(p(327));Ik();var b=uc(a,0);if(0===(b&1))return Ek(a,B()),null;var c=Jk(a,b);if(0!==a.tag&&2===c){var d=xc(a);0!==d&&(b=d,c=Ok(a,d))}if(1===c)throw c=qk,Lk(a,0),Dk(a,b),Ek(a,B()),c;if(6===c)throw Error(p(345));a.finishedWork=a.current.alternate;a.finishedLanes=b;Qk(a,uk,vk);Ek(a,B());return null}\r\nfunction Rk(a,b){var c=K;K|=1;try{return a(b)}finally{K=c,0===K&&(Hj=B()+500,fg&&jg())}}function Sk(a){null!==xk&&0===xk.tag&&0===(K&6)&&Ik();var b=K;K|=1;var c=pk.transition,d=C;try{if(pk.transition=null,C=1,a)return a()}finally{C=d,pk.transition=c,K=b,0===(K&6)&&jg()}}function Ij(){gj=fj.current;E(fj)}\r\nfunction Lk(a,b){a.finishedWork=null;a.finishedLanes=0;var c=a.timeoutHandle;-1!==c&&(a.timeoutHandle=-1,Gf(c));if(null!==Y)for(c=Y.return;null!==c;){var d=c;wg(d);switch(d.tag){case 1:d=d.type.childContextTypes;null!==d&&void 0!==d&&$f();break;case 3:Jh();E(Wf);E(H);Oh();break;case 5:Lh(d);break;case 4:Jh();break;case 13:E(M);break;case 19:E(M);break;case 10:Rg(d.type._context);break;case 22:case 23:Ij()}c=c.return}R=a;Y=a=wh(a.current,null);Z=gj=b;T=0;qk=null;sk=rk=hh=0;uk=tk=null;if(null!==Wg){for(b=\r\n0;b<Wg.length;b++)if(c=Wg[b],d=c.interleaved,null!==d){c.interleaved=null;var e=d.next,f=c.pending;if(null!==f){var g=f.next;f.next=e;d.next=g}c.pending=d}Wg=null}return a}\r\nfunction Nk(a,b){do{var c=Y;try{Qg();Ph.current=ai;if(Sh){for(var d=N.memoizedState;null!==d;){var e=d.queue;null!==e&&(e.pending=null);d=d.next}Sh=!1}Rh=0;P=O=N=null;Th=!1;Uh=0;ok.current=null;if(null===c||null===c.return){T=1;qk=b;Y=null;break}a:{var f=a,g=c.return,h=c,k=b;b=Z;h.flags|=32768;if(null!==k&&\"object\"===typeof k&&\"function\"===typeof k.then){var l=k,m=h,q=m.tag;if(0===(m.mode&1)&&(0===q||11===q||15===q)){var r=m.alternate;r?(m.updateQueue=r.updateQueue,m.memoizedState=r.memoizedState,\r\nm.lanes=r.lanes):(m.updateQueue=null,m.memoizedState=null)}var y=Vi(g);if(null!==y){y.flags&=-257;Wi(y,g,h,f,b);y.mode&1&&Ti(f,l,b);b=y;k=l;var n=b.updateQueue;if(null===n){var t=new Set;t.add(k);b.updateQueue=t}else n.add(k);break a}else{if(0===(b&1)){Ti(f,l,b);uj();break a}k=Error(p(426))}}else if(I&&h.mode&1){var J=Vi(g);if(null!==J){0===(J.flags&65536)&&(J.flags|=256);Wi(J,g,h,f,b);Jg(Ki(k,h));break a}}f=k=Ki(k,h);4!==T&&(T=2);null===tk?tk=[f]:tk.push(f);f=g;do{switch(f.tag){case 3:f.flags|=65536;\r\nb&=-b;f.lanes|=b;var x=Oi(f,k,b);fh(f,x);break a;case 1:h=k;var w=f.type,u=f.stateNode;if(0===(f.flags&128)&&(\"function\"===typeof w.getDerivedStateFromError||null!==u&&\"function\"===typeof u.componentDidCatch&&(null===Si||!Si.has(u)))){f.flags|=65536;b&=-b;f.lanes|=b;var F=Ri(f,h,b);fh(f,F);break a}}f=f.return}while(null!==f)}Tk(c)}catch(na){b=na;Y===c&&null!==c&&(Y=c=c.return);continue}break}while(1)}function Kk(){var a=nk.current;nk.current=ai;return null===a?ai:a}\r\nfunction uj(){if(0===T||3===T||2===T)T=4;null===R||0===(hh&268435455)&&0===(rk&268435455)||Dk(R,Z)}function Jk(a,b){var c=K;K|=2;var d=Kk();if(R!==a||Z!==b)vk=null,Lk(a,b);do try{Uk();break}catch(e){Nk(a,e)}while(1);Qg();K=c;nk.current=d;if(null!==Y)throw Error(p(261));R=null;Z=0;return T}function Uk(){for(;null!==Y;)Vk(Y)}function Mk(){for(;null!==Y&&!cc();)Vk(Y)}function Vk(a){var b=Wk(a.alternate,a,gj);a.memoizedProps=a.pendingProps;null===b?Tk(a):Y=b;ok.current=null}\r\nfunction Tk(a){var b=a;do{var c=b.alternate;a=b.return;if(0===(b.flags&32768)){if(c=Fj(c,b,gj),null!==c){Y=c;return}}else{c=Jj(c,b);if(null!==c){c.flags&=32767;Y=c;return}if(null!==a)a.flags|=32768,a.subtreeFlags=0,a.deletions=null;else{T=6;Y=null;return}}b=b.sibling;if(null!==b){Y=b;return}Y=b=a}while(null!==b);0===T&&(T=5)}function Qk(a,b,c){var d=C,e=pk.transition;try{pk.transition=null,C=1,Xk(a,b,c,d)}finally{pk.transition=e,C=d}return null}\r\nfunction Xk(a,b,c,d){do Ik();while(null!==xk);if(0!==(K&6))throw Error(p(327));c=a.finishedWork;var e=a.finishedLanes;if(null===c)return null;a.finishedWork=null;a.finishedLanes=0;if(c===a.current)throw Error(p(177));a.callbackNode=null;a.callbackPriority=0;var f=c.lanes|c.childLanes;Bc(a,f);a===R&&(Y=R=null,Z=0);0===(c.subtreeFlags&2064)&&0===(c.flags&2064)||wk||(wk=!0,Gk(hc,function(){Ik();return null}));f=0!==(c.flags&15990);if(0!==(c.subtreeFlags&15990)||f){f=pk.transition;pk.transition=null;\r\nvar g=C;C=1;var h=K;K|=4;ok.current=null;Pj(a,c);ek(c,a);Oe(Df);dd=!!Cf;Df=Cf=null;a.current=c;ik(c,a,e);dc();K=h;C=g;pk.transition=f}else a.current=c;wk&&(wk=!1,xk=a,yk=e);f=a.pendingLanes;0===f&&(Si=null);mc(c.stateNode,d);Ek(a,B());if(null!==b)for(d=a.onRecoverableError,c=0;c<b.length;c++)e=b[c],d(e.value,{componentStack:e.stack,digest:e.digest});if(Pi)throw Pi=!1,a=Qi,Qi=null,a;0!==(yk&1)&&0!==a.tag&&Ik();f=a.pendingLanes;0!==(f&1)?a===Ak?zk++:(zk=0,Ak=a):zk=0;jg();return null}\r\nfunction Ik(){if(null!==xk){var a=Dc(yk),b=pk.transition,c=C;try{pk.transition=null;C=16>a?16:a;if(null===xk)var d=!1;else{a=xk;xk=null;yk=0;if(0!==(K&6))throw Error(p(331));var e=K;K|=4;for(V=a.current;null!==V;){var f=V,g=f.child;if(0!==(V.flags&16)){var h=f.deletions;if(null!==h){for(var k=0;k<h.length;k++){var l=h[k];for(V=l;null!==V;){var m=V;switch(m.tag){case 0:case 11:case 15:Qj(8,m,f)}var q=m.child;if(null!==q)q.return=m,V=q;else for(;null!==V;){m=V;var r=m.sibling,y=m.return;Tj(m);if(m===\r\nl){V=null;break}if(null!==r){r.return=y;V=r;break}V=y}}}var n=f.alternate;if(null!==n){var t=n.child;if(null!==t){n.child=null;do{var J=t.sibling;t.sibling=null;t=J}while(null!==t)}}V=f}}if(0!==(f.subtreeFlags&2064)&&null!==g)g.return=f,V=g;else b:for(;null!==V;){f=V;if(0!==(f.flags&2048))switch(f.tag){case 0:case 11:case 15:Qj(9,f,f.return)}var x=f.sibling;if(null!==x){x.return=f.return;V=x;break b}V=f.return}}var w=a.current;for(V=w;null!==V;){g=V;var u=g.child;if(0!==(g.subtreeFlags&2064)&&null!==\r\nu)u.return=g,V=u;else b:for(g=w;null!==V;){h=V;if(0!==(h.flags&2048))try{switch(h.tag){case 0:case 11:case 15:Rj(9,h)}}catch(na){W(h,h.return,na)}if(h===g){V=null;break b}var F=h.sibling;if(null!==F){F.return=h.return;V=F;break b}V=h.return}}K=e;jg();if(lc&&\"function\"===typeof lc.onPostCommitFiberRoot)try{lc.onPostCommitFiberRoot(kc,a)}catch(na){}d=!0}return d}finally{C=c,pk.transition=b}}return!1}function Yk(a,b,c){b=Ki(c,b);b=Oi(a,b,1);a=dh(a,b,1);b=L();null!==a&&(Ac(a,1,b),Ek(a,b))}\r\nfunction W(a,b,c){if(3===a.tag)Yk(a,a,c);else for(;null!==b;){if(3===b.tag){Yk(b,a,c);break}else if(1===b.tag){var d=b.stateNode;if(\"function\"===typeof b.type.getDerivedStateFromError||\"function\"===typeof d.componentDidCatch&&(null===Si||!Si.has(d))){a=Ki(c,a);a=Ri(b,a,1);b=dh(b,a,1);a=L();null!==b&&(Ac(b,1,a),Ek(b,a));break}}b=b.return}}\r\nfunction Ui(a,b,c){var d=a.pingCache;null!==d&&d.delete(b);b=L();a.pingedLanes|=a.suspendedLanes&c;R===a&&(Z&c)===c&&(4===T||3===T&&(Z&130023424)===Z&&500>B()-gk?Lk(a,0):sk|=c);Ek(a,b)}function Zk(a,b){0===b&&(0===(a.mode&1)?b=1:(b=sc,sc<<=1,0===(sc&130023424)&&(sc=4194304)));var c=L();a=Zg(a,b);null!==a&&(Ac(a,b,c),Ek(a,c))}function vj(a){var b=a.memoizedState,c=0;null!==b&&(c=b.retryLane);Zk(a,c)}\r\nfunction ck(a,b){var c=0;switch(a.tag){case 13:var d=a.stateNode;var e=a.memoizedState;null!==e&&(c=e.retryLane);break;case 19:d=a.stateNode;break;default:throw Error(p(314));}null!==d&&d.delete(b);Zk(a,c)}var Wk;\r\nWk=function(a,b,c){if(null!==a)if(a.memoizedProps!==b.pendingProps||Wf.current)Ug=!0;else{if(0===(a.lanes&c)&&0===(b.flags&128))return Ug=!1,zj(a,b,c);Ug=0!==(a.flags&131072)?!0:!1}else Ug=!1,I&&0!==(b.flags&1048576)&&ug(b,ng,b.index);b.lanes=0;switch(b.tag){case 2:var d=b.type;jj(a,b);a=b.pendingProps;var e=Yf(b,H.current);Tg(b,c);e=Xh(null,b,d,a,e,c);var f=bi();b.flags|=1;\"object\"===typeof e&&null!==e&&\"function\"===typeof e.render&&void 0===e.$$typeof?(b.tag=1,b.memoizedState=null,b.updateQueue=\r\nnull,Zf(d)?(f=!0,cg(b)):f=!1,b.memoizedState=null!==e.state&&void 0!==e.state?e.state:null,ah(b),e.updater=nh,b.stateNode=e,e._reactInternals=b,rh(b,d,a,c),b=kj(null,b,d,!0,f,c)):(b.tag=0,I&&f&&vg(b),Yi(null,b,e,c),b=b.child);return b;case 16:d=b.elementType;a:{jj(a,b);a=b.pendingProps;e=d._init;d=e(d._payload);b.type=d;e=b.tag=$k(d);a=Lg(d,a);switch(e){case 0:b=dj(null,b,d,a,c);break a;case 1:b=ij(null,b,d,a,c);break a;case 11:b=Zi(null,b,d,a,c);break a;case 14:b=aj(null,b,d,Lg(d.type,a),c);break a}throw Error(p(306,\r\nd,\"\"));}return b;case 0:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:Lg(d,e),dj(a,b,d,e,c);case 1:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:Lg(d,e),ij(a,b,d,e,c);case 3:a:{lj(b);if(null===a)throw Error(p(387));d=b.pendingProps;f=b.memoizedState;e=f.element;bh(a,b);gh(b,d,null,c);var g=b.memoizedState;d=g.element;if(f.isDehydrated)if(f={element:d,isDehydrated:!1,cache:g.cache,pendingSuspenseBoundaries:g.pendingSuspenseBoundaries,transitions:g.transitions},b.updateQueue.baseState=\r\nf,b.memoizedState=f,b.flags&256){e=Ki(Error(p(423)),b);b=mj(a,b,d,c,e);break a}else if(d!==e){e=Ki(Error(p(424)),b);b=mj(a,b,d,c,e);break a}else for(yg=Lf(b.stateNode.containerInfo.firstChild),xg=b,I=!0,zg=null,c=Ch(b,null,d,c),b.child=c;c;)c.flags=c.flags&-3|4096,c=c.sibling;else{Ig();if(d===e){b=$i(a,b,c);break a}Yi(a,b,d,c)}b=b.child}return b;case 5:return Kh(b),null===a&&Eg(b),d=b.type,e=b.pendingProps,f=null!==a?a.memoizedProps:null,g=e.children,Ef(d,e)?g=null:null!==f&&Ef(d,f)&&(b.flags|=32),\r\nhj(a,b),Yi(a,b,g,c),b.child;case 6:return null===a&&Eg(b),null;case 13:return pj(a,b,c);case 4:return Ih(b,b.stateNode.containerInfo),d=b.pendingProps,null===a?b.child=Bh(b,null,d,c):Yi(a,b,d,c),b.child;case 11:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:Lg(d,e),Zi(a,b,d,e,c);case 7:return Yi(a,b,b.pendingProps,c),b.child;case 8:return Yi(a,b,b.pendingProps.children,c),b.child;case 12:return Yi(a,b,b.pendingProps.children,c),b.child;case 10:a:{d=b.type._context;e=b.pendingProps;f=b.memoizedProps;\r\ng=e.value;G(Mg,d._currentValue);d._currentValue=g;if(null!==f)if(He(f.value,g)){if(f.children===e.children&&!Wf.current){b=$i(a,b,c);break a}}else for(f=b.child,null!==f&&(f.return=b);null!==f;){var h=f.dependencies;if(null!==h){g=f.child;for(var k=h.firstContext;null!==k;){if(k.context===d){if(1===f.tag){k=ch(-1,c&-c);k.tag=2;var l=f.updateQueue;if(null!==l){l=l.shared;var m=l.pending;null===m?k.next=k:(k.next=m.next,m.next=k);l.pending=k}}f.lanes|=c;k=f.alternate;null!==k&&(k.lanes|=c);Sg(f.return,\r\nc,b);h.lanes|=c;break}k=k.next}}else if(10===f.tag)g=f.type===b.type?null:f.child;else if(18===f.tag){g=f.return;if(null===g)throw Error(p(341));g.lanes|=c;h=g.alternate;null!==h&&(h.lanes|=c);Sg(g,c,b);g=f.sibling}else g=f.child;if(null!==g)g.return=f;else for(g=f;null!==g;){if(g===b){g=null;break}f=g.sibling;if(null!==f){f.return=g.return;g=f;break}g=g.return}f=g}Yi(a,b,e.children,c);b=b.child}return b;case 9:return e=b.type,d=b.pendingProps.children,Tg(b,c),e=Vg(e),d=d(e),b.flags|=1,Yi(a,b,d,c),\r\nb.child;case 14:return d=b.type,e=Lg(d,b.pendingProps),e=Lg(d.type,e),aj(a,b,d,e,c);case 15:return cj(a,b,b.type,b.pendingProps,c);case 17:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:Lg(d,e),jj(a,b),b.tag=1,Zf(d)?(a=!0,cg(b)):a=!1,Tg(b,c),ph(b,d,e),rh(b,d,e,c),kj(null,b,d,!0,a,c);case 19:return yj(a,b,c);case 22:return ej(a,b,c)}throw Error(p(156,b.tag));};function Gk(a,b){return ac(a,b)}\r\nfunction al(a,b,c,d){this.tag=a;this.key=c;this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null;this.index=0;this.ref=null;this.pendingProps=b;this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null;this.mode=d;this.subtreeFlags=this.flags=0;this.deletions=null;this.childLanes=this.lanes=0;this.alternate=null}function Bg(a,b,c,d){return new al(a,b,c,d)}function bj(a){a=a.prototype;return!(!a||!a.isReactComponent)}\r\nfunction $k(a){if(\"function\"===typeof a)return bj(a)?1:0;if(void 0!==a&&null!==a){a=a.$$typeof;if(a===Da)return 11;if(a===Ga)return 14}return 2}\r\nfunction wh(a,b){var c=a.alternate;null===c?(c=Bg(a.tag,b,a.key,a.mode),c.elementType=a.elementType,c.type=a.type,c.stateNode=a.stateNode,c.alternate=a,a.alternate=c):(c.pendingProps=b,c.type=a.type,c.flags=0,c.subtreeFlags=0,c.deletions=null);c.flags=a.flags&14680064;c.childLanes=a.childLanes;c.lanes=a.lanes;c.child=a.child;c.memoizedProps=a.memoizedProps;c.memoizedState=a.memoizedState;c.updateQueue=a.updateQueue;b=a.dependencies;c.dependencies=null===b?null:{lanes:b.lanes,firstContext:b.firstContext};\r\nc.sibling=a.sibling;c.index=a.index;c.ref=a.ref;return c}\r\nfunction yh(a,b,c,d,e,f){var g=2;d=a;if(\"function\"===typeof a)bj(a)&&(g=1);else if(\"string\"===typeof a)g=5;else a:switch(a){case ya:return Ah(c.children,e,f,b);case za:g=8;e|=8;break;case Aa:return a=Bg(12,c,b,e|2),a.elementType=Aa,a.lanes=f,a;case Ea:return a=Bg(13,c,b,e),a.elementType=Ea,a.lanes=f,a;case Fa:return a=Bg(19,c,b,e),a.elementType=Fa,a.lanes=f,a;case Ia:return qj(c,e,f,b);default:if(\"object\"===typeof a&&null!==a)switch(a.$$typeof){case Ba:g=10;break a;case Ca:g=9;break a;case Da:g=11;\r\nbreak a;case Ga:g=14;break a;case Ha:g=16;d=null;break a}throw Error(p(130,null==a?a:typeof a,\"\"));}b=Bg(g,c,b,e);b.elementType=a;b.type=d;b.lanes=f;return b}function Ah(a,b,c,d){a=Bg(7,a,d,b);a.lanes=c;return a}function qj(a,b,c,d){a=Bg(22,a,d,b);a.elementType=Ia;a.lanes=c;a.stateNode={isHidden:!1};return a}function xh(a,b,c){a=Bg(6,a,null,b);a.lanes=c;return a}\r\nfunction zh(a,b,c){b=Bg(4,null!==a.children?a.children:[],a.key,b);b.lanes=c;b.stateNode={containerInfo:a.containerInfo,pendingChildren:null,implementation:a.implementation};return b}\r\nfunction bl(a,b,c,d,e){this.tag=b;this.containerInfo=a;this.finishedWork=this.pingCache=this.current=this.pendingChildren=null;this.timeoutHandle=-1;this.callbackNode=this.pendingContext=this.context=null;this.callbackPriority=0;this.eventTimes=zc(0);this.expirationTimes=zc(-1);this.entangledLanes=this.finishedLanes=this.mutableReadLanes=this.expiredLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0;this.entanglements=zc(0);this.identifierPrefix=d;this.onRecoverableError=e;this.mutableSourceEagerHydrationData=\r\nnull}function cl(a,b,c,d,e,f,g,h,k){a=new bl(a,b,c,h,k);1===b?(b=1,!0===f&&(b|=8)):b=0;f=Bg(3,null,null,b);a.current=f;f.stateNode=a;f.memoizedState={element:d,isDehydrated:c,cache:null,transitions:null,pendingSuspenseBoundaries:null};ah(f);return a}function dl(a,b,c){var d=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:wa,key:null==d?null:\"\"+d,children:a,containerInfo:b,implementation:c}}\r\nfunction el(a){if(!a)return Vf;a=a._reactInternals;a:{if(Vb(a)!==a||1!==a.tag)throw Error(p(170));var b=a;do{switch(b.tag){case 3:b=b.stateNode.context;break a;case 1:if(Zf(b.type)){b=b.stateNode.__reactInternalMemoizedMergedChildContext;break a}}b=b.return}while(null!==b);throw Error(p(171));}if(1===a.tag){var c=a.type;if(Zf(c))return bg(a,c,b)}return b}\r\nfunction fl(a,b,c,d,e,f,g,h,k){a=cl(c,d,!0,a,e,f,g,h,k);a.context=el(null);c=a.current;d=L();e=lh(c);f=ch(d,e);f.callback=void 0!==b&&null!==b?b:null;dh(c,f,e);a.current.lanes=e;Ac(a,e,d);Ek(a,d);return a}function gl(a,b,c,d){var e=b.current,f=L(),g=lh(e);c=el(c);null===b.context?b.context=c:b.pendingContext=c;b=ch(f,g);b.payload={element:a};d=void 0===d?null:d;null!==d&&(b.callback=d);a=dh(e,b,g);null!==a&&(mh(a,e,g,f),eh(a,e,g));return g}\r\nfunction hl(a){a=a.current;if(!a.child)return null;switch(a.child.tag){case 5:return a.child.stateNode;default:return a.child.stateNode}}function il(a,b){a=a.memoizedState;if(null!==a&&null!==a.dehydrated){var c=a.retryLane;a.retryLane=0!==c&&c<b?c:b}}function jl(a,b){il(a,b);(a=a.alternate)&&il(a,b)}function kl(){return null}var ll=\"function\"===typeof reportError?reportError:function(a){console.error(a)};function ml(a){this._internalRoot=a}\r\nnl.prototype.render=ml.prototype.render=function(a){var b=this._internalRoot;if(null===b)throw Error(p(409));gl(a,b,null,null)};nl.prototype.unmount=ml.prototype.unmount=function(){var a=this._internalRoot;if(null!==a){this._internalRoot=null;var b=a.containerInfo;Sk(function(){gl(null,a,null,null)});b[uf]=null}};function nl(a){this._internalRoot=a}\r\nnl.prototype.unstable_scheduleHydration=function(a){if(a){var b=Hc();a={blockedOn:null,target:a,priority:b};for(var c=0;c<Qc.length&&0!==b&&b<Qc[c].priority;c++);Qc.splice(c,0,a);0===c&&Vc(a)}};function ol(a){return!(!a||1!==a.nodeType&&9!==a.nodeType&&11!==a.nodeType)}function pl(a){return!(!a||1!==a.nodeType&&9!==a.nodeType&&11!==a.nodeType&&(8!==a.nodeType||\" react-mount-point-unstable \"!==a.nodeValue))}function ql(){}\r\nfunction rl(a,b,c,d,e){if(e){if(\"function\"===typeof d){var f=d;d=function(){var a=hl(g);f.call(a)}}var g=fl(b,d,a,0,null,!1,!1,\"\",ql);a._reactRootContainer=g;a[uf]=g.current;sf(8===a.nodeType?a.parentNode:a);Sk();return g}for(;e=a.lastChild;)a.removeChild(e);if(\"function\"===typeof d){var h=d;d=function(){var a=hl(k);h.call(a)}}var k=cl(a,0,!1,null,null,!1,!1,\"\",ql);a._reactRootContainer=k;a[uf]=k.current;sf(8===a.nodeType?a.parentNode:a);Sk(function(){gl(b,k,c,d)});return k}\r\nfunction sl(a,b,c,d,e){var f=c._reactRootContainer;if(f){var g=f;if(\"function\"===typeof e){var h=e;e=function(){var a=hl(g);h.call(a)}}gl(b,g,a,e)}else g=rl(c,b,a,e,d);return hl(g)}Ec=function(a){switch(a.tag){case 3:var b=a.stateNode;if(b.current.memoizedState.isDehydrated){var c=tc(b.pendingLanes);0!==c&&(Cc(b,c|1),Ek(b,B()),0===(K&6)&&(Hj=B()+500,jg()))}break;case 13:Sk(function(){var b=Zg(a,1);if(null!==b){var c=L();mh(b,a,1,c)}}),jl(a,1)}};\r\nFc=function(a){if(13===a.tag){var b=Zg(a,134217728);if(null!==b){var c=L();mh(b,a,134217728,c)}jl(a,134217728)}};Gc=function(a){if(13===a.tag){var b=lh(a),c=Zg(a,b);if(null!==c){var d=L();mh(c,a,b,d)}jl(a,b)}};Hc=function(){return C};Ic=function(a,b){var c=C;try{return C=a,b()}finally{C=c}};\r\nyb=function(a,b,c){switch(b){case \"input\":bb(a,c);b=c.name;if(\"radio\"===c.type&&null!=b){for(c=a;c.parentNode;)c=c.parentNode;c=c.querySelectorAll(\"input[name=\"+JSON.stringify(\"\"+b)+'][type=\"radio\"]');for(b=0;b<c.length;b++){var d=c[b];if(d!==a&&d.form===a.form){var e=Db(d);if(!e)throw Error(p(90));Wa(d);bb(d,e)}}}break;case \"textarea\":ib(a,c);break;case \"select\":b=c.value,null!=b&&fb(a,!!c.multiple,b,!1)}};Gb=Rk;Hb=Sk;\r\nvar tl={usingClientEntryPoint:!1,Events:[Cb,ue,Db,Eb,Fb,Rk]},ul={findFiberByHostInstance:Wc,bundleType:0,version:\"18.2.0\",rendererPackageName:\"react-dom\"};\r\nvar vl={bundleType:ul.bundleType,version:ul.version,rendererPackageName:ul.rendererPackageName,rendererConfig:ul.rendererConfig,overrideHookState:null,overrideHookStateDeletePath:null,overrideHookStateRenamePath:null,overrideProps:null,overridePropsDeletePath:null,overridePropsRenamePath:null,setErrorHandler:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:ua.ReactCurrentDispatcher,findHostInstanceByFiber:function(a){a=Zb(a);return null===a?null:a.stateNode},findFiberByHostInstance:ul.findFiberByHostInstance||\r\nkl,findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null,reconcilerVersion:\"18.2.0-next-9e3b772b8-20220608\"};if(\"undefined\"!==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__){var wl=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(!wl.isDisabled&&wl.supportsFiber)try{kc=wl.inject(vl),lc=wl}catch(a){}}exports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=tl;\r\nexports.createPortal=function(a,b){var c=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;if(!ol(b))throw Error(p(200));return dl(a,b,null,c)};exports.createRoot=function(a,b){if(!ol(a))throw Error(p(299));var c=!1,d=\"\",e=ll;null!==b&&void 0!==b&&(!0===b.unstable_strictMode&&(c=!0),void 0!==b.identifierPrefix&&(d=b.identifierPrefix),void 0!==b.onRecoverableError&&(e=b.onRecoverableError));b=cl(a,1,!1,null,null,c,!1,d,e);a[uf]=b.current;sf(8===a.nodeType?a.parentNode:a);return new ml(b)};\r\nexports.findDOMNode=function(a){if(null==a)return null;if(1===a.nodeType)return a;var b=a._reactInternals;if(void 0===b){if(\"function\"===typeof a.render)throw Error(p(188));a=Object.keys(a).join(\",\");throw Error(p(268,a));}a=Zb(b);a=null===a?null:a.stateNode;return a};exports.flushSync=function(a){return Sk(a)};exports.hydrate=function(a,b,c){if(!pl(b))throw Error(p(200));return sl(null,a,b,!0,c)};\r\nexports.hydrateRoot=function(a,b,c){if(!ol(a))throw Error(p(405));var d=null!=c&&c.hydratedSources||null,e=!1,f=\"\",g=ll;null!==c&&void 0!==c&&(!0===c.unstable_strictMode&&(e=!0),void 0!==c.identifierPrefix&&(f=c.identifierPrefix),void 0!==c.onRecoverableError&&(g=c.onRecoverableError));b=fl(b,null,a,1,null!=c?c:null,e,!1,f,g);a[uf]=b.current;sf(a);if(d)for(a=0;a<d.length;a++)c=d[a],e=c._getVersion,e=e(c._source),null==b.mutableSourceEagerHydrationData?b.mutableSourceEagerHydrationData=[c,e]:b.mutableSourceEagerHydrationData.push(c,\r\ne);return new nl(b)};exports.render=function(a,b,c){if(!pl(b))throw Error(p(200));return sl(null,a,b,!1,c)};exports.unmountComponentAtNode=function(a){if(!pl(a))throw Error(p(40));return a._reactRootContainer?(Sk(function(){sl(null,null,a,!1,function(){a._reactRootContainer=null;a[uf]=null})}),!0):!1};exports.unstable_batchedUpdates=Rk;\r\nexports.unstable_renderSubtreeIntoContainer=function(a,b,c,d){if(!pl(c))throw Error(p(200));if(null==a||void 0===a._reactInternals)throw Error(p(38));return sl(a,b,c,!1,d)};exports.version=\"18.2.0-next-9e3b772b8-20220608\";\r\n","'use strict';\r\n\r\nvar m = require('react-dom');\r\nif (process.env.NODE_ENV === 'production') {\r\n  exports.createRoot = m.createRoot;\r\n  exports.hydrateRoot = m.hydrateRoot;\r\n} else {\r\n  var i = m.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\r\n  exports.createRoot = function(c, o) {\r\n    i.usingClientEntryPoint = true;\r\n    try {\r\n      return m.createRoot(c, o);\r\n    } finally {\r\n      i.usingClientEntryPoint = false;\r\n    }\r\n  };\r\n  exports.hydrateRoot = function(c, h, o) {\r\n    i.usingClientEntryPoint = true;\r\n    try {\r\n      return m.hydrateRoot(c, h, o);\r\n    } finally {\r\n      i.usingClientEntryPoint = false;\r\n    }\r\n  };\r\n}\r\n","'use strict';\r\n\r\nfunction checkDCE() {\r\n  /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\r\n  if (\r\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined' ||\r\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE !== 'function'\r\n  ) {\r\n    return;\r\n  }\r\n  if (process.env.NODE_ENV !== 'production') {\r\n    // This branch is unreachable because this function is only called\r\n    // in production, but the condition is true only in development.\r\n    // Therefore if the branch is still here, dead code elimination wasn't\r\n    // properly applied.\r\n    // Don't change the message. React DevTools relies on it. Also make sure\r\n    // this message doesn't occur elsewhere in this function, or it will cause\r\n    // a false positive.\r\n    throw new Error('^_^');\r\n  }\r\n  try {\r\n    // Verify that the code above has been dead code eliminated (DCE'd).\r\n    __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(checkDCE);\r\n  } catch (err) {\r\n    // DevTools shouldn't crash React, no matter what.\r\n    // We should still report in case we break this code.\r\n    console.error(err);\r\n  }\r\n}\r\n\r\nif (process.env.NODE_ENV === 'production') {\r\n  // DCE check should happen before ReactDOM bundle executes so that\r\n  // DevTools can report bad minification during injection.\r\n  checkDCE();\r\n  module.exports = require('./cjs/react-dom.production.min.js');\r\n} else {\r\n  module.exports = require('./cjs/react-dom.development.js');\r\n}\r\n","/**\r\n * @license React\r\n * react-jsx-runtime.production.min.js\r\n *\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n'use strict';var f=require(\"react\"),k=Symbol.for(\"react.element\"),l=Symbol.for(\"react.fragment\"),m=Object.prototype.hasOwnProperty,n=f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,p={key:!0,ref:!0,__self:!0,__source:!0};\r\nfunction q(c,a,g){var b,d={},e=null,h=null;void 0!==g&&(e=\"\"+g);void 0!==a.key&&(e=\"\"+a.key);void 0!==a.ref&&(h=a.ref);for(b in a)m.call(a,b)&&!p.hasOwnProperty(b)&&(d[b]=a[b]);if(c&&c.defaultProps)for(b in a=c.defaultProps,a)void 0===d[b]&&(d[b]=a[b]);return{$$typeof:k,type:c,key:e,ref:h,props:d,_owner:n.current}}exports.Fragment=l;exports.jsx=q;exports.jsxs=q;\r\n","/**\r\n * @license React\r\n * react.production.min.js\r\n *\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n'use strict';var l=Symbol.for(\"react.element\"),n=Symbol.for(\"react.portal\"),p=Symbol.for(\"react.fragment\"),q=Symbol.for(\"react.strict_mode\"),r=Symbol.for(\"react.profiler\"),t=Symbol.for(\"react.provider\"),u=Symbol.for(\"react.context\"),v=Symbol.for(\"react.forward_ref\"),w=Symbol.for(\"react.suspense\"),x=Symbol.for(\"react.memo\"),y=Symbol.for(\"react.lazy\"),z=Symbol.iterator;function A(a){if(null===a||\"object\"!==typeof a)return null;a=z&&a[z]||a[\"@@iterator\"];return\"function\"===typeof a?a:null}\r\nvar B={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},C=Object.assign,D={};function E(a,b,e){this.props=a;this.context=b;this.refs=D;this.updater=e||B}E.prototype.isReactComponent={};\r\nE.prototype.setState=function(a,b){if(\"object\"!==typeof a&&\"function\"!==typeof a&&null!=a)throw Error(\"setState(...): takes an object of state variables to update or a function which returns an object of state variables.\");this.updater.enqueueSetState(this,a,b,\"setState\")};E.prototype.forceUpdate=function(a){this.updater.enqueueForceUpdate(this,a,\"forceUpdate\")};function F(){}F.prototype=E.prototype;function G(a,b,e){this.props=a;this.context=b;this.refs=D;this.updater=e||B}var H=G.prototype=new F;\r\nH.constructor=G;C(H,E.prototype);H.isPureReactComponent=!0;var I=Array.isArray,J=Object.prototype.hasOwnProperty,K={current:null},L={key:!0,ref:!0,__self:!0,__source:!0};\r\nfunction M(a,b,e){var d,c={},k=null,h=null;if(null!=b)for(d in void 0!==b.ref&&(h=b.ref),void 0!==b.key&&(k=\"\"+b.key),b)J.call(b,d)&&!L.hasOwnProperty(d)&&(c[d]=b[d]);var g=arguments.length-2;if(1===g)c.children=e;else if(1<g){for(var f=Array(g),m=0;m<g;m++)f[m]=arguments[m+2];c.children=f}if(a&&a.defaultProps)for(d in g=a.defaultProps,g)void 0===c[d]&&(c[d]=g[d]);return{$$typeof:l,type:a,key:k,ref:h,props:c,_owner:K.current}}\r\nfunction N(a,b){return{$$typeof:l,type:a.type,key:b,ref:a.ref,props:a.props,_owner:a._owner}}function O(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===l}function escape(a){var b={\"=\":\"=0\",\":\":\"=2\"};return\"$\"+a.replace(/[=:]/g,function(a){return b[a]})}var P=/\\/+/g;function Q(a,b){return\"object\"===typeof a&&null!==a&&null!=a.key?escape(\"\"+a.key):b.toString(36)}\r\nfunction R(a,b,e,d,c){var k=typeof a;if(\"undefined\"===k||\"boolean\"===k)a=null;var h=!1;if(null===a)h=!0;else switch(k){case \"string\":case \"number\":h=!0;break;case \"object\":switch(a.$$typeof){case l:case n:h=!0}}if(h)return h=a,c=c(h),a=\"\"===d?\".\"+Q(h,0):d,I(c)?(e=\"\",null!=a&&(e=a.replace(P,\"$&/\")+\"/\"),R(c,b,e,\"\",function(a){return a})):null!=c&&(O(c)&&(c=N(c,e+(!c.key||h&&h.key===c.key?\"\":(\"\"+c.key).replace(P,\"$&/\")+\"/\")+a)),b.push(c)),1;h=0;d=\"\"===d?\".\":d+\":\";if(I(a))for(var g=0;g<a.length;g++){k=\r\na[g];var f=d+Q(k,g);h+=R(k,b,e,f,c)}else if(f=A(a),\"function\"===typeof f)for(a=f.call(a),g=0;!(k=a.next()).done;)k=k.value,f=d+Q(k,g++),h+=R(k,b,e,f,c);else if(\"object\"===k)throw b=String(a),Error(\"Objects are not valid as a React child (found: \"+(\"[object Object]\"===b?\"object with keys {\"+Object.keys(a).join(\", \")+\"}\":b)+\"). If you meant to render a collection of children, use an array instead.\");return h}\r\nfunction S(a,b,e){if(null==a)return a;var d=[],c=0;R(a,d,\"\",\"\",function(a){return b.call(e,a,c++)});return d}function T(a){if(-1===a._status){var b=a._result;b=b();b.then(function(b){if(0===a._status||-1===a._status)a._status=1,a._result=b},function(b){if(0===a._status||-1===a._status)a._status=2,a._result=b});-1===a._status&&(a._status=0,a._result=b)}if(1===a._status)return a._result.default;throw a._result;}\r\nvar U={current:null},V={transition:null},W={ReactCurrentDispatcher:U,ReactCurrentBatchConfig:V,ReactCurrentOwner:K};exports.Children={map:S,forEach:function(a,b,e){S(a,function(){b.apply(this,arguments)},e)},count:function(a){var b=0;S(a,function(){b++});return b},toArray:function(a){return S(a,function(a){return a})||[]},only:function(a){if(!O(a))throw Error(\"React.Children.only expected to receive a single React element child.\");return a}};exports.Component=E;exports.Fragment=p;\r\nexports.Profiler=r;exports.PureComponent=G;exports.StrictMode=q;exports.Suspense=w;exports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=W;\r\nexports.cloneElement=function(a,b,e){if(null===a||void 0===a)throw Error(\"React.cloneElement(...): The argument must be a React element, but you passed \"+a+\".\");var d=C({},a.props),c=a.key,k=a.ref,h=a._owner;if(null!=b){void 0!==b.ref&&(k=b.ref,h=K.current);void 0!==b.key&&(c=\"\"+b.key);if(a.type&&a.type.defaultProps)var g=a.type.defaultProps;for(f in b)J.call(b,f)&&!L.hasOwnProperty(f)&&(d[f]=void 0===b[f]&&void 0!==g?g[f]:b[f])}var f=arguments.length-2;if(1===f)d.children=e;else if(1<f){g=Array(f);\r\nfor(var m=0;m<f;m++)g[m]=arguments[m+2];d.children=g}return{$$typeof:l,type:a.type,key:c,ref:k,props:d,_owner:h}};exports.createContext=function(a){a={$$typeof:u,_currentValue:a,_currentValue2:a,_threadCount:0,Provider:null,Consumer:null,_defaultValue:null,_globalName:null};a.Provider={$$typeof:t,_context:a};return a.Consumer=a};exports.createElement=M;exports.createFactory=function(a){var b=M.bind(null,a);b.type=a;return b};exports.createRef=function(){return{current:null}};\r\nexports.forwardRef=function(a){return{$$typeof:v,render:a}};exports.isValidElement=O;exports.lazy=function(a){return{$$typeof:y,_payload:{_status:-1,_result:a},_init:T}};exports.memo=function(a,b){return{$$typeof:x,type:a,compare:void 0===b?null:b}};exports.startTransition=function(a){var b=V.transition;V.transition={};try{a()}finally{V.transition=b}};exports.unstable_act=function(){throw Error(\"act(...) is not supported in production builds of React.\");};\r\nexports.useCallback=function(a,b){return U.current.useCallback(a,b)};exports.useContext=function(a){return U.current.useContext(a)};exports.useDebugValue=function(){};exports.useDeferredValue=function(a){return U.current.useDeferredValue(a)};exports.useEffect=function(a,b){return U.current.useEffect(a,b)};exports.useId=function(){return U.current.useId()};exports.useImperativeHandle=function(a,b,e){return U.current.useImperativeHandle(a,b,e)};\r\nexports.useInsertionEffect=function(a,b){return U.current.useInsertionEffect(a,b)};exports.useLayoutEffect=function(a,b){return U.current.useLayoutEffect(a,b)};exports.useMemo=function(a,b){return U.current.useMemo(a,b)};exports.useReducer=function(a,b,e){return U.current.useReducer(a,b,e)};exports.useRef=function(a){return U.current.useRef(a)};exports.useState=function(a){return U.current.useState(a)};exports.useSyncExternalStore=function(a,b,e){return U.current.useSyncExternalStore(a,b,e)};\r\nexports.useTransition=function(){return U.current.useTransition()};exports.version=\"18.2.0\";\r\n","'use strict';\r\n\r\nif (process.env.NODE_ENV === 'production') {\r\n  module.exports = require('./cjs/react.production.min.js');\r\n} else {\r\n  module.exports = require('./cjs/react.development.js');\r\n}\r\n","'use strict';\r\n\r\nif (process.env.NODE_ENV === 'production') {\r\n  module.exports = require('./cjs/react-jsx-runtime.production.min.js');\r\n} else {\r\n  module.exports = require('./cjs/react-jsx-runtime.development.js');\r\n}\r\n","/**\r\n * @license React\r\n * scheduler.production.min.js\r\n *\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n'use strict';function f(a,b){var c=a.length;a.push(b);a:for(;0<c;){var d=c-1>>>1,e=a[d];if(0<g(e,b))a[d]=b,a[c]=e,c=d;else break a}}function h(a){return 0===a.length?null:a[0]}function k(a){if(0===a.length)return null;var b=a[0],c=a.pop();if(c!==b){a[0]=c;a:for(var d=0,e=a.length,w=e>>>1;d<w;){var m=2*(d+1)-1,C=a[m],n=m+1,x=a[n];if(0>g(C,c))n<e&&0>g(x,C)?(a[d]=x,a[n]=c,d=n):(a[d]=C,a[m]=c,d=m);else if(n<e&&0>g(x,c))a[d]=x,a[n]=c,d=n;else break a}}return b}\r\nfunction g(a,b){var c=a.sortIndex-b.sortIndex;return 0!==c?c:a.id-b.id}if(\"object\"===typeof performance&&\"function\"===typeof performance.now){var l=performance;exports.unstable_now=function(){return l.now()}}else{var p=Date,q=p.now();exports.unstable_now=function(){return p.now()-q}}var r=[],t=[],u=1,v=null,y=3,z=!1,A=!1,B=!1,D=\"function\"===typeof setTimeout?setTimeout:null,E=\"function\"===typeof clearTimeout?clearTimeout:null,F=\"undefined\"!==typeof setImmediate?setImmediate:null;\r\n\"undefined\"!==typeof navigator&&void 0!==navigator.scheduling&&void 0!==navigator.scheduling.isInputPending&&navigator.scheduling.isInputPending.bind(navigator.scheduling);function G(a){for(var b=h(t);null!==b;){if(null===b.callback)k(t);else if(b.startTime<=a)k(t),b.sortIndex=b.expirationTime,f(r,b);else break;b=h(t)}}function H(a){B=!1;G(a);if(!A)if(null!==h(r))A=!0,I(J);else{var b=h(t);null!==b&&K(H,b.startTime-a)}}\r\nfunction J(a,b){A=!1;B&&(B=!1,E(L),L=-1);z=!0;var c=y;try{G(b);for(v=h(r);null!==v&&(!(v.expirationTime>b)||a&&!M());){var d=v.callback;if(\"function\"===typeof d){v.callback=null;y=v.priorityLevel;var e=d(v.expirationTime<=b);b=exports.unstable_now();\"function\"===typeof e?v.callback=e:v===h(r)&&k(r);G(b)}else k(r);v=h(r)}if(null!==v)var w=!0;else{var m=h(t);null!==m&&K(H,m.startTime-b);w=!1}return w}finally{v=null,y=c,z=!1}}var N=!1,O=null,L=-1,P=5,Q=-1;\r\nfunction M(){return exports.unstable_now()-Q<P?!1:!0}function R(){if(null!==O){var a=exports.unstable_now();Q=a;var b=!0;try{b=O(!0,a)}finally{b?S():(N=!1,O=null)}}else N=!1}var S;if(\"function\"===typeof F)S=function(){F(R)};else if(\"undefined\"!==typeof MessageChannel){var T=new MessageChannel,U=T.port2;T.port1.onmessage=R;S=function(){U.postMessage(null)}}else S=function(){D(R,0)};function I(a){O=a;N||(N=!0,S())}function K(a,b){L=D(function(){a(exports.unstable_now())},b)}\r\nexports.unstable_IdlePriority=5;exports.unstable_ImmediatePriority=1;exports.unstable_LowPriority=4;exports.unstable_NormalPriority=3;exports.unstable_Profiling=null;exports.unstable_UserBlockingPriority=2;exports.unstable_cancelCallback=function(a){a.callback=null};exports.unstable_continueExecution=function(){A||z||(A=!0,I(J))};\r\nexports.unstable_forceFrameRate=function(a){0>a||125<a?console.error(\"forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported\"):P=0<a?Math.floor(1E3/a):5};exports.unstable_getCurrentPriorityLevel=function(){return y};exports.unstable_getFirstCallbackNode=function(){return h(r)};exports.unstable_next=function(a){switch(y){case 1:case 2:case 3:var b=3;break;default:b=y}var c=y;y=b;try{return a()}finally{y=c}};exports.unstable_pauseExecution=function(){};\r\nexports.unstable_requestPaint=function(){};exports.unstable_runWithPriority=function(a,b){switch(a){case 1:case 2:case 3:case 4:case 5:break;default:a=3}var c=y;y=a;try{return b()}finally{y=c}};\r\nexports.unstable_scheduleCallback=function(a,b,c){var d=exports.unstable_now();\"object\"===typeof c&&null!==c?(c=c.delay,c=\"number\"===typeof c&&0<c?d+c:d):c=d;switch(a){case 1:var e=-1;break;case 2:e=250;break;case 5:e=1073741823;break;case 4:e=1E4;break;default:e=5E3}e=c+e;a={id:u++,callback:b,priorityLevel:a,startTime:c,expirationTime:e,sortIndex:-1};c>d?(a.sortIndex=c,f(t,a),null===h(r)&&a===h(t)&&(B?(E(L),L=-1):B=!0,K(H,c-d))):(a.sortIndex=e,f(r,a),A||z||(A=!0,I(J)));return a};\r\nexports.unstable_shouldYield=M;exports.unstable_wrapCallback=function(a){var b=y;return function(){var c=y;y=b;try{return a.apply(this,arguments)}finally{y=c}}};\r\n","'use strict';\r\n\r\nif (process.env.NODE_ENV === 'production') {\r\n  module.exports = require('./cjs/scheduler.production.min.js');\r\n} else {\r\n  module.exports = require('./cjs/scheduler.development.js');\r\n}\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var getProto = Object.getPrototypeOf ? (obj) => (Object.getPrototypeOf(obj)) : (obj) => (obj.__proto__);\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach((key) => (def[key] = () => (value[key])));\n\t}\n\tdef['default'] = () => (value);\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = (chunkId) => {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce((promises, key) => {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks\n__webpack_require__.u = (chunkId) => {\n\t// return url for filenames based on template\n\treturn \"static/js/\" + chunkId + \".\" + \"9e9f4ffd\" + \".chunk.js\";\n};","// This function allow to reference async chunks\n__webpack_require__.miniCssF = (chunkId) => {\n\t// return url for filenames based on template\n\treturn undefined;\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","var inProgress = {};\nvar dataWebpackPrefix = \"frontend:\";\n// loadScript function to load a script via script tag\n__webpack_require__.l = (url, done, key, chunkId) => {\n\tif(inProgress[url]) { inProgress[url].push(done); return; }\n\tvar script, needAttach;\n\tif(key !== undefined) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tfor(var i = 0; i < scripts.length; i++) {\n\t\t\tvar s = scripts[i];\n\t\t\tif(s.getAttribute(\"src\") == url || s.getAttribute(\"data-webpack\") == dataWebpackPrefix + key) { script = s; break; }\n\t\t}\n\t}\n\tif(!script) {\n\t\tneedAttach = true;\n\t\tscript = document.createElement('script');\n\n\t\tscript.charset = 'utf-8';\n\t\tscript.timeout = 120;\n\t\tif (__webpack_require__.nc) {\n\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n\t\t}\n\t\tscript.setAttribute(\"data-webpack\", dataWebpackPrefix + key);\n\n\t\tscript.src = url;\n\t}\n\tinProgress[url] = [done];\n\tvar onScriptComplete = (prev, event) => {\n\t\t// avoid mem leaks in IE.\n\t\tscript.onerror = script.onload = null;\n\t\tclearTimeout(timeout);\n\t\tvar doneFns = inProgress[url];\n\t\tdelete inProgress[url];\n\t\tscript.parentNode && script.parentNode.removeChild(script);\n\t\tdoneFns && doneFns.forEach((fn) => (fn(event)));\n\t\tif(prev) return prev(event);\n\t}\n\tvar timeout = setTimeout(onScriptComplete.bind(null, undefined, { type: 'timeout', target: script }), 120000);\n\tscript.onerror = onScriptComplete.bind(null, script.onerror);\n\tscript.onload = onScriptComplete.bind(null, script.onload);\n\tneedAttach && document.head.appendChild(script);\n};","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.p = \"/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t179: 0\n};\n\n__webpack_require__.f.j = (chunkId, promises) => {\n\t\t// JSONP chunk loading for javascript\n\t\tvar installedChunkData = __webpack_require__.o(installedChunks, chunkId) ? installedChunks[chunkId] : undefined;\n\t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n\t\t\t// a Promise means \"currently loading\".\n\t\t\tif(installedChunkData) {\n\t\t\t\tpromises.push(installedChunkData[2]);\n\t\t\t} else {\n\t\t\t\tif(true) { // all chunks have JS\n\t\t\t\t\t// setup Promise in chunk cache\n\t\t\t\t\tvar promise = new Promise((resolve, reject) => (installedChunkData = installedChunks[chunkId] = [resolve, reject]));\n\t\t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n\t\t\t\t\t// start chunk loading\n\t\t\t\t\tvar url = __webpack_require__.p + __webpack_require__.u(chunkId);\n\t\t\t\t\t// create error before stack unwound to get useful stacktrace later\n\t\t\t\t\tvar error = new Error();\n\t\t\t\t\tvar loadingEnded = (event) => {\n\t\t\t\t\t\tif(__webpack_require__.o(installedChunks, chunkId)) {\n\t\t\t\t\t\t\tinstalledChunkData = installedChunks[chunkId];\n\t\t\t\t\t\t\tif(installedChunkData !== 0) installedChunks[chunkId] = undefined;\n\t\t\t\t\t\t\tif(installedChunkData) {\n\t\t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n\t\t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n\t\t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n\t\t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n\t\t\t\t\t\t\t\terror.type = errorType;\n\t\t\t\t\t\t\t\terror.request = realSrc;\n\t\t\t\t\t\t\t\tinstalledChunkData[1](error);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\t__webpack_require__.l(url, loadingEnded, \"chunk-\" + chunkId, chunkId);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n};\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n// no on chunks loaded\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkfrontend\"] = self[\"webpackChunkfrontend\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","////////////////////////////////////////////////////////////////////////////////\n//#region Types and Constants\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * Actions represent the type of change to a location value.\n */\nexport enum Action {\n  /**\n   * A POP indicates a change to an arbitrary index in the history stack, such\n   * as a back or forward navigation. It does not describe the direction of the\n   * navigation, only that the current index changed.\n   *\n   * Note: This is the default action for newly created history objects.\n   */\n  Pop = \"POP\",\n\n  /**\n   * A PUSH indicates a new entry being added to the history stack, such as when\n   * a link is clicked and a new page loads. When this happens, all subsequent\n   * entries in the stack are lost.\n   */\n  Push = \"PUSH\",\n\n  /**\n   * A REPLACE indicates the entry at the current index in the history stack\n   * being replaced by a new one.\n   */\n  Replace = \"REPLACE\",\n}\n\n/**\n * The pathname, search, and hash values of a URL.\n */\nexport interface Path {\n  /**\n   * A URL pathname, beginning with a /.\n   */\n  pathname: string;\n\n  /**\n   * A URL search string, beginning with a ?.\n   */\n  search: string;\n\n  /**\n   * A URL fragment identifier, beginning with a #.\n   */\n  hash: string;\n}\n\n// TODO: (v7) Change the Location generic default from `any` to `unknown` and\n// remove Remix `useLocation` wrapper.\n\n/**\n * An entry in a history stack. A location contains information about the\n * URL path, as well as possibly some arbitrary state and a key.\n */\nexport interface Location<State = any> extends Path {\n  /**\n   * A value of arbitrary data associated with this location.\n   */\n  state: State;\n\n  /**\n   * A unique string associated with this location. May be used to safely store\n   * and retrieve data in some other storage API, like `localStorage`.\n   *\n   * Note: This value is always \"default\" on the initial location.\n   */\n  key: string;\n}\n\n/**\n * A change to the current location.\n */\nexport interface Update {\n  /**\n   * The action that triggered the change.\n   */\n  action: Action;\n\n  /**\n   * The new location.\n   */\n  location: Location;\n\n  /**\n   * The delta between this location and the former location in the history stack\n   */\n  delta: number | null;\n}\n\n/**\n * A function that receives notifications about location changes.\n */\nexport interface Listener {\n  (update: Update): void;\n}\n\n/**\n * Describes a location that is the destination of some navigation, either via\n * `history.push` or `history.replace`. This may be either a URL or the pieces\n * of a URL path.\n */\nexport type To = string | Partial<Path>;\n\n/**\n * A history is an interface to the navigation stack. The history serves as the\n * source of truth for the current location, as well as provides a set of\n * methods that may be used to change it.\n *\n * It is similar to the DOM's `window.history` object, but with a smaller, more\n * focused API.\n */\nexport interface History {\n  /**\n   * The last action that modified the current location. This will always be\n   * Action.Pop when a history instance is first created. This value is mutable.\n   */\n  readonly action: Action;\n\n  /**\n   * The current location. This value is mutable.\n   */\n  readonly location: Location;\n\n  /**\n   * Returns a valid href for the given `to` value that may be used as\n   * the value of an <a href> attribute.\n   *\n   * @param to - The destination URL\n   */\n  createHref(to: To): string;\n\n  /**\n   * Returns a URL for the given `to` value\n   *\n   * @param to - The destination URL\n   */\n  createURL(to: To): URL;\n\n  /**\n   * Encode a location the same way window.history would do (no-op for memory\n   * history) so we ensure our PUSH/REPLACE navigations for data routers\n   * behave the same as POP\n   *\n   * @param to Unencoded path\n   */\n  encodeLocation(to: To): Path;\n\n  /**\n   * Pushes a new location onto the history stack, increasing its length by one.\n   * If there were any entries in the stack after the current one, they are\n   * lost.\n   *\n   * @param to - The new URL\n   * @param state - Data to associate with the new location\n   */\n  push(to: To, state?: any): void;\n\n  /**\n   * Replaces the current location in the history stack with a new one.  The\n   * location that was replaced will no longer be available.\n   *\n   * @param to - The new URL\n   * @param state - Data to associate with the new location\n   */\n  replace(to: To, state?: any): void;\n\n  /**\n   * Navigates `n` entries backward/forward in the history stack relative to the\n   * current index. For example, a \"back\" navigation would use go(-1).\n   *\n   * @param delta - The delta in the stack index\n   */\n  go(delta: number): void;\n\n  /**\n   * Sets up a listener that will be called whenever the current location\n   * changes.\n   *\n   * @param listener - A function that will be called when the location changes\n   * @returns unlisten - A function that may be used to stop listening\n   */\n  listen(listener: Listener): () => void;\n}\n\ntype HistoryState = {\n  usr: any;\n  key?: string;\n  idx: number;\n};\n\nconst PopStateEventType = \"popstate\";\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Memory History\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * A user-supplied object that describes a location. Used when providing\n * entries to `createMemoryHistory` via its `initialEntries` option.\n */\nexport type InitialEntry = string | Partial<Location>;\n\nexport type MemoryHistoryOptions = {\n  initialEntries?: InitialEntry[];\n  initialIndex?: number;\n  v5Compat?: boolean;\n};\n\n/**\n * A memory history stores locations in memory. This is useful in stateful\n * environments where there is no web browser, such as node tests or React\n * Native.\n */\nexport interface MemoryHistory extends History {\n  /**\n   * The current index in the history stack.\n   */\n  readonly index: number;\n}\n\n/**\n * Memory history stores the current location in memory. It is designed for use\n * in stateful non-browser environments like tests and React Native.\n */\nexport function createMemoryHistory(\n  options: MemoryHistoryOptions = {}\n): MemoryHistory {\n  let { initialEntries = [\"/\"], initialIndex, v5Compat = false } = options;\n  let entries: Location[]; // Declare so we can access from createMemoryLocation\n  entries = initialEntries.map((entry, index) =>\n    createMemoryLocation(\n      entry,\n      typeof entry === \"string\" ? null : entry.state,\n      index === 0 ? \"default\" : undefined\n    )\n  );\n  let index = clampIndex(\n    initialIndex == null ? entries.length - 1 : initialIndex\n  );\n  let action = Action.Pop;\n  let listener: Listener | null = null;\n\n  function clampIndex(n: number): number {\n    return Math.min(Math.max(n, 0), entries.length - 1);\n  }\n  function getCurrentLocation(): Location {\n    return entries[index];\n  }\n  function createMemoryLocation(\n    to: To,\n    state: any = null,\n    key?: string\n  ): Location {\n    let location = createLocation(\n      entries ? getCurrentLocation().pathname : \"/\",\n      to,\n      state,\n      key\n    );\n    warning(\n      location.pathname.charAt(0) === \"/\",\n      `relative pathnames are not supported in memory history: ${JSON.stringify(\n        to\n      )}`\n    );\n    return location;\n  }\n\n  function createHref(to: To) {\n    return typeof to === \"string\" ? to : createPath(to);\n  }\n\n  let history: MemoryHistory = {\n    get index() {\n      return index;\n    },\n    get action() {\n      return action;\n    },\n    get location() {\n      return getCurrentLocation();\n    },\n    createHref,\n    createURL(to) {\n      return new URL(createHref(to), \"http://localhost\");\n    },\n    encodeLocation(to: To) {\n      let path = typeof to === \"string\" ? parsePath(to) : to;\n      return {\n        pathname: path.pathname || \"\",\n        search: path.search || \"\",\n        hash: path.hash || \"\",\n      };\n    },\n    push(to, state) {\n      action = Action.Push;\n      let nextLocation = createMemoryLocation(to, state);\n      index += 1;\n      entries.splice(index, entries.length, nextLocation);\n      if (v5Compat && listener) {\n        listener({ action, location: nextLocation, delta: 1 });\n      }\n    },\n    replace(to, state) {\n      action = Action.Replace;\n      let nextLocation = createMemoryLocation(to, state);\n      entries[index] = nextLocation;\n      if (v5Compat && listener) {\n        listener({ action, location: nextLocation, delta: 0 });\n      }\n    },\n    go(delta) {\n      action = Action.Pop;\n      let nextIndex = clampIndex(index + delta);\n      let nextLocation = entries[nextIndex];\n      index = nextIndex;\n      if (listener) {\n        listener({ action, location: nextLocation, delta });\n      }\n    },\n    listen(fn: Listener) {\n      listener = fn;\n      return () => {\n        listener = null;\n      };\n    },\n  };\n\n  return history;\n}\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Browser History\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * A browser history stores the current location in regular URLs in a web\n * browser environment. This is the standard for most web apps and provides the\n * cleanest URLs the browser's address bar.\n *\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#browserhistory\n */\nexport interface BrowserHistory extends UrlHistory {}\n\nexport type BrowserHistoryOptions = UrlHistoryOptions;\n\n/**\n * Browser history stores the location in regular URLs. This is the standard for\n * most web apps, but it requires some configuration on the server to ensure you\n * serve the same app at multiple URLs.\n *\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#createbrowserhistory\n */\nexport function createBrowserHistory(\n  options: BrowserHistoryOptions = {}\n): BrowserHistory {\n  function createBrowserLocation(\n    window: Window,\n    globalHistory: Window[\"history\"]\n  ) {\n    let { pathname, search, hash } = window.location;\n    return createLocation(\n      \"\",\n      { pathname, search, hash },\n      // state defaults to `null` because `window.history.state` does\n      (globalHistory.state && globalHistory.state.usr) || null,\n      (globalHistory.state && globalHistory.state.key) || \"default\"\n    );\n  }\n\n  function createBrowserHref(window: Window, to: To) {\n    return typeof to === \"string\" ? to : createPath(to);\n  }\n\n  return getUrlBasedHistory(\n    createBrowserLocation,\n    createBrowserHref,\n    null,\n    options\n  );\n}\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Hash History\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * A hash history stores the current location in the fragment identifier portion\n * of the URL in a web browser environment.\n *\n * This is ideal for apps that do not control the server for some reason\n * (because the fragment identifier is never sent to the server), including some\n * shared hosting environments that do not provide fine-grained controls over\n * which pages are served at which URLs.\n *\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#hashhistory\n */\nexport interface HashHistory extends UrlHistory {}\n\nexport type HashHistoryOptions = UrlHistoryOptions;\n\n/**\n * Hash history stores the location in window.location.hash. This makes it ideal\n * for situations where you don't want to send the location to the server for\n * some reason, either because you do cannot configure it or the URL space is\n * reserved for something else.\n *\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#createhashhistory\n */\nexport function createHashHistory(\n  options: HashHistoryOptions = {}\n): HashHistory {\n  function createHashLocation(\n    window: Window,\n    globalHistory: Window[\"history\"]\n  ) {\n    let {\n      pathname = \"/\",\n      search = \"\",\n      hash = \"\",\n    } = parsePath(window.location.hash.substr(1));\n\n    // Hash URL should always have a leading / just like window.location.pathname\n    // does, so if an app ends up at a route like /#something then we add a\n    // leading slash so all of our path-matching behaves the same as if it would\n    // in a browser router.  This is particularly important when there exists a\n    // root splat route (<Route path=\"*\">) since that matches internally against\n    // \"/*\" and we'd expect /#something to 404 in a hash router app.\n    if (!pathname.startsWith(\"/\") && !pathname.startsWith(\".\")) {\n      pathname = \"/\" + pathname;\n    }\n\n    return createLocation(\n      \"\",\n      { pathname, search, hash },\n      // state defaults to `null` because `window.history.state` does\n      (globalHistory.state && globalHistory.state.usr) || null,\n      (globalHistory.state && globalHistory.state.key) || \"default\"\n    );\n  }\n\n  function createHashHref(window: Window, to: To) {\n    let base = window.document.querySelector(\"base\");\n    let href = \"\";\n\n    if (base && base.getAttribute(\"href\")) {\n      let url = window.location.href;\n      let hashIndex = url.indexOf(\"#\");\n      href = hashIndex === -1 ? url : url.slice(0, hashIndex);\n    }\n\n    return href + \"#\" + (typeof to === \"string\" ? to : createPath(to));\n  }\n\n  function validateHashLocation(location: Location, to: To) {\n    warning(\n      location.pathname.charAt(0) === \"/\",\n      `relative pathnames are not supported in hash history.push(${JSON.stringify(\n        to\n      )})`\n    );\n  }\n\n  return getUrlBasedHistory(\n    createHashLocation,\n    createHashHref,\n    validateHashLocation,\n    options\n  );\n}\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region UTILS\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * @private\n */\nexport function invariant(value: boolean, message?: string): asserts value;\nexport function invariant<T>(\n  value: T | null | undefined,\n  message?: string\n): asserts value is T;\nexport function invariant(value: any, message?: string) {\n  if (value === false || value === null || typeof value === \"undefined\") {\n    throw new Error(message);\n  }\n}\n\nexport function warning(cond: any, message: string) {\n  if (!cond) {\n    // eslint-disable-next-line no-console\n    if (typeof console !== \"undefined\") console.warn(message);\n\n    try {\n      // Welcome to debugging history!\n      //\n      // This error is thrown as a convenience, so you can more easily\n      // find the source for a warning that appears in the console by\n      // enabling \"pause on exceptions\" in your JavaScript debugger.\n      throw new Error(message);\n      // eslint-disable-next-line no-empty\n    } catch (e) {}\n  }\n}\n\nfunction createKey() {\n  return Math.random().toString(36).substr(2, 8);\n}\n\n/**\n * For browser-based histories, we combine the state and key into an object\n */\nfunction getHistoryState(location: Location, index: number): HistoryState {\n  return {\n    usr: location.state,\n    key: location.key,\n    idx: index,\n  };\n}\n\n/**\n * Creates a Location object with a unique key from the given Path\n */\nexport function createLocation(\n  current: string | Location,\n  to: To,\n  state: any = null,\n  key?: string\n): Readonly<Location> {\n  let location: Readonly<Location> = {\n    pathname: typeof current === \"string\" ? current : current.pathname,\n    search: \"\",\n    hash: \"\",\n    ...(typeof to === \"string\" ? parsePath(to) : to),\n    state,\n    // TODO: This could be cleaned up.  push/replace should probably just take\n    // full Locations now and avoid the need to run through this flow at all\n    // But that's a pretty big refactor to the current test suite so going to\n    // keep as is for the time being and just let any incoming keys take precedence\n    key: (to && (to as Location).key) || key || createKey(),\n  };\n  return location;\n}\n\n/**\n * Creates a string URL path from the given pathname, search, and hash components.\n */\nexport function createPath({\n  pathname = \"/\",\n  search = \"\",\n  hash = \"\",\n}: Partial<Path>) {\n  if (search && search !== \"?\")\n    pathname += search.charAt(0) === \"?\" ? search : \"?\" + search;\n  if (hash && hash !== \"#\")\n    pathname += hash.charAt(0) === \"#\" ? hash : \"#\" + hash;\n  return pathname;\n}\n\n/**\n * Parses a string URL path into its separate pathname, search, and hash components.\n */\nexport function parsePath(path: string): Partial<Path> {\n  let parsedPath: Partial<Path> = {};\n\n  if (path) {\n    let hashIndex = path.indexOf(\"#\");\n    if (hashIndex >= 0) {\n      parsedPath.hash = path.substr(hashIndex);\n      path = path.substr(0, hashIndex);\n    }\n\n    let searchIndex = path.indexOf(\"?\");\n    if (searchIndex >= 0) {\n      parsedPath.search = path.substr(searchIndex);\n      path = path.substr(0, searchIndex);\n    }\n\n    if (path) {\n      parsedPath.pathname = path;\n    }\n  }\n\n  return parsedPath;\n}\n\nexport interface UrlHistory extends History {}\n\nexport type UrlHistoryOptions = {\n  window?: Window;\n  v5Compat?: boolean;\n};\n\nfunction getUrlBasedHistory(\n  getLocation: (window: Window, globalHistory: Window[\"history\"]) => Location,\n  createHref: (window: Window, to: To) => string,\n  validateLocation: ((location: Location, to: To) => void) | null,\n  options: UrlHistoryOptions = {}\n): UrlHistory {\n  let { window = document.defaultView!, v5Compat = false } = options;\n  let globalHistory = window.history;\n  let action = Action.Pop;\n  let listener: Listener | null = null;\n\n  let index = getIndex()!;\n  // Index should only be null when we initialize. If not, it's because the\n  // user called history.pushState or history.replaceState directly, in which\n  // case we should log a warning as it will result in bugs.\n  if (index == null) {\n    index = 0;\n    globalHistory.replaceState({ ...globalHistory.state, idx: index }, \"\");\n  }\n\n  function getIndex(): number {\n    let state = globalHistory.state || { idx: null };\n    return state.idx;\n  }\n\n  function handlePop() {\n    action = Action.Pop;\n    let nextIndex = getIndex();\n    let delta = nextIndex == null ? null : nextIndex - index;\n    index = nextIndex;\n    if (listener) {\n      listener({ action, location: history.location, delta });\n    }\n  }\n\n  function push(to: To, state?: any) {\n    action = Action.Push;\n    let location = createLocation(history.location, to, state);\n    if (validateLocation) validateLocation(location, to);\n\n    index = getIndex() + 1;\n    let historyState = getHistoryState(location, index);\n    let url = history.createHref(location);\n\n    // try...catch because iOS limits us to 100 pushState calls :/\n    try {\n      globalHistory.pushState(historyState, \"\", url);\n    } catch (error) {\n      // If the exception is because `state` can't be serialized, let that throw\n      // outwards just like a replace call would so the dev knows the cause\n      // https://html.spec.whatwg.org/multipage/nav-history-apis.html#shared-history-push/replace-state-steps\n      // https://html.spec.whatwg.org/multipage/structured-data.html#structuredserializeinternal\n      if (error instanceof DOMException && error.name === \"DataCloneError\") {\n        throw error;\n      }\n      // They are going to lose state here, but there is no real\n      // way to warn them about it since the page will refresh...\n      window.location.assign(url);\n    }\n\n    if (v5Compat && listener) {\n      listener({ action, location: history.location, delta: 1 });\n    }\n  }\n\n  function replace(to: To, state?: any) {\n    action = Action.Replace;\n    let location = createLocation(history.location, to, state);\n    if (validateLocation) validateLocation(location, to);\n\n    index = getIndex();\n    let historyState = getHistoryState(location, index);\n    let url = history.createHref(location);\n    globalHistory.replaceState(historyState, \"\", url);\n\n    if (v5Compat && listener) {\n      listener({ action, location: history.location, delta: 0 });\n    }\n  }\n\n  function createURL(to: To): URL {\n    // window.location.origin is \"null\" (the literal string value) in Firefox\n    // under certain conditions, notably when serving from a local HTML file\n    // See https://bugzilla.mozilla.org/show_bug.cgi?id=878297\n    let base =\n      window.location.origin !== \"null\"\n        ? window.location.origin\n        : window.location.href;\n\n    let href = typeof to === \"string\" ? to : createPath(to);\n    invariant(\n      base,\n      `No window.location.(origin|href) available to create URL for href: ${href}`\n    );\n    return new URL(href, base);\n  }\n\n  let history: History = {\n    get action() {\n      return action;\n    },\n    get location() {\n      return getLocation(window, globalHistory);\n    },\n    listen(fn: Listener) {\n      if (listener) {\n        throw new Error(\"A history only accepts one active listener\");\n      }\n      window.addEventListener(PopStateEventType, handlePop);\n      listener = fn;\n\n      return () => {\n        window.removeEventListener(PopStateEventType, handlePop);\n        listener = null;\n      };\n    },\n    createHref(to) {\n      return createHref(window, to);\n    },\n    createURL,\n    encodeLocation(to) {\n      // Encode a Location the same way window.location would\n      let url = createURL(to);\n      return {\n        pathname: url.pathname,\n        search: url.search,\n        hash: url.hash,\n      };\n    },\n    push,\n    replace,\n    go(n) {\n      return globalHistory.go(n);\n    },\n  };\n\n  return history;\n}\n\n//#endregion\n","import type { Location, Path, To } from \"./history\";\nimport { invariant, parsePath, warning } from \"./history\";\n\n/**\n * Map of routeId -> data returned from a loader/action/error\n */\nexport interface RouteData {\n  [routeId: string]: any;\n}\n\nexport enum ResultType {\n  data = \"data\",\n  deferred = \"deferred\",\n  redirect = \"redirect\",\n  error = \"error\",\n}\n\n/**\n * Successful result from a loader or action\n */\nexport interface SuccessResult {\n  type: ResultType.data;\n  data: any;\n  statusCode?: number;\n  headers?: Headers;\n}\n\n/**\n * Successful defer() result from a loader or action\n */\nexport interface DeferredResult {\n  type: ResultType.deferred;\n  deferredData: DeferredData;\n  statusCode?: number;\n  headers?: Headers;\n}\n\n/**\n * Redirect result from a loader or action\n */\nexport interface RedirectResult {\n  type: ResultType.redirect;\n  status: number;\n  location: string;\n  revalidate: boolean;\n  reloadDocument?: boolean;\n}\n\n/**\n * Unsuccessful result from a loader or action\n */\nexport interface ErrorResult {\n  type: ResultType.error;\n  error: any;\n  headers?: Headers;\n}\n\n/**\n * Result from a loader or action - potentially successful or unsuccessful\n */\nexport type DataResult =\n  | SuccessResult\n  | DeferredResult\n  | RedirectResult\n  | ErrorResult;\n\ntype LowerCaseFormMethod = \"get\" | \"post\" | \"put\" | \"patch\" | \"delete\";\ntype UpperCaseFormMethod = Uppercase<LowerCaseFormMethod>;\n\n/**\n * Users can specify either lowercase or uppercase form methods on `<Form>`,\n * useSubmit(), `<fetcher.Form>`, etc.\n */\nexport type HTMLFormMethod = LowerCaseFormMethod | UpperCaseFormMethod;\n\n/**\n * Active navigation/fetcher form methods are exposed in lowercase on the\n * RouterState\n */\nexport type FormMethod = LowerCaseFormMethod;\nexport type MutationFormMethod = Exclude<FormMethod, \"get\">;\n\n/**\n * In v7, active navigation/fetcher form methods are exposed in uppercase on the\n * RouterState.  This is to align with the normalization done via fetch().\n */\nexport type V7_FormMethod = UpperCaseFormMethod;\nexport type V7_MutationFormMethod = Exclude<V7_FormMethod, \"GET\">;\n\nexport type FormEncType =\n  | \"application/x-www-form-urlencoded\"\n  | \"multipart/form-data\"\n  | \"application/json\"\n  | \"text/plain\";\n\n// Thanks https://github.com/sindresorhus/type-fest!\ntype JsonObject = { [Key in string]: JsonValue } & {\n  [Key in string]?: JsonValue | undefined;\n};\ntype JsonArray = JsonValue[] | readonly JsonValue[];\ntype JsonPrimitive = string | number | boolean | null;\ntype JsonValue = JsonPrimitive | JsonObject | JsonArray;\n\n/**\n * @private\n * Internal interface to pass around for action submissions, not intended for\n * external consumption\n */\nexport type Submission =\n  | {\n      formMethod: FormMethod | V7_FormMethod;\n      formAction: string;\n      formEncType: FormEncType;\n      formData: FormData;\n      json: undefined;\n      text: undefined;\n    }\n  | {\n      formMethod: FormMethod | V7_FormMethod;\n      formAction: string;\n      formEncType: FormEncType;\n      formData: undefined;\n      json: JsonValue;\n      text: undefined;\n    }\n  | {\n      formMethod: FormMethod | V7_FormMethod;\n      formAction: string;\n      formEncType: FormEncType;\n      formData: undefined;\n      json: undefined;\n      text: string;\n    };\n\n/**\n * @private\n * Arguments passed to route loader/action functions.  Same for now but we keep\n * this as a private implementation detail in case they diverge in the future.\n */\ninterface DataFunctionArgs<Context> {\n  request: Request;\n  params: Params;\n  context?: Context;\n}\n\n// TODO: (v7) Change the defaults from any to unknown in and remove Remix wrappers:\n//   ActionFunction, ActionFunctionArgs, LoaderFunction, LoaderFunctionArgs\n//   Also, make them a type alias instead of an interface\n\n/**\n * Arguments passed to loader functions\n */\nexport interface LoaderFunctionArgs<Context = any>\n  extends DataFunctionArgs<Context> {}\n\n/**\n * Arguments passed to action functions\n */\nexport interface ActionFunctionArgs<Context = any>\n  extends DataFunctionArgs<Context> {}\n\n/**\n * Loaders and actions can return anything except `undefined` (`null` is a\n * valid return value if there is no data to return).  Responses are preferred\n * and will ease any future migration to Remix\n */\ntype DataFunctionValue = Response | NonNullable<unknown> | null;\n\n/**\n * Route loader function signature\n */\nexport interface LoaderFunction<Context = any> {\n  (args: LoaderFunctionArgs<Context>):\n    | Promise<DataFunctionValue>\n    | DataFunctionValue;\n}\n\n/**\n * Route action function signature\n */\nexport interface ActionFunction<Context = any> {\n  (args: ActionFunctionArgs<Context>):\n    | Promise<DataFunctionValue>\n    | DataFunctionValue;\n}\n\n/**\n * Arguments passed to shouldRevalidate function\n */\nexport interface ShouldRevalidateFunctionArgs {\n  currentUrl: URL;\n  currentParams: AgnosticDataRouteMatch[\"params\"];\n  nextUrl: URL;\n  nextParams: AgnosticDataRouteMatch[\"params\"];\n  formMethod?: Submission[\"formMethod\"];\n  formAction?: Submission[\"formAction\"];\n  formEncType?: Submission[\"formEncType\"];\n  text?: Submission[\"text\"];\n  formData?: Submission[\"formData\"];\n  json?: Submission[\"json\"];\n  actionResult?: any;\n  defaultShouldRevalidate: boolean;\n}\n\n/**\n * Route shouldRevalidate function signature.  This runs after any submission\n * (navigation or fetcher), so we flatten the navigation/fetcher submission\n * onto the arguments.  It shouldn't matter whether it came from a navigation\n * or a fetcher, what really matters is the URLs and the formData since loaders\n * have to re-run based on the data models that were potentially mutated.\n */\nexport interface ShouldRevalidateFunction {\n  (args: ShouldRevalidateFunctionArgs): boolean;\n}\n\n/**\n * Function provided by the framework-aware layers to set `hasErrorBoundary`\n * from the framework-aware `errorElement` prop\n *\n * @deprecated Use `mapRouteProperties` instead\n */\nexport interface DetectErrorBoundaryFunction {\n  (route: AgnosticRouteObject): boolean;\n}\n\n/**\n * Function provided by the framework-aware layers to set any framework-specific\n * properties from framework-agnostic properties\n */\nexport interface MapRoutePropertiesFunction {\n  (route: AgnosticRouteObject): {\n    hasErrorBoundary: boolean;\n  } & Record<string, any>;\n}\n\n/**\n * Keys we cannot change from within a lazy() function. We spread all other keys\n * onto the route. Either they're meaningful to the router, or they'll get\n * ignored.\n */\nexport type ImmutableRouteKey =\n  | \"lazy\"\n  | \"caseSensitive\"\n  | \"path\"\n  | \"id\"\n  | \"index\"\n  | \"children\";\n\nexport const immutableRouteKeys = new Set<ImmutableRouteKey>([\n  \"lazy\",\n  \"caseSensitive\",\n  \"path\",\n  \"id\",\n  \"index\",\n  \"children\",\n]);\n\ntype RequireOne<T, Key = keyof T> = Exclude<\n  {\n    [K in keyof T]: K extends Key ? Omit<T, K> & Required<Pick<T, K>> : never;\n  }[keyof T],\n  undefined\n>;\n\n/**\n * lazy() function to load a route definition, which can add non-matching\n * related properties to a route\n */\nexport interface LazyRouteFunction<R extends AgnosticRouteObject> {\n  (): Promise<RequireOne<Omit<R, ImmutableRouteKey>>>;\n}\n\n/**\n * Base RouteObject with common props shared by all types of routes\n */\ntype AgnosticBaseRouteObject = {\n  caseSensitive?: boolean;\n  path?: string;\n  id?: string;\n  loader?: LoaderFunction;\n  action?: ActionFunction;\n  hasErrorBoundary?: boolean;\n  shouldRevalidate?: ShouldRevalidateFunction;\n  handle?: any;\n  lazy?: LazyRouteFunction<AgnosticBaseRouteObject>;\n};\n\n/**\n * Index routes must not have children\n */\nexport type AgnosticIndexRouteObject = AgnosticBaseRouteObject & {\n  children?: undefined;\n  index: true;\n};\n\n/**\n * Non-index routes may have children, but cannot have index\n */\nexport type AgnosticNonIndexRouteObject = AgnosticBaseRouteObject & {\n  children?: AgnosticRouteObject[];\n  index?: false;\n};\n\n/**\n * A route object represents a logical route, with (optionally) its child\n * routes organized in a tree-like structure.\n */\nexport type AgnosticRouteObject =\n  | AgnosticIndexRouteObject\n  | AgnosticNonIndexRouteObject;\n\nexport type AgnosticDataIndexRouteObject = AgnosticIndexRouteObject & {\n  id: string;\n};\n\nexport type AgnosticDataNonIndexRouteObject = AgnosticNonIndexRouteObject & {\n  children?: AgnosticDataRouteObject[];\n  id: string;\n};\n\n/**\n * A data route object, which is just a RouteObject with a required unique ID\n */\nexport type AgnosticDataRouteObject =\n  | AgnosticDataIndexRouteObject\n  | AgnosticDataNonIndexRouteObject;\n\nexport type RouteManifest = Record<string, AgnosticDataRouteObject | undefined>;\n\n// Recursive helper for finding path parameters in the absence of wildcards\ntype _PathParam<Path extends string> =\n  // split path into individual path segments\n  Path extends `${infer L}/${infer R}`\n    ? _PathParam<L> | _PathParam<R>\n    : // find params after `:`\n    Path extends `:${infer Param}`\n    ? Param extends `${infer Optional}?`\n      ? Optional\n      : Param\n    : // otherwise, there aren't any params present\n      never;\n\n/**\n * Examples:\n * \"/a/b/*\" -> \"*\"\n * \":a\" -> \"a\"\n * \"/a/:b\" -> \"b\"\n * \"/a/blahblahblah:b\" -> \"b\"\n * \"/:a/:b\" -> \"a\" | \"b\"\n * \"/:a/b/:c/*\" -> \"a\" | \"c\" | \"*\"\n */\ntype PathParam<Path extends string> =\n  // check if path is just a wildcard\n  Path extends \"*\" | \"/*\"\n    ? \"*\"\n    : // look for wildcard at the end of the path\n    Path extends `${infer Rest}/*`\n    ? \"*\" | _PathParam<Rest>\n    : // look for params in the absence of wildcards\n      _PathParam<Path>;\n\n// Attempt to parse the given string segment. If it fails, then just return the\n// plain string type as a default fallback. Otherwise, return the union of the\n// parsed string literals that were referenced as dynamic segments in the route.\nexport type ParamParseKey<Segment extends string> =\n  // if you could not find path params, fallback to `string`\n  [PathParam<Segment>] extends [never] ? string : PathParam<Segment>;\n\n/**\n * The parameters that were parsed from the URL path.\n */\nexport type Params<Key extends string = string> = {\n  readonly [key in Key]: string | undefined;\n};\n\n/**\n * A RouteMatch contains info about how a route matched a URL.\n */\nexport interface AgnosticRouteMatch<\n  ParamKey extends string = string,\n  RouteObjectType extends AgnosticRouteObject = AgnosticRouteObject\n> {\n  /**\n   * The names and values of dynamic parameters in the URL.\n   */\n  params: Params<ParamKey>;\n  /**\n   * The portion of the URL pathname that was matched.\n   */\n  pathname: string;\n  /**\n   * The portion of the URL pathname that was matched before child routes.\n   */\n  pathnameBase: string;\n  /**\n   * The route object that was used to match.\n   */\n  route: RouteObjectType;\n}\n\nexport interface AgnosticDataRouteMatch\n  extends AgnosticRouteMatch<string, AgnosticDataRouteObject> {}\n\nfunction isIndexRoute(\n  route: AgnosticRouteObject\n): route is AgnosticIndexRouteObject {\n  return route.index === true;\n}\n\n// Walk the route tree generating unique IDs where necessary, so we are working\n// solely with AgnosticDataRouteObject's within the Router\nexport function convertRoutesToDataRoutes(\n  routes: AgnosticRouteObject[],\n  mapRouteProperties: MapRoutePropertiesFunction,\n  parentPath: number[] = [],\n  manifest: RouteManifest = {}\n): AgnosticDataRouteObject[] {\n  return routes.map((route, index) => {\n    let treePath = [...parentPath, index];\n    let id = typeof route.id === \"string\" ? route.id : treePath.join(\"-\");\n    invariant(\n      route.index !== true || !route.children,\n      `Cannot specify children on an index route`\n    );\n    invariant(\n      !manifest[id],\n      `Found a route id collision on id \"${id}\".  Route ` +\n        \"id's must be globally unique within Data Router usages\"\n    );\n\n    if (isIndexRoute(route)) {\n      let indexRoute: AgnosticDataIndexRouteObject = {\n        ...route,\n        ...mapRouteProperties(route),\n        id,\n      };\n      manifest[id] = indexRoute;\n      return indexRoute;\n    } else {\n      let pathOrLayoutRoute: AgnosticDataNonIndexRouteObject = {\n        ...route,\n        ...mapRouteProperties(route),\n        id,\n        children: undefined,\n      };\n      manifest[id] = pathOrLayoutRoute;\n\n      if (route.children) {\n        pathOrLayoutRoute.children = convertRoutesToDataRoutes(\n          route.children,\n          mapRouteProperties,\n          treePath,\n          manifest\n        );\n      }\n\n      return pathOrLayoutRoute;\n    }\n  });\n}\n\n/**\n * Matches the given routes to a location and returns the match data.\n *\n * @see https://reactrouter.com/utils/match-routes\n */\nexport function matchRoutes<\n  RouteObjectType extends AgnosticRouteObject = AgnosticRouteObject\n>(\n  routes: RouteObjectType[],\n  locationArg: Partial<Location> | string,\n  basename = \"/\"\n): AgnosticRouteMatch<string, RouteObjectType>[] | null {\n  let location =\n    typeof locationArg === \"string\" ? parsePath(locationArg) : locationArg;\n\n  let pathname = stripBasename(location.pathname || \"/\", basename);\n\n  if (pathname == null) {\n    return null;\n  }\n\n  let branches = flattenRoutes(routes);\n  rankRouteBranches(branches);\n\n  let matches = null;\n  for (let i = 0; matches == null && i < branches.length; ++i) {\n    matches = matchRouteBranch<string, RouteObjectType>(\n      branches[i],\n      // Incoming pathnames are generally encoded from either window.location\n      // or from router.navigate, but we want to match against the unencoded\n      // paths in the route definitions.  Memory router locations won't be\n      // encoded here but there also shouldn't be anything to decode so this\n      // should be a safe operation.  This avoids needing matchRoutes to be\n      // history-aware.\n      safelyDecodeURI(pathname)\n    );\n  }\n\n  return matches;\n}\n\nexport interface UIMatch<Data = unknown, Handle = unknown> {\n  id: string;\n  pathname: string;\n  params: AgnosticRouteMatch[\"params\"];\n  data: Data;\n  handle: Handle;\n}\n\nexport function convertRouteMatchToUiMatch(\n  match: AgnosticDataRouteMatch,\n  loaderData: RouteData\n): UIMatch {\n  let { route, pathname, params } = match;\n  return {\n    id: route.id,\n    pathname,\n    params,\n    data: loaderData[route.id],\n    handle: route.handle,\n  };\n}\n\ninterface RouteMeta<\n  RouteObjectType extends AgnosticRouteObject = AgnosticRouteObject\n> {\n  relativePath: string;\n  caseSensitive: boolean;\n  childrenIndex: number;\n  route: RouteObjectType;\n}\n\ninterface RouteBranch<\n  RouteObjectType extends AgnosticRouteObject = AgnosticRouteObject\n> {\n  path: string;\n  score: number;\n  routesMeta: RouteMeta<RouteObjectType>[];\n}\n\nfunction flattenRoutes<\n  RouteObjectType extends AgnosticRouteObject = AgnosticRouteObject\n>(\n  routes: RouteObjectType[],\n  branches: RouteBranch<RouteObjectType>[] = [],\n  parentsMeta: RouteMeta<RouteObjectType>[] = [],\n  parentPath = \"\"\n): RouteBranch<RouteObjectType>[] {\n  let flattenRoute = (\n    route: RouteObjectType,\n    index: number,\n    relativePath?: string\n  ) => {\n    let meta: RouteMeta<RouteObjectType> = {\n      relativePath:\n        relativePath === undefined ? route.path || \"\" : relativePath,\n      caseSensitive: route.caseSensitive === true,\n      childrenIndex: index,\n      route,\n    };\n\n    if (meta.relativePath.startsWith(\"/\")) {\n      invariant(\n        meta.relativePath.startsWith(parentPath),\n        `Absolute route path \"${meta.relativePath}\" nested under path ` +\n          `\"${parentPath}\" is not valid. An absolute child route path ` +\n          `must start with the combined path of all its parent routes.`\n      );\n\n      meta.relativePath = meta.relativePath.slice(parentPath.length);\n    }\n\n    let path = joinPaths([parentPath, meta.relativePath]);\n    let routesMeta = parentsMeta.concat(meta);\n\n    // Add the children before adding this route to the array, so we traverse the\n    // route tree depth-first and child routes appear before their parents in\n    // the \"flattened\" version.\n    if (route.children && route.children.length > 0) {\n      invariant(\n        // Our types know better, but runtime JS may not!\n        // @ts-expect-error\n        route.index !== true,\n        `Index routes must not have child routes. Please remove ` +\n          `all child routes from route path \"${path}\".`\n      );\n\n      flattenRoutes(route.children, branches, routesMeta, path);\n    }\n\n    // Routes without a path shouldn't ever match by themselves unless they are\n    // index routes, so don't add them to the list of possible branches.\n    if (route.path == null && !route.index) {\n      return;\n    }\n\n    branches.push({\n      path,\n      score: computeScore(path, route.index),\n      routesMeta,\n    });\n  };\n  routes.forEach((route, index) => {\n    // coarse-grain check for optional params\n    if (route.path === \"\" || !route.path?.includes(\"?\")) {\n      flattenRoute(route, index);\n    } else {\n      for (let exploded of explodeOptionalSegments(route.path)) {\n        flattenRoute(route, index, exploded);\n      }\n    }\n  });\n\n  return branches;\n}\n\n/**\n * Computes all combinations of optional path segments for a given path,\n * excluding combinations that are ambiguous and of lower priority.\n *\n * For example, `/one/:two?/three/:four?/:five?` explodes to:\n * - `/one/three`\n * - `/one/:two/three`\n * - `/one/three/:four`\n * - `/one/three/:five`\n * - `/one/:two/three/:four`\n * - `/one/:two/three/:five`\n * - `/one/three/:four/:five`\n * - `/one/:two/three/:four/:five`\n */\nfunction explodeOptionalSegments(path: string): string[] {\n  let segments = path.split(\"/\");\n  if (segments.length === 0) return [];\n\n  let [first, ...rest] = segments;\n\n  // Optional path segments are denoted by a trailing `?`\n  let isOptional = first.endsWith(\"?\");\n  // Compute the corresponding required segment: `foo?` -> `foo`\n  let required = first.replace(/\\?$/, \"\");\n\n  if (rest.length === 0) {\n    // Intepret empty string as omitting an optional segment\n    // `[\"one\", \"\", \"three\"]` corresponds to omitting `:two` from `/one/:two?/three` -> `/one/three`\n    return isOptional ? [required, \"\"] : [required];\n  }\n\n  let restExploded = explodeOptionalSegments(rest.join(\"/\"));\n\n  let result: string[] = [];\n\n  // All child paths with the prefix.  Do this for all children before the\n  // optional version for all children, so we get consistent ordering where the\n  // parent optional aspect is preferred as required.  Otherwise, we can get\n  // child sections interspersed where deeper optional segments are higher than\n  // parent optional segments, where for example, /:two would explode _earlier_\n  // then /:one.  By always including the parent as required _for all children_\n  // first, we avoid this issue\n  result.push(\n    ...restExploded.map((subpath) =>\n      subpath === \"\" ? required : [required, subpath].join(\"/\")\n    )\n  );\n\n  // Then, if this is an optional value, add all child versions without\n  if (isOptional) {\n    result.push(...restExploded);\n  }\n\n  // for absolute paths, ensure `/` instead of empty segment\n  return result.map((exploded) =>\n    path.startsWith(\"/\") && exploded === \"\" ? \"/\" : exploded\n  );\n}\n\nfunction rankRouteBranches(branches: RouteBranch[]): void {\n  branches.sort((a, b) =>\n    a.score !== b.score\n      ? b.score - a.score // Higher score first\n      : compareIndexes(\n          a.routesMeta.map((meta) => meta.childrenIndex),\n          b.routesMeta.map((meta) => meta.childrenIndex)\n        )\n  );\n}\n\nconst paramRe = /^:\\w+$/;\nconst dynamicSegmentValue = 3;\nconst indexRouteValue = 2;\nconst emptySegmentValue = 1;\nconst staticSegmentValue = 10;\nconst splatPenalty = -2;\nconst isSplat = (s: string) => s === \"*\";\n\nfunction computeScore(path: string, index: boolean | undefined): number {\n  let segments = path.split(\"/\");\n  let initialScore = segments.length;\n  if (segments.some(isSplat)) {\n    initialScore += splatPenalty;\n  }\n\n  if (index) {\n    initialScore += indexRouteValue;\n  }\n\n  return segments\n    .filter((s) => !isSplat(s))\n    .reduce(\n      (score, segment) =>\n        score +\n        (paramRe.test(segment)\n          ? dynamicSegmentValue\n          : segment === \"\"\n          ? emptySegmentValue\n          : staticSegmentValue),\n      initialScore\n    );\n}\n\nfunction compareIndexes(a: number[], b: number[]): number {\n  let siblings =\n    a.length === b.length && a.slice(0, -1).every((n, i) => n === b[i]);\n\n  return siblings\n    ? // If two routes are siblings, we should try to match the earlier sibling\n      // first. This allows people to have fine-grained control over the matching\n      // behavior by simply putting routes with identical paths in the order they\n      // want them tried.\n      a[a.length - 1] - b[b.length - 1]\n    : // Otherwise, it doesn't really make sense to rank non-siblings by index,\n      // so they sort equally.\n      0;\n}\n\nfunction matchRouteBranch<\n  ParamKey extends string = string,\n  RouteObjectType extends AgnosticRouteObject = AgnosticRouteObject\n>(\n  branch: RouteBranch<RouteObjectType>,\n  pathname: string\n): AgnosticRouteMatch<ParamKey, RouteObjectType>[] | null {\n  let { routesMeta } = branch;\n\n  let matchedParams = {};\n  let matchedPathname = \"/\";\n  let matches: AgnosticRouteMatch<ParamKey, RouteObjectType>[] = [];\n  for (let i = 0; i < routesMeta.length; ++i) {\n    let meta = routesMeta[i];\n    let end = i === routesMeta.length - 1;\n    let remainingPathname =\n      matchedPathname === \"/\"\n        ? pathname\n        : pathname.slice(matchedPathname.length) || \"/\";\n    let match = matchPath(\n      { path: meta.relativePath, caseSensitive: meta.caseSensitive, end },\n      remainingPathname\n    );\n\n    if (!match) return null;\n\n    Object.assign(matchedParams, match.params);\n\n    let route = meta.route;\n\n    matches.push({\n      // TODO: Can this as be avoided?\n      params: matchedParams as Params<ParamKey>,\n      pathname: joinPaths([matchedPathname, match.pathname]),\n      pathnameBase: normalizePathname(\n        joinPaths([matchedPathname, match.pathnameBase])\n      ),\n      route,\n    });\n\n    if (match.pathnameBase !== \"/\") {\n      matchedPathname = joinPaths([matchedPathname, match.pathnameBase]);\n    }\n  }\n\n  return matches;\n}\n\n/**\n * Returns a path with params interpolated.\n *\n * @see https://reactrouter.com/utils/generate-path\n */\nexport function generatePath<Path extends string>(\n  originalPath: Path,\n  params: {\n    [key in PathParam<Path>]: string | null;\n  } = {} as any\n): string {\n  let path: string = originalPath;\n  if (path.endsWith(\"*\") && path !== \"*\" && !path.endsWith(\"/*\")) {\n    warning(\n      false,\n      `Route path \"${path}\" will be treated as if it were ` +\n        `\"${path.replace(/\\*$/, \"/*\")}\" because the \\`*\\` character must ` +\n        `always follow a \\`/\\` in the pattern. To get rid of this warning, ` +\n        `please change the route path to \"${path.replace(/\\*$/, \"/*\")}\".`\n    );\n    path = path.replace(/\\*$/, \"/*\") as Path;\n  }\n\n  // ensure `/` is added at the beginning if the path is absolute\n  const prefix = path.startsWith(\"/\") ? \"/\" : \"\";\n\n  const stringify = (p: any) =>\n    p == null ? \"\" : typeof p === \"string\" ? p : String(p);\n\n  const segments = path\n    .split(/\\/+/)\n    .map((segment, index, array) => {\n      const isLastSegment = index === array.length - 1;\n\n      // only apply the splat if it's the last segment\n      if (isLastSegment && segment === \"*\") {\n        const star = \"*\" as PathParam<Path>;\n        // Apply the splat\n        return stringify(params[star]);\n      }\n\n      const keyMatch = segment.match(/^:(\\w+)(\\??)$/);\n      if (keyMatch) {\n        const [, key, optional] = keyMatch;\n        let param = params[key as PathParam<Path>];\n        invariant(optional === \"?\" || param != null, `Missing \":${key}\" param`);\n        return stringify(param);\n      }\n\n      // Remove any optional markers from optional static segments\n      return segment.replace(/\\?$/g, \"\");\n    })\n    // Remove empty segments\n    .filter((segment) => !!segment);\n\n  return prefix + segments.join(\"/\");\n}\n\n/**\n * A PathPattern is used to match on some portion of a URL pathname.\n */\nexport interface PathPattern<Path extends string = string> {\n  /**\n   * A string to match against a URL pathname. May contain `:id`-style segments\n   * to indicate placeholders for dynamic parameters. May also end with `/*` to\n   * indicate matching the rest of the URL pathname.\n   */\n  path: Path;\n  /**\n   * Should be `true` if the static portions of the `path` should be matched in\n   * the same case.\n   */\n  caseSensitive?: boolean;\n  /**\n   * Should be `true` if this pattern should match the entire URL pathname.\n   */\n  end?: boolean;\n}\n\n/**\n * A PathMatch contains info about how a PathPattern matched on a URL pathname.\n */\nexport interface PathMatch<ParamKey extends string = string> {\n  /**\n   * The names and values of dynamic parameters in the URL.\n   */\n  params: Params<ParamKey>;\n  /**\n   * The portion of the URL pathname that was matched.\n   */\n  pathname: string;\n  /**\n   * The portion of the URL pathname that was matched before child routes.\n   */\n  pathnameBase: string;\n  /**\n   * The pattern that was used to match.\n   */\n  pattern: PathPattern;\n}\n\ntype Mutable<T> = {\n  -readonly [P in keyof T]: T[P];\n};\n\n/**\n * Performs pattern matching on a URL pathname and returns information about\n * the match.\n *\n * @see https://reactrouter.com/utils/match-path\n */\nexport function matchPath<\n  ParamKey extends ParamParseKey<Path>,\n  Path extends string\n>(\n  pattern: PathPattern<Path> | Path,\n  pathname: string\n): PathMatch<ParamKey> | null {\n  if (typeof pattern === \"string\") {\n    pattern = { path: pattern, caseSensitive: false, end: true };\n  }\n\n  let [matcher, compiledParams] = compilePath(\n    pattern.path,\n    pattern.caseSensitive,\n    pattern.end\n  );\n\n  let match = pathname.match(matcher);\n  if (!match) return null;\n\n  let matchedPathname = match[0];\n  let pathnameBase = matchedPathname.replace(/(.)\\/+$/, \"$1\");\n  let captureGroups = match.slice(1);\n  let params: Params = compiledParams.reduce<Mutable<Params>>(\n    (memo, { paramName, isOptional }, index) => {\n      // We need to compute the pathnameBase here using the raw splat value\n      // instead of using params[\"*\"] later because it will be decoded then\n      if (paramName === \"*\") {\n        let splatValue = captureGroups[index] || \"\";\n        pathnameBase = matchedPathname\n          .slice(0, matchedPathname.length - splatValue.length)\n          .replace(/(.)\\/+$/, \"$1\");\n      }\n\n      const value = captureGroups[index];\n      if (isOptional && !value) {\n        memo[paramName] = undefined;\n      } else {\n        memo[paramName] = safelyDecodeURIComponent(value || \"\", paramName);\n      }\n      return memo;\n    },\n    {}\n  );\n\n  return {\n    params,\n    pathname: matchedPathname,\n    pathnameBase,\n    pattern,\n  };\n}\n\ntype CompiledPathParam = { paramName: string; isOptional?: boolean };\n\nfunction compilePath(\n  path: string,\n  caseSensitive = false,\n  end = true\n): [RegExp, CompiledPathParam[]] {\n  warning(\n    path === \"*\" || !path.endsWith(\"*\") || path.endsWith(\"/*\"),\n    `Route path \"${path}\" will be treated as if it were ` +\n      `\"${path.replace(/\\*$/, \"/*\")}\" because the \\`*\\` character must ` +\n      `always follow a \\`/\\` in the pattern. To get rid of this warning, ` +\n      `please change the route path to \"${path.replace(/\\*$/, \"/*\")}\".`\n  );\n\n  let params: CompiledPathParam[] = [];\n  let regexpSource =\n    \"^\" +\n    path\n      .replace(/\\/*\\*?$/, \"\") // Ignore trailing / and /*, we'll handle it below\n      .replace(/^\\/*/, \"/\") // Make sure it has a leading /\n      .replace(/[\\\\.*+^${}|()[\\]]/g, \"\\\\$&\") // Escape special regex chars\n      .replace(/\\/:(\\w+)(\\?)?/g, (_: string, paramName: string, isOptional) => {\n        params.push({ paramName, isOptional: isOptional != null });\n        return isOptional ? \"/?([^\\\\/]+)?\" : \"/([^\\\\/]+)\";\n      });\n\n  if (path.endsWith(\"*\")) {\n    params.push({ paramName: \"*\" });\n    regexpSource +=\n      path === \"*\" || path === \"/*\"\n        ? \"(.*)$\" // Already matched the initial /, just match the rest\n        : \"(?:\\\\/(.+)|\\\\/*)$\"; // Don't include the / in params[\"*\"]\n  } else if (end) {\n    // When matching to the end, ignore trailing slashes\n    regexpSource += \"\\\\/*$\";\n  } else if (path !== \"\" && path !== \"/\") {\n    // If our path is non-empty and contains anything beyond an initial slash,\n    // then we have _some_ form of path in our regex, so we should expect to\n    // match only if we find the end of this path segment.  Look for an optional\n    // non-captured trailing slash (to match a portion of the URL) or the end\n    // of the path (if we've matched to the end).  We used to do this with a\n    // word boundary but that gives false positives on routes like\n    // /user-preferences since `-` counts as a word boundary.\n    regexpSource += \"(?:(?=\\\\/|$))\";\n  } else {\n    // Nothing to match for \"\" or \"/\"\n  }\n\n  let matcher = new RegExp(regexpSource, caseSensitive ? undefined : \"i\");\n\n  return [matcher, params];\n}\n\nfunction safelyDecodeURI(value: string) {\n  try {\n    return decodeURI(value);\n  } catch (error) {\n    warning(\n      false,\n      `The URL path \"${value}\" could not be decoded because it is is a ` +\n        `malformed URL segment. This is probably due to a bad percent ` +\n        `encoding (${error}).`\n    );\n\n    return value;\n  }\n}\n\nfunction safelyDecodeURIComponent(value: string, paramName: string) {\n  try {\n    return decodeURIComponent(value);\n  } catch (error) {\n    warning(\n      false,\n      `The value for the URL param \"${paramName}\" will not be decoded because` +\n        ` the string \"${value}\" is a malformed URL segment. This is probably` +\n        ` due to a bad percent encoding (${error}).`\n    );\n\n    return value;\n  }\n}\n\n/**\n * @private\n */\nexport function stripBasename(\n  pathname: string,\n  basename: string\n): string | null {\n  if (basename === \"/\") return pathname;\n\n  if (!pathname.toLowerCase().startsWith(basename.toLowerCase())) {\n    return null;\n  }\n\n  // We want to leave trailing slash behavior in the user's control, so if they\n  // specify a basename with a trailing slash, we should support it\n  let startIndex = basename.endsWith(\"/\")\n    ? basename.length - 1\n    : basename.length;\n  let nextChar = pathname.charAt(startIndex);\n  if (nextChar && nextChar !== \"/\") {\n    // pathname does not start with basename/\n    return null;\n  }\n\n  return pathname.slice(startIndex) || \"/\";\n}\n\n/**\n * Returns a resolved path object relative to the given pathname.\n *\n * @see https://reactrouter.com/utils/resolve-path\n */\nexport function resolvePath(to: To, fromPathname = \"/\"): Path {\n  let {\n    pathname: toPathname,\n    search = \"\",\n    hash = \"\",\n  } = typeof to === \"string\" ? parsePath(to) : to;\n\n  let pathname = toPathname\n    ? toPathname.startsWith(\"/\")\n      ? toPathname\n      : resolvePathname(toPathname, fromPathname)\n    : fromPathname;\n\n  return {\n    pathname,\n    search: normalizeSearch(search),\n    hash: normalizeHash(hash),\n  };\n}\n\nfunction resolvePathname(relativePath: string, fromPathname: string): string {\n  let segments = fromPathname.replace(/\\/+$/, \"\").split(\"/\");\n  let relativeSegments = relativePath.split(\"/\");\n\n  relativeSegments.forEach((segment) => {\n    if (segment === \"..\") {\n      // Keep the root \"\" segment so the pathname starts at /\n      if (segments.length > 1) segments.pop();\n    } else if (segment !== \".\") {\n      segments.push(segment);\n    }\n  });\n\n  return segments.length > 1 ? segments.join(\"/\") : \"/\";\n}\n\nfunction getInvalidPathError(\n  char: string,\n  field: string,\n  dest: string,\n  path: Partial<Path>\n) {\n  return (\n    `Cannot include a '${char}' character in a manually specified ` +\n    `\\`to.${field}\\` field [${JSON.stringify(\n      path\n    )}].  Please separate it out to the ` +\n    `\\`to.${dest}\\` field. Alternatively you may provide the full path as ` +\n    `a string in <Link to=\"...\"> and the router will parse it for you.`\n  );\n}\n\n/**\n * @private\n *\n * When processing relative navigation we want to ignore ancestor routes that\n * do not contribute to the path, such that index/pathless layout routes don't\n * interfere.\n *\n * For example, when moving a route element into an index route and/or a\n * pathless layout route, relative link behavior contained within should stay\n * the same.  Both of the following examples should link back to the root:\n *\n *   <Route path=\"/\">\n *     <Route path=\"accounts\" element={<Link to=\"..\"}>\n *   </Route>\n *\n *   <Route path=\"/\">\n *     <Route path=\"accounts\">\n *       <Route element={<AccountsLayout />}>       // <-- Does not contribute\n *         <Route index element={<Link to=\"..\"} />  // <-- Does not contribute\n *       </Route\n *     </Route>\n *   </Route>\n */\nexport function getPathContributingMatches<\n  T extends AgnosticRouteMatch = AgnosticRouteMatch\n>(matches: T[]) {\n  return matches.filter(\n    (match, index) =>\n      index === 0 || (match.route.path && match.route.path.length > 0)\n  );\n}\n\n/**\n * @private\n */\nexport function resolveTo(\n  toArg: To,\n  routePathnames: string[],\n  locationPathname: string,\n  isPathRelative = false\n): Path {\n  let to: Partial<Path>;\n  if (typeof toArg === \"string\") {\n    to = parsePath(toArg);\n  } else {\n    to = { ...toArg };\n\n    invariant(\n      !to.pathname || !to.pathname.includes(\"?\"),\n      getInvalidPathError(\"?\", \"pathname\", \"search\", to)\n    );\n    invariant(\n      !to.pathname || !to.pathname.includes(\"#\"),\n      getInvalidPathError(\"#\", \"pathname\", \"hash\", to)\n    );\n    invariant(\n      !to.search || !to.search.includes(\"#\"),\n      getInvalidPathError(\"#\", \"search\", \"hash\", to)\n    );\n  }\n\n  let isEmptyPath = toArg === \"\" || to.pathname === \"\";\n  let toPathname = isEmptyPath ? \"/\" : to.pathname;\n\n  let from: string;\n\n  // Routing is relative to the current pathname if explicitly requested.\n  //\n  // If a pathname is explicitly provided in `to`, it should be relative to the\n  // route context. This is explained in `Note on `<Link to>` values` in our\n  // migration guide from v5 as a means of disambiguation between `to` values\n  // that begin with `/` and those that do not. However, this is problematic for\n  // `to` values that do not provide a pathname. `to` can simply be a search or\n  // hash string, in which case we should assume that the navigation is relative\n  // to the current location's pathname and *not* the route pathname.\n  if (isPathRelative || toPathname == null) {\n    from = locationPathname;\n  } else {\n    let routePathnameIndex = routePathnames.length - 1;\n\n    if (toPathname.startsWith(\"..\")) {\n      let toSegments = toPathname.split(\"/\");\n\n      // Each leading .. segment means \"go up one route\" instead of \"go up one\n      // URL segment\".  This is a key difference from how <a href> works and a\n      // major reason we call this a \"to\" value instead of a \"href\".\n      while (toSegments[0] === \"..\") {\n        toSegments.shift();\n        routePathnameIndex -= 1;\n      }\n\n      to.pathname = toSegments.join(\"/\");\n    }\n\n    // If there are more \"..\" segments than parent routes, resolve relative to\n    // the root / URL.\n    from = routePathnameIndex >= 0 ? routePathnames[routePathnameIndex] : \"/\";\n  }\n\n  let path = resolvePath(to, from);\n\n  // Ensure the pathname has a trailing slash if the original \"to\" had one\n  let hasExplicitTrailingSlash =\n    toPathname && toPathname !== \"/\" && toPathname.endsWith(\"/\");\n  // Or if this was a link to the current path which has a trailing slash\n  let hasCurrentTrailingSlash =\n    (isEmptyPath || toPathname === \".\") && locationPathname.endsWith(\"/\");\n  if (\n    !path.pathname.endsWith(\"/\") &&\n    (hasExplicitTrailingSlash || hasCurrentTrailingSlash)\n  ) {\n    path.pathname += \"/\";\n  }\n\n  return path;\n}\n\n/**\n * @private\n */\nexport function getToPathname(to: To): string | undefined {\n  // Empty strings should be treated the same as / paths\n  return to === \"\" || (to as Path).pathname === \"\"\n    ? \"/\"\n    : typeof to === \"string\"\n    ? parsePath(to).pathname\n    : to.pathname;\n}\n\n/**\n * @private\n */\nexport const joinPaths = (paths: string[]): string =>\n  paths.join(\"/\").replace(/\\/\\/+/g, \"/\");\n\n/**\n * @private\n */\nexport const normalizePathname = (pathname: string): string =>\n  pathname.replace(/\\/+$/, \"\").replace(/^\\/*/, \"/\");\n\n/**\n * @private\n */\nexport const normalizeSearch = (search: string): string =>\n  !search || search === \"?\"\n    ? \"\"\n    : search.startsWith(\"?\")\n    ? search\n    : \"?\" + search;\n\n/**\n * @private\n */\nexport const normalizeHash = (hash: string): string =>\n  !hash || hash === \"#\" ? \"\" : hash.startsWith(\"#\") ? hash : \"#\" + hash;\n\nexport type JsonFunction = <Data>(\n  data: Data,\n  init?: number | ResponseInit\n) => Response;\n\n/**\n * This is a shortcut for creating `application/json` responses. Converts `data`\n * to JSON and sets the `Content-Type` header.\n */\nexport const json: JsonFunction = (data, init = {}) => {\n  let responseInit = typeof init === \"number\" ? { status: init } : init;\n\n  let headers = new Headers(responseInit.headers);\n  if (!headers.has(\"Content-Type\")) {\n    headers.set(\"Content-Type\", \"application/json; charset=utf-8\");\n  }\n\n  return new Response(JSON.stringify(data), {\n    ...responseInit,\n    headers,\n  });\n};\n\nexport interface TrackedPromise extends Promise<any> {\n  _tracked?: boolean;\n  _data?: any;\n  _error?: any;\n}\n\nexport class AbortedDeferredError extends Error {}\n\nexport class DeferredData {\n  private pendingKeysSet: Set<string> = new Set<string>();\n  private controller: AbortController;\n  private abortPromise: Promise<void>;\n  private unlistenAbortSignal: () => void;\n  private subscribers: Set<(aborted: boolean, settledKey?: string) => void> =\n    new Set();\n  data: Record<string, unknown>;\n  init?: ResponseInit;\n  deferredKeys: string[] = [];\n\n  constructor(data: Record<string, unknown>, responseInit?: ResponseInit) {\n    invariant(\n      data && typeof data === \"object\" && !Array.isArray(data),\n      \"defer() only accepts plain objects\"\n    );\n\n    // Set up an AbortController + Promise we can race against to exit early\n    // cancellation\n    let reject: (e: AbortedDeferredError) => void;\n    this.abortPromise = new Promise((_, r) => (reject = r));\n    this.controller = new AbortController();\n    let onAbort = () =>\n      reject(new AbortedDeferredError(\"Deferred data aborted\"));\n    this.unlistenAbortSignal = () =>\n      this.controller.signal.removeEventListener(\"abort\", onAbort);\n    this.controller.signal.addEventListener(\"abort\", onAbort);\n\n    this.data = Object.entries(data).reduce(\n      (acc, [key, value]) =>\n        Object.assign(acc, {\n          [key]: this.trackPromise(key, value),\n        }),\n      {}\n    );\n\n    if (this.done) {\n      // All incoming values were resolved\n      this.unlistenAbortSignal();\n    }\n\n    this.init = responseInit;\n  }\n\n  private trackPromise(\n    key: string,\n    value: Promise<unknown> | unknown\n  ): TrackedPromise | unknown {\n    if (!(value instanceof Promise)) {\n      return value;\n    }\n\n    this.deferredKeys.push(key);\n    this.pendingKeysSet.add(key);\n\n    // We store a little wrapper promise that will be extended with\n    // _data/_error props upon resolve/reject\n    let promise: TrackedPromise = Promise.race([value, this.abortPromise]).then(\n      (data) => this.onSettle(promise, key, undefined, data as unknown),\n      (error) => this.onSettle(promise, key, error as unknown)\n    );\n\n    // Register rejection listeners to avoid uncaught promise rejections on\n    // errors or aborted deferred values\n    promise.catch(() => {});\n\n    Object.defineProperty(promise, \"_tracked\", { get: () => true });\n    return promise;\n  }\n\n  private onSettle(\n    promise: TrackedPromise,\n    key: string,\n    error: unknown,\n    data?: unknown\n  ): unknown {\n    if (\n      this.controller.signal.aborted &&\n      error instanceof AbortedDeferredError\n    ) {\n      this.unlistenAbortSignal();\n      Object.defineProperty(promise, \"_error\", { get: () => error });\n      return Promise.reject(error);\n    }\n\n    this.pendingKeysSet.delete(key);\n\n    if (this.done) {\n      // Nothing left to abort!\n      this.unlistenAbortSignal();\n    }\n\n    // If the promise was resolved/rejected with undefined, we'll throw an error as you\n    // should always resolve with a value or null\n    if (error === undefined && data === undefined) {\n      let undefinedError = new Error(\n        `Deferred data for key \"${key}\" resolved/rejected with \\`undefined\\`, ` +\n          `you must resolve/reject with a value or \\`null\\`.`\n      );\n      Object.defineProperty(promise, \"_error\", { get: () => undefinedError });\n      this.emit(false, key);\n      return Promise.reject(undefinedError);\n    }\n\n    if (data === undefined) {\n      Object.defineProperty(promise, \"_error\", { get: () => error });\n      this.emit(false, key);\n      return Promise.reject(error);\n    }\n\n    Object.defineProperty(promise, \"_data\", { get: () => data });\n    this.emit(false, key);\n    return data;\n  }\n\n  private emit(aborted: boolean, settledKey?: string) {\n    this.subscribers.forEach((subscriber) => subscriber(aborted, settledKey));\n  }\n\n  subscribe(fn: (aborted: boolean, settledKey?: string) => void) {\n    this.subscribers.add(fn);\n    return () => this.subscribers.delete(fn);\n  }\n\n  cancel() {\n    this.controller.abort();\n    this.pendingKeysSet.forEach((v, k) => this.pendingKeysSet.delete(k));\n    this.emit(true);\n  }\n\n  async resolveData(signal: AbortSignal) {\n    let aborted = false;\n    if (!this.done) {\n      let onAbort = () => this.cancel();\n      signal.addEventListener(\"abort\", onAbort);\n      aborted = await new Promise((resolve) => {\n        this.subscribe((aborted) => {\n          signal.removeEventListener(\"abort\", onAbort);\n          if (aborted || this.done) {\n            resolve(aborted);\n          }\n        });\n      });\n    }\n    return aborted;\n  }\n\n  get done() {\n    return this.pendingKeysSet.size === 0;\n  }\n\n  get unwrappedData() {\n    invariant(\n      this.data !== null && this.done,\n      \"Can only unwrap data on initialized and settled deferreds\"\n    );\n\n    return Object.entries(this.data).reduce(\n      (acc, [key, value]) =>\n        Object.assign(acc, {\n          [key]: unwrapTrackedPromise(value),\n        }),\n      {}\n    );\n  }\n\n  get pendingKeys() {\n    return Array.from(this.pendingKeysSet);\n  }\n}\n\nfunction isTrackedPromise(value: any): value is TrackedPromise {\n  return (\n    value instanceof Promise && (value as TrackedPromise)._tracked === true\n  );\n}\n\nfunction unwrapTrackedPromise(value: any) {\n  if (!isTrackedPromise(value)) {\n    return value;\n  }\n\n  if (value._error) {\n    throw value._error;\n  }\n  return value._data;\n}\n\nexport type DeferFunction = (\n  data: Record<string, unknown>,\n  init?: number | ResponseInit\n) => DeferredData;\n\nexport const defer: DeferFunction = (data, init = {}) => {\n  let responseInit = typeof init === \"number\" ? { status: init } : init;\n\n  return new DeferredData(data, responseInit);\n};\n\nexport type RedirectFunction = (\n  url: string,\n  init?: number | ResponseInit\n) => Response;\n\n/**\n * A redirect response. Sets the status code and the `Location` header.\n * Defaults to \"302 Found\".\n */\nexport const redirect: RedirectFunction = (url, init = 302) => {\n  let responseInit = init;\n  if (typeof responseInit === \"number\") {\n    responseInit = { status: responseInit };\n  } else if (typeof responseInit.status === \"undefined\") {\n    responseInit.status = 302;\n  }\n\n  let headers = new Headers(responseInit.headers);\n  headers.set(\"Location\", url);\n\n  return new Response(null, {\n    ...responseInit,\n    headers,\n  });\n};\n\n/**\n * A redirect response that will force a document reload to the new location.\n * Sets the status code and the `Location` header.\n * Defaults to \"302 Found\".\n */\nexport const redirectDocument: RedirectFunction = (url, init) => {\n  let response = redirect(url, init);\n  response.headers.set(\"X-Remix-Reload-Document\", \"true\");\n  return response;\n};\n\nexport type ErrorResponse = {\n  status: number;\n  statusText: string;\n  data: any;\n};\n\n/**\n * @private\n * Utility class we use to hold auto-unwrapped 4xx/5xx Response bodies\n *\n * We don't export the class for public use since it's an implementation\n * detail, but we export the interface above so folks can build their own\n * abstractions around instances via isRouteErrorResponse()\n */\nexport class ErrorResponseImpl implements ErrorResponse {\n  status: number;\n  statusText: string;\n  data: any;\n  private error?: Error;\n  private internal: boolean;\n\n  constructor(\n    status: number,\n    statusText: string | undefined,\n    data: any,\n    internal = false\n  ) {\n    this.status = status;\n    this.statusText = statusText || \"\";\n    this.internal = internal;\n    if (data instanceof Error) {\n      this.data = data.toString();\n      this.error = data;\n    } else {\n      this.data = data;\n    }\n  }\n}\n\n/**\n * Check if the given error is an ErrorResponse generated from a 4xx/5xx\n * Response thrown from an action/loader\n */\nexport function isRouteErrorResponse(error: any): error is ErrorResponse {\n  return (\n    error != null &&\n    typeof error.status === \"number\" &&\n    typeof error.statusText === \"string\" &&\n    typeof error.internal === \"boolean\" &&\n    \"data\" in error\n  );\n}\n","import type { History, Location, Path, To } from \"./history\";\nimport {\n  Action as HistoryAction,\n  createLocation,\n  createPath,\n  invariant,\n  parsePath,\n  warning,\n} from \"./history\";\nimport type {\n  ActionFunction,\n  AgnosticDataRouteMatch,\n  AgnosticDataRouteObject,\n  AgnosticRouteObject,\n  DataResult,\n  DeferredData,\n  DeferredResult,\n  DetectErrorBoundaryFunction,\n  ErrorResult,\n  FormEncType,\n  FormMethod,\n  HTMLFormMethod,\n  ImmutableRouteKey,\n  LoaderFunction,\n  MapRoutePropertiesFunction,\n  MutationFormMethod,\n  RedirectResult,\n  RouteData,\n  RouteManifest,\n  ShouldRevalidateFunctionArgs,\n  Submission,\n  SuccessResult,\n  UIMatch,\n  V7_FormMethod,\n  V7_MutationFormMethod,\n} from \"./utils\";\nimport {\n  ErrorResponseImpl,\n  ResultType,\n  convertRouteMatchToUiMatch,\n  convertRoutesToDataRoutes,\n  getPathContributingMatches,\n  immutableRouteKeys,\n  isRouteErrorResponse,\n  joinPaths,\n  matchRoutes,\n  resolveTo,\n  stripBasename,\n} from \"./utils\";\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Types and Constants\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * A Router instance manages all navigation and data loading/mutations\n */\nexport interface Router {\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Return the basename for the router\n   */\n  get basename(): RouterInit[\"basename\"];\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Return the current state of the router\n   */\n  get state(): RouterState;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Return the routes for this router instance\n   */\n  get routes(): AgnosticDataRouteObject[];\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Return the window associated with the router\n   */\n  get window(): RouterInit[\"window\"];\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Initialize the router, including adding history listeners and kicking off\n   * initial data fetches.  Returns a function to cleanup listeners and abort\n   * any in-progress loads\n   */\n  initialize(): Router;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Subscribe to router.state updates\n   *\n   * @param fn function to call with the new state\n   */\n  subscribe(fn: RouterSubscriber): () => void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Enable scroll restoration behavior in the router\n   *\n   * @param savedScrollPositions Object that will manage positions, in case\n   *                             it's being restored from sessionStorage\n   * @param getScrollPosition    Function to get the active Y scroll position\n   * @param getKey               Function to get the key to use for restoration\n   */\n  enableScrollRestoration(\n    savedScrollPositions: Record<string, number>,\n    getScrollPosition: GetScrollPositionFunction,\n    getKey?: GetScrollRestorationKeyFunction\n  ): () => void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Navigate forward/backward in the history stack\n   * @param to Delta to move in the history stack\n   */\n  navigate(to: number): Promise<void>;\n\n  /**\n   * Navigate to the given path\n   * @param to Path to navigate to\n   * @param opts Navigation options (method, submission, etc.)\n   */\n  navigate(to: To | null, opts?: RouterNavigateOptions): Promise<void>;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Trigger a fetcher load/submission\n   *\n   * @param key     Fetcher key\n   * @param routeId Route that owns the fetcher\n   * @param href    href to fetch\n   * @param opts    Fetcher options, (method, submission, etc.)\n   */\n  fetch(\n    key: string,\n    routeId: string,\n    href: string | null,\n    opts?: RouterFetchOptions\n  ): void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Trigger a revalidation of all current route loaders and fetcher loads\n   */\n  revalidate(): void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Utility function to create an href for the given location\n   * @param location\n   */\n  createHref(location: Location | URL): string;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Utility function to URL encode a destination path according to the internal\n   * history implementation\n   * @param to\n   */\n  encodeLocation(to: To): Path;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Get/create a fetcher for the given key\n   * @param key\n   */\n  getFetcher<TData = any>(key: string): Fetcher<TData>;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Delete the fetcher for a given key\n   * @param key\n   */\n  deleteFetcher(key: string): void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Cleanup listeners and abort any in-progress loads\n   */\n  dispose(): void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Get a navigation blocker\n   * @param key The identifier for the blocker\n   * @param fn The blocker function implementation\n   */\n  getBlocker(key: string, fn: BlockerFunction): Blocker;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Delete a navigation blocker\n   * @param key The identifier for the blocker\n   */\n  deleteBlocker(key: string): void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * HMR needs to pass in-flight route updates to React Router\n   * TODO: Replace this with granular route update APIs (addRoute, updateRoute, deleteRoute)\n   */\n  _internalSetRoutes(routes: AgnosticRouteObject[]): void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Internal fetch AbortControllers accessed by unit tests\n   */\n  _internalFetchControllers: Map<string, AbortController>;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Internal pending DeferredData instances accessed by unit tests\n   */\n  _internalActiveDeferreds: Map<string, DeferredData>;\n}\n\n/**\n * State maintained internally by the router.  During a navigation, all states\n * reflect the the \"old\" location unless otherwise noted.\n */\nexport interface RouterState {\n  /**\n   * The action of the most recent navigation\n   */\n  historyAction: HistoryAction;\n\n  /**\n   * The current location reflected by the router\n   */\n  location: Location;\n\n  /**\n   * The current set of route matches\n   */\n  matches: AgnosticDataRouteMatch[];\n\n  /**\n   * Tracks whether we've completed our initial data load\n   */\n  initialized: boolean;\n\n  /**\n   * Current scroll position we should start at for a new view\n   *  - number -> scroll position to restore to\n   *  - false -> do not restore scroll at all (used during submissions)\n   *  - null -> don't have a saved position, scroll to hash or top of page\n   */\n  restoreScrollPosition: number | false | null;\n\n  /**\n   * Indicate whether this navigation should skip resetting the scroll position\n   * if we are unable to restore the scroll position\n   */\n  preventScrollReset: boolean;\n\n  /**\n   * Tracks the state of the current navigation\n   */\n  navigation: Navigation;\n\n  /**\n   * Tracks any in-progress revalidations\n   */\n  revalidation: RevalidationState;\n\n  /**\n   * Data from the loaders for the current matches\n   */\n  loaderData: RouteData;\n\n  /**\n   * Data from the action for the current matches\n   */\n  actionData: RouteData | null;\n\n  /**\n   * Errors caught from loaders for the current matches\n   */\n  errors: RouteData | null;\n\n  /**\n   * Map of current fetchers\n   */\n  fetchers: Map<string, Fetcher>;\n\n  /**\n   * Map of current blockers\n   */\n  blockers: Map<string, Blocker>;\n}\n\n/**\n * Data that can be passed into hydrate a Router from SSR\n */\nexport type HydrationState = Partial<\n  Pick<RouterState, \"loaderData\" | \"actionData\" | \"errors\">\n>;\n\n/**\n * Future flags to toggle new feature behavior\n */\nexport interface FutureConfig {\n  v7_fetcherPersist: boolean;\n  v7_normalizeFormMethod: boolean;\n  v7_prependBasename: boolean;\n}\n\n/**\n * Initialization options for createRouter\n */\nexport interface RouterInit {\n  routes: AgnosticRouteObject[];\n  history: History;\n  basename?: string;\n  /**\n   * @deprecated Use `mapRouteProperties` instead\n   */\n  detectErrorBoundary?: DetectErrorBoundaryFunction;\n  mapRouteProperties?: MapRoutePropertiesFunction;\n  future?: Partial<FutureConfig>;\n  hydrationData?: HydrationState;\n  window?: Window;\n}\n\n/**\n * State returned from a server-side query() call\n */\nexport interface StaticHandlerContext {\n  basename: Router[\"basename\"];\n  location: RouterState[\"location\"];\n  matches: RouterState[\"matches\"];\n  loaderData: RouterState[\"loaderData\"];\n  actionData: RouterState[\"actionData\"];\n  errors: RouterState[\"errors\"];\n  statusCode: number;\n  loaderHeaders: Record<string, Headers>;\n  actionHeaders: Record<string, Headers>;\n  activeDeferreds: Record<string, DeferredData> | null;\n  _deepestRenderedBoundaryId?: string | null;\n}\n\n/**\n * A StaticHandler instance manages a singular SSR navigation/fetch event\n */\nexport interface StaticHandler {\n  dataRoutes: AgnosticDataRouteObject[];\n  query(\n    request: Request,\n    opts?: { requestContext?: unknown }\n  ): Promise<StaticHandlerContext | Response>;\n  queryRoute(\n    request: Request,\n    opts?: { routeId?: string; requestContext?: unknown }\n  ): Promise<any>;\n}\n\ntype ViewTransitionOpts = {\n  currentLocation: Location;\n  nextLocation: Location;\n};\n\n/**\n * Subscriber function signature for changes to router state\n */\nexport interface RouterSubscriber {\n  (\n    state: RouterState,\n    opts: {\n      deletedFetchers: string[];\n      unstable_viewTransitionOpts?: ViewTransitionOpts;\n    }\n  ): void;\n}\n\n/**\n * Function signature for determining the key to be used in scroll restoration\n * for a given location\n */\nexport interface GetScrollRestorationKeyFunction {\n  (location: Location, matches: UIMatch[]): string | null;\n}\n\n/**\n * Function signature for determining the current scroll position\n */\nexport interface GetScrollPositionFunction {\n  (): number;\n}\n\nexport type RelativeRoutingType = \"route\" | \"path\";\n\n// Allowed for any navigation or fetch\ntype BaseNavigateOrFetchOptions = {\n  preventScrollReset?: boolean;\n  relative?: RelativeRoutingType;\n};\n\n// Only allowed for navigations\ntype BaseNavigateOptions = BaseNavigateOrFetchOptions & {\n  replace?: boolean;\n  state?: any;\n  fromRouteId?: string;\n  unstable_viewTransition?: boolean;\n};\n\n// Only allowed for submission navigations\ntype BaseSubmissionOptions = {\n  formMethod?: HTMLFormMethod;\n  formEncType?: FormEncType;\n} & (\n  | { formData: FormData; body?: undefined }\n  | { formData?: undefined; body: any }\n);\n\n/**\n * Options for a navigate() call for a normal (non-submission) navigation\n */\ntype LinkNavigateOptions = BaseNavigateOptions;\n\n/**\n * Options for a navigate() call for a submission navigation\n */\ntype SubmissionNavigateOptions = BaseNavigateOptions & BaseSubmissionOptions;\n\n/**\n * Options to pass to navigate() for a navigation\n */\nexport type RouterNavigateOptions =\n  | LinkNavigateOptions\n  | SubmissionNavigateOptions;\n\n/**\n * Options for a fetch() load\n */\ntype LoadFetchOptions = BaseNavigateOrFetchOptions;\n\n/**\n * Options for a fetch() submission\n */\ntype SubmitFetchOptions = BaseNavigateOrFetchOptions & BaseSubmissionOptions;\n\n/**\n * Options to pass to fetch()\n */\nexport type RouterFetchOptions = LoadFetchOptions | SubmitFetchOptions;\n\n/**\n * Potential states for state.navigation\n */\nexport type NavigationStates = {\n  Idle: {\n    state: \"idle\";\n    location: undefined;\n    formMethod: undefined;\n    formAction: undefined;\n    formEncType: undefined;\n    formData: undefined;\n    json: undefined;\n    text: undefined;\n  };\n  Loading: {\n    state: \"loading\";\n    location: Location;\n    formMethod: Submission[\"formMethod\"] | undefined;\n    formAction: Submission[\"formAction\"] | undefined;\n    formEncType: Submission[\"formEncType\"] | undefined;\n    formData: Submission[\"formData\"] | undefined;\n    json: Submission[\"json\"] | undefined;\n    text: Submission[\"text\"] | undefined;\n  };\n  Submitting: {\n    state: \"submitting\";\n    location: Location;\n    formMethod: Submission[\"formMethod\"];\n    formAction: Submission[\"formAction\"];\n    formEncType: Submission[\"formEncType\"];\n    formData: Submission[\"formData\"];\n    json: Submission[\"json\"];\n    text: Submission[\"text\"];\n  };\n};\n\nexport type Navigation = NavigationStates[keyof NavigationStates];\n\nexport type RevalidationState = \"idle\" | \"loading\";\n\n/**\n * Potential states for fetchers\n */\ntype FetcherStates<TData = any> = {\n  Idle: {\n    state: \"idle\";\n    formMethod: undefined;\n    formAction: undefined;\n    formEncType: undefined;\n    text: undefined;\n    formData: undefined;\n    json: undefined;\n    data: TData | undefined;\n  };\n  Loading: {\n    state: \"loading\";\n    formMethod: Submission[\"formMethod\"] | undefined;\n    formAction: Submission[\"formAction\"] | undefined;\n    formEncType: Submission[\"formEncType\"] | undefined;\n    text: Submission[\"text\"] | undefined;\n    formData: Submission[\"formData\"] | undefined;\n    json: Submission[\"json\"] | undefined;\n    data: TData | undefined;\n  };\n  Submitting: {\n    state: \"submitting\";\n    formMethod: Submission[\"formMethod\"];\n    formAction: Submission[\"formAction\"];\n    formEncType: Submission[\"formEncType\"];\n    text: Submission[\"text\"];\n    formData: Submission[\"formData\"];\n    json: Submission[\"json\"];\n    data: TData | undefined;\n  };\n};\n\nexport type Fetcher<TData = any> =\n  FetcherStates<TData>[keyof FetcherStates<TData>];\n\ninterface BlockerBlocked {\n  state: \"blocked\";\n  reset(): void;\n  proceed(): void;\n  location: Location;\n}\n\ninterface BlockerUnblocked {\n  state: \"unblocked\";\n  reset: undefined;\n  proceed: undefined;\n  location: undefined;\n}\n\ninterface BlockerProceeding {\n  state: \"proceeding\";\n  reset: undefined;\n  proceed: undefined;\n  location: Location;\n}\n\nexport type Blocker = BlockerUnblocked | BlockerBlocked | BlockerProceeding;\n\nexport type BlockerFunction = (args: {\n  currentLocation: Location;\n  nextLocation: Location;\n  historyAction: HistoryAction;\n}) => boolean;\n\ninterface ShortCircuitable {\n  /**\n   * startNavigation does not need to complete the navigation because we\n   * redirected or got interrupted\n   */\n  shortCircuited?: boolean;\n}\n\ninterface HandleActionResult extends ShortCircuitable {\n  /**\n   * Error thrown from the current action, keyed by the route containing the\n   * error boundary to render the error.  To be committed to the state after\n   * loaders have completed\n   */\n  pendingActionError?: RouteData;\n  /**\n   * Data returned from the current action, keyed by the route owning the action.\n   * To be committed to the state after loaders have completed\n   */\n  pendingActionData?: RouteData;\n}\n\ninterface HandleLoadersResult extends ShortCircuitable {\n  /**\n   * loaderData returned from the current set of loaders\n   */\n  loaderData?: RouterState[\"loaderData\"];\n  /**\n   * errors thrown from the current set of loaders\n   */\n  errors?: RouterState[\"errors\"];\n}\n\n/**\n * Cached info for active fetcher.load() instances so they can participate\n * in revalidation\n */\ninterface FetchLoadMatch {\n  routeId: string;\n  path: string;\n}\n\n/**\n * Identified fetcher.load() calls that need to be revalidated\n */\ninterface RevalidatingFetcher extends FetchLoadMatch {\n  key: string;\n  match: AgnosticDataRouteMatch | null;\n  matches: AgnosticDataRouteMatch[] | null;\n  controller: AbortController | null;\n}\n\n/**\n * Wrapper object to allow us to throw any response out from callLoaderOrAction\n * for queryRouter while preserving whether or not it was thrown or returned\n * from the loader/action\n */\ninterface QueryRouteResponse {\n  type: ResultType.data | ResultType.error;\n  response: Response;\n}\n\nconst validMutationMethodsArr: MutationFormMethod[] = [\n  \"post\",\n  \"put\",\n  \"patch\",\n  \"delete\",\n];\nconst validMutationMethods = new Set<MutationFormMethod>(\n  validMutationMethodsArr\n);\n\nconst validRequestMethodsArr: FormMethod[] = [\n  \"get\",\n  ...validMutationMethodsArr,\n];\nconst validRequestMethods = new Set<FormMethod>(validRequestMethodsArr);\n\nconst redirectStatusCodes = new Set([301, 302, 303, 307, 308]);\nconst redirectPreserveMethodStatusCodes = new Set([307, 308]);\n\nexport const IDLE_NAVIGATION: NavigationStates[\"Idle\"] = {\n  state: \"idle\",\n  location: undefined,\n  formMethod: undefined,\n  formAction: undefined,\n  formEncType: undefined,\n  formData: undefined,\n  json: undefined,\n  text: undefined,\n};\n\nexport const IDLE_FETCHER: FetcherStates[\"Idle\"] = {\n  state: \"idle\",\n  data: undefined,\n  formMethod: undefined,\n  formAction: undefined,\n  formEncType: undefined,\n  formData: undefined,\n  json: undefined,\n  text: undefined,\n};\n\nexport const IDLE_BLOCKER: BlockerUnblocked = {\n  state: \"unblocked\",\n  proceed: undefined,\n  reset: undefined,\n  location: undefined,\n};\n\nconst ABSOLUTE_URL_REGEX = /^(?:[a-z][a-z0-9+.-]*:|\\/\\/)/i;\n\nconst defaultMapRouteProperties: MapRoutePropertiesFunction = (route) => ({\n  hasErrorBoundary: Boolean(route.hasErrorBoundary),\n});\n\nconst TRANSITIONS_STORAGE_KEY = \"remix-router-transitions\";\n\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region createRouter\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * Create a router and listen to history POP navigations\n */\nexport function createRouter(init: RouterInit): Router {\n  const routerWindow = init.window\n    ? init.window\n    : typeof window !== \"undefined\"\n    ? window\n    : undefined;\n  const isBrowser =\n    typeof routerWindow !== \"undefined\" &&\n    typeof routerWindow.document !== \"undefined\" &&\n    typeof routerWindow.document.createElement !== \"undefined\";\n  const isServer = !isBrowser;\n\n  invariant(\n    init.routes.length > 0,\n    \"You must provide a non-empty routes array to createRouter\"\n  );\n\n  let mapRouteProperties: MapRoutePropertiesFunction;\n  if (init.mapRouteProperties) {\n    mapRouteProperties = init.mapRouteProperties;\n  } else if (init.detectErrorBoundary) {\n    // If they are still using the deprecated version, wrap it with the new API\n    let detectErrorBoundary = init.detectErrorBoundary;\n    mapRouteProperties = (route) => ({\n      hasErrorBoundary: detectErrorBoundary(route),\n    });\n  } else {\n    mapRouteProperties = defaultMapRouteProperties;\n  }\n\n  // Routes keyed by ID\n  let manifest: RouteManifest = {};\n  // Routes in tree format for matching\n  let dataRoutes = convertRoutesToDataRoutes(\n    init.routes,\n    mapRouteProperties,\n    undefined,\n    manifest\n  );\n  let inFlightDataRoutes: AgnosticDataRouteObject[] | undefined;\n  let basename = init.basename || \"/\";\n  // Config driven behavior flags\n  let future: FutureConfig = {\n    v7_fetcherPersist: false,\n    v7_normalizeFormMethod: false,\n    v7_prependBasename: false,\n    ...init.future,\n  };\n  // Cleanup function for history\n  let unlistenHistory: (() => void) | null = null;\n  // Externally-provided functions to call on all state changes\n  let subscribers = new Set<RouterSubscriber>();\n  // Externally-provided object to hold scroll restoration locations during routing\n  let savedScrollPositions: Record<string, number> | null = null;\n  // Externally-provided function to get scroll restoration keys\n  let getScrollRestorationKey: GetScrollRestorationKeyFunction | null = null;\n  // Externally-provided function to get current scroll position\n  let getScrollPosition: GetScrollPositionFunction | null = null;\n  // One-time flag to control the initial hydration scroll restoration.  Because\n  // we don't get the saved positions from <ScrollRestoration /> until _after_\n  // the initial render, we need to manually trigger a separate updateState to\n  // send along the restoreScrollPosition\n  // Set to true if we have `hydrationData` since we assume we were SSR'd and that\n  // SSR did the initial scroll restoration.\n  let initialScrollRestored = init.hydrationData != null;\n\n  let initialMatches = matchRoutes(dataRoutes, init.history.location, basename);\n  let initialErrors: RouteData | null = null;\n\n  if (initialMatches == null) {\n    // If we do not match a user-provided-route, fall back to the root\n    // to allow the error boundary to take over\n    let error = getInternalRouterError(404, {\n      pathname: init.history.location.pathname,\n    });\n    let { matches, route } = getShortCircuitMatches(dataRoutes);\n    initialMatches = matches;\n    initialErrors = { [route.id]: error };\n  }\n\n  let initialized =\n    // All initialMatches need to be loaded before we're ready.  If we have lazy\n    // functions around still then we'll need to run them in initialize()\n    !initialMatches.some((m) => m.route.lazy) &&\n    // And we have to either have no loaders or have been provided hydrationData\n    (!initialMatches.some((m) => m.route.loader) || init.hydrationData != null);\n\n  let router: Router;\n  let state: RouterState = {\n    historyAction: init.history.action,\n    location: init.history.location,\n    matches: initialMatches,\n    initialized,\n    navigation: IDLE_NAVIGATION,\n    // Don't restore on initial updateState() if we were SSR'd\n    restoreScrollPosition: init.hydrationData != null ? false : null,\n    preventScrollReset: false,\n    revalidation: \"idle\",\n    loaderData: (init.hydrationData && init.hydrationData.loaderData) || {},\n    actionData: (init.hydrationData && init.hydrationData.actionData) || null,\n    errors: (init.hydrationData && init.hydrationData.errors) || initialErrors,\n    fetchers: new Map(),\n    blockers: new Map(),\n  };\n\n  // -- Stateful internal variables to manage navigations --\n  // Current navigation in progress (to be committed in completeNavigation)\n  let pendingAction: HistoryAction = HistoryAction.Pop;\n\n  // Should the current navigation prevent the scroll reset if scroll cannot\n  // be restored?\n  let pendingPreventScrollReset = false;\n\n  // AbortController for the active navigation\n  let pendingNavigationController: AbortController | null;\n\n  // Should the current navigation enable document.startViewTransition?\n  let pendingViewTransitionEnabled = false;\n\n  // Store applied view transitions so we can apply them on POP\n  let appliedViewTransitions: Map<string, Set<string>> = new Map<\n    string,\n    Set<string>\n  >();\n\n  // Cleanup function for persisting applied transitions to sessionStorage\n  let removePageHideEventListener: (() => void) | null = null;\n\n  // We use this to avoid touching history in completeNavigation if a\n  // revalidation is entirely uninterrupted\n  let isUninterruptedRevalidation = false;\n\n  // Use this internal flag to force revalidation of all loaders:\n  //  - submissions (completed or interrupted)\n  //  - useRevalidator()\n  //  - X-Remix-Revalidate (from redirect)\n  let isRevalidationRequired = false;\n\n  // Use this internal array to capture routes that require revalidation due\n  // to a cancelled deferred on action submission\n  let cancelledDeferredRoutes: string[] = [];\n\n  // Use this internal array to capture fetcher loads that were cancelled by an\n  // action navigation and require revalidation\n  let cancelledFetcherLoads: string[] = [];\n\n  // AbortControllers for any in-flight fetchers\n  let fetchControllers = new Map<string, AbortController>();\n\n  // Track loads based on the order in which they started\n  let incrementingLoadId = 0;\n\n  // Track the outstanding pending navigation data load to be compared against\n  // the globally incrementing load when a fetcher load lands after a completed\n  // navigation\n  let pendingNavigationLoadId = -1;\n\n  // Fetchers that triggered data reloads as a result of their actions\n  let fetchReloadIds = new Map<string, number>();\n\n  // Fetchers that triggered redirect navigations\n  let fetchRedirectIds = new Set<string>();\n\n  // Most recent href/match for fetcher.load calls for fetchers\n  let fetchLoadMatches = new Map<string, FetchLoadMatch>();\n\n  // Ref-count mounted fetchers so we know when it's ok to clean them up\n  let activeFetchers = new Map<string, number>();\n\n  // Fetchers that have requested a delete when using v7_fetcherPersist,\n  // they'll be officially removed after they return to idle\n  let deletedFetchers = new Set<string>();\n\n  // Store DeferredData instances for active route matches.  When a\n  // route loader returns defer() we stick one in here.  Then, when a nested\n  // promise resolves we update loaderData.  If a new navigation starts we\n  // cancel active deferreds for eliminated routes.\n  let activeDeferreds = new Map<string, DeferredData>();\n\n  // Store blocker functions in a separate Map outside of router state since\n  // we don't need to update UI state if they change\n  let blockerFunctions = new Map<string, BlockerFunction>();\n\n  // Flag to ignore the next history update, so we can revert the URL change on\n  // a POP navigation that was blocked by the user without touching router state\n  let ignoreNextHistoryUpdate = false;\n\n  // Initialize the router, all side effects should be kicked off from here.\n  // Implemented as a Fluent API for ease of:\n  //   let router = createRouter(init).initialize();\n  function initialize() {\n    // If history informs us of a POP navigation, start the navigation but do not update\n    // state.  We'll update our own state once the navigation completes\n    unlistenHistory = init.history.listen(\n      ({ action: historyAction, location, delta }) => {\n        // Ignore this event if it was just us resetting the URL from a\n        // blocked POP navigation\n        if (ignoreNextHistoryUpdate) {\n          ignoreNextHistoryUpdate = false;\n          return;\n        }\n\n        warning(\n          blockerFunctions.size === 0 || delta != null,\n          \"You are trying to use a blocker on a POP navigation to a location \" +\n            \"that was not created by @remix-run/router. This will fail silently in \" +\n            \"production. This can happen if you are navigating outside the router \" +\n            \"via `window.history.pushState`/`window.location.hash` instead of using \" +\n            \"router navigation APIs.  This can also happen if you are using \" +\n            \"createHashRouter and the user manually changes the URL.\"\n        );\n\n        let blockerKey = shouldBlockNavigation({\n          currentLocation: state.location,\n          nextLocation: location,\n          historyAction,\n        });\n\n        if (blockerKey && delta != null) {\n          // Restore the URL to match the current UI, but don't update router state\n          ignoreNextHistoryUpdate = true;\n          init.history.go(delta * -1);\n\n          // Put the blocker into a blocked state\n          updateBlocker(blockerKey, {\n            state: \"blocked\",\n            location,\n            proceed() {\n              updateBlocker(blockerKey!, {\n                state: \"proceeding\",\n                proceed: undefined,\n                reset: undefined,\n                location,\n              });\n              // Re-do the same POP navigation we just blocked\n              init.history.go(delta);\n            },\n            reset() {\n              let blockers = new Map(state.blockers);\n              blockers.set(blockerKey!, IDLE_BLOCKER);\n              updateState({ blockers });\n            },\n          });\n          return;\n        }\n\n        return startNavigation(historyAction, location);\n      }\n    );\n\n    if (isBrowser) {\n      // FIXME: This feels gross.  How can we cleanup the lines between\n      // scrollRestoration/appliedTransitions persistance?\n      restoreAppliedTransitions(routerWindow, appliedViewTransitions);\n      let _saveAppliedTransitions = () =>\n        persistAppliedTransitions(routerWindow, appliedViewTransitions);\n      routerWindow.addEventListener(\"pagehide\", _saveAppliedTransitions);\n      removePageHideEventListener = () =>\n        routerWindow.removeEventListener(\"pagehide\", _saveAppliedTransitions);\n    }\n\n    // Kick off initial data load if needed.  Use Pop to avoid modifying history\n    // Note we don't do any handling of lazy here.  For SPA's it'll get handled\n    // in the normal navigation flow.  For SSR it's expected that lazy modules are\n    // resolved prior to router creation since we can't go into a fallbackElement\n    // UI for SSR'd apps\n    if (!state.initialized) {\n      startNavigation(HistoryAction.Pop, state.location);\n    }\n\n    return router;\n  }\n\n  // Clean up a router and it's side effects\n  function dispose() {\n    if (unlistenHistory) {\n      unlistenHistory();\n    }\n    if (removePageHideEventListener) {\n      removePageHideEventListener();\n    }\n    subscribers.clear();\n    pendingNavigationController && pendingNavigationController.abort();\n    state.fetchers.forEach((_, key) => deleteFetcher(key));\n    state.blockers.forEach((_, key) => deleteBlocker(key));\n  }\n\n  // Subscribe to state updates for the router\n  function subscribe(fn: RouterSubscriber) {\n    subscribers.add(fn);\n    return () => subscribers.delete(fn);\n  }\n\n  // Update our state and notify the calling context of the change\n  function updateState(\n    newState: Partial<RouterState>,\n    viewTransitionOpts?: ViewTransitionOpts\n  ): void {\n    state = {\n      ...state,\n      ...newState,\n    };\n\n    // Prep fetcher cleanup so we can tell the UI which fetcher data entries\n    // can be removed\n    let completedFetchers: string[] = [];\n    let deletedFetchersKeys: string[] = [];\n\n    if (future.v7_fetcherPersist) {\n      state.fetchers.forEach((fetcher, key) => {\n        if (fetcher.state === \"idle\") {\n          if (deletedFetchers.has(key)) {\n            // Unmounted from the UI and can be totally removed\n            deletedFetchersKeys.push(key);\n          } else {\n            // Returned to idle but still mounted in the UI, so semi-remains for\n            // revalidations and such\n            completedFetchers.push(key);\n          }\n        }\n      });\n    }\n\n    subscribers.forEach((subscriber) =>\n      subscriber(state, {\n        deletedFetchers: deletedFetchersKeys,\n        unstable_viewTransitionOpts: viewTransitionOpts,\n      })\n    );\n\n    // Remove idle fetchers from state since we only care about in-flight fetchers.\n    if (future.v7_fetcherPersist) {\n      completedFetchers.forEach((key) => state.fetchers.delete(key));\n      deletedFetchersKeys.forEach((key) => deleteFetcher(key));\n    }\n  }\n\n  // Complete a navigation returning the state.navigation back to the IDLE_NAVIGATION\n  // and setting state.[historyAction/location/matches] to the new route.\n  // - Location is a required param\n  // - Navigation will always be set to IDLE_NAVIGATION\n  // - Can pass any other state in newState\n  function completeNavigation(\n    location: Location,\n    newState: Partial<Omit<RouterState, \"action\" | \"location\" | \"navigation\">>\n  ): void {\n    // Deduce if we're in a loading/actionReload state:\n    // - We have committed actionData in the store\n    // - The current navigation was a mutation submission\n    // - We're past the submitting state and into the loading state\n    // - The location being loaded is not the result of a redirect\n    let isActionReload =\n      state.actionData != null &&\n      state.navigation.formMethod != null &&\n      isMutationMethod(state.navigation.formMethod) &&\n      state.navigation.state === \"loading\" &&\n      location.state?._isRedirect !== true;\n\n    let actionData: RouteData | null;\n    if (newState.actionData) {\n      if (Object.keys(newState.actionData).length > 0) {\n        actionData = newState.actionData;\n      } else {\n        // Empty actionData -> clear prior actionData due to an action error\n        actionData = null;\n      }\n    } else if (isActionReload) {\n      // Keep the current data if we're wrapping up the action reload\n      actionData = state.actionData;\n    } else {\n      // Clear actionData on any other completed navigations\n      actionData = null;\n    }\n\n    // Always preserve any existing loaderData from re-used routes\n    let loaderData = newState.loaderData\n      ? mergeLoaderData(\n          state.loaderData,\n          newState.loaderData,\n          newState.matches || [],\n          newState.errors\n        )\n      : state.loaderData;\n\n    // On a successful navigation we can assume we got through all blockers\n    // so we can start fresh\n    let blockers = state.blockers;\n    if (blockers.size > 0) {\n      blockers = new Map(blockers);\n      blockers.forEach((_, k) => blockers.set(k, IDLE_BLOCKER));\n    }\n\n    // Always respect the user flag.  Otherwise don't reset on mutation\n    // submission navigations unless they redirect\n    let preventScrollReset =\n      pendingPreventScrollReset === true ||\n      (state.navigation.formMethod != null &&\n        isMutationMethod(state.navigation.formMethod) &&\n        location.state?._isRedirect !== true);\n\n    if (inFlightDataRoutes) {\n      dataRoutes = inFlightDataRoutes;\n      inFlightDataRoutes = undefined;\n    }\n\n    if (isUninterruptedRevalidation) {\n      // If this was an uninterrupted revalidation then do not touch history\n    } else if (pendingAction === HistoryAction.Pop) {\n      // Do nothing for POP - URL has already been updated\n    } else if (pendingAction === HistoryAction.Push) {\n      init.history.push(location, location.state);\n    } else if (pendingAction === HistoryAction.Replace) {\n      init.history.replace(location, location.state);\n    }\n\n    let viewTransitionOpts: ViewTransitionOpts | undefined;\n\n    // On POP, enable transitions if they were enabled on the original navigation\n    if (pendingAction === HistoryAction.Pop) {\n      // Forward takes precedence so they behave like the original navigation\n      let priorPaths = appliedViewTransitions.get(state.location.pathname);\n      if (priorPaths && priorPaths.has(location.pathname)) {\n        viewTransitionOpts = {\n          currentLocation: state.location,\n          nextLocation: location,\n        };\n      } else if (appliedViewTransitions.has(location.pathname)) {\n        // If we don't have a previous forward nav, assume we're popping back to\n        // the new location and enable if that location previously enabled\n        viewTransitionOpts = {\n          currentLocation: location,\n          nextLocation: state.location,\n        };\n      }\n    } else if (pendingViewTransitionEnabled) {\n      // Store the applied transition on PUSH/REPLACE\n      let toPaths = appliedViewTransitions.get(state.location.pathname);\n      if (toPaths) {\n        toPaths.add(location.pathname);\n      } else {\n        toPaths = new Set<string>([location.pathname]);\n        appliedViewTransitions.set(state.location.pathname, toPaths);\n      }\n      viewTransitionOpts = {\n        currentLocation: state.location,\n        nextLocation: location,\n      };\n    }\n\n    updateState(\n      {\n        ...newState, // matches, errors, fetchers go through as-is\n        actionData,\n        loaderData,\n        historyAction: pendingAction,\n        location,\n        initialized: true,\n        navigation: IDLE_NAVIGATION,\n        revalidation: \"idle\",\n        restoreScrollPosition: getSavedScrollPosition(\n          location,\n          newState.matches || state.matches\n        ),\n        preventScrollReset,\n        blockers,\n      },\n      viewTransitionOpts\n    );\n\n    // Reset stateful navigation vars\n    pendingAction = HistoryAction.Pop;\n    pendingPreventScrollReset = false;\n    pendingViewTransitionEnabled = false;\n    isUninterruptedRevalidation = false;\n    isRevalidationRequired = false;\n    cancelledDeferredRoutes = [];\n    cancelledFetcherLoads = [];\n  }\n\n  // Trigger a navigation event, which can either be a numerical POP or a PUSH\n  // replace with an optional submission\n  async function navigate(\n    to: number | To | null,\n    opts?: RouterNavigateOptions\n  ): Promise<void> {\n    if (typeof to === \"number\") {\n      init.history.go(to);\n      return;\n    }\n\n    let normalizedPath = normalizeTo(\n      state.location,\n      state.matches,\n      basename,\n      future.v7_prependBasename,\n      to,\n      opts?.fromRouteId,\n      opts?.relative\n    );\n    let { path, submission, error } = normalizeNavigateOptions(\n      future.v7_normalizeFormMethod,\n      false,\n      normalizedPath,\n      opts\n    );\n\n    let currentLocation = state.location;\n    let nextLocation = createLocation(state.location, path, opts && opts.state);\n\n    // When using navigate as a PUSH/REPLACE we aren't reading an already-encoded\n    // URL from window.location, so we need to encode it here so the behavior\n    // remains the same as POP and non-data-router usages.  new URL() does all\n    // the same encoding we'd get from a history.pushState/window.location read\n    // without having to touch history\n    nextLocation = {\n      ...nextLocation,\n      ...init.history.encodeLocation(nextLocation),\n    };\n\n    let userReplace = opts && opts.replace != null ? opts.replace : undefined;\n\n    let historyAction = HistoryAction.Push;\n\n    if (userReplace === true) {\n      historyAction = HistoryAction.Replace;\n    } else if (userReplace === false) {\n      // no-op\n    } else if (\n      submission != null &&\n      isMutationMethod(submission.formMethod) &&\n      submission.formAction === state.location.pathname + state.location.search\n    ) {\n      // By default on submissions to the current location we REPLACE so that\n      // users don't have to double-click the back button to get to the prior\n      // location.  If the user redirects to a different location from the\n      // action/loader this will be ignored and the redirect will be a PUSH\n      historyAction = HistoryAction.Replace;\n    }\n\n    let preventScrollReset =\n      opts && \"preventScrollReset\" in opts\n        ? opts.preventScrollReset === true\n        : undefined;\n\n    let blockerKey = shouldBlockNavigation({\n      currentLocation,\n      nextLocation,\n      historyAction,\n    });\n\n    if (blockerKey) {\n      // Put the blocker into a blocked state\n      updateBlocker(blockerKey, {\n        state: \"blocked\",\n        location: nextLocation,\n        proceed() {\n          updateBlocker(blockerKey!, {\n            state: \"proceeding\",\n            proceed: undefined,\n            reset: undefined,\n            location: nextLocation,\n          });\n          // Send the same navigation through\n          navigate(to, opts);\n        },\n        reset() {\n          let blockers = new Map(state.blockers);\n          blockers.set(blockerKey!, IDLE_BLOCKER);\n          updateState({ blockers });\n        },\n      });\n      return;\n    }\n\n    return await startNavigation(historyAction, nextLocation, {\n      submission,\n      // Send through the formData serialization error if we have one so we can\n      // render at the right error boundary after we match routes\n      pendingError: error,\n      preventScrollReset,\n      replace: opts && opts.replace,\n      enableViewTransition: opts && opts.unstable_viewTransition,\n    });\n  }\n\n  // Revalidate all current loaders.  If a navigation is in progress or if this\n  // is interrupted by a navigation, allow this to \"succeed\" by calling all\n  // loaders during the next loader round\n  function revalidate() {\n    interruptActiveLoads();\n    updateState({ revalidation: \"loading\" });\n\n    // If we're currently submitting an action, we don't need to start a new\n    // navigation, we'll just let the follow up loader execution call all loaders\n    if (state.navigation.state === \"submitting\") {\n      return;\n    }\n\n    // If we're currently in an idle state, start a new navigation for the current\n    // action/location and mark it as uninterrupted, which will skip the history\n    // update in completeNavigation\n    if (state.navigation.state === \"idle\") {\n      startNavigation(state.historyAction, state.location, {\n        startUninterruptedRevalidation: true,\n      });\n      return;\n    }\n\n    // Otherwise, if we're currently in a loading state, just start a new\n    // navigation to the navigation.location but do not trigger an uninterrupted\n    // revalidation so that history correctly updates once the navigation completes\n    startNavigation(\n      pendingAction || state.historyAction,\n      state.navigation.location,\n      { overrideNavigation: state.navigation }\n    );\n  }\n\n  // Start a navigation to the given action/location.  Can optionally provide a\n  // overrideNavigation which will override the normalLoad in the case of a redirect\n  // navigation\n  async function startNavigation(\n    historyAction: HistoryAction,\n    location: Location,\n    opts?: {\n      submission?: Submission;\n      fetcherSubmission?: Submission;\n      overrideNavigation?: Navigation;\n      pendingError?: ErrorResponseImpl;\n      startUninterruptedRevalidation?: boolean;\n      preventScrollReset?: boolean;\n      replace?: boolean;\n      enableViewTransition?: boolean;\n    }\n  ): Promise<void> {\n    // Abort any in-progress navigations and start a new one. Unset any ongoing\n    // uninterrupted revalidations unless told otherwise, since we want this\n    // new navigation to update history normally\n    pendingNavigationController && pendingNavigationController.abort();\n    pendingNavigationController = null;\n    pendingAction = historyAction;\n    isUninterruptedRevalidation =\n      (opts && opts.startUninterruptedRevalidation) === true;\n\n    // Save the current scroll position every time we start a new navigation,\n    // and track whether we should reset scroll on completion\n    saveScrollPosition(state.location, state.matches);\n    pendingPreventScrollReset = (opts && opts.preventScrollReset) === true;\n\n    pendingViewTransitionEnabled = (opts && opts.enableViewTransition) === true;\n\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let loadingNavigation = opts && opts.overrideNavigation;\n    let matches = matchRoutes(routesToUse, location, basename);\n\n    // Short circuit with a 404 on the root error boundary if we match nothing\n    if (!matches) {\n      let error = getInternalRouterError(404, { pathname: location.pathname });\n      let { matches: notFoundMatches, route } =\n        getShortCircuitMatches(routesToUse);\n      // Cancel all pending deferred on 404s since we don't keep any routes\n      cancelActiveDeferreds();\n      completeNavigation(location, {\n        matches: notFoundMatches,\n        loaderData: {},\n        errors: {\n          [route.id]: error,\n        },\n      });\n      return;\n    }\n\n    // Short circuit if it's only a hash change and not a revalidation or\n    // mutation submission.\n    //\n    // Ignore on initial page loads because since the initial load will always\n    // be \"same hash\".  For example, on /page#hash and submit a <Form method=\"post\">\n    // which will default to a navigation to /page\n    if (\n      state.initialized &&\n      !isRevalidationRequired &&\n      isHashChangeOnly(state.location, location) &&\n      !(opts && opts.submission && isMutationMethod(opts.submission.formMethod))\n    ) {\n      completeNavigation(location, { matches });\n      return;\n    }\n\n    // Create a controller/Request for this navigation\n    pendingNavigationController = new AbortController();\n    let request = createClientSideRequest(\n      init.history,\n      location,\n      pendingNavigationController.signal,\n      opts && opts.submission\n    );\n    let pendingActionData: RouteData | undefined;\n    let pendingError: RouteData | undefined;\n\n    if (opts && opts.pendingError) {\n      // If we have a pendingError, it means the user attempted a GET submission\n      // with binary FormData so assign here and skip to handleLoaders.  That\n      // way we handle calling loaders above the boundary etc.  It's not really\n      // different from an actionError in that sense.\n      pendingError = {\n        [findNearestBoundary(matches).route.id]: opts.pendingError,\n      };\n    } else if (\n      opts &&\n      opts.submission &&\n      isMutationMethod(opts.submission.formMethod)\n    ) {\n      // Call action if we received an action submission\n      let actionOutput = await handleAction(\n        request,\n        location,\n        opts.submission,\n        matches,\n        { replace: opts.replace }\n      );\n\n      if (actionOutput.shortCircuited) {\n        return;\n      }\n\n      pendingActionData = actionOutput.pendingActionData;\n      pendingError = actionOutput.pendingActionError;\n      loadingNavigation = getLoadingNavigation(location, opts.submission);\n\n      // Create a GET request for the loaders\n      request = new Request(request.url, { signal: request.signal });\n    }\n\n    // Call loaders\n    let { shortCircuited, loaderData, errors } = await handleLoaders(\n      request,\n      location,\n      matches,\n      loadingNavigation,\n      opts && opts.submission,\n      opts && opts.fetcherSubmission,\n      opts && opts.replace,\n      pendingActionData,\n      pendingError\n    );\n\n    if (shortCircuited) {\n      return;\n    }\n\n    // Clean up now that the action/loaders have completed.  Don't clean up if\n    // we short circuited because pendingNavigationController will have already\n    // been assigned to a new controller for the next navigation\n    pendingNavigationController = null;\n\n    completeNavigation(location, {\n      matches,\n      ...(pendingActionData ? { actionData: pendingActionData } : {}),\n      loaderData,\n      errors,\n    });\n  }\n\n  // Call the action matched by the leaf route for this navigation and handle\n  // redirects/errors\n  async function handleAction(\n    request: Request,\n    location: Location,\n    submission: Submission,\n    matches: AgnosticDataRouteMatch[],\n    opts: { replace?: boolean } = {}\n  ): Promise<HandleActionResult> {\n    interruptActiveLoads();\n\n    // Put us in a submitting state\n    let navigation = getSubmittingNavigation(location, submission);\n    updateState({ navigation });\n\n    // Call our action and get the result\n    let result: DataResult;\n    let actionMatch = getTargetMatch(matches, location);\n\n    if (!actionMatch.route.action && !actionMatch.route.lazy) {\n      result = {\n        type: ResultType.error,\n        error: getInternalRouterError(405, {\n          method: request.method,\n          pathname: location.pathname,\n          routeId: actionMatch.route.id,\n        }),\n      };\n    } else {\n      result = await callLoaderOrAction(\n        \"action\",\n        request,\n        actionMatch,\n        matches,\n        manifest,\n        mapRouteProperties,\n        basename\n      );\n\n      if (request.signal.aborted) {\n        return { shortCircuited: true };\n      }\n    }\n\n    if (isRedirectResult(result)) {\n      let replace: boolean;\n      if (opts && opts.replace != null) {\n        replace = opts.replace;\n      } else {\n        // If the user didn't explicity indicate replace behavior, replace if\n        // we redirected to the exact same location we're currently at to avoid\n        // double back-buttons\n        replace =\n          result.location === state.location.pathname + state.location.search;\n      }\n      await startRedirectNavigation(state, result, { submission, replace });\n      return { shortCircuited: true };\n    }\n\n    if (isErrorResult(result)) {\n      // Store off the pending error - we use it to determine which loaders\n      // to call and will commit it when we complete the navigation\n      let boundaryMatch = findNearestBoundary(matches, actionMatch.route.id);\n\n      // By default, all submissions are REPLACE navigations, but if the\n      // action threw an error that'll be rendered in an errorElement, we fall\n      // back to PUSH so that the user can use the back button to get back to\n      // the pre-submission form location to try again\n      if ((opts && opts.replace) !== true) {\n        pendingAction = HistoryAction.Push;\n      }\n\n      return {\n        // Send back an empty object we can use to clear out any prior actionData\n        pendingActionData: {},\n        pendingActionError: { [boundaryMatch.route.id]: result.error },\n      };\n    }\n\n    if (isDeferredResult(result)) {\n      throw getInternalRouterError(400, { type: \"defer-action\" });\n    }\n\n    return {\n      pendingActionData: { [actionMatch.route.id]: result.data },\n    };\n  }\n\n  // Call all applicable loaders for the given matches, handling redirects,\n  // errors, etc.\n  async function handleLoaders(\n    request: Request,\n    location: Location,\n    matches: AgnosticDataRouteMatch[],\n    overrideNavigation?: Navigation,\n    submission?: Submission,\n    fetcherSubmission?: Submission,\n    replace?: boolean,\n    pendingActionData?: RouteData,\n    pendingError?: RouteData\n  ): Promise<HandleLoadersResult> {\n    // Figure out the right navigation we want to use for data loading\n    let loadingNavigation =\n      overrideNavigation || getLoadingNavigation(location, submission);\n\n    // If this was a redirect from an action we don't have a \"submission\" but\n    // we have it on the loading navigation so use that if available\n    let activeSubmission =\n      submission ||\n      fetcherSubmission ||\n      getSubmissionFromNavigation(loadingNavigation);\n\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let [matchesToLoad, revalidatingFetchers] = getMatchesToLoad(\n      init.history,\n      state,\n      matches,\n      activeSubmission,\n      location,\n      isRevalidationRequired,\n      cancelledDeferredRoutes,\n      cancelledFetcherLoads,\n      fetchLoadMatches,\n      fetchRedirectIds,\n      routesToUse,\n      basename,\n      pendingActionData,\n      pendingError\n    );\n\n    // Cancel pending deferreds for no-longer-matched routes or routes we're\n    // about to reload.  Note that if this is an action reload we would have\n    // already cancelled all pending deferreds so this would be a no-op\n    cancelActiveDeferreds(\n      (routeId) =>\n        !(matches && matches.some((m) => m.route.id === routeId)) ||\n        (matchesToLoad && matchesToLoad.some((m) => m.route.id === routeId))\n    );\n\n    pendingNavigationLoadId = ++incrementingLoadId;\n\n    // Short circuit if we have no loaders to run\n    if (matchesToLoad.length === 0 && revalidatingFetchers.length === 0) {\n      let updatedFetchers = markFetchRedirectsDone();\n      completeNavigation(location, {\n        matches,\n        loaderData: {},\n        // Commit pending error if we're short circuiting\n        errors: pendingError || null,\n        ...(pendingActionData ? { actionData: pendingActionData } : {}),\n        ...(updatedFetchers ? { fetchers: new Map(state.fetchers) } : {}),\n      });\n      return { shortCircuited: true };\n    }\n\n    // If this is an uninterrupted revalidation, we remain in our current idle\n    // state.  If not, we need to switch to our loading state and load data,\n    // preserving any new action data or existing action data (in the case of\n    // a revalidation interrupting an actionReload)\n    if (!isUninterruptedRevalidation) {\n      revalidatingFetchers.forEach((rf) => {\n        let fetcher = state.fetchers.get(rf.key);\n        let revalidatingFetcher = getLoadingFetcher(\n          undefined,\n          fetcher ? fetcher.data : undefined\n        );\n        state.fetchers.set(rf.key, revalidatingFetcher);\n      });\n      let actionData = pendingActionData || state.actionData;\n      updateState({\n        navigation: loadingNavigation,\n        ...(actionData\n          ? Object.keys(actionData).length === 0\n            ? { actionData: null }\n            : { actionData }\n          : {}),\n        ...(revalidatingFetchers.length > 0\n          ? { fetchers: new Map(state.fetchers) }\n          : {}),\n      });\n    }\n\n    revalidatingFetchers.forEach((rf) => {\n      if (fetchControllers.has(rf.key)) {\n        abortFetcher(rf.key);\n      }\n      if (rf.controller) {\n        // Fetchers use an independent AbortController so that aborting a fetcher\n        // (via deleteFetcher) does not abort the triggering navigation that\n        // triggered the revalidation\n        fetchControllers.set(rf.key, rf.controller);\n      }\n    });\n\n    // Proxy navigation abort through to revalidation fetchers\n    let abortPendingFetchRevalidations = () =>\n      revalidatingFetchers.forEach((f) => abortFetcher(f.key));\n    if (pendingNavigationController) {\n      pendingNavigationController.signal.addEventListener(\n        \"abort\",\n        abortPendingFetchRevalidations\n      );\n    }\n\n    let { results, loaderResults, fetcherResults } =\n      await callLoadersAndMaybeResolveData(\n        state.matches,\n        matches,\n        matchesToLoad,\n        revalidatingFetchers,\n        request\n      );\n\n    if (request.signal.aborted) {\n      return { shortCircuited: true };\n    }\n\n    // Clean up _after_ loaders have completed.  Don't clean up if we short\n    // circuited because fetchControllers would have been aborted and\n    // reassigned to new controllers for the next navigation\n    if (pendingNavigationController) {\n      pendingNavigationController.signal.removeEventListener(\n        \"abort\",\n        abortPendingFetchRevalidations\n      );\n    }\n    revalidatingFetchers.forEach((rf) => fetchControllers.delete(rf.key));\n\n    // If any loaders returned a redirect Response, start a new REPLACE navigation\n    let redirect = findRedirect(results);\n    if (redirect) {\n      if (redirect.idx >= matchesToLoad.length) {\n        // If this redirect came from a fetcher make sure we mark it in\n        // fetchRedirectIds so it doesn't get revalidated on the next set of\n        // loader executions\n        let fetcherKey =\n          revalidatingFetchers[redirect.idx - matchesToLoad.length].key;\n        fetchRedirectIds.add(fetcherKey);\n      }\n      await startRedirectNavigation(state, redirect.result, { replace });\n      return { shortCircuited: true };\n    }\n\n    // Process and commit output from loaders\n    let { loaderData, errors } = processLoaderData(\n      state,\n      matches,\n      matchesToLoad,\n      loaderResults,\n      pendingError,\n      revalidatingFetchers,\n      fetcherResults,\n      activeDeferreds\n    );\n\n    // Wire up subscribers to update loaderData as promises settle\n    activeDeferreds.forEach((deferredData, routeId) => {\n      deferredData.subscribe((aborted) => {\n        // Note: No need to updateState here since the TrackedPromise on\n        // loaderData is stable across resolve/reject\n        // Remove this instance if we were aborted or if promises have settled\n        if (aborted || deferredData.done) {\n          activeDeferreds.delete(routeId);\n        }\n      });\n    });\n\n    let updatedFetchers = markFetchRedirectsDone();\n    let didAbortFetchLoads = abortStaleFetchLoads(pendingNavigationLoadId);\n    let shouldUpdateFetchers =\n      updatedFetchers || didAbortFetchLoads || revalidatingFetchers.length > 0;\n\n    return {\n      loaderData,\n      errors,\n      ...(shouldUpdateFetchers ? { fetchers: new Map(state.fetchers) } : {}),\n    };\n  }\n\n  function getFetcher<TData = any>(key: string): Fetcher<TData> {\n    if (future.v7_fetcherPersist) {\n      activeFetchers.set(key, (activeFetchers.get(key) || 0) + 1);\n      // If this fetcher was previously marked for deletion, unmark it since we\n      // have a new instance\n      if (deletedFetchers.has(key)) {\n        deletedFetchers.delete(key);\n      }\n    }\n    return state.fetchers.get(key) || IDLE_FETCHER;\n  }\n\n  // Trigger a fetcher load/submit for the given fetcher key\n  function fetch(\n    key: string,\n    routeId: string,\n    href: string | null,\n    opts?: RouterFetchOptions\n  ) {\n    if (isServer) {\n      throw new Error(\n        \"router.fetch() was called during the server render, but it shouldn't be. \" +\n          \"You are likely calling a useFetcher() method in the body of your component. \" +\n          \"Try moving it to a useEffect or a callback.\"\n      );\n    }\n\n    if (fetchControllers.has(key)) abortFetcher(key);\n\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let normalizedPath = normalizeTo(\n      state.location,\n      state.matches,\n      basename,\n      future.v7_prependBasename,\n      href,\n      routeId,\n      opts?.relative\n    );\n    let matches = matchRoutes(routesToUse, normalizedPath, basename);\n\n    if (!matches) {\n      setFetcherError(\n        key,\n        routeId,\n        getInternalRouterError(404, { pathname: normalizedPath })\n      );\n      return;\n    }\n\n    let { path, submission, error } = normalizeNavigateOptions(\n      future.v7_normalizeFormMethod,\n      true,\n      normalizedPath,\n      opts\n    );\n\n    if (error) {\n      setFetcherError(key, routeId, error);\n      return;\n    }\n\n    let match = getTargetMatch(matches, path);\n\n    pendingPreventScrollReset = (opts && opts.preventScrollReset) === true;\n\n    if (submission && isMutationMethod(submission.formMethod)) {\n      handleFetcherAction(key, routeId, path, match, matches, submission);\n      return;\n    }\n\n    // Store off the match so we can call it's shouldRevalidate on subsequent\n    // revalidations\n    fetchLoadMatches.set(key, { routeId, path });\n    handleFetcherLoader(key, routeId, path, match, matches, submission);\n  }\n\n  // Call the action for the matched fetcher.submit(), and then handle redirects,\n  // errors, and revalidation\n  async function handleFetcherAction(\n    key: string,\n    routeId: string,\n    path: string,\n    match: AgnosticDataRouteMatch,\n    requestMatches: AgnosticDataRouteMatch[],\n    submission: Submission\n  ) {\n    interruptActiveLoads();\n    fetchLoadMatches.delete(key);\n\n    if (!match.route.action && !match.route.lazy) {\n      let error = getInternalRouterError(405, {\n        method: submission.formMethod,\n        pathname: path,\n        routeId: routeId,\n      });\n      setFetcherError(key, routeId, error);\n      return;\n    }\n\n    // Put this fetcher into it's submitting state\n    let existingFetcher = state.fetchers.get(key);\n    let fetcher = getSubmittingFetcher(submission, existingFetcher);\n    state.fetchers.set(key, fetcher);\n    updateState({ fetchers: new Map(state.fetchers) });\n\n    // Call the action for the fetcher\n    let abortController = new AbortController();\n    let fetchRequest = createClientSideRequest(\n      init.history,\n      path,\n      abortController.signal,\n      submission\n    );\n    fetchControllers.set(key, abortController);\n\n    let originatingLoadId = incrementingLoadId;\n    let actionResult = await callLoaderOrAction(\n      \"action\",\n      fetchRequest,\n      match,\n      requestMatches,\n      manifest,\n      mapRouteProperties,\n      basename\n    );\n\n    if (fetchRequest.signal.aborted) {\n      // We can delete this so long as we weren't aborted by our own fetcher\n      // re-submit which would have put _new_ controller is in fetchControllers\n      if (fetchControllers.get(key) === abortController) {\n        fetchControllers.delete(key);\n      }\n      return;\n    }\n\n    if (deletedFetchers.has(key)) {\n      state.fetchers.set(key, getDoneFetcher(undefined));\n      updateState({ fetchers: new Map(state.fetchers) });\n      return;\n    }\n\n    if (isRedirectResult(actionResult)) {\n      fetchControllers.delete(key);\n      if (pendingNavigationLoadId > originatingLoadId) {\n        // A new navigation was kicked off after our action started, so that\n        // should take precedence over this redirect navigation.  We already\n        // set isRevalidationRequired so all loaders for the new route should\n        // fire unless opted out via shouldRevalidate\n        let doneFetcher = getDoneFetcher(undefined);\n        state.fetchers.set(key, doneFetcher);\n        updateState({ fetchers: new Map(state.fetchers) });\n        return;\n      } else {\n        fetchRedirectIds.add(key);\n        let loadingFetcher = getLoadingFetcher(submission);\n        state.fetchers.set(key, loadingFetcher);\n        updateState({ fetchers: new Map(state.fetchers) });\n\n        return startRedirectNavigation(state, actionResult, {\n          fetcherSubmission: submission,\n        });\n      }\n    }\n\n    // Process any non-redirect errors thrown\n    if (isErrorResult(actionResult)) {\n      setFetcherError(key, routeId, actionResult.error);\n      return;\n    }\n\n    if (isDeferredResult(actionResult)) {\n      throw getInternalRouterError(400, { type: \"defer-action\" });\n    }\n\n    // Start the data load for current matches, or the next location if we're\n    // in the middle of a navigation\n    let nextLocation = state.navigation.location || state.location;\n    let revalidationRequest = createClientSideRequest(\n      init.history,\n      nextLocation,\n      abortController.signal\n    );\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let matches =\n      state.navigation.state !== \"idle\"\n        ? matchRoutes(routesToUse, state.navigation.location, basename)\n        : state.matches;\n\n    invariant(matches, \"Didn't find any matches after fetcher action\");\n\n    let loadId = ++incrementingLoadId;\n    fetchReloadIds.set(key, loadId);\n\n    let loadFetcher = getLoadingFetcher(submission, actionResult.data);\n    state.fetchers.set(key, loadFetcher);\n\n    let [matchesToLoad, revalidatingFetchers] = getMatchesToLoad(\n      init.history,\n      state,\n      matches,\n      submission,\n      nextLocation,\n      isRevalidationRequired,\n      cancelledDeferredRoutes,\n      cancelledFetcherLoads,\n      fetchLoadMatches,\n      fetchRedirectIds,\n      routesToUse,\n      basename,\n      { [match.route.id]: actionResult.data },\n      undefined // No need to send through errors since we short circuit above\n    );\n\n    // Put all revalidating fetchers into the loading state, except for the\n    // current fetcher which we want to keep in it's current loading state which\n    // contains it's action submission info + action data\n    revalidatingFetchers\n      .filter((rf) => rf.key !== key)\n      .forEach((rf) => {\n        let staleKey = rf.key;\n        let existingFetcher = state.fetchers.get(staleKey);\n        let revalidatingFetcher = getLoadingFetcher(\n          undefined,\n          existingFetcher ? existingFetcher.data : undefined\n        );\n        state.fetchers.set(staleKey, revalidatingFetcher);\n        if (fetchControllers.has(staleKey)) {\n          abortFetcher(staleKey);\n        }\n        if (rf.controller) {\n          fetchControllers.set(staleKey, rf.controller);\n        }\n      });\n\n    updateState({ fetchers: new Map(state.fetchers) });\n\n    let abortPendingFetchRevalidations = () =>\n      revalidatingFetchers.forEach((rf) => abortFetcher(rf.key));\n\n    abortController.signal.addEventListener(\n      \"abort\",\n      abortPendingFetchRevalidations\n    );\n\n    let { results, loaderResults, fetcherResults } =\n      await callLoadersAndMaybeResolveData(\n        state.matches,\n        matches,\n        matchesToLoad,\n        revalidatingFetchers,\n        revalidationRequest\n      );\n\n    if (abortController.signal.aborted) {\n      return;\n    }\n\n    abortController.signal.removeEventListener(\n      \"abort\",\n      abortPendingFetchRevalidations\n    );\n\n    fetchReloadIds.delete(key);\n    fetchControllers.delete(key);\n    revalidatingFetchers.forEach((r) => fetchControllers.delete(r.key));\n\n    let redirect = findRedirect(results);\n    if (redirect) {\n      if (redirect.idx >= matchesToLoad.length) {\n        // If this redirect came from a fetcher make sure we mark it in\n        // fetchRedirectIds so it doesn't get revalidated on the next set of\n        // loader executions\n        let fetcherKey =\n          revalidatingFetchers[redirect.idx - matchesToLoad.length].key;\n        fetchRedirectIds.add(fetcherKey);\n      }\n      return startRedirectNavigation(state, redirect.result);\n    }\n\n    // Process and commit output from loaders\n    let { loaderData, errors } = processLoaderData(\n      state,\n      state.matches,\n      matchesToLoad,\n      loaderResults,\n      undefined,\n      revalidatingFetchers,\n      fetcherResults,\n      activeDeferreds\n    );\n\n    // Since we let revalidations complete even if the submitting fetcher was\n    // deleted, only put it back to idle if it hasn't been deleted\n    if (state.fetchers.has(key)) {\n      let doneFetcher = getDoneFetcher(actionResult.data);\n      state.fetchers.set(key, doneFetcher);\n    }\n\n    abortStaleFetchLoads(loadId);\n\n    // If we are currently in a navigation loading state and this fetcher is\n    // more recent than the navigation, we want the newer data so abort the\n    // navigation and complete it with the fetcher data\n    if (\n      state.navigation.state === \"loading\" &&\n      loadId > pendingNavigationLoadId\n    ) {\n      invariant(pendingAction, \"Expected pending action\");\n      pendingNavigationController && pendingNavigationController.abort();\n\n      completeNavigation(state.navigation.location, {\n        matches,\n        loaderData,\n        errors,\n        fetchers: new Map(state.fetchers),\n      });\n    } else {\n      // otherwise just update with the fetcher data, preserving any existing\n      // loaderData for loaders that did not need to reload.  We have to\n      // manually merge here since we aren't going through completeNavigation\n      updateState({\n        errors,\n        loaderData: mergeLoaderData(\n          state.loaderData,\n          loaderData,\n          matches,\n          errors\n        ),\n        fetchers: new Map(state.fetchers),\n      });\n      isRevalidationRequired = false;\n    }\n  }\n\n  // Call the matched loader for fetcher.load(), handling redirects, errors, etc.\n  async function handleFetcherLoader(\n    key: string,\n    routeId: string,\n    path: string,\n    match: AgnosticDataRouteMatch,\n    matches: AgnosticDataRouteMatch[],\n    submission?: Submission\n  ) {\n    let existingFetcher = state.fetchers.get(key);\n    // Put this fetcher into it's loading state\n    let loadingFetcher = getLoadingFetcher(\n      submission,\n      existingFetcher ? existingFetcher.data : undefined\n    );\n    state.fetchers.set(key, loadingFetcher);\n    updateState({ fetchers: new Map(state.fetchers) });\n\n    // Call the loader for this fetcher route match\n    let abortController = new AbortController();\n    let fetchRequest = createClientSideRequest(\n      init.history,\n      path,\n      abortController.signal\n    );\n    fetchControllers.set(key, abortController);\n\n    let originatingLoadId = incrementingLoadId;\n    let result: DataResult = await callLoaderOrAction(\n      \"loader\",\n      fetchRequest,\n      match,\n      matches,\n      manifest,\n      mapRouteProperties,\n      basename\n    );\n\n    // Deferred isn't supported for fetcher loads, await everything and treat it\n    // as a normal load.  resolveDeferredData will return undefined if this\n    // fetcher gets aborted, so we just leave result untouched and short circuit\n    // below if that happens\n    if (isDeferredResult(result)) {\n      result =\n        (await resolveDeferredData(result, fetchRequest.signal, true)) ||\n        result;\n    }\n\n    // We can delete this so long as we weren't aborted by our our own fetcher\n    // re-load which would have put _new_ controller is in fetchControllers\n    if (fetchControllers.get(key) === abortController) {\n      fetchControllers.delete(key);\n    }\n\n    if (fetchRequest.signal.aborted) {\n      return;\n    }\n\n    if (deletedFetchers.has(key)) {\n      state.fetchers.set(key, getDoneFetcher(undefined));\n      updateState({ fetchers: new Map(state.fetchers) });\n      return;\n    }\n\n    // If the loader threw a redirect Response, start a new REPLACE navigation\n    if (isRedirectResult(result)) {\n      if (pendingNavigationLoadId > originatingLoadId) {\n        // A new navigation was kicked off after our loader started, so that\n        // should take precedence over this redirect navigation\n        let doneFetcher = getDoneFetcher(undefined);\n        state.fetchers.set(key, doneFetcher);\n        updateState({ fetchers: new Map(state.fetchers) });\n        return;\n      } else {\n        fetchRedirectIds.add(key);\n        await startRedirectNavigation(state, result);\n        return;\n      }\n    }\n\n    // Process any non-redirect errors thrown\n    if (isErrorResult(result)) {\n      setFetcherError(key, routeId, result.error);\n      return;\n    }\n\n    invariant(!isDeferredResult(result), \"Unhandled fetcher deferred data\");\n\n    // Put the fetcher back into an idle state\n    let doneFetcher = getDoneFetcher(result.data);\n    state.fetchers.set(key, doneFetcher);\n    updateState({ fetchers: new Map(state.fetchers) });\n  }\n\n  /**\n   * Utility function to handle redirects returned from an action or loader.\n   * Normally, a redirect \"replaces\" the navigation that triggered it.  So, for\n   * example:\n   *\n   *  - user is on /a\n   *  - user clicks a link to /b\n   *  - loader for /b redirects to /c\n   *\n   * In a non-JS app the browser would track the in-flight navigation to /b and\n   * then replace it with /c when it encountered the redirect response.  In\n   * the end it would only ever update the URL bar with /c.\n   *\n   * In client-side routing using pushState/replaceState, we aim to emulate\n   * this behavior and we also do not update history until the end of the\n   * navigation (including processed redirects).  This means that we never\n   * actually touch history until we've processed redirects, so we just use\n   * the history action from the original navigation (PUSH or REPLACE).\n   */\n  async function startRedirectNavigation(\n    state: RouterState,\n    redirect: RedirectResult,\n    {\n      submission,\n      fetcherSubmission,\n      replace,\n    }: {\n      submission?: Submission;\n      fetcherSubmission?: Submission;\n      replace?: boolean;\n    } = {}\n  ) {\n    if (redirect.revalidate) {\n      isRevalidationRequired = true;\n    }\n\n    let redirectLocation = createLocation(state.location, redirect.location, {\n      _isRedirect: true,\n    });\n    invariant(\n      redirectLocation,\n      \"Expected a location on the redirect navigation\"\n    );\n\n    if (isBrowser) {\n      let isDocumentReload = false;\n\n      if (redirect.reloadDocument) {\n        // Hard reload if the response contained X-Remix-Reload-Document\n        isDocumentReload = true;\n      } else if (ABSOLUTE_URL_REGEX.test(redirect.location)) {\n        const url = init.history.createURL(redirect.location);\n        isDocumentReload =\n          // Hard reload if it's an absolute URL to a new origin\n          url.origin !== routerWindow.location.origin ||\n          // Hard reload if it's an absolute URL that does not match our basename\n          stripBasename(url.pathname, basename) == null;\n      }\n\n      if (isDocumentReload) {\n        if (replace) {\n          routerWindow.location.replace(redirect.location);\n        } else {\n          routerWindow.location.assign(redirect.location);\n        }\n        return;\n      }\n    }\n\n    // There's no need to abort on redirects, since we don't detect the\n    // redirect until the action/loaders have settled\n    pendingNavigationController = null;\n\n    let redirectHistoryAction =\n      replace === true ? HistoryAction.Replace : HistoryAction.Push;\n\n    // Use the incoming submission if provided, fallback on the active one in\n    // state.navigation\n    let { formMethod, formAction, formEncType } = state.navigation;\n    if (\n      !submission &&\n      !fetcherSubmission &&\n      formMethod &&\n      formAction &&\n      formEncType\n    ) {\n      submission = getSubmissionFromNavigation(state.navigation);\n    }\n\n    // If this was a 307/308 submission we want to preserve the HTTP method and\n    // re-submit the GET/POST/PUT/PATCH/DELETE as a submission navigation to the\n    // redirected location\n    let activeSubmission = submission || fetcherSubmission;\n    if (\n      redirectPreserveMethodStatusCodes.has(redirect.status) &&\n      activeSubmission &&\n      isMutationMethod(activeSubmission.formMethod)\n    ) {\n      await startNavigation(redirectHistoryAction, redirectLocation, {\n        submission: {\n          ...activeSubmission,\n          formAction: redirect.location,\n        },\n        // Preserve this flag across redirects\n        preventScrollReset: pendingPreventScrollReset,\n      });\n    } else {\n      // If we have a navigation submission, we will preserve it through the\n      // redirect navigation\n      let overrideNavigation = getLoadingNavigation(\n        redirectLocation,\n        submission\n      );\n      await startNavigation(redirectHistoryAction, redirectLocation, {\n        overrideNavigation,\n        // Send fetcher submissions through for shouldRevalidate\n        fetcherSubmission,\n        // Preserve this flag across redirects\n        preventScrollReset: pendingPreventScrollReset,\n      });\n    }\n  }\n\n  async function callLoadersAndMaybeResolveData(\n    currentMatches: AgnosticDataRouteMatch[],\n    matches: AgnosticDataRouteMatch[],\n    matchesToLoad: AgnosticDataRouteMatch[],\n    fetchersToLoad: RevalidatingFetcher[],\n    request: Request\n  ) {\n    // Call all navigation loaders and revalidating fetcher loaders in parallel,\n    // then slice off the results into separate arrays so we can handle them\n    // accordingly\n    let results = await Promise.all([\n      ...matchesToLoad.map((match) =>\n        callLoaderOrAction(\n          \"loader\",\n          request,\n          match,\n          matches,\n          manifest,\n          mapRouteProperties,\n          basename\n        )\n      ),\n      ...fetchersToLoad.map((f) => {\n        if (f.matches && f.match && f.controller) {\n          return callLoaderOrAction(\n            \"loader\",\n            createClientSideRequest(init.history, f.path, f.controller.signal),\n            f.match,\n            f.matches,\n            manifest,\n            mapRouteProperties,\n            basename\n          );\n        } else {\n          let error: ErrorResult = {\n            type: ResultType.error,\n            error: getInternalRouterError(404, { pathname: f.path }),\n          };\n          return error;\n        }\n      }),\n    ]);\n    let loaderResults = results.slice(0, matchesToLoad.length);\n    let fetcherResults = results.slice(matchesToLoad.length);\n\n    await Promise.all([\n      resolveDeferredResults(\n        currentMatches,\n        matchesToLoad,\n        loaderResults,\n        loaderResults.map(() => request.signal),\n        false,\n        state.loaderData\n      ),\n      resolveDeferredResults(\n        currentMatches,\n        fetchersToLoad.map((f) => f.match),\n        fetcherResults,\n        fetchersToLoad.map((f) => (f.controller ? f.controller.signal : null)),\n        true\n      ),\n    ]);\n\n    return { results, loaderResults, fetcherResults };\n  }\n\n  function interruptActiveLoads() {\n    // Every interruption triggers a revalidation\n    isRevalidationRequired = true;\n\n    // Cancel pending route-level deferreds and mark cancelled routes for\n    // revalidation\n    cancelledDeferredRoutes.push(...cancelActiveDeferreds());\n\n    // Abort in-flight fetcher loads\n    fetchLoadMatches.forEach((_, key) => {\n      if (fetchControllers.has(key)) {\n        cancelledFetcherLoads.push(key);\n        abortFetcher(key);\n      }\n    });\n  }\n\n  function setFetcherError(key: string, routeId: string, error: any) {\n    let boundaryMatch = findNearestBoundary(state.matches, routeId);\n    deleteFetcher(key);\n    updateState({\n      errors: {\n        [boundaryMatch.route.id]: error,\n      },\n      fetchers: new Map(state.fetchers),\n    });\n  }\n\n  function deleteFetcher(key: string): void {\n    let fetcher = state.fetchers.get(key);\n    // Don't abort the controller if this is a deletion of a fetcher.submit()\n    // in it's loading phase since - we don't want to abort the corresponding\n    // revalidation and want them to complete and land\n    if (\n      fetchControllers.has(key) &&\n      !(fetcher && fetcher.state === \"loading\" && fetchReloadIds.has(key))\n    ) {\n      abortFetcher(key);\n    }\n    fetchLoadMatches.delete(key);\n    fetchReloadIds.delete(key);\n    fetchRedirectIds.delete(key);\n    deletedFetchers.delete(key);\n    state.fetchers.delete(key);\n  }\n\n  function deleteFetcherAndUpdateState(key: string): void {\n    if (future.v7_fetcherPersist) {\n      let count = (activeFetchers.get(key) || 0) - 1;\n      if (count <= 0) {\n        activeFetchers.delete(key);\n        deletedFetchers.add(key);\n      } else {\n        activeFetchers.set(key, count);\n      }\n    } else {\n      deleteFetcher(key);\n    }\n    updateState({ fetchers: new Map(state.fetchers) });\n  }\n\n  function abortFetcher(key: string) {\n    let controller = fetchControllers.get(key);\n    invariant(controller, `Expected fetch controller: ${key}`);\n    controller.abort();\n    fetchControllers.delete(key);\n  }\n\n  function markFetchersDone(keys: string[]) {\n    for (let key of keys) {\n      let fetcher = getFetcher(key);\n      let doneFetcher = getDoneFetcher(fetcher.data);\n      state.fetchers.set(key, doneFetcher);\n    }\n  }\n\n  function markFetchRedirectsDone(): boolean {\n    let doneKeys = [];\n    let updatedFetchers = false;\n    for (let key of fetchRedirectIds) {\n      let fetcher = state.fetchers.get(key);\n      invariant(fetcher, `Expected fetcher: ${key}`);\n      if (fetcher.state === \"loading\") {\n        fetchRedirectIds.delete(key);\n        doneKeys.push(key);\n        updatedFetchers = true;\n      }\n    }\n    markFetchersDone(doneKeys);\n    return updatedFetchers;\n  }\n\n  function abortStaleFetchLoads(landedId: number): boolean {\n    let yeetedKeys = [];\n    for (let [key, id] of fetchReloadIds) {\n      if (id < landedId) {\n        let fetcher = state.fetchers.get(key);\n        invariant(fetcher, `Expected fetcher: ${key}`);\n        if (fetcher.state === \"loading\") {\n          abortFetcher(key);\n          fetchReloadIds.delete(key);\n          yeetedKeys.push(key);\n        }\n      }\n    }\n    markFetchersDone(yeetedKeys);\n    return yeetedKeys.length > 0;\n  }\n\n  function getBlocker(key: string, fn: BlockerFunction) {\n    let blocker: Blocker = state.blockers.get(key) || IDLE_BLOCKER;\n\n    if (blockerFunctions.get(key) !== fn) {\n      blockerFunctions.set(key, fn);\n    }\n\n    return blocker;\n  }\n\n  function deleteBlocker(key: string) {\n    state.blockers.delete(key);\n    blockerFunctions.delete(key);\n  }\n\n  // Utility function to update blockers, ensuring valid state transitions\n  function updateBlocker(key: string, newBlocker: Blocker) {\n    let blocker = state.blockers.get(key) || IDLE_BLOCKER;\n\n    // Poor mans state machine :)\n    // https://mermaid.live/edit#pako:eNqVkc9OwzAMxl8l8nnjAYrEtDIOHEBIgwvKJTReGy3_lDpIqO27k6awMG0XcrLlnz87nwdonESogKXXBuE79rq75XZO3-yHds0RJVuv70YrPlUrCEe2HfrORS3rubqZfuhtpg5C9wk5tZ4VKcRUq88q9Z8RS0-48cE1iHJkL0ugbHuFLus9L6spZy8nX9MP2CNdomVaposqu3fGayT8T8-jJQwhepo_UtpgBQaDEUom04dZhAN1aJBDlUKJBxE1ceB2Smj0Mln-IBW5AFU2dwUiktt_2Qaq2dBfaKdEup85UV7Yd-dKjlnkabl2Pvr0DTkTreM\n    invariant(\n      (blocker.state === \"unblocked\" && newBlocker.state === \"blocked\") ||\n        (blocker.state === \"blocked\" && newBlocker.state === \"blocked\") ||\n        (blocker.state === \"blocked\" && newBlocker.state === \"proceeding\") ||\n        (blocker.state === \"blocked\" && newBlocker.state === \"unblocked\") ||\n        (blocker.state === \"proceeding\" && newBlocker.state === \"unblocked\"),\n      `Invalid blocker state transition: ${blocker.state} -> ${newBlocker.state}`\n    );\n\n    let blockers = new Map(state.blockers);\n    blockers.set(key, newBlocker);\n    updateState({ blockers });\n  }\n\n  function shouldBlockNavigation({\n    currentLocation,\n    nextLocation,\n    historyAction,\n  }: {\n    currentLocation: Location;\n    nextLocation: Location;\n    historyAction: HistoryAction;\n  }): string | undefined {\n    if (blockerFunctions.size === 0) {\n      return;\n    }\n\n    // We ony support a single active blocker at the moment since we don't have\n    // any compelling use cases for multi-blocker yet\n    if (blockerFunctions.size > 1) {\n      warning(false, \"A router only supports one blocker at a time\");\n    }\n\n    let entries = Array.from(blockerFunctions.entries());\n    let [blockerKey, blockerFunction] = entries[entries.length - 1];\n    let blocker = state.blockers.get(blockerKey);\n\n    if (blocker && blocker.state === \"proceeding\") {\n      // If the blocker is currently proceeding, we don't need to re-check\n      // it and can let this navigation continue\n      return;\n    }\n\n    // At this point, we know we're unblocked/blocked so we need to check the\n    // user-provided blocker function\n    if (blockerFunction({ currentLocation, nextLocation, historyAction })) {\n      return blockerKey;\n    }\n  }\n\n  function cancelActiveDeferreds(\n    predicate?: (routeId: string) => boolean\n  ): string[] {\n    let cancelledRouteIds: string[] = [];\n    activeDeferreds.forEach((dfd, routeId) => {\n      if (!predicate || predicate(routeId)) {\n        // Cancel the deferred - but do not remove from activeDeferreds here -\n        // we rely on the subscribers to do that so our tests can assert proper\n        // cleanup via _internalActiveDeferreds\n        dfd.cancel();\n        cancelledRouteIds.push(routeId);\n        activeDeferreds.delete(routeId);\n      }\n    });\n    return cancelledRouteIds;\n  }\n\n  // Opt in to capturing and reporting scroll positions during navigations,\n  // used by the <ScrollRestoration> component\n  function enableScrollRestoration(\n    positions: Record<string, number>,\n    getPosition: GetScrollPositionFunction,\n    getKey?: GetScrollRestorationKeyFunction\n  ) {\n    savedScrollPositions = positions;\n    getScrollPosition = getPosition;\n    getScrollRestorationKey = getKey || null;\n\n    // Perform initial hydration scroll restoration, since we miss the boat on\n    // the initial updateState() because we've not yet rendered <ScrollRestoration/>\n    // and therefore have no savedScrollPositions available\n    if (!initialScrollRestored && state.navigation === IDLE_NAVIGATION) {\n      initialScrollRestored = true;\n      let y = getSavedScrollPosition(state.location, state.matches);\n      if (y != null) {\n        updateState({ restoreScrollPosition: y });\n      }\n    }\n\n    return () => {\n      savedScrollPositions = null;\n      getScrollPosition = null;\n      getScrollRestorationKey = null;\n    };\n  }\n\n  function getScrollKey(location: Location, matches: AgnosticDataRouteMatch[]) {\n    if (getScrollRestorationKey) {\n      let key = getScrollRestorationKey(\n        location,\n        matches.map((m) => convertRouteMatchToUiMatch(m, state.loaderData))\n      );\n      return key || location.key;\n    }\n    return location.key;\n  }\n\n  function saveScrollPosition(\n    location: Location,\n    matches: AgnosticDataRouteMatch[]\n  ): void {\n    if (savedScrollPositions && getScrollPosition) {\n      let key = getScrollKey(location, matches);\n      savedScrollPositions[key] = getScrollPosition();\n    }\n  }\n\n  function getSavedScrollPosition(\n    location: Location,\n    matches: AgnosticDataRouteMatch[]\n  ): number | null {\n    if (savedScrollPositions) {\n      let key = getScrollKey(location, matches);\n      let y = savedScrollPositions[key];\n      if (typeof y === \"number\") {\n        return y;\n      }\n    }\n    return null;\n  }\n\n  function _internalSetRoutes(newRoutes: AgnosticDataRouteObject[]) {\n    manifest = {};\n    inFlightDataRoutes = convertRoutesToDataRoutes(\n      newRoutes,\n      mapRouteProperties,\n      undefined,\n      manifest\n    );\n  }\n\n  router = {\n    get basename() {\n      return basename;\n    },\n    get state() {\n      return state;\n    },\n    get routes() {\n      return dataRoutes;\n    },\n    get window() {\n      return routerWindow;\n    },\n    initialize,\n    subscribe,\n    enableScrollRestoration,\n    navigate,\n    fetch,\n    revalidate,\n    // Passthrough to history-aware createHref used by useHref so we get proper\n    // hash-aware URLs in DOM paths\n    createHref: (to: To) => init.history.createHref(to),\n    encodeLocation: (to: To) => init.history.encodeLocation(to),\n    getFetcher,\n    deleteFetcher: deleteFetcherAndUpdateState,\n    dispose,\n    getBlocker,\n    deleteBlocker,\n    _internalFetchControllers: fetchControllers,\n    _internalActiveDeferreds: activeDeferreds,\n    // TODO: Remove setRoutes, it's temporary to avoid dealing with\n    // updating the tree while validating the update algorithm.\n    _internalSetRoutes,\n  };\n\n  return router;\n}\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region createStaticHandler\n////////////////////////////////////////////////////////////////////////////////\n\nexport const UNSAFE_DEFERRED_SYMBOL = Symbol(\"deferred\");\n\nexport interface CreateStaticHandlerOptions {\n  basename?: string;\n  /**\n   * @deprecated Use `mapRouteProperties` instead\n   */\n  detectErrorBoundary?: DetectErrorBoundaryFunction;\n  mapRouteProperties?: MapRoutePropertiesFunction;\n}\n\nexport function createStaticHandler(\n  routes: AgnosticRouteObject[],\n  opts?: CreateStaticHandlerOptions\n): StaticHandler {\n  invariant(\n    routes.length > 0,\n    \"You must provide a non-empty routes array to createStaticHandler\"\n  );\n\n  let manifest: RouteManifest = {};\n  let basename = (opts ? opts.basename : null) || \"/\";\n  let mapRouteProperties: MapRoutePropertiesFunction;\n  if (opts?.mapRouteProperties) {\n    mapRouteProperties = opts.mapRouteProperties;\n  } else if (opts?.detectErrorBoundary) {\n    // If they are still using the deprecated version, wrap it with the new API\n    let detectErrorBoundary = opts.detectErrorBoundary;\n    mapRouteProperties = (route) => ({\n      hasErrorBoundary: detectErrorBoundary(route),\n    });\n  } else {\n    mapRouteProperties = defaultMapRouteProperties;\n  }\n\n  let dataRoutes = convertRoutesToDataRoutes(\n    routes,\n    mapRouteProperties,\n    undefined,\n    manifest\n  );\n\n  /**\n   * The query() method is intended for document requests, in which we want to\n   * call an optional action and potentially multiple loaders for all nested\n   * routes.  It returns a StaticHandlerContext object, which is very similar\n   * to the router state (location, loaderData, actionData, errors, etc.) and\n   * also adds SSR-specific information such as the statusCode and headers\n   * from action/loaders Responses.\n   *\n   * It _should_ never throw and should report all errors through the\n   * returned context.errors object, properly associating errors to their error\n   * boundary.  Additionally, it tracks _deepestRenderedBoundaryId which can be\n   * used to emulate React error boundaries during SSr by performing a second\n   * pass only down to the boundaryId.\n   *\n   * The one exception where we do not return a StaticHandlerContext is when a\n   * redirect response is returned or thrown from any action/loader.  We\n   * propagate that out and return the raw Response so the HTTP server can\n   * return it directly.\n   */\n  async function query(\n    request: Request,\n    { requestContext }: { requestContext?: unknown } = {}\n  ): Promise<StaticHandlerContext | Response> {\n    let url = new URL(request.url);\n    let method = request.method;\n    let location = createLocation(\"\", createPath(url), null, \"default\");\n    let matches = matchRoutes(dataRoutes, location, basename);\n\n    // SSR supports HEAD requests while SPA doesn't\n    if (!isValidMethod(method) && method !== \"HEAD\") {\n      let error = getInternalRouterError(405, { method });\n      let { matches: methodNotAllowedMatches, route } =\n        getShortCircuitMatches(dataRoutes);\n      return {\n        basename,\n        location,\n        matches: methodNotAllowedMatches,\n        loaderData: {},\n        actionData: null,\n        errors: {\n          [route.id]: error,\n        },\n        statusCode: error.status,\n        loaderHeaders: {},\n        actionHeaders: {},\n        activeDeferreds: null,\n      };\n    } else if (!matches) {\n      let error = getInternalRouterError(404, { pathname: location.pathname });\n      let { matches: notFoundMatches, route } =\n        getShortCircuitMatches(dataRoutes);\n      return {\n        basename,\n        location,\n        matches: notFoundMatches,\n        loaderData: {},\n        actionData: null,\n        errors: {\n          [route.id]: error,\n        },\n        statusCode: error.status,\n        loaderHeaders: {},\n        actionHeaders: {},\n        activeDeferreds: null,\n      };\n    }\n\n    let result = await queryImpl(request, location, matches, requestContext);\n    if (isResponse(result)) {\n      return result;\n    }\n\n    // When returning StaticHandlerContext, we patch back in the location here\n    // since we need it for React Context.  But this helps keep our submit and\n    // loadRouteData operating on a Request instead of a Location\n    return { location, basename, ...result };\n  }\n\n  /**\n   * The queryRoute() method is intended for targeted route requests, either\n   * for fetch ?_data requests or resource route requests.  In this case, we\n   * are only ever calling a single action or loader, and we are returning the\n   * returned value directly.  In most cases, this will be a Response returned\n   * from the action/loader, but it may be a primitive or other value as well -\n   * and in such cases the calling context should handle that accordingly.\n   *\n   * We do respect the throw/return differentiation, so if an action/loader\n   * throws, then this method will throw the value.  This is important so we\n   * can do proper boundary identification in Remix where a thrown Response\n   * must go to the Catch Boundary but a returned Response is happy-path.\n   *\n   * One thing to note is that any Router-initiated Errors that make sense\n   * to associate with a status code will be thrown as an ErrorResponse\n   * instance which include the raw Error, such that the calling context can\n   * serialize the error as they see fit while including the proper response\n   * code.  Examples here are 404 and 405 errors that occur prior to reaching\n   * any user-defined loaders.\n   */\n  async function queryRoute(\n    request: Request,\n    {\n      routeId,\n      requestContext,\n    }: { requestContext?: unknown; routeId?: string } = {}\n  ): Promise<any> {\n    let url = new URL(request.url);\n    let method = request.method;\n    let location = createLocation(\"\", createPath(url), null, \"default\");\n    let matches = matchRoutes(dataRoutes, location, basename);\n\n    // SSR supports HEAD requests while SPA doesn't\n    if (!isValidMethod(method) && method !== \"HEAD\" && method !== \"OPTIONS\") {\n      throw getInternalRouterError(405, { method });\n    } else if (!matches) {\n      throw getInternalRouterError(404, { pathname: location.pathname });\n    }\n\n    let match = routeId\n      ? matches.find((m) => m.route.id === routeId)\n      : getTargetMatch(matches, location);\n\n    if (routeId && !match) {\n      throw getInternalRouterError(403, {\n        pathname: location.pathname,\n        routeId,\n      });\n    } else if (!match) {\n      // This should never hit I don't think?\n      throw getInternalRouterError(404, { pathname: location.pathname });\n    }\n\n    let result = await queryImpl(\n      request,\n      location,\n      matches,\n      requestContext,\n      match\n    );\n    if (isResponse(result)) {\n      return result;\n    }\n\n    let error = result.errors ? Object.values(result.errors)[0] : undefined;\n    if (error !== undefined) {\n      // If we got back result.errors, that means the loader/action threw\n      // _something_ that wasn't a Response, but it's not guaranteed/required\n      // to be an `instanceof Error` either, so we have to use throw here to\n      // preserve the \"error\" state outside of queryImpl.\n      throw error;\n    }\n\n    // Pick off the right state value to return\n    if (result.actionData) {\n      return Object.values(result.actionData)[0];\n    }\n\n    if (result.loaderData) {\n      let data = Object.values(result.loaderData)[0];\n      if (result.activeDeferreds?.[match.route.id]) {\n        data[UNSAFE_DEFERRED_SYMBOL] = result.activeDeferreds[match.route.id];\n      }\n      return data;\n    }\n\n    return undefined;\n  }\n\n  async function queryImpl(\n    request: Request,\n    location: Location,\n    matches: AgnosticDataRouteMatch[],\n    requestContext: unknown,\n    routeMatch?: AgnosticDataRouteMatch\n  ): Promise<Omit<StaticHandlerContext, \"location\" | \"basename\"> | Response> {\n    invariant(\n      request.signal,\n      \"query()/queryRoute() requests must contain an AbortController signal\"\n    );\n\n    try {\n      if (isMutationMethod(request.method.toLowerCase())) {\n        let result = await submit(\n          request,\n          matches,\n          routeMatch || getTargetMatch(matches, location),\n          requestContext,\n          routeMatch != null\n        );\n        return result;\n      }\n\n      let result = await loadRouteData(\n        request,\n        matches,\n        requestContext,\n        routeMatch\n      );\n      return isResponse(result)\n        ? result\n        : {\n            ...result,\n            actionData: null,\n            actionHeaders: {},\n          };\n    } catch (e) {\n      // If the user threw/returned a Response in callLoaderOrAction, we throw\n      // it to bail out and then return or throw here based on whether the user\n      // returned or threw\n      if (isQueryRouteResponse(e)) {\n        if (e.type === ResultType.error) {\n          throw e.response;\n        }\n        return e.response;\n      }\n      // Redirects are always returned since they don't propagate to catch\n      // boundaries\n      if (isRedirectResponse(e)) {\n        return e;\n      }\n      throw e;\n    }\n  }\n\n  async function submit(\n    request: Request,\n    matches: AgnosticDataRouteMatch[],\n    actionMatch: AgnosticDataRouteMatch,\n    requestContext: unknown,\n    isRouteRequest: boolean\n  ): Promise<Omit<StaticHandlerContext, \"location\" | \"basename\"> | Response> {\n    let result: DataResult;\n\n    if (!actionMatch.route.action && !actionMatch.route.lazy) {\n      let error = getInternalRouterError(405, {\n        method: request.method,\n        pathname: new URL(request.url).pathname,\n        routeId: actionMatch.route.id,\n      });\n      if (isRouteRequest) {\n        throw error;\n      }\n      result = {\n        type: ResultType.error,\n        error,\n      };\n    } else {\n      result = await callLoaderOrAction(\n        \"action\",\n        request,\n        actionMatch,\n        matches,\n        manifest,\n        mapRouteProperties,\n        basename,\n        { isStaticRequest: true, isRouteRequest, requestContext }\n      );\n\n      if (request.signal.aborted) {\n        let method = isRouteRequest ? \"queryRoute\" : \"query\";\n        throw new Error(\n          `${method}() call aborted: ${request.method} ${request.url}`\n        );\n      }\n    }\n\n    if (isRedirectResult(result)) {\n      // Uhhhh - this should never happen, we should always throw these from\n      // callLoaderOrAction, but the type narrowing here keeps TS happy and we\n      // can get back on the \"throw all redirect responses\" train here should\n      // this ever happen :/\n      throw new Response(null, {\n        status: result.status,\n        headers: {\n          Location: result.location,\n        },\n      });\n    }\n\n    if (isDeferredResult(result)) {\n      let error = getInternalRouterError(400, { type: \"defer-action\" });\n      if (isRouteRequest) {\n        throw error;\n      }\n      result = {\n        type: ResultType.error,\n        error,\n      };\n    }\n\n    if (isRouteRequest) {\n      // Note: This should only be non-Response values if we get here, since\n      // isRouteRequest should throw any Response received in callLoaderOrAction\n      if (isErrorResult(result)) {\n        throw result.error;\n      }\n\n      return {\n        matches: [actionMatch],\n        loaderData: {},\n        actionData: { [actionMatch.route.id]: result.data },\n        errors: null,\n        // Note: statusCode + headers are unused here since queryRoute will\n        // return the raw Response or value\n        statusCode: 200,\n        loaderHeaders: {},\n        actionHeaders: {},\n        activeDeferreds: null,\n      };\n    }\n\n    if (isErrorResult(result)) {\n      // Store off the pending error - we use it to determine which loaders\n      // to call and will commit it when we complete the navigation\n      let boundaryMatch = findNearestBoundary(matches, actionMatch.route.id);\n      let context = await loadRouteData(\n        request,\n        matches,\n        requestContext,\n        undefined,\n        {\n          [boundaryMatch.route.id]: result.error,\n        }\n      );\n\n      // action status codes take precedence over loader status codes\n      return {\n        ...context,\n        statusCode: isRouteErrorResponse(result.error)\n          ? result.error.status\n          : 500,\n        actionData: null,\n        actionHeaders: {\n          ...(result.headers ? { [actionMatch.route.id]: result.headers } : {}),\n        },\n      };\n    }\n\n    // Create a GET request for the loaders\n    let loaderRequest = new Request(request.url, {\n      headers: request.headers,\n      redirect: request.redirect,\n      signal: request.signal,\n    });\n    let context = await loadRouteData(loaderRequest, matches, requestContext);\n\n    return {\n      ...context,\n      // action status codes take precedence over loader status codes\n      ...(result.statusCode ? { statusCode: result.statusCode } : {}),\n      actionData: {\n        [actionMatch.route.id]: result.data,\n      },\n      actionHeaders: {\n        ...(result.headers ? { [actionMatch.route.id]: result.headers } : {}),\n      },\n    };\n  }\n\n  async function loadRouteData(\n    request: Request,\n    matches: AgnosticDataRouteMatch[],\n    requestContext: unknown,\n    routeMatch?: AgnosticDataRouteMatch,\n    pendingActionError?: RouteData\n  ): Promise<\n    | Omit<\n        StaticHandlerContext,\n        \"location\" | \"basename\" | \"actionData\" | \"actionHeaders\"\n      >\n    | Response\n  > {\n    let isRouteRequest = routeMatch != null;\n\n    // Short circuit if we have no loaders to run (queryRoute())\n    if (\n      isRouteRequest &&\n      !routeMatch?.route.loader &&\n      !routeMatch?.route.lazy\n    ) {\n      throw getInternalRouterError(400, {\n        method: request.method,\n        pathname: new URL(request.url).pathname,\n        routeId: routeMatch?.route.id,\n      });\n    }\n\n    let requestMatches = routeMatch\n      ? [routeMatch]\n      : getLoaderMatchesUntilBoundary(\n          matches,\n          Object.keys(pendingActionError || {})[0]\n        );\n    let matchesToLoad = requestMatches.filter(\n      (m) => m.route.loader || m.route.lazy\n    );\n\n    // Short circuit if we have no loaders to run (query())\n    if (matchesToLoad.length === 0) {\n      return {\n        matches,\n        // Add a null for all matched routes for proper revalidation on the client\n        loaderData: matches.reduce(\n          (acc, m) => Object.assign(acc, { [m.route.id]: null }),\n          {}\n        ),\n        errors: pendingActionError || null,\n        statusCode: 200,\n        loaderHeaders: {},\n        activeDeferreds: null,\n      };\n    }\n\n    let results = await Promise.all([\n      ...matchesToLoad.map((match) =>\n        callLoaderOrAction(\n          \"loader\",\n          request,\n          match,\n          matches,\n          manifest,\n          mapRouteProperties,\n          basename,\n          { isStaticRequest: true, isRouteRequest, requestContext }\n        )\n      ),\n    ]);\n\n    if (request.signal.aborted) {\n      let method = isRouteRequest ? \"queryRoute\" : \"query\";\n      throw new Error(\n        `${method}() call aborted: ${request.method} ${request.url}`\n      );\n    }\n\n    // Process and commit output from loaders\n    let activeDeferreds = new Map<string, DeferredData>();\n    let context = processRouteLoaderData(\n      matches,\n      matchesToLoad,\n      results,\n      pendingActionError,\n      activeDeferreds\n    );\n\n    // Add a null for any non-loader matches for proper revalidation on the client\n    let executedLoaders = new Set<string>(\n      matchesToLoad.map((match) => match.route.id)\n    );\n    matches.forEach((match) => {\n      if (!executedLoaders.has(match.route.id)) {\n        context.loaderData[match.route.id] = null;\n      }\n    });\n\n    return {\n      ...context,\n      matches,\n      activeDeferreds:\n        activeDeferreds.size > 0\n          ? Object.fromEntries(activeDeferreds.entries())\n          : null,\n    };\n  }\n\n  return {\n    dataRoutes,\n    query,\n    queryRoute,\n  };\n}\n\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Helpers\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * Given an existing StaticHandlerContext and an error thrown at render time,\n * provide an updated StaticHandlerContext suitable for a second SSR render\n */\nexport function getStaticContextFromError(\n  routes: AgnosticDataRouteObject[],\n  context: StaticHandlerContext,\n  error: any\n) {\n  let newContext: StaticHandlerContext = {\n    ...context,\n    statusCode: 500,\n    errors: {\n      [context._deepestRenderedBoundaryId || routes[0].id]: error,\n    },\n  };\n  return newContext;\n}\n\nfunction isSubmissionNavigation(\n  opts: BaseNavigateOrFetchOptions\n): opts is SubmissionNavigateOptions {\n  return (\n    opts != null &&\n    ((\"formData\" in opts && opts.formData != null) ||\n      (\"body\" in opts && opts.body !== undefined))\n  );\n}\n\nfunction normalizeTo(\n  location: Path,\n  matches: AgnosticDataRouteMatch[],\n  basename: string,\n  prependBasename: boolean,\n  to: To | null,\n  fromRouteId?: string,\n  relative?: RelativeRoutingType\n) {\n  let contextualMatches: AgnosticDataRouteMatch[];\n  let activeRouteMatch: AgnosticDataRouteMatch | undefined;\n  if (fromRouteId != null && relative !== \"path\") {\n    // Grab matches up to the calling route so our route-relative logic is\n    // relative to the correct source route.  When using relative:path,\n    // fromRouteId is ignored since that is always relative to the current\n    // location path\n    contextualMatches = [];\n    for (let match of matches) {\n      contextualMatches.push(match);\n      if (match.route.id === fromRouteId) {\n        activeRouteMatch = match;\n        break;\n      }\n    }\n  } else {\n    contextualMatches = matches;\n    activeRouteMatch = matches[matches.length - 1];\n  }\n\n  // Resolve the relative path\n  let path = resolveTo(\n    to ? to : \".\",\n    getPathContributingMatches(contextualMatches).map((m) => m.pathnameBase),\n    stripBasename(location.pathname, basename) || location.pathname,\n    relative === \"path\"\n  );\n\n  // When `to` is not specified we inherit search/hash from the current\n  // location, unlike when to=\".\" and we just inherit the path.\n  // See https://github.com/remix-run/remix/issues/927\n  if (to == null) {\n    path.search = location.search;\n    path.hash = location.hash;\n  }\n\n  // Add an ?index param for matched index routes if we don't already have one\n  if (\n    (to == null || to === \"\" || to === \".\") &&\n    activeRouteMatch &&\n    activeRouteMatch.route.index &&\n    !hasNakedIndexQuery(path.search)\n  ) {\n    path.search = path.search\n      ? path.search.replace(/^\\?/, \"?index&\")\n      : \"?index\";\n  }\n\n  // If we're operating within a basename, prepend it to the pathname.  If\n  // this is a root navigation, then just use the raw basename which allows\n  // the basename to have full control over the presence of a trailing slash\n  // on root actions\n  if (prependBasename && basename !== \"/\") {\n    path.pathname =\n      path.pathname === \"/\" ? basename : joinPaths([basename, path.pathname]);\n  }\n\n  return createPath(path);\n}\n\n// Normalize navigation options by converting formMethod=GET formData objects to\n// URLSearchParams so they behave identically to links with query params\nfunction normalizeNavigateOptions(\n  normalizeFormMethod: boolean,\n  isFetcher: boolean,\n  path: string,\n  opts?: BaseNavigateOrFetchOptions\n): {\n  path: string;\n  submission?: Submission;\n  error?: ErrorResponseImpl;\n} {\n  // Return location verbatim on non-submission navigations\n  if (!opts || !isSubmissionNavigation(opts)) {\n    return { path };\n  }\n\n  if (opts.formMethod && !isValidMethod(opts.formMethod)) {\n    return {\n      path,\n      error: getInternalRouterError(405, { method: opts.formMethod }),\n    };\n  }\n\n  let getInvalidBodyError = () => ({\n    path,\n    error: getInternalRouterError(400, { type: \"invalid-body\" }),\n  });\n\n  // Create a Submission on non-GET navigations\n  let rawFormMethod = opts.formMethod || \"get\";\n  let formMethod = normalizeFormMethod\n    ? (rawFormMethod.toUpperCase() as V7_FormMethod)\n    : (rawFormMethod.toLowerCase() as FormMethod);\n  let formAction = stripHashFromPath(path);\n\n  if (opts.body !== undefined) {\n    if (opts.formEncType === \"text/plain\") {\n      // text only support POST/PUT/PATCH/DELETE submissions\n      if (!isMutationMethod(formMethod)) {\n        return getInvalidBodyError();\n      }\n\n      let text =\n        typeof opts.body === \"string\"\n          ? opts.body\n          : opts.body instanceof FormData ||\n            opts.body instanceof URLSearchParams\n          ? // https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#plain-text-form-data\n            Array.from(opts.body.entries()).reduce(\n              (acc, [name, value]) => `${acc}${name}=${value}\\n`,\n              \"\"\n            )\n          : String(opts.body);\n\n      return {\n        path,\n        submission: {\n          formMethod,\n          formAction,\n          formEncType: opts.formEncType,\n          formData: undefined,\n          json: undefined,\n          text,\n        },\n      };\n    } else if (opts.formEncType === \"application/json\") {\n      // json only supports POST/PUT/PATCH/DELETE submissions\n      if (!isMutationMethod(formMethod)) {\n        return getInvalidBodyError();\n      }\n\n      try {\n        let json =\n          typeof opts.body === \"string\" ? JSON.parse(opts.body) : opts.body;\n\n        return {\n          path,\n          submission: {\n            formMethod,\n            formAction,\n            formEncType: opts.formEncType,\n            formData: undefined,\n            json,\n            text: undefined,\n          },\n        };\n      } catch (e) {\n        return getInvalidBodyError();\n      }\n    }\n  }\n\n  invariant(\n    typeof FormData === \"function\",\n    \"FormData is not available in this environment\"\n  );\n\n  let searchParams: URLSearchParams;\n  let formData: FormData;\n\n  if (opts.formData) {\n    searchParams = convertFormDataToSearchParams(opts.formData);\n    formData = opts.formData;\n  } else if (opts.body instanceof FormData) {\n    searchParams = convertFormDataToSearchParams(opts.body);\n    formData = opts.body;\n  } else if (opts.body instanceof URLSearchParams) {\n    searchParams = opts.body;\n    formData = convertSearchParamsToFormData(searchParams);\n  } else if (opts.body == null) {\n    searchParams = new URLSearchParams();\n    formData = new FormData();\n  } else {\n    try {\n      searchParams = new URLSearchParams(opts.body);\n      formData = convertSearchParamsToFormData(searchParams);\n    } catch (e) {\n      return getInvalidBodyError();\n    }\n  }\n\n  let submission: Submission = {\n    formMethod,\n    formAction,\n    formEncType:\n      (opts && opts.formEncType) || \"application/x-www-form-urlencoded\",\n    formData,\n    json: undefined,\n    text: undefined,\n  };\n\n  if (isMutationMethod(submission.formMethod)) {\n    return { path, submission };\n  }\n\n  // Flatten submission onto URLSearchParams for GET submissions\n  let parsedPath = parsePath(path);\n  // On GET navigation submissions we can drop the ?index param from the\n  // resulting location since all loaders will run.  But fetcher GET submissions\n  // only run a single loader so we need to preserve any incoming ?index params\n  if (isFetcher && parsedPath.search && hasNakedIndexQuery(parsedPath.search)) {\n    searchParams.append(\"index\", \"\");\n  }\n  parsedPath.search = `?${searchParams}`;\n\n  return { path: createPath(parsedPath), submission };\n}\n\n// Filter out all routes below any caught error as they aren't going to\n// render so we don't need to load them\nfunction getLoaderMatchesUntilBoundary(\n  matches: AgnosticDataRouteMatch[],\n  boundaryId?: string\n) {\n  let boundaryMatches = matches;\n  if (boundaryId) {\n    let index = matches.findIndex((m) => m.route.id === boundaryId);\n    if (index >= 0) {\n      boundaryMatches = matches.slice(0, index);\n    }\n  }\n  return boundaryMatches;\n}\n\nfunction getMatchesToLoad(\n  history: History,\n  state: RouterState,\n  matches: AgnosticDataRouteMatch[],\n  submission: Submission | undefined,\n  location: Location,\n  isRevalidationRequired: boolean,\n  cancelledDeferredRoutes: string[],\n  cancelledFetcherLoads: string[],\n  fetchLoadMatches: Map<string, FetchLoadMatch>,\n  fetchRedirectIds: Set<string>,\n  routesToUse: AgnosticDataRouteObject[],\n  basename: string | undefined,\n  pendingActionData?: RouteData,\n  pendingError?: RouteData\n): [AgnosticDataRouteMatch[], RevalidatingFetcher[]] {\n  let actionResult = pendingError\n    ? Object.values(pendingError)[0]\n    : pendingActionData\n    ? Object.values(pendingActionData)[0]\n    : undefined;\n\n  let currentUrl = history.createURL(state.location);\n  let nextUrl = history.createURL(location);\n\n  // Pick navigation matches that are net-new or qualify for revalidation\n  let boundaryId = pendingError ? Object.keys(pendingError)[0] : undefined;\n  let boundaryMatches = getLoaderMatchesUntilBoundary(matches, boundaryId);\n\n  let navigationMatches = boundaryMatches.filter((match, index) => {\n    if (match.route.lazy) {\n      // We haven't loaded this route yet so we don't know if it's got a loader!\n      return true;\n    }\n    if (match.route.loader == null) {\n      return false;\n    }\n\n    // Always call the loader on new route instances and pending defer cancellations\n    if (\n      isNewLoader(state.loaderData, state.matches[index], match) ||\n      cancelledDeferredRoutes.some((id) => id === match.route.id)\n    ) {\n      return true;\n    }\n\n    // This is the default implementation for when we revalidate.  If the route\n    // provides it's own implementation, then we give them full control but\n    // provide this value so they can leverage it if needed after they check\n    // their own specific use cases\n    let currentRouteMatch = state.matches[index];\n    let nextRouteMatch = match;\n\n    return shouldRevalidateLoader(match, {\n      currentUrl,\n      currentParams: currentRouteMatch.params,\n      nextUrl,\n      nextParams: nextRouteMatch.params,\n      ...submission,\n      actionResult,\n      defaultShouldRevalidate:\n        // Forced revalidation due to submission, useRevalidator, or X-Remix-Revalidate\n        isRevalidationRequired ||\n        // Clicked the same link, resubmitted a GET form\n        currentUrl.pathname + currentUrl.search ===\n          nextUrl.pathname + nextUrl.search ||\n        // Search params affect all loaders\n        currentUrl.search !== nextUrl.search ||\n        isNewRouteInstance(currentRouteMatch, nextRouteMatch),\n    });\n  });\n\n  // Pick fetcher.loads that need to be revalidated\n  let revalidatingFetchers: RevalidatingFetcher[] = [];\n  fetchLoadMatches.forEach((f, key) => {\n    // Don't revalidate if fetcher won't be present in the subsequent render\n    if (!matches.some((m) => m.route.id === f.routeId)) {\n      return;\n    }\n\n    let fetcherMatches = matchRoutes(routesToUse, f.path, basename);\n\n    // If the fetcher path no longer matches, push it in with null matches so\n    // we can trigger a 404 in callLoadersAndMaybeResolveData.  Note this is\n    // currently only a use-case for Remix HMR where the route tree can change\n    // at runtime and remove a route previously loaded via a fetcher\n    if (!fetcherMatches) {\n      revalidatingFetchers.push({\n        key,\n        routeId: f.routeId,\n        path: f.path,\n        matches: null,\n        match: null,\n        controller: null,\n      });\n      return;\n    }\n\n    // Revalidating fetchers are decoupled from the route matches since they\n    // load from a static href.  They revalidate based on explicit revalidation\n    // (submission, useRevalidator, or X-Remix-Revalidate)\n    let fetcher = state.fetchers.get(key);\n    let fetcherMatch = getTargetMatch(fetcherMatches, f.path);\n\n    let shouldRevalidate = false;\n    if (fetchRedirectIds.has(key)) {\n      // Never trigger a revalidation of an actively redirecting fetcher\n      shouldRevalidate = false;\n    } else if (cancelledFetcherLoads.includes(key)) {\n      // Always revalidate if the fetcher was cancelled\n      shouldRevalidate = true;\n    } else if (\n      fetcher &&\n      fetcher.state !== \"idle\" &&\n      fetcher.data === undefined\n    ) {\n      // If the fetcher hasn't ever completed loading yet, then this isn't a\n      // revalidation, it would just be a brand new load if an explicit\n      // revalidation is required\n      shouldRevalidate = isRevalidationRequired;\n    } else {\n      // Otherwise fall back on any user-defined shouldRevalidate, defaulting\n      // to explicit revalidations only\n      shouldRevalidate = shouldRevalidateLoader(fetcherMatch, {\n        currentUrl,\n        currentParams: state.matches[state.matches.length - 1].params,\n        nextUrl,\n        nextParams: matches[matches.length - 1].params,\n        ...submission,\n        actionResult,\n        defaultShouldRevalidate: isRevalidationRequired,\n      });\n    }\n\n    if (shouldRevalidate) {\n      revalidatingFetchers.push({\n        key,\n        routeId: f.routeId,\n        path: f.path,\n        matches: fetcherMatches,\n        match: fetcherMatch,\n        controller: new AbortController(),\n      });\n    }\n  });\n\n  return [navigationMatches, revalidatingFetchers];\n}\n\nfunction isNewLoader(\n  currentLoaderData: RouteData,\n  currentMatch: AgnosticDataRouteMatch,\n  match: AgnosticDataRouteMatch\n) {\n  let isNew =\n    // [a] -> [a, b]\n    !currentMatch ||\n    // [a, b] -> [a, c]\n    match.route.id !== currentMatch.route.id;\n\n  // Handle the case that we don't have data for a re-used route, potentially\n  // from a prior error or from a cancelled pending deferred\n  let isMissingData = currentLoaderData[match.route.id] === undefined;\n\n  // Always load if this is a net-new route or we don't yet have data\n  return isNew || isMissingData;\n}\n\nfunction isNewRouteInstance(\n  currentMatch: AgnosticDataRouteMatch,\n  match: AgnosticDataRouteMatch\n) {\n  let currentPath = currentMatch.route.path;\n  return (\n    // param change for this match, /users/123 -> /users/456\n    currentMatch.pathname !== match.pathname ||\n    // splat param changed, which is not present in match.path\n    // e.g. /files/images/avatar.jpg -> files/finances.xls\n    (currentPath != null &&\n      currentPath.endsWith(\"*\") &&\n      currentMatch.params[\"*\"] !== match.params[\"*\"])\n  );\n}\n\nfunction shouldRevalidateLoader(\n  loaderMatch: AgnosticDataRouteMatch,\n  arg: ShouldRevalidateFunctionArgs\n) {\n  if (loaderMatch.route.shouldRevalidate) {\n    let routeChoice = loaderMatch.route.shouldRevalidate(arg);\n    if (typeof routeChoice === \"boolean\") {\n      return routeChoice;\n    }\n  }\n\n  return arg.defaultShouldRevalidate;\n}\n\n/**\n * Execute route.lazy() methods to lazily load route modules (loader, action,\n * shouldRevalidate) and update the routeManifest in place which shares objects\n * with dataRoutes so those get updated as well.\n */\nasync function loadLazyRouteModule(\n  route: AgnosticDataRouteObject,\n  mapRouteProperties: MapRoutePropertiesFunction,\n  manifest: RouteManifest\n) {\n  if (!route.lazy) {\n    return;\n  }\n\n  let lazyRoute = await route.lazy();\n\n  // If the lazy route function was executed and removed by another parallel\n  // call then we can return - first lazy() to finish wins because the return\n  // value of lazy is expected to be static\n  if (!route.lazy) {\n    return;\n  }\n\n  let routeToUpdate = manifest[route.id];\n  invariant(routeToUpdate, \"No route found in manifest\");\n\n  // Update the route in place.  This should be safe because there's no way\n  // we could yet be sitting on this route as we can't get there without\n  // resolving lazy() first.\n  //\n  // This is different than the HMR \"update\" use-case where we may actively be\n  // on the route being updated.  The main concern boils down to \"does this\n  // mutation affect any ongoing navigations or any current state.matches\n  // values?\".  If not, it should be safe to update in place.\n  let routeUpdates: Record<string, any> = {};\n  for (let lazyRouteProperty in lazyRoute) {\n    let staticRouteValue =\n      routeToUpdate[lazyRouteProperty as keyof typeof routeToUpdate];\n\n    let isPropertyStaticallyDefined =\n      staticRouteValue !== undefined &&\n      // This property isn't static since it should always be updated based\n      // on the route updates\n      lazyRouteProperty !== \"hasErrorBoundary\";\n\n    warning(\n      !isPropertyStaticallyDefined,\n      `Route \"${routeToUpdate.id}\" has a static property \"${lazyRouteProperty}\" ` +\n        `defined but its lazy function is also returning a value for this property. ` +\n        `The lazy route property \"${lazyRouteProperty}\" will be ignored.`\n    );\n\n    if (\n      !isPropertyStaticallyDefined &&\n      !immutableRouteKeys.has(lazyRouteProperty as ImmutableRouteKey)\n    ) {\n      routeUpdates[lazyRouteProperty] =\n        lazyRoute[lazyRouteProperty as keyof typeof lazyRoute];\n    }\n  }\n\n  // Mutate the route with the provided updates.  Do this first so we pass\n  // the updated version to mapRouteProperties\n  Object.assign(routeToUpdate, routeUpdates);\n\n  // Mutate the `hasErrorBoundary` property on the route based on the route\n  // updates and remove the `lazy` function so we don't resolve the lazy\n  // route again.\n  Object.assign(routeToUpdate, {\n    // To keep things framework agnostic, we use the provided\n    // `mapRouteProperties` (or wrapped `detectErrorBoundary`) function to\n    // set the framework-aware properties (`element`/`hasErrorBoundary`) since\n    // the logic will differ between frameworks.\n    ...mapRouteProperties(routeToUpdate),\n    lazy: undefined,\n  });\n}\n\nasync function callLoaderOrAction(\n  type: \"loader\" | \"action\",\n  request: Request,\n  match: AgnosticDataRouteMatch,\n  matches: AgnosticDataRouteMatch[],\n  manifest: RouteManifest,\n  mapRouteProperties: MapRoutePropertiesFunction,\n  basename: string,\n  opts: {\n    isStaticRequest?: boolean;\n    isRouteRequest?: boolean;\n    requestContext?: unknown;\n  } = {}\n): Promise<DataResult> {\n  let resultType;\n  let result;\n  let onReject: (() => void) | undefined;\n\n  let runHandler = (handler: ActionFunction | LoaderFunction) => {\n    // Setup a promise we can race against so that abort signals short circuit\n    let reject: () => void;\n    let abortPromise = new Promise((_, r) => (reject = r));\n    onReject = () => reject();\n    request.signal.addEventListener(\"abort\", onReject);\n    return Promise.race([\n      handler({\n        request,\n        params: match.params,\n        context: opts.requestContext,\n      }),\n      abortPromise,\n    ]);\n  };\n\n  try {\n    let handler = match.route[type];\n\n    if (match.route.lazy) {\n      if (handler) {\n        // Run statically defined handler in parallel with lazy()\n        let handlerError;\n        let values = await Promise.all([\n          // If the handler throws, don't let it immediately bubble out,\n          // since we need to let the lazy() execution finish so we know if this\n          // route has a boundary that can handle the error\n          runHandler(handler).catch((e) => {\n            handlerError = e;\n          }),\n          loadLazyRouteModule(match.route, mapRouteProperties, manifest),\n        ]);\n        if (handlerError) {\n          throw handlerError;\n        }\n        result = values[0];\n      } else {\n        // Load lazy route module, then run any returned handler\n        await loadLazyRouteModule(match.route, mapRouteProperties, manifest);\n\n        handler = match.route[type];\n        if (handler) {\n          // Handler still run even if we got interrupted to maintain consistency\n          // with un-abortable behavior of handler execution on non-lazy or\n          // previously-lazy-loaded routes\n          result = await runHandler(handler);\n        } else if (type === \"action\") {\n          let url = new URL(request.url);\n          let pathname = url.pathname + url.search;\n          throw getInternalRouterError(405, {\n            method: request.method,\n            pathname,\n            routeId: match.route.id,\n          });\n        } else {\n          // lazy() route has no loader to run.  Short circuit here so we don't\n          // hit the invariant below that errors on returning undefined.\n          return { type: ResultType.data, data: undefined };\n        }\n      }\n    } else if (!handler) {\n      let url = new URL(request.url);\n      let pathname = url.pathname + url.search;\n      throw getInternalRouterError(404, {\n        pathname,\n      });\n    } else {\n      result = await runHandler(handler);\n    }\n\n    invariant(\n      result !== undefined,\n      `You defined ${type === \"action\" ? \"an action\" : \"a loader\"} for route ` +\n        `\"${match.route.id}\" but didn't return anything from your \\`${type}\\` ` +\n        `function. Please return a value or \\`null\\`.`\n    );\n  } catch (e) {\n    resultType = ResultType.error;\n    result = e;\n  } finally {\n    if (onReject) {\n      request.signal.removeEventListener(\"abort\", onReject);\n    }\n  }\n\n  if (isResponse(result)) {\n    let status = result.status;\n\n    // Process redirects\n    if (redirectStatusCodes.has(status)) {\n      let location = result.headers.get(\"Location\");\n      invariant(\n        location,\n        \"Redirects returned/thrown from loaders/actions must have a Location header\"\n      );\n\n      // Support relative routing in internal redirects\n      if (!ABSOLUTE_URL_REGEX.test(location)) {\n        location = normalizeTo(\n          new URL(request.url),\n          matches.slice(0, matches.indexOf(match) + 1),\n          basename,\n          true,\n          location\n        );\n      } else if (!opts.isStaticRequest) {\n        // Strip off the protocol+origin for same-origin + same-basename absolute\n        // redirects. If this is a static request, we can let it go back to the\n        // browser as-is\n        let currentUrl = new URL(request.url);\n        let url = location.startsWith(\"//\")\n          ? new URL(currentUrl.protocol + location)\n          : new URL(location);\n        let isSameBasename = stripBasename(url.pathname, basename) != null;\n        if (url.origin === currentUrl.origin && isSameBasename) {\n          location = url.pathname + url.search + url.hash;\n        }\n      }\n\n      // Don't process redirects in the router during static requests requests.\n      // Instead, throw the Response and let the server handle it with an HTTP\n      // redirect.  We also update the Location header in place in this flow so\n      // basename and relative routing is taken into account\n      if (opts.isStaticRequest) {\n        result.headers.set(\"Location\", location);\n        throw result;\n      }\n\n      return {\n        type: ResultType.redirect,\n        status,\n        location,\n        revalidate: result.headers.get(\"X-Remix-Revalidate\") !== null,\n        reloadDocument: result.headers.get(\"X-Remix-Reload-Document\") !== null,\n      };\n    }\n\n    // For SSR single-route requests, we want to hand Responses back directly\n    // without unwrapping.  We do this with the QueryRouteResponse wrapper\n    // interface so we can know whether it was returned or thrown\n    if (opts.isRouteRequest) {\n      let queryRouteResponse: QueryRouteResponse = {\n        type:\n          resultType === ResultType.error ? ResultType.error : ResultType.data,\n        response: result,\n      };\n      throw queryRouteResponse;\n    }\n\n    let data: any;\n    let contentType = result.headers.get(\"Content-Type\");\n    // Check between word boundaries instead of startsWith() due to the last\n    // paragraph of https://httpwg.org/specs/rfc9110.html#field.content-type\n    if (contentType && /\\bapplication\\/json\\b/.test(contentType)) {\n      data = await result.json();\n    } else {\n      data = await result.text();\n    }\n\n    if (resultType === ResultType.error) {\n      return {\n        type: resultType,\n        error: new ErrorResponseImpl(status, result.statusText, data),\n        headers: result.headers,\n      };\n    }\n\n    return {\n      type: ResultType.data,\n      data,\n      statusCode: result.status,\n      headers: result.headers,\n    };\n  }\n\n  if (resultType === ResultType.error) {\n    return { type: resultType, error: result };\n  }\n\n  if (isDeferredData(result)) {\n    return {\n      type: ResultType.deferred,\n      deferredData: result,\n      statusCode: result.init?.status,\n      headers: result.init?.headers && new Headers(result.init.headers),\n    };\n  }\n\n  return { type: ResultType.data, data: result };\n}\n\n// Utility method for creating the Request instances for loaders/actions during\n// client-side navigations and fetches.  During SSR we will always have a\n// Request instance from the static handler (query/queryRoute)\nfunction createClientSideRequest(\n  history: History,\n  location: string | Location,\n  signal: AbortSignal,\n  submission?: Submission\n): Request {\n  let url = history.createURL(stripHashFromPath(location)).toString();\n  let init: RequestInit = { signal };\n\n  if (submission && isMutationMethod(submission.formMethod)) {\n    let { formMethod, formEncType } = submission;\n    // Didn't think we needed this but it turns out unlike other methods, patch\n    // won't be properly normalized to uppercase and results in a 405 error.\n    // See: https://fetch.spec.whatwg.org/#concept-method\n    init.method = formMethod.toUpperCase();\n\n    if (formEncType === \"application/json\") {\n      init.headers = new Headers({ \"Content-Type\": formEncType });\n      init.body = JSON.stringify(submission.json);\n    } else if (formEncType === \"text/plain\") {\n      // Content-Type is inferred (https://fetch.spec.whatwg.org/#dom-request)\n      init.body = submission.text;\n    } else if (\n      formEncType === \"application/x-www-form-urlencoded\" &&\n      submission.formData\n    ) {\n      // Content-Type is inferred (https://fetch.spec.whatwg.org/#dom-request)\n      init.body = convertFormDataToSearchParams(submission.formData);\n    } else {\n      // Content-Type is inferred (https://fetch.spec.whatwg.org/#dom-request)\n      init.body = submission.formData;\n    }\n  }\n\n  return new Request(url, init);\n}\n\nfunction convertFormDataToSearchParams(formData: FormData): URLSearchParams {\n  let searchParams = new URLSearchParams();\n\n  for (let [key, value] of formData.entries()) {\n    // https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#converting-an-entry-list-to-a-list-of-name-value-pairs\n    searchParams.append(key, typeof value === \"string\" ? value : value.name);\n  }\n\n  return searchParams;\n}\n\nfunction convertSearchParamsToFormData(\n  searchParams: URLSearchParams\n): FormData {\n  let formData = new FormData();\n  for (let [key, value] of searchParams.entries()) {\n    formData.append(key, value);\n  }\n  return formData;\n}\n\nfunction processRouteLoaderData(\n  matches: AgnosticDataRouteMatch[],\n  matchesToLoad: AgnosticDataRouteMatch[],\n  results: DataResult[],\n  pendingError: RouteData | undefined,\n  activeDeferreds: Map<string, DeferredData>\n): {\n  loaderData: RouterState[\"loaderData\"];\n  errors: RouterState[\"errors\"] | null;\n  statusCode: number;\n  loaderHeaders: Record<string, Headers>;\n} {\n  // Fill in loaderData/errors from our loaders\n  let loaderData: RouterState[\"loaderData\"] = {};\n  let errors: RouterState[\"errors\"] | null = null;\n  let statusCode: number | undefined;\n  let foundError = false;\n  let loaderHeaders: Record<string, Headers> = {};\n\n  // Process loader results into state.loaderData/state.errors\n  results.forEach((result, index) => {\n    let id = matchesToLoad[index].route.id;\n    invariant(\n      !isRedirectResult(result),\n      \"Cannot handle redirect results in processLoaderData\"\n    );\n    if (isErrorResult(result)) {\n      // Look upwards from the matched route for the closest ancestor\n      // error boundary, defaulting to the root match\n      let boundaryMatch = findNearestBoundary(matches, id);\n      let error = result.error;\n      // If we have a pending action error, we report it at the highest-route\n      // that throws a loader error, and then clear it out to indicate that\n      // it was consumed\n      if (pendingError) {\n        error = Object.values(pendingError)[0];\n        pendingError = undefined;\n      }\n\n      errors = errors || {};\n\n      // Prefer higher error values if lower errors bubble to the same boundary\n      if (errors[boundaryMatch.route.id] == null) {\n        errors[boundaryMatch.route.id] = error;\n      }\n\n      // Clear our any prior loaderData for the throwing route\n      loaderData[id] = undefined;\n\n      // Once we find our first (highest) error, we set the status code and\n      // prevent deeper status codes from overriding\n      if (!foundError) {\n        foundError = true;\n        statusCode = isRouteErrorResponse(result.error)\n          ? result.error.status\n          : 500;\n      }\n      if (result.headers) {\n        loaderHeaders[id] = result.headers;\n      }\n    } else {\n      if (isDeferredResult(result)) {\n        activeDeferreds.set(id, result.deferredData);\n        loaderData[id] = result.deferredData.data;\n      } else {\n        loaderData[id] = result.data;\n      }\n\n      // Error status codes always override success status codes, but if all\n      // loaders are successful we take the deepest status code.\n      if (\n        result.statusCode != null &&\n        result.statusCode !== 200 &&\n        !foundError\n      ) {\n        statusCode = result.statusCode;\n      }\n      if (result.headers) {\n        loaderHeaders[id] = result.headers;\n      }\n    }\n  });\n\n  // If we didn't consume the pending action error (i.e., all loaders\n  // resolved), then consume it here.  Also clear out any loaderData for the\n  // throwing route\n  if (pendingError) {\n    errors = pendingError;\n    loaderData[Object.keys(pendingError)[0]] = undefined;\n  }\n\n  return {\n    loaderData,\n    errors,\n    statusCode: statusCode || 200,\n    loaderHeaders,\n  };\n}\n\nfunction processLoaderData(\n  state: RouterState,\n  matches: AgnosticDataRouteMatch[],\n  matchesToLoad: AgnosticDataRouteMatch[],\n  results: DataResult[],\n  pendingError: RouteData | undefined,\n  revalidatingFetchers: RevalidatingFetcher[],\n  fetcherResults: DataResult[],\n  activeDeferreds: Map<string, DeferredData>\n): {\n  loaderData: RouterState[\"loaderData\"];\n  errors?: RouterState[\"errors\"];\n} {\n  let { loaderData, errors } = processRouteLoaderData(\n    matches,\n    matchesToLoad,\n    results,\n    pendingError,\n    activeDeferreds\n  );\n\n  // Process results from our revalidating fetchers\n  for (let index = 0; index < revalidatingFetchers.length; index++) {\n    let { key, match, controller } = revalidatingFetchers[index];\n    invariant(\n      fetcherResults !== undefined && fetcherResults[index] !== undefined,\n      \"Did not find corresponding fetcher result\"\n    );\n    let result = fetcherResults[index];\n\n    // Process fetcher non-redirect errors\n    if (controller && controller.signal.aborted) {\n      // Nothing to do for aborted fetchers\n      continue;\n    } else if (isErrorResult(result)) {\n      let boundaryMatch = findNearestBoundary(state.matches, match?.route.id);\n      if (!(errors && errors[boundaryMatch.route.id])) {\n        errors = {\n          ...errors,\n          [boundaryMatch.route.id]: result.error,\n        };\n      }\n      state.fetchers.delete(key);\n    } else if (isRedirectResult(result)) {\n      // Should never get here, redirects should get processed above, but we\n      // keep this to type narrow to a success result in the else\n      invariant(false, \"Unhandled fetcher revalidation redirect\");\n    } else if (isDeferredResult(result)) {\n      // Should never get here, deferred data should be awaited for fetchers\n      // in resolveDeferredResults\n      invariant(false, \"Unhandled fetcher deferred data\");\n    } else {\n      let doneFetcher = getDoneFetcher(result.data);\n      state.fetchers.set(key, doneFetcher);\n    }\n  }\n\n  return { loaderData, errors };\n}\n\nfunction mergeLoaderData(\n  loaderData: RouteData,\n  newLoaderData: RouteData,\n  matches: AgnosticDataRouteMatch[],\n  errors: RouteData | null | undefined\n): RouteData {\n  let mergedLoaderData = { ...newLoaderData };\n  for (let match of matches) {\n    let id = match.route.id;\n    if (newLoaderData.hasOwnProperty(id)) {\n      if (newLoaderData[id] !== undefined) {\n        mergedLoaderData[id] = newLoaderData[id];\n      } else {\n        // No-op - this is so we ignore existing data if we have a key in the\n        // incoming object with an undefined value, which is how we unset a prior\n        // loaderData if we encounter a loader error\n      }\n    } else if (loaderData[id] !== undefined && match.route.loader) {\n      // Preserve existing keys not included in newLoaderData and where a loader\n      // wasn't removed by HMR\n      mergedLoaderData[id] = loaderData[id];\n    }\n\n    if (errors && errors.hasOwnProperty(id)) {\n      // Don't keep any loader data below the boundary\n      break;\n    }\n  }\n  return mergedLoaderData;\n}\n\n// Find the nearest error boundary, looking upwards from the leaf route (or the\n// route specified by routeId) for the closest ancestor error boundary,\n// defaulting to the root match\nfunction findNearestBoundary(\n  matches: AgnosticDataRouteMatch[],\n  routeId?: string\n): AgnosticDataRouteMatch {\n  let eligibleMatches = routeId\n    ? matches.slice(0, matches.findIndex((m) => m.route.id === routeId) + 1)\n    : [...matches];\n  return (\n    eligibleMatches.reverse().find((m) => m.route.hasErrorBoundary === true) ||\n    matches[0]\n  );\n}\n\nfunction getShortCircuitMatches(routes: AgnosticDataRouteObject[]): {\n  matches: AgnosticDataRouteMatch[];\n  route: AgnosticDataRouteObject;\n} {\n  // Prefer a root layout route if present, otherwise shim in a route object\n  let route =\n    routes.length === 1\n      ? routes[0]\n      : routes.find((r) => r.index || !r.path || r.path === \"/\") || {\n          id: `__shim-error-route__`,\n        };\n\n  return {\n    matches: [\n      {\n        params: {},\n        pathname: \"\",\n        pathnameBase: \"\",\n        route,\n      },\n    ],\n    route,\n  };\n}\n\nfunction getInternalRouterError(\n  status: number,\n  {\n    pathname,\n    routeId,\n    method,\n    type,\n  }: {\n    pathname?: string;\n    routeId?: string;\n    method?: string;\n    type?: \"defer-action\" | \"invalid-body\";\n  } = {}\n) {\n  let statusText = \"Unknown Server Error\";\n  let errorMessage = \"Unknown @remix-run/router error\";\n\n  if (status === 400) {\n    statusText = \"Bad Request\";\n    if (method && pathname && routeId) {\n      errorMessage =\n        `You made a ${method} request to \"${pathname}\" but ` +\n        `did not provide a \\`loader\\` for route \"${routeId}\", ` +\n        `so there is no way to handle the request.`;\n    } else if (type === \"defer-action\") {\n      errorMessage = \"defer() is not supported in actions\";\n    } else if (type === \"invalid-body\") {\n      errorMessage = \"Unable to encode submission body\";\n    }\n  } else if (status === 403) {\n    statusText = \"Forbidden\";\n    errorMessage = `Route \"${routeId}\" does not match URL \"${pathname}\"`;\n  } else if (status === 404) {\n    statusText = \"Not Found\";\n    errorMessage = `No route matches URL \"${pathname}\"`;\n  } else if (status === 405) {\n    statusText = \"Method Not Allowed\";\n    if (method && pathname && routeId) {\n      errorMessage =\n        `You made a ${method.toUpperCase()} request to \"${pathname}\" but ` +\n        `did not provide an \\`action\\` for route \"${routeId}\", ` +\n        `so there is no way to handle the request.`;\n    } else if (method) {\n      errorMessage = `Invalid request method \"${method.toUpperCase()}\"`;\n    }\n  }\n\n  return new ErrorResponseImpl(\n    status || 500,\n    statusText,\n    new Error(errorMessage),\n    true\n  );\n}\n\n// Find any returned redirect errors, starting from the lowest match\nfunction findRedirect(\n  results: DataResult[]\n): { result: RedirectResult; idx: number } | undefined {\n  for (let i = results.length - 1; i >= 0; i--) {\n    let result = results[i];\n    if (isRedirectResult(result)) {\n      return { result, idx: i };\n    }\n  }\n}\n\nfunction stripHashFromPath(path: To) {\n  let parsedPath = typeof path === \"string\" ? parsePath(path) : path;\n  return createPath({ ...parsedPath, hash: \"\" });\n}\n\nfunction isHashChangeOnly(a: Location, b: Location): boolean {\n  if (a.pathname !== b.pathname || a.search !== b.search) {\n    return false;\n  }\n\n  if (a.hash === \"\") {\n    // /page -> /page#hash\n    return b.hash !== \"\";\n  } else if (a.hash === b.hash) {\n    // /page#hash -> /page#hash\n    return true;\n  } else if (b.hash !== \"\") {\n    // /page#hash -> /page#other\n    return true;\n  }\n\n  // If the hash is removed the browser will re-perform a request to the server\n  // /page#hash -> /page\n  return false;\n}\n\nfunction isDeferredResult(result: DataResult): result is DeferredResult {\n  return result.type === ResultType.deferred;\n}\n\nfunction isErrorResult(result: DataResult): result is ErrorResult {\n  return result.type === ResultType.error;\n}\n\nfunction isRedirectResult(result?: DataResult): result is RedirectResult {\n  return (result && result.type) === ResultType.redirect;\n}\n\nexport function isDeferredData(value: any): value is DeferredData {\n  let deferred: DeferredData = value;\n  return (\n    deferred &&\n    typeof deferred === \"object\" &&\n    typeof deferred.data === \"object\" &&\n    typeof deferred.subscribe === \"function\" &&\n    typeof deferred.cancel === \"function\" &&\n    typeof deferred.resolveData === \"function\"\n  );\n}\n\nfunction isResponse(value: any): value is Response {\n  return (\n    value != null &&\n    typeof value.status === \"number\" &&\n    typeof value.statusText === \"string\" &&\n    typeof value.headers === \"object\" &&\n    typeof value.body !== \"undefined\"\n  );\n}\n\nfunction isRedirectResponse(result: any): result is Response {\n  if (!isResponse(result)) {\n    return false;\n  }\n\n  let status = result.status;\n  let location = result.headers.get(\"Location\");\n  return status >= 300 && status <= 399 && location != null;\n}\n\nfunction isQueryRouteResponse(obj: any): obj is QueryRouteResponse {\n  return (\n    obj &&\n    isResponse(obj.response) &&\n    (obj.type === ResultType.data || obj.type === ResultType.error)\n  );\n}\n\nfunction isValidMethod(method: string): method is FormMethod | V7_FormMethod {\n  return validRequestMethods.has(method.toLowerCase() as FormMethod);\n}\n\nfunction isMutationMethod(\n  method: string\n): method is MutationFormMethod | V7_MutationFormMethod {\n  return validMutationMethods.has(method.toLowerCase() as MutationFormMethod);\n}\n\nasync function resolveDeferredResults(\n  currentMatches: AgnosticDataRouteMatch[],\n  matchesToLoad: (AgnosticDataRouteMatch | null)[],\n  results: DataResult[],\n  signals: (AbortSignal | null)[],\n  isFetcher: boolean,\n  currentLoaderData?: RouteData\n) {\n  for (let index = 0; index < results.length; index++) {\n    let result = results[index];\n    let match = matchesToLoad[index];\n    // If we don't have a match, then we can have a deferred result to do\n    // anything with.  This is for revalidating fetchers where the route was\n    // removed during HMR\n    if (!match) {\n      continue;\n    }\n\n    let currentMatch = currentMatches.find(\n      (m) => m.route.id === match!.route.id\n    );\n    let isRevalidatingLoader =\n      currentMatch != null &&\n      !isNewRouteInstance(currentMatch, match) &&\n      (currentLoaderData && currentLoaderData[match.route.id]) !== undefined;\n\n    if (isDeferredResult(result) && (isFetcher || isRevalidatingLoader)) {\n      // Note: we do not have to touch activeDeferreds here since we race them\n      // against the signal in resolveDeferredData and they'll get aborted\n      // there if needed\n      let signal = signals[index];\n      invariant(\n        signal,\n        \"Expected an AbortSignal for revalidating fetcher deferred result\"\n      );\n      await resolveDeferredData(result, signal, isFetcher).then((result) => {\n        if (result) {\n          results[index] = result || results[index];\n        }\n      });\n    }\n  }\n}\n\nasync function resolveDeferredData(\n  result: DeferredResult,\n  signal: AbortSignal,\n  unwrap = false\n): Promise<SuccessResult | ErrorResult | undefined> {\n  let aborted = await result.deferredData.resolveData(signal);\n  if (aborted) {\n    return;\n  }\n\n  if (unwrap) {\n    try {\n      return {\n        type: ResultType.data,\n        data: result.deferredData.unwrappedData,\n      };\n    } catch (e) {\n      // Handle any TrackedPromise._error values encountered while unwrapping\n      return {\n        type: ResultType.error,\n        error: e,\n      };\n    }\n  }\n\n  return {\n    type: ResultType.data,\n    data: result.deferredData.data,\n  };\n}\n\nfunction hasNakedIndexQuery(search: string): boolean {\n  return new URLSearchParams(search).getAll(\"index\").some((v) => v === \"\");\n}\n\nfunction getTargetMatch(\n  matches: AgnosticDataRouteMatch[],\n  location: Location | string\n) {\n  let search =\n    typeof location === \"string\" ? parsePath(location).search : location.search;\n  if (\n    matches[matches.length - 1].route.index &&\n    hasNakedIndexQuery(search || \"\")\n  ) {\n    // Return the leaf index route when index is present\n    return matches[matches.length - 1];\n  }\n  // Otherwise grab the deepest \"path contributing\" match (ignoring index and\n  // pathless layout routes)\n  let pathMatches = getPathContributingMatches(matches);\n  return pathMatches[pathMatches.length - 1];\n}\n\nfunction getSubmissionFromNavigation(\n  navigation: Navigation\n): Submission | undefined {\n  let { formMethod, formAction, formEncType, text, formData, json } =\n    navigation;\n  if (!formMethod || !formAction || !formEncType) {\n    return;\n  }\n\n  if (text != null) {\n    return {\n      formMethod,\n      formAction,\n      formEncType,\n      formData: undefined,\n      json: undefined,\n      text,\n    };\n  } else if (formData != null) {\n    return {\n      formMethod,\n      formAction,\n      formEncType,\n      formData,\n      json: undefined,\n      text: undefined,\n    };\n  } else if (json !== undefined) {\n    return {\n      formMethod,\n      formAction,\n      formEncType,\n      formData: undefined,\n      json,\n      text: undefined,\n    };\n  }\n}\n\nfunction getLoadingNavigation(\n  location: Location,\n  submission?: Submission\n): NavigationStates[\"Loading\"] {\n  if (submission) {\n    let navigation: NavigationStates[\"Loading\"] = {\n      state: \"loading\",\n      location,\n      formMethod: submission.formMethod,\n      formAction: submission.formAction,\n      formEncType: submission.formEncType,\n      formData: submission.formData,\n      json: submission.json,\n      text: submission.text,\n    };\n    return navigation;\n  } else {\n    let navigation: NavigationStates[\"Loading\"] = {\n      state: \"loading\",\n      location,\n      formMethod: undefined,\n      formAction: undefined,\n      formEncType: undefined,\n      formData: undefined,\n      json: undefined,\n      text: undefined,\n    };\n    return navigation;\n  }\n}\n\nfunction getSubmittingNavigation(\n  location: Location,\n  submission: Submission\n): NavigationStates[\"Submitting\"] {\n  let navigation: NavigationStates[\"Submitting\"] = {\n    state: \"submitting\",\n    location,\n    formMethod: submission.formMethod,\n    formAction: submission.formAction,\n    formEncType: submission.formEncType,\n    formData: submission.formData,\n    json: submission.json,\n    text: submission.text,\n  };\n  return navigation;\n}\n\nfunction getLoadingFetcher(\n  submission?: Submission,\n  data?: Fetcher[\"data\"]\n): FetcherStates[\"Loading\"] {\n  if (submission) {\n    let fetcher: FetcherStates[\"Loading\"] = {\n      state: \"loading\",\n      formMethod: submission.formMethod,\n      formAction: submission.formAction,\n      formEncType: submission.formEncType,\n      formData: submission.formData,\n      json: submission.json,\n      text: submission.text,\n      data,\n    };\n    return fetcher;\n  } else {\n    let fetcher: FetcherStates[\"Loading\"] = {\n      state: \"loading\",\n      formMethod: undefined,\n      formAction: undefined,\n      formEncType: undefined,\n      formData: undefined,\n      json: undefined,\n      text: undefined,\n      data,\n    };\n    return fetcher;\n  }\n}\n\nfunction getSubmittingFetcher(\n  submission: Submission,\n  existingFetcher?: Fetcher\n): FetcherStates[\"Submitting\"] {\n  let fetcher: FetcherStates[\"Submitting\"] = {\n    state: \"submitting\",\n    formMethod: submission.formMethod,\n    formAction: submission.formAction,\n    formEncType: submission.formEncType,\n    formData: submission.formData,\n    json: submission.json,\n    text: submission.text,\n    data: existingFetcher ? existingFetcher.data : undefined,\n  };\n  return fetcher;\n}\n\nfunction getDoneFetcher(data: Fetcher[\"data\"]): FetcherStates[\"Idle\"] {\n  let fetcher: FetcherStates[\"Idle\"] = {\n    state: \"idle\",\n    formMethod: undefined,\n    formAction: undefined,\n    formEncType: undefined,\n    formData: undefined,\n    json: undefined,\n    text: undefined,\n    data,\n  };\n  return fetcher;\n}\n\nfunction restoreAppliedTransitions(\n  _window: Window,\n  transitions: Map<string, Set<string>>\n) {\n  try {\n    let sessionPositions = _window.sessionStorage.getItem(\n      TRANSITIONS_STORAGE_KEY\n    );\n    if (sessionPositions) {\n      let json = JSON.parse(sessionPositions);\n      for (let [k, v] of Object.entries(json || {})) {\n        if (v && Array.isArray(v)) {\n          transitions.set(k, new Set(v || []));\n        }\n      }\n    }\n  } catch (e) {\n    // no-op, use default empty object\n  }\n}\n\nfunction persistAppliedTransitions(\n  _window: Window,\n  transitions: Map<string, Set<string>>\n) {\n  if (transitions.size > 0) {\n    let json: Record<string, string[]> = {};\n    for (let [k, v] of transitions) {\n      json[k] = [...v];\n    }\n    try {\n      _window.sessionStorage.setItem(\n        TRANSITIONS_STORAGE_KEY,\n        JSON.stringify(json)\n      );\n    } catch (error) {\n      warning(\n        false,\n        `Failed to save applied view transitions in sessionStorage (${error}).`\n      );\n    }\n  }\n}\n\n//#endregion\n","import * as React from \"react\";\nimport type {\n  AgnosticIndexRouteObject,\n  AgnosticNonIndexRouteObject,\n  AgnosticRouteMatch,\n  History,\n  LazyRouteFunction,\n  Location,\n  Action as NavigationType,\n  RelativeRoutingType,\n  Router,\n  StaticHandlerContext,\n  To,\n  TrackedPromise,\n} from \"@remix-run/router\";\n\n// Create react-specific types from the agnostic types in @remix-run/router to\n// export from react-router\nexport interface IndexRouteObject {\n  caseSensitive?: AgnosticIndexRouteObject[\"caseSensitive\"];\n  path?: AgnosticIndexRouteObject[\"path\"];\n  id?: AgnosticIndexRouteObject[\"id\"];\n  loader?: AgnosticIndexRouteObject[\"loader\"];\n  action?: AgnosticIndexRouteObject[\"action\"];\n  hasErrorBoundary?: AgnosticIndexRouteObject[\"hasErrorBoundary\"];\n  shouldRevalidate?: AgnosticIndexRouteObject[\"shouldRevalidate\"];\n  handle?: AgnosticIndexRouteObject[\"handle\"];\n  index: true;\n  children?: undefined;\n  element?: React.ReactNode | null;\n  errorElement?: React.ReactNode | null;\n  Component?: React.ComponentType | null;\n  ErrorBoundary?: React.ComponentType | null;\n  lazy?: LazyRouteFunction<RouteObject>;\n}\n\nexport interface NonIndexRouteObject {\n  caseSensitive?: AgnosticNonIndexRouteObject[\"caseSensitive\"];\n  path?: AgnosticNonIndexRouteObject[\"path\"];\n  id?: AgnosticNonIndexRouteObject[\"id\"];\n  loader?: AgnosticNonIndexRouteObject[\"loader\"];\n  action?: AgnosticNonIndexRouteObject[\"action\"];\n  hasErrorBoundary?: AgnosticNonIndexRouteObject[\"hasErrorBoundary\"];\n  shouldRevalidate?: AgnosticNonIndexRouteObject[\"shouldRevalidate\"];\n  handle?: AgnosticNonIndexRouteObject[\"handle\"];\n  index?: false;\n  children?: RouteObject[];\n  element?: React.ReactNode | null;\n  errorElement?: React.ReactNode | null;\n  Component?: React.ComponentType | null;\n  ErrorBoundary?: React.ComponentType | null;\n  lazy?: LazyRouteFunction<RouteObject>;\n}\n\nexport type RouteObject = IndexRouteObject | NonIndexRouteObject;\n\nexport type DataRouteObject = RouteObject & {\n  children?: DataRouteObject[];\n  id: string;\n};\n\nexport interface RouteMatch<\n  ParamKey extends string = string,\n  RouteObjectType extends RouteObject = RouteObject\n> extends AgnosticRouteMatch<ParamKey, RouteObjectType> {}\n\nexport interface DataRouteMatch extends RouteMatch<string, DataRouteObject> {}\n\nexport interface DataRouterContextObject extends NavigationContextObject {\n  router: Router;\n  staticContext?: StaticHandlerContext;\n}\n\nexport const DataRouterContext =\n  React.createContext<DataRouterContextObject | null>(null);\nif (__DEV__) {\n  DataRouterContext.displayName = \"DataRouter\";\n}\n\nexport const DataRouterStateContext = React.createContext<\n  Router[\"state\"] | null\n>(null);\nif (__DEV__) {\n  DataRouterStateContext.displayName = \"DataRouterState\";\n}\n\nexport const AwaitContext = React.createContext<TrackedPromise | null>(null);\nif (__DEV__) {\n  AwaitContext.displayName = \"Await\";\n}\n\nexport interface NavigateOptions {\n  replace?: boolean;\n  state?: any;\n  preventScrollReset?: boolean;\n  relative?: RelativeRoutingType;\n  unstable_viewTransition?: boolean;\n}\n\n/**\n * A Navigator is a \"location changer\"; it's how you get to different locations.\n *\n * Every history instance conforms to the Navigator interface, but the\n * distinction is useful primarily when it comes to the low-level `<Router>` API\n * where both the location and a navigator must be provided separately in order\n * to avoid \"tearing\" that may occur in a suspense-enabled app if the action\n * and/or location were to be read directly from the history instance.\n */\nexport interface Navigator {\n  createHref: History[\"createHref\"];\n  // Optional for backwards-compat with Router/HistoryRouter usage (edge case)\n  encodeLocation?: History[\"encodeLocation\"];\n  go: History[\"go\"];\n  push(to: To, state?: any, opts?: NavigateOptions): void;\n  replace(to: To, state?: any, opts?: NavigateOptions): void;\n}\n\ninterface NavigationContextObject {\n  basename: string;\n  navigator: Navigator;\n  static: boolean;\n}\n\nexport const NavigationContext = React.createContext<NavigationContextObject>(\n  null!\n);\n\nif (__DEV__) {\n  NavigationContext.displayName = \"Navigation\";\n}\n\ninterface LocationContextObject {\n  location: Location;\n  navigationType: NavigationType;\n}\n\nexport const LocationContext = React.createContext<LocationContextObject>(\n  null!\n);\n\nif (__DEV__) {\n  LocationContext.displayName = \"Location\";\n}\n\nexport interface RouteContextObject {\n  outlet: React.ReactElement | null;\n  matches: RouteMatch[];\n  isDataRoute: boolean;\n}\n\nexport const RouteContext = React.createContext<RouteContextObject>({\n  outlet: null,\n  matches: [],\n  isDataRoute: false,\n});\n\nif (__DEV__) {\n  RouteContext.displayName = \"Route\";\n}\n\nexport const RouteErrorContext = React.createContext<any>(null);\n\nif (__DEV__) {\n  RouteErrorContext.displayName = \"RouteError\";\n}\n","import * as React from \"react\";\nimport type {\n  Blocker,\n  BlockerFunction,\n  Location,\n  ParamParseKey,\n  Params,\n  Path,\n  PathMatch,\n  PathPattern,\n  RelativeRoutingType,\n  Router as RemixRouter,\n  RevalidationState,\n  To,\n  UIMatch,\n} from \"@remix-run/router\";\nimport {\n  IDLE_BLOCKER,\n  Action as NavigationType,\n  UNSAFE_convertRouteMatchToUiMatch as convertRouteMatchToUiMatch,\n  UNSAFE_getPathContributingMatches as getPathContributingMatches,\n  UNSAFE_invariant as invariant,\n  isRouteErrorResponse,\n  joinPaths,\n  matchPath,\n  matchRoutes,\n  parsePath,\n  resolveTo,\n  stripBasename,\n  UNSAFE_warning as warning,\n} from \"@remix-run/router\";\n\nimport type {\n  DataRouteMatch,\n  NavigateOptions,\n  RouteContextObject,\n  RouteMatch,\n  RouteObject,\n} from \"./context\";\nimport {\n  AwaitContext,\n  DataRouterContext,\n  DataRouterStateContext,\n  LocationContext,\n  NavigationContext,\n  RouteContext,\n  RouteErrorContext,\n} from \"./context\";\n\n/**\n * Returns the full href for the given \"to\" value. This is useful for building\n * custom links that are also accessible and preserve right-click behavior.\n *\n * @see https://reactrouter.com/hooks/use-href\n */\nexport function useHref(\n  to: To,\n  { relative }: { relative?: RelativeRoutingType } = {}\n): string {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useHref() may be used only in the context of a <Router> component.`\n  );\n\n  let { basename, navigator } = React.useContext(NavigationContext);\n  let { hash, pathname, search } = useResolvedPath(to, { relative });\n\n  let joinedPathname = pathname;\n\n  // If we're operating within a basename, prepend it to the pathname prior\n  // to creating the href.  If this is a root navigation, then just use the raw\n  // basename which allows the basename to have full control over the presence\n  // of a trailing slash on root links\n  if (basename !== \"/\") {\n    joinedPathname =\n      pathname === \"/\" ? basename : joinPaths([basename, pathname]);\n  }\n\n  return navigator.createHref({ pathname: joinedPathname, search, hash });\n}\n\n/**\n * Returns true if this component is a descendant of a `<Router>`.\n *\n * @see https://reactrouter.com/hooks/use-in-router-context\n */\nexport function useInRouterContext(): boolean {\n  return React.useContext(LocationContext) != null;\n}\n\n/**\n * Returns the current location object, which represents the current URL in web\n * browsers.\n *\n * Note: If you're using this it may mean you're doing some of your own\n * \"routing\" in your app, and we'd like to know what your use case is. We may\n * be able to provide something higher-level to better suit your needs.\n *\n * @see https://reactrouter.com/hooks/use-location\n */\nexport function useLocation(): Location {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useLocation() may be used only in the context of a <Router> component.`\n  );\n\n  return React.useContext(LocationContext).location;\n}\n\n/**\n * Returns the current navigation action which describes how the router came to\n * the current location, either by a pop, push, or replace on the history stack.\n *\n * @see https://reactrouter.com/hooks/use-navigation-type\n */\nexport function useNavigationType(): NavigationType {\n  return React.useContext(LocationContext).navigationType;\n}\n\n/**\n * Returns a PathMatch object if the given pattern matches the current URL.\n * This is useful for components that need to know \"active\" state, e.g.\n * `<NavLink>`.\n *\n * @see https://reactrouter.com/hooks/use-match\n */\nexport function useMatch<\n  ParamKey extends ParamParseKey<Path>,\n  Path extends string\n>(pattern: PathPattern<Path> | Path): PathMatch<ParamKey> | null {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useMatch() may be used only in the context of a <Router> component.`\n  );\n\n  let { pathname } = useLocation();\n  return React.useMemo(\n    () => matchPath<ParamKey, Path>(pattern, pathname),\n    [pathname, pattern]\n  );\n}\n\n/**\n * The interface for the navigate() function returned from useNavigate().\n */\nexport interface NavigateFunction {\n  (to: To, options?: NavigateOptions): void;\n  (delta: number): void;\n}\n\nconst navigateEffectWarning =\n  `You should call navigate() in a React.useEffect(), not when ` +\n  `your component is first rendered.`;\n\n// Mute warnings for calls to useNavigate in SSR environments\nfunction useIsomorphicLayoutEffect(\n  cb: Parameters<typeof React.useLayoutEffect>[0]\n) {\n  let isStatic = React.useContext(NavigationContext).static;\n  if (!isStatic) {\n    // We should be able to get rid of this once react 18.3 is released\n    // See: https://github.com/facebook/react/pull/26395\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(cb);\n  }\n}\n\n/**\n * Returns an imperative method for changing the location. Used by `<Link>`s, but\n * may also be used by other elements to change the location.\n *\n * @see https://reactrouter.com/hooks/use-navigate\n */\nexport function useNavigate(): NavigateFunction {\n  let { isDataRoute } = React.useContext(RouteContext);\n  // Conditional usage is OK here because the usage of a data router is static\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  return isDataRoute ? useNavigateStable() : useNavigateUnstable();\n}\n\nfunction useNavigateUnstable(): NavigateFunction {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useNavigate() may be used only in the context of a <Router> component.`\n  );\n\n  let dataRouterContext = React.useContext(DataRouterContext);\n  let { basename, navigator } = React.useContext(NavigationContext);\n  let { matches } = React.useContext(RouteContext);\n  let { pathname: locationPathname } = useLocation();\n\n  let routePathnamesJson = JSON.stringify(\n    getPathContributingMatches(matches).map((match) => match.pathnameBase)\n  );\n\n  let activeRef = React.useRef(false);\n  useIsomorphicLayoutEffect(() => {\n    activeRef.current = true;\n  });\n\n  let navigate: NavigateFunction = React.useCallback(\n    (to: To | number, options: NavigateOptions = {}) => {\n      warning(activeRef.current, navigateEffectWarning);\n\n      // Short circuit here since if this happens on first render the navigate\n      // is useless because we haven't wired up our history listener yet\n      if (!activeRef.current) return;\n\n      if (typeof to === \"number\") {\n        navigator.go(to);\n        return;\n      }\n\n      let path = resolveTo(\n        to,\n        JSON.parse(routePathnamesJson),\n        locationPathname,\n        options.relative === \"path\"\n      );\n\n      // If we're operating within a basename, prepend it to the pathname prior\n      // to handing off to history (but only if we're not in a data router,\n      // otherwise it'll prepend the basename inside of the router).\n      // If this is a root navigation, then we navigate to the raw basename\n      // which allows the basename to have full control over the presence of a\n      // trailing slash on root links\n      if (dataRouterContext == null && basename !== \"/\") {\n        path.pathname =\n          path.pathname === \"/\"\n            ? basename\n            : joinPaths([basename, path.pathname]);\n      }\n\n      (!!options.replace ? navigator.replace : navigator.push)(\n        path,\n        options.state,\n        options\n      );\n    },\n    [\n      basename,\n      navigator,\n      routePathnamesJson,\n      locationPathname,\n      dataRouterContext,\n    ]\n  );\n\n  return navigate;\n}\n\nconst OutletContext = React.createContext<unknown>(null);\n\n/**\n * Returns the context (if provided) for the child route at this level of the route\n * hierarchy.\n * @see https://reactrouter.com/hooks/use-outlet-context\n */\nexport function useOutletContext<Context = unknown>(): Context {\n  return React.useContext(OutletContext) as Context;\n}\n\n/**\n * Returns the element for the child route at this level of the route\n * hierarchy. Used internally by `<Outlet>` to render child routes.\n *\n * @see https://reactrouter.com/hooks/use-outlet\n */\nexport function useOutlet(context?: unknown): React.ReactElement | null {\n  let outlet = React.useContext(RouteContext).outlet;\n  if (outlet) {\n    return (\n      <OutletContext.Provider value={context}>{outlet}</OutletContext.Provider>\n    );\n  }\n  return outlet;\n}\n\n/**\n * Returns an object of key/value pairs of the dynamic params from the current\n * URL that were matched by the route path.\n *\n * @see https://reactrouter.com/hooks/use-params\n */\nexport function useParams<\n  ParamsOrKey extends string | Record<string, string | undefined> = string\n>(): Readonly<\n  [ParamsOrKey] extends [string] ? Params<ParamsOrKey> : Partial<ParamsOrKey>\n> {\n  let { matches } = React.useContext(RouteContext);\n  let routeMatch = matches[matches.length - 1];\n  return routeMatch ? (routeMatch.params as any) : {};\n}\n\n/**\n * Resolves the pathname of the given `to` value against the current location.\n *\n * @see https://reactrouter.com/hooks/use-resolved-path\n */\nexport function useResolvedPath(\n  to: To,\n  { relative }: { relative?: RelativeRoutingType } = {}\n): Path {\n  let { matches } = React.useContext(RouteContext);\n  let { pathname: locationPathname } = useLocation();\n\n  let routePathnamesJson = JSON.stringify(\n    getPathContributingMatches(matches).map((match) => match.pathnameBase)\n  );\n\n  return React.useMemo(\n    () =>\n      resolveTo(\n        to,\n        JSON.parse(routePathnamesJson),\n        locationPathname,\n        relative === \"path\"\n      ),\n    [to, routePathnamesJson, locationPathname, relative]\n  );\n}\n\n/**\n * Returns the element of the route that matched the current location, prepared\n * with the correct context to render the remainder of the route tree. Route\n * elements in the tree must render an `<Outlet>` to render their child route's\n * element.\n *\n * @see https://reactrouter.com/hooks/use-routes\n */\nexport function useRoutes(\n  routes: RouteObject[],\n  locationArg?: Partial<Location> | string\n): React.ReactElement | null {\n  return useRoutesImpl(routes, locationArg);\n}\n\n// Internal implementation with accept optional param for RouterProvider usage\nexport function useRoutesImpl(\n  routes: RouteObject[],\n  locationArg?: Partial<Location> | string,\n  dataRouterState?: RemixRouter[\"state\"]\n): React.ReactElement | null {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useRoutes() may be used only in the context of a <Router> component.`\n  );\n\n  let { navigator } = React.useContext(NavigationContext);\n  let { matches: parentMatches } = React.useContext(RouteContext);\n  let routeMatch = parentMatches[parentMatches.length - 1];\n  let parentParams = routeMatch ? routeMatch.params : {};\n  let parentPathname = routeMatch ? routeMatch.pathname : \"/\";\n  let parentPathnameBase = routeMatch ? routeMatch.pathnameBase : \"/\";\n  let parentRoute = routeMatch && routeMatch.route;\n\n  if (__DEV__) {\n    // You won't get a warning about 2 different <Routes> under a <Route>\n    // without a trailing *, but this is a best-effort warning anyway since we\n    // cannot even give the warning unless they land at the parent route.\n    //\n    // Example:\n    //\n    // <Routes>\n    //   {/* This route path MUST end with /* because otherwise\n    //       it will never match /blog/post/123 */}\n    //   <Route path=\"blog\" element={<Blog />} />\n    //   <Route path=\"blog/feed\" element={<BlogFeed />} />\n    // </Routes>\n    //\n    // function Blog() {\n    //   return (\n    //     <Routes>\n    //       <Route path=\"post/:id\" element={<Post />} />\n    //     </Routes>\n    //   );\n    // }\n    let parentPath = (parentRoute && parentRoute.path) || \"\";\n    warningOnce(\n      parentPathname,\n      !parentRoute || parentPath.endsWith(\"*\"),\n      `You rendered descendant <Routes> (or called \\`useRoutes()\\`) at ` +\n        `\"${parentPathname}\" (under <Route path=\"${parentPath}\">) but the ` +\n        `parent route path has no trailing \"*\". This means if you navigate ` +\n        `deeper, the parent won't match anymore and therefore the child ` +\n        `routes will never render.\\n\\n` +\n        `Please change the parent <Route path=\"${parentPath}\"> to <Route ` +\n        `path=\"${parentPath === \"/\" ? \"*\" : `${parentPath}/*`}\">.`\n    );\n  }\n\n  let locationFromContext = useLocation();\n\n  let location;\n  if (locationArg) {\n    let parsedLocationArg =\n      typeof locationArg === \"string\" ? parsePath(locationArg) : locationArg;\n\n    invariant(\n      parentPathnameBase === \"/\" ||\n        parsedLocationArg.pathname?.startsWith(parentPathnameBase),\n      `When overriding the location using \\`<Routes location>\\` or \\`useRoutes(routes, location)\\`, ` +\n        `the location pathname must begin with the portion of the URL pathname that was ` +\n        `matched by all parent routes. The current pathname base is \"${parentPathnameBase}\" ` +\n        `but pathname \"${parsedLocationArg.pathname}\" was given in the \\`location\\` prop.`\n    );\n\n    location = parsedLocationArg;\n  } else {\n    location = locationFromContext;\n  }\n\n  let pathname = location.pathname || \"/\";\n  let remainingPathname =\n    parentPathnameBase === \"/\"\n      ? pathname\n      : pathname.slice(parentPathnameBase.length) || \"/\";\n\n  let matches = matchRoutes(routes, { pathname: remainingPathname });\n\n  if (__DEV__) {\n    warning(\n      parentRoute || matches != null,\n      `No routes matched location \"${location.pathname}${location.search}${location.hash}\" `\n    );\n\n    warning(\n      matches == null ||\n        matches[matches.length - 1].route.element !== undefined ||\n        matches[matches.length - 1].route.Component !== undefined,\n      `Matched leaf route at location \"${location.pathname}${location.search}${location.hash}\" ` +\n        `does not have an element or Component. This means it will render an <Outlet /> with a ` +\n        `null value by default resulting in an \"empty\" page.`\n    );\n  }\n\n  let renderedMatches = _renderMatches(\n    matches &&\n      matches.map((match) =>\n        Object.assign({}, match, {\n          params: Object.assign({}, parentParams, match.params),\n          pathname: joinPaths([\n            parentPathnameBase,\n            // Re-encode pathnames that were decoded inside matchRoutes\n            navigator.encodeLocation\n              ? navigator.encodeLocation(match.pathname).pathname\n              : match.pathname,\n          ]),\n          pathnameBase:\n            match.pathnameBase === \"/\"\n              ? parentPathnameBase\n              : joinPaths([\n                  parentPathnameBase,\n                  // Re-encode pathnames that were decoded inside matchRoutes\n                  navigator.encodeLocation\n                    ? navigator.encodeLocation(match.pathnameBase).pathname\n                    : match.pathnameBase,\n                ]),\n        })\n      ),\n    parentMatches,\n    dataRouterState\n  );\n\n  // When a user passes in a `locationArg`, the associated routes need to\n  // be wrapped in a new `LocationContext.Provider` in order for `useLocation`\n  // to use the scoped location instead of the global location.\n  if (locationArg && renderedMatches) {\n    return (\n      <LocationContext.Provider\n        value={{\n          location: {\n            pathname: \"/\",\n            search: \"\",\n            hash: \"\",\n            state: null,\n            key: \"default\",\n            ...location,\n          },\n          navigationType: NavigationType.Pop,\n        }}\n      >\n        {renderedMatches}\n      </LocationContext.Provider>\n    );\n  }\n\n  return renderedMatches;\n}\n\nfunction DefaultErrorComponent() {\n  let error = useRouteError();\n  let message = isRouteErrorResponse(error)\n    ? `${error.status} ${error.statusText}`\n    : error instanceof Error\n    ? error.message\n    : JSON.stringify(error);\n  let stack = error instanceof Error ? error.stack : null;\n  let lightgrey = \"rgba(200,200,200, 0.5)\";\n  let preStyles = { padding: \"0.5rem\", backgroundColor: lightgrey };\n  let codeStyles = { padding: \"2px 4px\", backgroundColor: lightgrey };\n\n  let devInfo = null;\n  if (__DEV__) {\n    console.error(\n      \"Error handled by React Router default ErrorBoundary:\",\n      error\n    );\n\n    devInfo = (\n      <>\n        <p>💿 Hey developer 👋</p>\n        <p>\n          You can provide a way better UX than this when your app throws errors\n          by providing your own <code style={codeStyles}>ErrorBoundary</code> or{\" \"}\n          <code style={codeStyles}>errorElement</code> prop on your route.\n        </p>\n      </>\n    );\n  }\n\n  return (\n    <>\n      <h2>Unexpected Application Error!</h2>\n      <h3 style={{ fontStyle: \"italic\" }}>{message}</h3>\n      {stack ? <pre style={preStyles}>{stack}</pre> : null}\n      {devInfo}\n    </>\n  );\n}\n\nconst defaultErrorElement = <DefaultErrorComponent />;\n\ntype RenderErrorBoundaryProps = React.PropsWithChildren<{\n  location: Location;\n  revalidation: RevalidationState;\n  error: any;\n  component: React.ReactNode;\n  routeContext: RouteContextObject;\n}>;\n\ntype RenderErrorBoundaryState = {\n  location: Location;\n  revalidation: RevalidationState;\n  error: any;\n};\n\nexport class RenderErrorBoundary extends React.Component<\n  RenderErrorBoundaryProps,\n  RenderErrorBoundaryState\n> {\n  constructor(props: RenderErrorBoundaryProps) {\n    super(props);\n    this.state = {\n      location: props.location,\n      revalidation: props.revalidation,\n      error: props.error,\n    };\n  }\n\n  static getDerivedStateFromError(error: any) {\n    return { error: error };\n  }\n\n  static getDerivedStateFromProps(\n    props: RenderErrorBoundaryProps,\n    state: RenderErrorBoundaryState\n  ) {\n    // When we get into an error state, the user will likely click \"back\" to the\n    // previous page that didn't have an error. Because this wraps the entire\n    // application, that will have no effect--the error page continues to display.\n    // This gives us a mechanism to recover from the error when the location changes.\n    //\n    // Whether we're in an error state or not, we update the location in state\n    // so that when we are in an error state, it gets reset when a new location\n    // comes in and the user recovers from the error.\n    if (\n      state.location !== props.location ||\n      (state.revalidation !== \"idle\" && props.revalidation === \"idle\")\n    ) {\n      return {\n        error: props.error,\n        location: props.location,\n        revalidation: props.revalidation,\n      };\n    }\n\n    // If we're not changing locations, preserve the location but still surface\n    // any new errors that may come through. We retain the existing error, we do\n    // this because the error provided from the app state may be cleared without\n    // the location changing.\n    return {\n      error: props.error || state.error,\n      location: state.location,\n      revalidation: props.revalidation || state.revalidation,\n    };\n  }\n\n  componentDidCatch(error: any, errorInfo: any) {\n    console.error(\n      \"React Router caught the following error during render\",\n      error,\n      errorInfo\n    );\n  }\n\n  render() {\n    return this.state.error ? (\n      <RouteContext.Provider value={this.props.routeContext}>\n        <RouteErrorContext.Provider\n          value={this.state.error}\n          children={this.props.component}\n        />\n      </RouteContext.Provider>\n    ) : (\n      this.props.children\n    );\n  }\n}\n\ninterface RenderedRouteProps {\n  routeContext: RouteContextObject;\n  match: RouteMatch<string, RouteObject>;\n  children: React.ReactNode | null;\n}\n\nfunction RenderedRoute({ routeContext, match, children }: RenderedRouteProps) {\n  let dataRouterContext = React.useContext(DataRouterContext);\n\n  // Track how deep we got in our render pass to emulate SSR componentDidCatch\n  // in a DataStaticRouter\n  if (\n    dataRouterContext &&\n    dataRouterContext.static &&\n    dataRouterContext.staticContext &&\n    (match.route.errorElement || match.route.ErrorBoundary)\n  ) {\n    dataRouterContext.staticContext._deepestRenderedBoundaryId = match.route.id;\n  }\n\n  return (\n    <RouteContext.Provider value={routeContext}>\n      {children}\n    </RouteContext.Provider>\n  );\n}\n\nexport function _renderMatches(\n  matches: RouteMatch[] | null,\n  parentMatches: RouteMatch[] = [],\n  dataRouterState: RemixRouter[\"state\"] | null = null\n): React.ReactElement | null {\n  if (matches == null) {\n    if (dataRouterState?.errors) {\n      // Don't bail if we have data router errors so we can render them in the\n      // boundary.  Use the pre-matched (or shimmed) matches\n      matches = dataRouterState.matches as DataRouteMatch[];\n    } else {\n      return null;\n    }\n  }\n\n  let renderedMatches = matches;\n\n  // If we have data errors, trim matches to the highest error boundary\n  let errors = dataRouterState?.errors;\n  if (errors != null) {\n    let errorIndex = renderedMatches.findIndex(\n      (m) => m.route.id && errors?.[m.route.id]\n    );\n    invariant(\n      errorIndex >= 0,\n      `Could not find a matching route for errors on route IDs: ${Object.keys(\n        errors\n      ).join(\",\")}`\n    );\n    renderedMatches = renderedMatches.slice(\n      0,\n      Math.min(renderedMatches.length, errorIndex + 1)\n    );\n  }\n\n  return renderedMatches.reduceRight((outlet, match, index) => {\n    let error = match.route.id ? errors?.[match.route.id] : null;\n    // Only data routers handle errors\n    let errorElement: React.ReactNode | null = null;\n    if (dataRouterState) {\n      errorElement = match.route.errorElement || defaultErrorElement;\n    }\n    let matches = parentMatches.concat(renderedMatches.slice(0, index + 1));\n    let getChildren = () => {\n      let children: React.ReactNode;\n      if (error) {\n        children = errorElement;\n      } else if (match.route.Component) {\n        // Note: This is a de-optimized path since React won't re-use the\n        // ReactElement since it's identity changes with each new\n        // React.createElement call.  We keep this so folks can use\n        // `<Route Component={...}>` in `<Routes>` but generally `Component`\n        // usage is only advised in `RouterProvider` when we can convert it to\n        // `element` ahead of time.\n        children = <match.route.Component />;\n      } else if (match.route.element) {\n        children = match.route.element;\n      } else {\n        children = outlet;\n      }\n      return (\n        <RenderedRoute\n          match={match}\n          routeContext={{\n            outlet,\n            matches,\n            isDataRoute: dataRouterState != null,\n          }}\n          children={children}\n        />\n      );\n    };\n    // Only wrap in an error boundary within data router usages when we have an\n    // ErrorBoundary/errorElement on this route.  Otherwise let it bubble up to\n    // an ancestor ErrorBoundary/errorElement\n    return dataRouterState &&\n      (match.route.ErrorBoundary || match.route.errorElement || index === 0) ? (\n      <RenderErrorBoundary\n        location={dataRouterState.location}\n        revalidation={dataRouterState.revalidation}\n        component={errorElement}\n        error={error}\n        children={getChildren()}\n        routeContext={{ outlet: null, matches, isDataRoute: true }}\n      />\n    ) : (\n      getChildren()\n    );\n  }, null as React.ReactElement | null);\n}\n\nenum DataRouterHook {\n  UseBlocker = \"useBlocker\",\n  UseRevalidator = \"useRevalidator\",\n  UseNavigateStable = \"useNavigate\",\n}\n\nenum DataRouterStateHook {\n  UseBlocker = \"useBlocker\",\n  UseLoaderData = \"useLoaderData\",\n  UseActionData = \"useActionData\",\n  UseRouteError = \"useRouteError\",\n  UseNavigation = \"useNavigation\",\n  UseRouteLoaderData = \"useRouteLoaderData\",\n  UseMatches = \"useMatches\",\n  UseRevalidator = \"useRevalidator\",\n  UseNavigateStable = \"useNavigate\",\n  UseRouteId = \"useRouteId\",\n}\n\nfunction getDataRouterConsoleError(\n  hookName: DataRouterHook | DataRouterStateHook\n) {\n  return `${hookName} must be used within a data router.  See https://reactrouter.com/routers/picking-a-router.`;\n}\n\nfunction useDataRouterContext(hookName: DataRouterHook) {\n  let ctx = React.useContext(DataRouterContext);\n  invariant(ctx, getDataRouterConsoleError(hookName));\n  return ctx;\n}\n\nfunction useDataRouterState(hookName: DataRouterStateHook) {\n  let state = React.useContext(DataRouterStateContext);\n  invariant(state, getDataRouterConsoleError(hookName));\n  return state;\n}\n\nfunction useRouteContext(hookName: DataRouterStateHook) {\n  let route = React.useContext(RouteContext);\n  invariant(route, getDataRouterConsoleError(hookName));\n  return route;\n}\n\n// Internal version with hookName-aware debugging\nfunction useCurrentRouteId(hookName: DataRouterStateHook) {\n  let route = useRouteContext(hookName);\n  let thisRoute = route.matches[route.matches.length - 1];\n  invariant(\n    thisRoute.route.id,\n    `${hookName} can only be used on routes that contain a unique \"id\"`\n  );\n  return thisRoute.route.id;\n}\n\n/**\n * Returns the ID for the nearest contextual route\n */\nexport function useRouteId() {\n  return useCurrentRouteId(DataRouterStateHook.UseRouteId);\n}\n\n/**\n * Returns the current navigation, defaulting to an \"idle\" navigation when\n * no navigation is in progress\n */\nexport function useNavigation() {\n  let state = useDataRouterState(DataRouterStateHook.UseNavigation);\n  return state.navigation;\n}\n\n/**\n * Returns a revalidate function for manually triggering revalidation, as well\n * as the current state of any manual revalidations\n */\nexport function useRevalidator() {\n  let dataRouterContext = useDataRouterContext(DataRouterHook.UseRevalidator);\n  let state = useDataRouterState(DataRouterStateHook.UseRevalidator);\n  return React.useMemo(\n    () => ({\n      revalidate: dataRouterContext.router.revalidate,\n      state: state.revalidation,\n    }),\n    [dataRouterContext.router.revalidate, state.revalidation]\n  );\n}\n\n/**\n * Returns the active route matches, useful for accessing loaderData for\n * parent/child routes or the route \"handle\" property\n */\nexport function useMatches(): UIMatch[] {\n  let { matches, loaderData } = useDataRouterState(\n    DataRouterStateHook.UseMatches\n  );\n  return React.useMemo(\n    () => matches.map((m) => convertRouteMatchToUiMatch(m, loaderData)),\n    [matches, loaderData]\n  );\n}\n\n/**\n * Returns the loader data for the nearest ancestor Route loader\n */\nexport function useLoaderData(): unknown {\n  let state = useDataRouterState(DataRouterStateHook.UseLoaderData);\n  let routeId = useCurrentRouteId(DataRouterStateHook.UseLoaderData);\n\n  if (state.errors && state.errors[routeId] != null) {\n    console.error(\n      `You cannot \\`useLoaderData\\` in an errorElement (routeId: ${routeId})`\n    );\n    return undefined;\n  }\n  return state.loaderData[routeId];\n}\n\n/**\n * Returns the loaderData for the given routeId\n */\nexport function useRouteLoaderData(routeId: string): unknown {\n  let state = useDataRouterState(DataRouterStateHook.UseRouteLoaderData);\n  return state.loaderData[routeId];\n}\n\n/**\n * Returns the action data for the nearest ancestor Route action\n */\nexport function useActionData(): unknown {\n  let state = useDataRouterState(DataRouterStateHook.UseActionData);\n\n  let route = React.useContext(RouteContext);\n  invariant(route, `useActionData must be used inside a RouteContext`);\n\n  return Object.values(state?.actionData || {})[0];\n}\n\n/**\n * Returns the nearest ancestor Route error, which could be a loader/action\n * error or a render error.  This is intended to be called from your\n * ErrorBoundary/errorElement to display a proper error message.\n */\nexport function useRouteError(): unknown {\n  let error = React.useContext(RouteErrorContext);\n  let state = useDataRouterState(DataRouterStateHook.UseRouteError);\n  let routeId = useCurrentRouteId(DataRouterStateHook.UseRouteError);\n\n  // If this was a render error, we put it in a RouteError context inside\n  // of RenderErrorBoundary\n  if (error) {\n    return error;\n  }\n\n  // Otherwise look for errors from our data router state\n  return state.errors?.[routeId];\n}\n\n/**\n * Returns the happy-path data from the nearest ancestor `<Await />` value\n */\nexport function useAsyncValue(): unknown {\n  let value = React.useContext(AwaitContext);\n  return value?._data;\n}\n\n/**\n * Returns the error from the nearest ancestor `<Await />` value\n */\nexport function useAsyncError(): unknown {\n  let value = React.useContext(AwaitContext);\n  return value?._error;\n}\n\nlet blockerId = 0;\n\n/**\n * Allow the application to block navigations within the SPA and present the\n * user a confirmation dialog to confirm the navigation.  Mostly used to avoid\n * using half-filled form data.  This does not handle hard-reloads or\n * cross-origin navigations.\n */\nexport function useBlocker(shouldBlock: boolean | BlockerFunction): Blocker {\n  let { router, basename } = useDataRouterContext(DataRouterHook.UseBlocker);\n  let state = useDataRouterState(DataRouterStateHook.UseBlocker);\n\n  let [blockerKey, setBlockerKey] = React.useState(\"\");\n  let blockerFunction = React.useCallback<BlockerFunction>(\n    (arg) => {\n      if (typeof shouldBlock !== \"function\") {\n        return !!shouldBlock;\n      }\n      if (basename === \"/\") {\n        return shouldBlock(arg);\n      }\n\n      // If they provided us a function and we've got an active basename, strip\n      // it from the locations we expose to the user to match the behavior of\n      // useLocation\n      let { currentLocation, nextLocation, historyAction } = arg;\n      return shouldBlock({\n        currentLocation: {\n          ...currentLocation,\n          pathname:\n            stripBasename(currentLocation.pathname, basename) ||\n            currentLocation.pathname,\n        },\n        nextLocation: {\n          ...nextLocation,\n          pathname:\n            stripBasename(nextLocation.pathname, basename) ||\n            nextLocation.pathname,\n        },\n        historyAction,\n      });\n    },\n    [basename, shouldBlock]\n  );\n\n  // This effect is in charge of blocker key assignment and deletion (which is\n  // tightly coupled to the key)\n  React.useEffect(() => {\n    let key = String(++blockerId);\n    setBlockerKey(key);\n    return () => router.deleteBlocker(key);\n  }, [router]);\n\n  // This effect handles assigning the blockerFunction.  This is to handle\n  // unstable blocker function identities, and happens only after the prior\n  // effect so we don't get an orphaned blockerFunction in the router with a\n  // key of \"\".  Until then we just have the IDLE_BLOCKER.\n  React.useEffect(() => {\n    if (blockerKey !== \"\") {\n      router.getBlocker(blockerKey, blockerFunction);\n    }\n  }, [router, blockerKey, blockerFunction]);\n\n  // Prefer the blocker from `state` not `router.state` since DataRouterContext\n  // is memoized so this ensures we update on blocker state updates\n  return blockerKey && state.blockers.has(blockerKey)\n    ? state.blockers.get(blockerKey)!\n    : IDLE_BLOCKER;\n}\n\n/**\n * Stable version of useNavigate that is used when we are in the context of\n * a RouterProvider.\n */\nfunction useNavigateStable(): NavigateFunction {\n  let { router } = useDataRouterContext(DataRouterHook.UseNavigateStable);\n  let id = useCurrentRouteId(DataRouterStateHook.UseNavigateStable);\n\n  let activeRef = React.useRef(false);\n  useIsomorphicLayoutEffect(() => {\n    activeRef.current = true;\n  });\n\n  let navigate: NavigateFunction = React.useCallback(\n    (to: To | number, options: NavigateOptions = {}) => {\n      warning(activeRef.current, navigateEffectWarning);\n\n      // Short circuit here since if this happens on first render the navigate\n      // is useless because we haven't wired up our router subscriber yet\n      if (!activeRef.current) return;\n\n      if (typeof to === \"number\") {\n        router.navigate(to);\n      } else {\n        router.navigate(to, { fromRouteId: id, ...options });\n      }\n    },\n    [router, id]\n  );\n\n  return navigate;\n}\n\nconst alreadyWarned: Record<string, boolean> = {};\n\nfunction warningOnce(key: string, cond: boolean, message: string) {\n  if (!cond && !alreadyWarned[key]) {\n    alreadyWarned[key] = true;\n    warning(false, message);\n  }\n}\n","import type {\n  InitialEntry,\n  LazyRouteFunction,\n  Location,\n  MemoryHistory,\n  RelativeRoutingType,\n  Router as RemixRouter,\n  RouterState,\n  RouterSubscriber,\n  To,\n  TrackedPromise,\n} from \"@remix-run/router\";\nimport {\n  AbortedDeferredError,\n  Action as NavigationType,\n  createMemoryHistory,\n  UNSAFE_getPathContributingMatches as getPathContributingMatches,\n  UNSAFE_invariant as invariant,\n  parsePath,\n  resolveTo,\n  stripBasename,\n  UNSAFE_warning as warning,\n} from \"@remix-run/router\";\nimport * as React from \"react\";\n\nimport type {\n  DataRouteObject,\n  IndexRouteObject,\n  Navigator,\n  NonIndexRouteObject,\n  RouteMatch,\n  RouteObject,\n} from \"./context\";\nimport {\n  AwaitContext,\n  DataRouterContext,\n  DataRouterStateContext,\n  LocationContext,\n  NavigationContext,\n  RouteContext,\n} from \"./context\";\nimport {\n  _renderMatches,\n  useAsyncValue,\n  useInRouterContext,\n  useLocation,\n  useNavigate,\n  useOutlet,\n  useRoutes,\n  useRoutesImpl,\n} from \"./hooks\";\n\nexport interface FutureConfig {\n  v7_startTransition: boolean;\n}\n\nexport interface RouterProviderProps {\n  fallbackElement?: React.ReactNode;\n  router: RemixRouter;\n  future?: Partial<FutureConfig>;\n}\n\n/**\n  Webpack + React 17 fails to compile on any of the following because webpack\n  complains that `startTransition` doesn't exist in `React`:\n  * import { startTransition } from \"react\"\n  * import * as React from from \"react\";\n    \"startTransition\" in React ? React.startTransition(() => setState()) : setState()\n  * import * as React from from \"react\";\n    \"startTransition\" in React ? React[\"startTransition\"](() => setState()) : setState()\n\n  Moving it to a constant such as the following solves the Webpack/React 17 issue:\n  * import * as React from from \"react\";\n    const START_TRANSITION = \"startTransition\";\n    START_TRANSITION in React ? React[START_TRANSITION](() => setState()) : setState()\n\n  However, that introduces webpack/terser minification issues in production builds\n  in React 18 where minification/obfuscation ends up removing the call of\n  React.startTransition entirely from the first half of the ternary.  Grabbing\n  this exported reference once up front resolves that issue.\n\n  See https://github.com/remix-run/react-router/issues/10579\n*/\nconst START_TRANSITION = \"startTransition\";\nconst startTransitionImpl = React[START_TRANSITION];\n\n/**\n * Given a Remix Router instance, render the appropriate UI\n */\nexport function RouterProvider({\n  fallbackElement,\n  router,\n  future,\n}: RouterProviderProps): React.ReactElement {\n  let [state, setStateImpl] = React.useState(router.state);\n  let { v7_startTransition } = future || {};\n\n  let setState = React.useCallback<RouterSubscriber>(\n    (newState: RouterState) => {\n      if (v7_startTransition && startTransitionImpl) {\n        startTransitionImpl(() => setStateImpl(newState));\n      } else {\n        setStateImpl(newState);\n      }\n    },\n    [setStateImpl, v7_startTransition]\n  );\n\n  // Need to use a layout effect here so we are subscribed early enough to\n  // pick up on any render-driven redirects/navigations (useEffect/<Navigate>)\n  React.useLayoutEffect(() => router.subscribe(setState), [router, setState]);\n\n  let navigator = React.useMemo((): Navigator => {\n    return {\n      createHref: router.createHref,\n      encodeLocation: router.encodeLocation,\n      go: (n) => router.navigate(n),\n      push: (to, state, opts) =>\n        router.navigate(to, {\n          state,\n          preventScrollReset: opts?.preventScrollReset,\n        }),\n      replace: (to, state, opts) =>\n        router.navigate(to, {\n          replace: true,\n          state,\n          preventScrollReset: opts?.preventScrollReset,\n        }),\n    };\n  }, [router]);\n\n  let basename = router.basename || \"/\";\n\n  let dataRouterContext = React.useMemo(\n    () => ({\n      router,\n      navigator,\n      static: false,\n      basename,\n    }),\n    [router, navigator, basename]\n  );\n\n  // The fragment and {null} here are important!  We need them to keep React 18's\n  // useId happy when we are server-rendering since we may have a <script> here\n  // containing the hydrated server-side staticContext (from StaticRouterProvider).\n  // useId relies on the component tree structure to generate deterministic id's\n  // so we need to ensure it remains the same on the client even though\n  // we don't need the <script> tag\n  return (\n    <>\n      <DataRouterContext.Provider value={dataRouterContext}>\n        <DataRouterStateContext.Provider value={state}>\n          <Router\n            basename={basename}\n            location={state.location}\n            navigationType={state.historyAction}\n            navigator={navigator}\n          >\n            {state.initialized ? (\n              <DataRoutes routes={router.routes} state={state} />\n            ) : (\n              fallbackElement\n            )}\n          </Router>\n        </DataRouterStateContext.Provider>\n      </DataRouterContext.Provider>\n      {null}\n    </>\n  );\n}\n\nfunction DataRoutes({\n  routes,\n  state,\n}: {\n  routes: DataRouteObject[];\n  state: RouterState;\n}): React.ReactElement | null {\n  return useRoutesImpl(routes, undefined, state);\n}\n\nexport interface MemoryRouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  initialEntries?: InitialEntry[];\n  initialIndex?: number;\n  future?: Partial<FutureConfig>;\n}\n\n/**\n * A `<Router>` that stores all entries in memory.\n *\n * @see https://reactrouter.com/router-components/memory-router\n */\nexport function MemoryRouter({\n  basename,\n  children,\n  initialEntries,\n  initialIndex,\n  future,\n}: MemoryRouterProps): React.ReactElement {\n  let historyRef = React.useRef<MemoryHistory>();\n  if (historyRef.current == null) {\n    historyRef.current = createMemoryHistory({\n      initialEntries,\n      initialIndex,\n      v5Compat: true,\n    });\n  }\n\n  let history = historyRef.current;\n  let [state, setStateImpl] = React.useState({\n    action: history.action,\n    location: history.location,\n  });\n  let { v7_startTransition } = future || {};\n  let setState = React.useCallback(\n    (newState: { action: NavigationType; location: Location }) => {\n      v7_startTransition && startTransitionImpl\n        ? startTransitionImpl(() => setStateImpl(newState))\n        : setStateImpl(newState);\n    },\n    [setStateImpl, v7_startTransition]\n  );\n\n  React.useLayoutEffect(() => history.listen(setState), [history, setState]);\n\n  return (\n    <Router\n      basename={basename}\n      children={children}\n      location={state.location}\n      navigationType={state.action}\n      navigator={history}\n    />\n  );\n}\n\nexport interface NavigateProps {\n  to: To;\n  replace?: boolean;\n  state?: any;\n  relative?: RelativeRoutingType;\n}\n\n/**\n * Changes the current location.\n *\n * Note: This API is mostly useful in React.Component subclasses that are not\n * able to use hooks. In functional components, we recommend you use the\n * `useNavigate` hook instead.\n *\n * @see https://reactrouter.com/components/navigate\n */\nexport function Navigate({\n  to,\n  replace,\n  state,\n  relative,\n}: NavigateProps): null {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of\n    // the router loaded. We can help them understand how to avoid that.\n    `<Navigate> may be used only in the context of a <Router> component.`\n  );\n\n  warning(\n    !React.useContext(NavigationContext).static,\n    `<Navigate> must not be used on the initial render in a <StaticRouter>. ` +\n      `This is a no-op, but you should modify your code so the <Navigate> is ` +\n      `only ever rendered in response to some user interaction or state change.`\n  );\n\n  let { matches } = React.useContext(RouteContext);\n  let { pathname: locationPathname } = useLocation();\n  let navigate = useNavigate();\n\n  // Resolve the path outside of the effect so that when effects run twice in\n  // StrictMode they navigate to the same place\n  let path = resolveTo(\n    to,\n    getPathContributingMatches(matches).map((match) => match.pathnameBase),\n    locationPathname,\n    relative === \"path\"\n  );\n  let jsonPath = JSON.stringify(path);\n\n  React.useEffect(\n    () => navigate(JSON.parse(jsonPath), { replace, state, relative }),\n    [navigate, jsonPath, relative, replace, state]\n  );\n\n  return null;\n}\n\nexport interface OutletProps {\n  context?: unknown;\n}\n\n/**\n * Renders the child route's element, if there is one.\n *\n * @see https://reactrouter.com/components/outlet\n */\nexport function Outlet(props: OutletProps): React.ReactElement | null {\n  return useOutlet(props.context);\n}\n\nexport interface PathRouteProps {\n  caseSensitive?: NonIndexRouteObject[\"caseSensitive\"];\n  path?: NonIndexRouteObject[\"path\"];\n  id?: NonIndexRouteObject[\"id\"];\n  lazy?: LazyRouteFunction<NonIndexRouteObject>;\n  loader?: NonIndexRouteObject[\"loader\"];\n  action?: NonIndexRouteObject[\"action\"];\n  hasErrorBoundary?: NonIndexRouteObject[\"hasErrorBoundary\"];\n  shouldRevalidate?: NonIndexRouteObject[\"shouldRevalidate\"];\n  handle?: NonIndexRouteObject[\"handle\"];\n  index?: false;\n  children?: React.ReactNode;\n  element?: React.ReactNode | null;\n  errorElement?: React.ReactNode | null;\n  Component?: React.ComponentType | null;\n  ErrorBoundary?: React.ComponentType | null;\n}\n\nexport interface LayoutRouteProps extends PathRouteProps {}\n\nexport interface IndexRouteProps {\n  caseSensitive?: IndexRouteObject[\"caseSensitive\"];\n  path?: IndexRouteObject[\"path\"];\n  id?: IndexRouteObject[\"id\"];\n  lazy?: LazyRouteFunction<IndexRouteObject>;\n  loader?: IndexRouteObject[\"loader\"];\n  action?: IndexRouteObject[\"action\"];\n  hasErrorBoundary?: IndexRouteObject[\"hasErrorBoundary\"];\n  shouldRevalidate?: IndexRouteObject[\"shouldRevalidate\"];\n  handle?: IndexRouteObject[\"handle\"];\n  index: true;\n  children?: undefined;\n  element?: React.ReactNode | null;\n  errorElement?: React.ReactNode | null;\n  Component?: React.ComponentType | null;\n  ErrorBoundary?: React.ComponentType | null;\n}\n\nexport type RouteProps = PathRouteProps | LayoutRouteProps | IndexRouteProps;\n\n/**\n * Declares an element that should be rendered at a certain URL path.\n *\n * @see https://reactrouter.com/components/route\n */\nexport function Route(_props: RouteProps): React.ReactElement | null {\n  invariant(\n    false,\n    `A <Route> is only ever to be used as the child of <Routes> element, ` +\n      `never rendered directly. Please wrap your <Route> in a <Routes>.`\n  );\n}\n\nexport interface RouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  location: Partial<Location> | string;\n  navigationType?: NavigationType;\n  navigator: Navigator;\n  static?: boolean;\n}\n\n/**\n * Provides location context for the rest of the app.\n *\n * Note: You usually won't render a `<Router>` directly. Instead, you'll render a\n * router that is more specific to your environment such as a `<BrowserRouter>`\n * in web browsers or a `<StaticRouter>` for server rendering.\n *\n * @see https://reactrouter.com/router-components/router\n */\nexport function Router({\n  basename: basenameProp = \"/\",\n  children = null,\n  location: locationProp,\n  navigationType = NavigationType.Pop,\n  navigator,\n  static: staticProp = false,\n}: RouterProps): React.ReactElement | null {\n  invariant(\n    !useInRouterContext(),\n    `You cannot render a <Router> inside another <Router>.` +\n      ` You should never have more than one in your app.`\n  );\n\n  // Preserve trailing slashes on basename, so we can let the user control\n  // the enforcement of trailing slashes throughout the app\n  let basename = basenameProp.replace(/^\\/*/, \"/\");\n  let navigationContext = React.useMemo(\n    () => ({ basename, navigator, static: staticProp }),\n    [basename, navigator, staticProp]\n  );\n\n  if (typeof locationProp === \"string\") {\n    locationProp = parsePath(locationProp);\n  }\n\n  let {\n    pathname = \"/\",\n    search = \"\",\n    hash = \"\",\n    state = null,\n    key = \"default\",\n  } = locationProp;\n\n  let locationContext = React.useMemo(() => {\n    let trailingPathname = stripBasename(pathname, basename);\n\n    if (trailingPathname == null) {\n      return null;\n    }\n\n    return {\n      location: {\n        pathname: trailingPathname,\n        search,\n        hash,\n        state,\n        key,\n      },\n      navigationType,\n    };\n  }, [basename, pathname, search, hash, state, key, navigationType]);\n\n  warning(\n    locationContext != null,\n    `<Router basename=\"${basename}\"> is not able to match the URL ` +\n      `\"${pathname}${search}${hash}\" because it does not start with the ` +\n      `basename, so the <Router> won't render anything.`\n  );\n\n  if (locationContext == null) {\n    return null;\n  }\n\n  return (\n    <NavigationContext.Provider value={navigationContext}>\n      <LocationContext.Provider children={children} value={locationContext} />\n    </NavigationContext.Provider>\n  );\n}\n\nexport interface RoutesProps {\n  children?: React.ReactNode;\n  location?: Partial<Location> | string;\n}\n\n/**\n * A container for a nested tree of `<Route>` elements that renders the branch\n * that best matches the current location.\n *\n * @see https://reactrouter.com/components/routes\n */\nexport function Routes({\n  children,\n  location,\n}: RoutesProps): React.ReactElement | null {\n  return useRoutes(createRoutesFromChildren(children), location);\n}\n\nexport interface AwaitResolveRenderFunction {\n  (data: Awaited<any>): React.ReactNode;\n}\n\nexport interface AwaitProps {\n  children: React.ReactNode | AwaitResolveRenderFunction;\n  errorElement?: React.ReactNode;\n  resolve: TrackedPromise | any;\n}\n\n/**\n * Component to use for rendering lazily loaded data from returning defer()\n * in a loader function\n */\nexport function Await({ children, errorElement, resolve }: AwaitProps) {\n  return (\n    <AwaitErrorBoundary resolve={resolve} errorElement={errorElement}>\n      <ResolveAwait>{children}</ResolveAwait>\n    </AwaitErrorBoundary>\n  );\n}\n\ntype AwaitErrorBoundaryProps = React.PropsWithChildren<{\n  errorElement?: React.ReactNode;\n  resolve: TrackedPromise | any;\n}>;\n\ntype AwaitErrorBoundaryState = {\n  error: any;\n};\n\nenum AwaitRenderStatus {\n  pending,\n  success,\n  error,\n}\n\nconst neverSettledPromise = new Promise(() => {});\n\nclass AwaitErrorBoundary extends React.Component<\n  AwaitErrorBoundaryProps,\n  AwaitErrorBoundaryState\n> {\n  constructor(props: AwaitErrorBoundaryProps) {\n    super(props);\n    this.state = { error: null };\n  }\n\n  static getDerivedStateFromError(error: any) {\n    return { error };\n  }\n\n  componentDidCatch(error: any, errorInfo: any) {\n    console.error(\n      \"<Await> caught the following error during render\",\n      error,\n      errorInfo\n    );\n  }\n\n  render() {\n    let { children, errorElement, resolve } = this.props;\n\n    let promise: TrackedPromise | null = null;\n    let status: AwaitRenderStatus = AwaitRenderStatus.pending;\n\n    if (!(resolve instanceof Promise)) {\n      // Didn't get a promise - provide as a resolved promise\n      status = AwaitRenderStatus.success;\n      promise = Promise.resolve();\n      Object.defineProperty(promise, \"_tracked\", { get: () => true });\n      Object.defineProperty(promise, \"_data\", { get: () => resolve });\n    } else if (this.state.error) {\n      // Caught a render error, provide it as a rejected promise\n      status = AwaitRenderStatus.error;\n      let renderError = this.state.error;\n      promise = Promise.reject().catch(() => {}); // Avoid unhandled rejection warnings\n      Object.defineProperty(promise, \"_tracked\", { get: () => true });\n      Object.defineProperty(promise, \"_error\", { get: () => renderError });\n    } else if ((resolve as TrackedPromise)._tracked) {\n      // Already tracked promise - check contents\n      promise = resolve;\n      status =\n        promise._error !== undefined\n          ? AwaitRenderStatus.error\n          : promise._data !== undefined\n          ? AwaitRenderStatus.success\n          : AwaitRenderStatus.pending;\n    } else {\n      // Raw (untracked) promise - track it\n      status = AwaitRenderStatus.pending;\n      Object.defineProperty(resolve, \"_tracked\", { get: () => true });\n      promise = resolve.then(\n        (data: any) =>\n          Object.defineProperty(resolve, \"_data\", { get: () => data }),\n        (error: any) =>\n          Object.defineProperty(resolve, \"_error\", { get: () => error })\n      );\n    }\n\n    if (\n      status === AwaitRenderStatus.error &&\n      promise._error instanceof AbortedDeferredError\n    ) {\n      // Freeze the UI by throwing a never resolved promise\n      throw neverSettledPromise;\n    }\n\n    if (status === AwaitRenderStatus.error && !errorElement) {\n      // No errorElement, throw to the nearest route-level error boundary\n      throw promise._error;\n    }\n\n    if (status === AwaitRenderStatus.error) {\n      // Render via our errorElement\n      return <AwaitContext.Provider value={promise} children={errorElement} />;\n    }\n\n    if (status === AwaitRenderStatus.success) {\n      // Render children with resolved value\n      return <AwaitContext.Provider value={promise} children={children} />;\n    }\n\n    // Throw to the suspense boundary\n    throw promise;\n  }\n}\n\n/**\n * @private\n * Indirection to leverage useAsyncValue for a render-prop API on `<Await>`\n */\nfunction ResolveAwait({\n  children,\n}: {\n  children: React.ReactNode | AwaitResolveRenderFunction;\n}) {\n  let data = useAsyncValue();\n  let toRender = typeof children === \"function\" ? children(data) : children;\n  return <>{toRender}</>;\n}\n\n///////////////////////////////////////////////////////////////////////////////\n// UTILS\n///////////////////////////////////////////////////////////////////////////////\n\n/**\n * Creates a route config from a React \"children\" object, which is usually\n * either a `<Route>` element or an array of them. Used internally by\n * `<Routes>` to create a route config from its children.\n *\n * @see https://reactrouter.com/utils/create-routes-from-children\n */\nexport function createRoutesFromChildren(\n  children: React.ReactNode,\n  parentPath: number[] = []\n): RouteObject[] {\n  let routes: RouteObject[] = [];\n\n  React.Children.forEach(children, (element, index) => {\n    if (!React.isValidElement(element)) {\n      // Ignore non-elements. This allows people to more easily inline\n      // conditionals in their route config.\n      return;\n    }\n\n    let treePath = [...parentPath, index];\n\n    if (element.type === React.Fragment) {\n      // Transparently support React.Fragment and its children.\n      routes.push.apply(\n        routes,\n        createRoutesFromChildren(element.props.children, treePath)\n      );\n      return;\n    }\n\n    invariant(\n      element.type === Route,\n      `[${\n        typeof element.type === \"string\" ? element.type : element.type.name\n      }] is not a <Route> component. All component children of <Routes> must be a <Route> or <React.Fragment>`\n    );\n\n    invariant(\n      !element.props.index || !element.props.children,\n      \"An index route cannot have child routes.\"\n    );\n\n    let route: RouteObject = {\n      id: element.props.id || treePath.join(\"-\"),\n      caseSensitive: element.props.caseSensitive,\n      element: element.props.element,\n      Component: element.props.Component,\n      index: element.props.index,\n      path: element.props.path,\n      loader: element.props.loader,\n      action: element.props.action,\n      errorElement: element.props.errorElement,\n      ErrorBoundary: element.props.ErrorBoundary,\n      hasErrorBoundary:\n        element.props.ErrorBoundary != null ||\n        element.props.errorElement != null,\n      shouldRevalidate: element.props.shouldRevalidate,\n      handle: element.props.handle,\n      lazy: element.props.lazy,\n    };\n\n    if (element.props.children) {\n      route.children = createRoutesFromChildren(\n        element.props.children,\n        treePath\n      );\n    }\n\n    routes.push(route);\n  });\n\n  return routes;\n}\n\n/**\n * Renders the result of `matchRoutes()` into a React element.\n */\nexport function renderMatches(\n  matches: RouteMatch[] | null\n): React.ReactElement | null {\n  return _renderMatches(matches);\n}\n","import type {\n  FormEncType,\n  HTMLFormMethod,\n  RelativeRoutingType,\n} from \"@remix-run/router\";\nimport { stripBasename, UNSAFE_warning as warning } from \"@remix-run/router\";\n\nexport const defaultMethod: HTMLFormMethod = \"get\";\nconst defaultEncType: FormEncType = \"application/x-www-form-urlencoded\";\n\nexport function isHtmlElement(object: any): object is HTMLElement {\n  return object != null && typeof object.tagName === \"string\";\n}\n\nexport function isButtonElement(object: any): object is HTMLButtonElement {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"button\";\n}\n\nexport function isFormElement(object: any): object is HTMLFormElement {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"form\";\n}\n\nexport function isInputElement(object: any): object is HTMLInputElement {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"input\";\n}\n\ntype LimitedMouseEvent = Pick<\n  MouseEvent,\n  \"button\" | \"metaKey\" | \"altKey\" | \"ctrlKey\" | \"shiftKey\"\n>;\n\nfunction isModifiedEvent(event: LimitedMouseEvent) {\n  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);\n}\n\nexport function shouldProcessLinkClick(\n  event: LimitedMouseEvent,\n  target?: string\n) {\n  return (\n    event.button === 0 && // Ignore everything but left clicks\n    (!target || target === \"_self\") && // Let browser handle \"target=_blank\" etc.\n    !isModifiedEvent(event) // Ignore clicks with modifier keys\n  );\n}\n\nexport type ParamKeyValuePair = [string, string];\n\nexport type URLSearchParamsInit =\n  | string\n  | ParamKeyValuePair[]\n  | Record<string, string | string[]>\n  | URLSearchParams;\n\n/**\n * Creates a URLSearchParams object using the given initializer.\n *\n * This is identical to `new URLSearchParams(init)` except it also\n * supports arrays as values in the object form of the initializer\n * instead of just strings. This is convenient when you need multiple\n * values for a given key, but don't want to use an array initializer.\n *\n * For example, instead of:\n *\n *   let searchParams = new URLSearchParams([\n *     ['sort', 'name'],\n *     ['sort', 'price']\n *   ]);\n *\n * you can do:\n *\n *   let searchParams = createSearchParams({\n *     sort: ['name', 'price']\n *   });\n */\nexport function createSearchParams(\n  init: URLSearchParamsInit = \"\"\n): URLSearchParams {\n  return new URLSearchParams(\n    typeof init === \"string\" ||\n    Array.isArray(init) ||\n    init instanceof URLSearchParams\n      ? init\n      : Object.keys(init).reduce((memo, key) => {\n          let value = init[key];\n          return memo.concat(\n            Array.isArray(value) ? value.map((v) => [key, v]) : [[key, value]]\n          );\n        }, [] as ParamKeyValuePair[])\n  );\n}\n\nexport function getSearchParamsForLocation(\n  locationSearch: string,\n  defaultSearchParams: URLSearchParams | null\n) {\n  let searchParams = createSearchParams(locationSearch);\n\n  if (defaultSearchParams) {\n    // Use `defaultSearchParams.forEach(...)` here instead of iterating of\n    // `defaultSearchParams.keys()` to work-around a bug in Firefox related to\n    // web extensions. Relevant Bugzilla tickets:\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=1414602\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=1023984\n    defaultSearchParams.forEach((_, key) => {\n      if (!searchParams.has(key)) {\n        defaultSearchParams.getAll(key).forEach((value) => {\n          searchParams.append(key, value);\n        });\n      }\n    });\n  }\n\n  return searchParams;\n}\n\n// Thanks https://github.com/sindresorhus/type-fest!\ntype JsonObject = { [Key in string]: JsonValue } & {\n  [Key in string]?: JsonValue | undefined;\n};\ntype JsonArray = JsonValue[] | readonly JsonValue[];\ntype JsonPrimitive = string | number | boolean | null;\ntype JsonValue = JsonPrimitive | JsonObject | JsonArray;\n\nexport type SubmitTarget =\n  | HTMLFormElement\n  | HTMLButtonElement\n  | HTMLInputElement\n  | FormData\n  | URLSearchParams\n  | JsonValue\n  | null;\n\n// One-time check for submitter support\nlet _formDataSupportsSubmitter: boolean | null = null;\n\nfunction isFormDataSubmitterSupported() {\n  if (_formDataSupportsSubmitter === null) {\n    try {\n      new FormData(\n        document.createElement(\"form\"),\n        // @ts-expect-error if FormData supports the submitter parameter, this will throw\n        0\n      );\n      _formDataSupportsSubmitter = false;\n    } catch (e) {\n      _formDataSupportsSubmitter = true;\n    }\n  }\n  return _formDataSupportsSubmitter;\n}\n\nexport interface SubmitOptions {\n  /**\n   * The HTTP method used to submit the form. Overrides `<form method>`.\n   * Defaults to \"GET\".\n   */\n  method?: HTMLFormMethod;\n\n  /**\n   * The action URL path used to submit the form. Overrides `<form action>`.\n   * Defaults to the path of the current route.\n   */\n  action?: string;\n\n  /**\n   * The encoding used to submit the form. Overrides `<form encType>`.\n   * Defaults to \"application/x-www-form-urlencoded\".\n   */\n  encType?: FormEncType;\n\n  /**\n   * Indicate a specific fetcherKey to use when using navigate=false\n   */\n  fetcherKey?: string;\n\n  /**\n   * navigate=false will use a fetcher instead of a navigation\n   */\n  navigate?: boolean;\n\n  /**\n   * Set `true` to replace the current entry in the browser's history stack\n   * instead of creating a new one (i.e. stay on \"the same page\"). Defaults\n   * to `false`.\n   */\n  replace?: boolean;\n\n  /**\n   * State object to add to the history stack entry for this navigation\n   */\n  state?: any;\n\n  /**\n   * Determines whether the form action is relative to the route hierarchy or\n   * the pathname.  Use this if you want to opt out of navigating the route\n   * hierarchy and want to instead route based on /-delimited URL segments\n   */\n  relative?: RelativeRoutingType;\n\n  /**\n   * In browser-based environments, prevent resetting scroll after this\n   * navigation when using the <ScrollRestoration> component\n   */\n  preventScrollReset?: boolean;\n\n  /**\n   * Enable view transitions on this submission navigation\n   */\n  unstable_viewTransition?: boolean;\n}\n\nconst supportedFormEncTypes: Set<FormEncType> = new Set([\n  \"application/x-www-form-urlencoded\",\n  \"multipart/form-data\",\n  \"text/plain\",\n]);\n\nfunction getFormEncType(encType: string | null) {\n  if (encType != null && !supportedFormEncTypes.has(encType as FormEncType)) {\n    warning(\n      false,\n      `\"${encType}\" is not a valid \\`encType\\` for \\`<Form>\\`/\\`<fetcher.Form>\\` ` +\n        `and will default to \"${defaultEncType}\"`\n    );\n\n    return null;\n  }\n  return encType;\n}\n\nexport function getFormSubmissionInfo(\n  target: SubmitTarget,\n  basename: string\n): {\n  action: string | null;\n  method: string;\n  encType: string;\n  formData: FormData | undefined;\n  body: any;\n} {\n  let method: string;\n  let action: string | null;\n  let encType: string;\n  let formData: FormData | undefined;\n  let body: any;\n\n  if (isFormElement(target)) {\n    // When grabbing the action from the element, it will have had the basename\n    // prefixed to ensure non-JS scenarios work, so strip it since we'll\n    // re-prefix in the router\n    let attr = target.getAttribute(\"action\");\n    action = attr ? stripBasename(attr, basename) : null;\n    method = target.getAttribute(\"method\") || defaultMethod;\n    encType = getFormEncType(target.getAttribute(\"enctype\")) || defaultEncType;\n\n    formData = new FormData(target);\n  } else if (\n    isButtonElement(target) ||\n    (isInputElement(target) &&\n      (target.type === \"submit\" || target.type === \"image\"))\n  ) {\n    let form = target.form;\n\n    if (form == null) {\n      throw new Error(\n        `Cannot submit a <button> or <input type=\"submit\"> without a <form>`\n      );\n    }\n\n    // <button>/<input type=\"submit\"> may override attributes of <form>\n\n    // When grabbing the action from the element, it will have had the basename\n    // prefixed to ensure non-JS scenarios work, so strip it since we'll\n    // re-prefix in the router\n    let attr = target.getAttribute(\"formaction\") || form.getAttribute(\"action\");\n    action = attr ? stripBasename(attr, basename) : null;\n\n    method =\n      target.getAttribute(\"formmethod\") ||\n      form.getAttribute(\"method\") ||\n      defaultMethod;\n    encType =\n      getFormEncType(target.getAttribute(\"formenctype\")) ||\n      getFormEncType(form.getAttribute(\"enctype\")) ||\n      defaultEncType;\n\n    // Build a FormData object populated from a form and submitter\n    formData = new FormData(form, target);\n\n    // If this browser doesn't support the `FormData(el, submitter)` format,\n    // then tack on the submitter value at the end.  This is a lightweight\n    // solution that is not 100% spec compliant.  For complete support in older\n    // browsers, consider using the `formdata-submitter-polyfill` package\n    if (!isFormDataSubmitterSupported()) {\n      let { name, type, value } = target;\n      if (type === \"image\") {\n        let prefix = name ? `${name}.` : \"\";\n        formData.append(`${prefix}x`, \"0\");\n        formData.append(`${prefix}y`, \"0\");\n      } else if (name) {\n        formData.append(name, value);\n      }\n    }\n  } else if (isHtmlElement(target)) {\n    throw new Error(\n      `Cannot submit element that is not <form>, <button>, or ` +\n        `<input type=\"submit|image\">`\n    );\n  } else {\n    method = defaultMethod;\n    action = null;\n    encType = defaultEncType;\n    body = target;\n  }\n\n  // Send body for <Form encType=\"text/plain\" so we encode it into text\n  if (formData && encType === \"text/plain\") {\n    body = formData;\n    formData = undefined;\n  }\n\n  return { action, method: method.toLowerCase(), encType, formData, body };\n}\n","/**\n * NOTE: If you refactor this to split up the modules into separate files,\n * you'll need to update the rollup config for react-router-dom-v5-compat.\n */\nimport * as React from \"react\";\nimport type {\n  DataRouteObject,\n  FutureConfig,\n  Location,\n  NavigateOptions,\n  NavigationType,\n  Navigator,\n  RelativeRoutingType,\n  RouteObject,\n  RouterProviderProps,\n  To,\n} from \"react-router\";\nimport {\n  Router,\n  createPath,\n  useHref,\n  useLocation,\n  useMatches,\n  useNavigate,\n  useNavigation,\n  useResolvedPath,\n  unstable_useBlocker as useBlocker,\n  UNSAFE_DataRouterContext as DataRouterContext,\n  UNSAFE_DataRouterStateContext as DataRouterStateContext,\n  UNSAFE_NavigationContext as NavigationContext,\n  UNSAFE_RouteContext as RouteContext,\n  UNSAFE_mapRouteProperties as mapRouteProperties,\n  UNSAFE_useRouteId as useRouteId,\n  UNSAFE_useRoutesImpl as useRoutesImpl,\n} from \"react-router\";\nimport type {\n  BrowserHistory,\n  Fetcher,\n  FormEncType,\n  FormMethod,\n  FutureConfig as RouterFutureConfig,\n  GetScrollRestorationKeyFunction,\n  HashHistory,\n  History,\n  HTMLFormMethod,\n  HydrationState,\n  Router as RemixRouter,\n  V7_FormMethod,\n  RouterState,\n  RouterSubscriber,\n} from \"@remix-run/router\";\nimport {\n  createRouter,\n  createBrowserHistory,\n  createHashHistory,\n  joinPaths,\n  stripBasename,\n  UNSAFE_ErrorResponseImpl as ErrorResponseImpl,\n  UNSAFE_invariant as invariant,\n  UNSAFE_warning as warning,\n  matchPath,\n  IDLE_FETCHER,\n} from \"@remix-run/router\";\n\nimport type {\n  SubmitOptions,\n  ParamKeyValuePair,\n  URLSearchParamsInit,\n  SubmitTarget,\n} from \"./dom\";\nimport {\n  createSearchParams,\n  defaultMethod,\n  getFormSubmissionInfo,\n  getSearchParamsForLocation,\n  shouldProcessLinkClick,\n} from \"./dom\";\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Re-exports\n////////////////////////////////////////////////////////////////////////////////\n\nexport type {\n  FormEncType,\n  FormMethod,\n  GetScrollRestorationKeyFunction,\n  ParamKeyValuePair,\n  SubmitOptions,\n  URLSearchParamsInit,\n  V7_FormMethod,\n};\nexport { createSearchParams };\n\n// Note: Keep in sync with react-router exports!\nexport type {\n  ActionFunction,\n  ActionFunctionArgs,\n  AwaitProps,\n  unstable_Blocker,\n  unstable_BlockerFunction,\n  DataRouteMatch,\n  DataRouteObject,\n  ErrorResponse,\n  Fetcher,\n  Hash,\n  IndexRouteObject,\n  IndexRouteProps,\n  JsonFunction,\n  LazyRouteFunction,\n  LayoutRouteProps,\n  LoaderFunction,\n  LoaderFunctionArgs,\n  Location,\n  MemoryRouterProps,\n  NavigateFunction,\n  NavigateOptions,\n  NavigateProps,\n  Navigation,\n  Navigator,\n  NonIndexRouteObject,\n  OutletProps,\n  Params,\n  ParamParseKey,\n  Path,\n  PathMatch,\n  Pathname,\n  PathPattern,\n  PathRouteProps,\n  RedirectFunction,\n  RelativeRoutingType,\n  RouteMatch,\n  RouteObject,\n  RouteProps,\n  RouterProps,\n  RouterProviderProps,\n  RoutesProps,\n  Search,\n  ShouldRevalidateFunction,\n  ShouldRevalidateFunctionArgs,\n  To,\n  UIMatch,\n} from \"react-router\";\nexport {\n  AbortedDeferredError,\n  Await,\n  MemoryRouter,\n  Navigate,\n  NavigationType,\n  Outlet,\n  Route,\n  Router,\n  Routes,\n  createMemoryRouter,\n  createPath,\n  createRoutesFromChildren,\n  createRoutesFromElements,\n  defer,\n  isRouteErrorResponse,\n  generatePath,\n  json,\n  matchPath,\n  matchRoutes,\n  parsePath,\n  redirect,\n  redirectDocument,\n  renderMatches,\n  resolvePath,\n  useActionData,\n  useAsyncError,\n  useAsyncValue,\n  unstable_useBlocker,\n  useHref,\n  useInRouterContext,\n  useLoaderData,\n  useLocation,\n  useMatch,\n  useMatches,\n  useNavigate,\n  useNavigation,\n  useNavigationType,\n  useOutlet,\n  useOutletContext,\n  useParams,\n  useResolvedPath,\n  useRevalidator,\n  useRouteError,\n  useRouteLoaderData,\n  useRoutes,\n} from \"react-router\";\n\n///////////////////////////////////////////////////////////////////////////////\n// DANGER! PLEASE READ ME!\n// We provide these exports as an escape hatch in the event that you need any\n// routing data that we don't provide an explicit API for. With that said, we\n// want to cover your use case if we can, so if you feel the need to use these\n// we want to hear from you. Let us know what you're building and we'll do our\n// best to make sure we can support you!\n//\n// We consider these exports an implementation detail and do not guarantee\n// against any breaking changes, regardless of the semver release. Use with\n// extreme caution and only if you understand the consequences. Godspeed.\n///////////////////////////////////////////////////////////////////////////////\n\n/** @internal */\nexport {\n  UNSAFE_DataRouterContext,\n  UNSAFE_DataRouterStateContext,\n  UNSAFE_NavigationContext,\n  UNSAFE_LocationContext,\n  UNSAFE_RouteContext,\n  UNSAFE_useRouteId,\n} from \"react-router\";\n//#endregion\n\ndeclare global {\n  var __staticRouterHydrationData: HydrationState | undefined;\n  interface Document {\n    startViewTransition(cb: () => Promise<void> | void): ViewTransition;\n  }\n}\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Routers\n////////////////////////////////////////////////////////////////////////////////\n\ninterface DOMRouterOpts {\n  basename?: string;\n  future?: Partial<Omit<RouterFutureConfig, \"v7_prependBasename\">>;\n  hydrationData?: HydrationState;\n  window?: Window;\n}\n\nexport function createBrowserRouter(\n  routes: RouteObject[],\n  opts?: DOMRouterOpts\n): RemixRouter {\n  return createRouter({\n    basename: opts?.basename,\n    future: {\n      ...opts?.future,\n      v7_prependBasename: true,\n    },\n    history: createBrowserHistory({ window: opts?.window }),\n    hydrationData: opts?.hydrationData || parseHydrationData(),\n    routes,\n    mapRouteProperties,\n    window: opts?.window,\n  }).initialize();\n}\n\nexport function createHashRouter(\n  routes: RouteObject[],\n  opts?: DOMRouterOpts\n): RemixRouter {\n  return createRouter({\n    basename: opts?.basename,\n    future: {\n      ...opts?.future,\n      v7_prependBasename: true,\n    },\n    history: createHashHistory({ window: opts?.window }),\n    hydrationData: opts?.hydrationData || parseHydrationData(),\n    routes,\n    mapRouteProperties,\n    window: opts?.window,\n  }).initialize();\n}\n\nfunction parseHydrationData(): HydrationState | undefined {\n  let state = window?.__staticRouterHydrationData;\n  if (state && state.errors) {\n    state = {\n      ...state,\n      errors: deserializeErrors(state.errors),\n    };\n  }\n  return state;\n}\n\nfunction deserializeErrors(\n  errors: RemixRouter[\"state\"][\"errors\"]\n): RemixRouter[\"state\"][\"errors\"] {\n  if (!errors) return null;\n  let entries = Object.entries(errors);\n  let serialized: RemixRouter[\"state\"][\"errors\"] = {};\n  for (let [key, val] of entries) {\n    // Hey you!  If you change this, please change the corresponding logic in\n    // serializeErrors in react-router-dom/server.tsx :)\n    if (val && val.__type === \"RouteErrorResponse\") {\n      serialized[key] = new ErrorResponseImpl(\n        val.status,\n        val.statusText,\n        val.data,\n        val.internal === true\n      );\n    } else if (val && val.__type === \"Error\") {\n      // Attempt to reconstruct the right type of Error (i.e., ReferenceError)\n      if (val.__subType) {\n        let ErrorConstructor = window[val.__subType];\n        if (typeof ErrorConstructor === \"function\") {\n          try {\n            // @ts-expect-error\n            let error = new ErrorConstructor(val.message);\n            // Wipe away the client-side stack trace.  Nothing to fill it in with\n            // because we don't serialize SSR stack traces for security reasons\n            error.stack = \"\";\n            serialized[key] = error;\n          } catch (e) {\n            // no-op - fall through and create a normal Error\n          }\n        }\n      }\n\n      if (serialized[key] == null) {\n        let error = new Error(val.message);\n        // Wipe away the client-side stack trace.  Nothing to fill it in with\n        // because we don't serialize SSR stack traces for security reasons\n        error.stack = \"\";\n        serialized[key] = error;\n      }\n    } else {\n      serialized[key] = val;\n    }\n  }\n  return serialized;\n}\n\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Contexts\n////////////////////////////////////////////////////////////////////////////////\n\ntype ViewTransitionContextObject =\n  | {\n      isTransitioning: false;\n    }\n  | {\n      isTransitioning: true;\n      currentLocation: Location;\n      nextLocation: Location;\n    };\n\nconst ViewTransitionContext = React.createContext<ViewTransitionContextObject>({\n  isTransitioning: false,\n});\nif (__DEV__) {\n  ViewTransitionContext.displayName = \"ViewTransition\";\n}\n\nexport { ViewTransitionContext as UNSAFE_ViewTransitionContext };\n\n// TODO: (v7) Change the useFetcher data from `any` to `unknown`\ntype FetchersContextObject = Map<string, any>;\n\nconst FetchersContext = React.createContext<FetchersContextObject>(new Map());\nif (__DEV__) {\n  FetchersContext.displayName = \"Fetchers\";\n}\n\nexport { FetchersContext as UNSAFE_FetchersContext };\n\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Components\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n  Webpack + React 17 fails to compile on any of the following because webpack\n  complains that `startTransition` doesn't exist in `React`:\n  * import { startTransition } from \"react\"\n  * import * as React from from \"react\";\n    \"startTransition\" in React ? React.startTransition(() => setState()) : setState()\n  * import * as React from from \"react\";\n    \"startTransition\" in React ? React[\"startTransition\"](() => setState()) : setState()\n\n  Moving it to a constant such as the following solves the Webpack/React 17 issue:\n  * import * as React from from \"react\";\n    const START_TRANSITION = \"startTransition\";\n    START_TRANSITION in React ? React[START_TRANSITION](() => setState()) : setState()\n\n  However, that introduces webpack/terser minification issues in production builds\n  in React 18 where minification/obfuscation ends up removing the call of\n  React.startTransition entirely from the first half of the ternary.  Grabbing\n  this exported reference once up front resolves that issue.\n\n  See https://github.com/remix-run/react-router/issues/10579\n*/\nconst START_TRANSITION = \"startTransition\";\nconst startTransitionImpl = React[START_TRANSITION];\n\nfunction startTransitionSafe(cb: () => void) {\n  if (startTransitionImpl) {\n    startTransitionImpl(cb);\n  } else {\n    cb();\n  }\n}\n\ninterface ViewTransition {\n  finished: Promise<void>;\n  ready: Promise<void>;\n  updateCallbackDone: Promise<void>;\n  skipTransition(): void;\n}\n\nclass Deferred<T> {\n  status: \"pending\" | \"resolved\" | \"rejected\" = \"pending\";\n  promise: Promise<T>;\n  // @ts-expect-error - no initializer\n  resolve: (value: T) => void;\n  // @ts-expect-error - no initializer\n  reject: (reason?: unknown) => void;\n  constructor() {\n    this.promise = new Promise((resolve, reject) => {\n      this.resolve = (value) => {\n        if (this.status === \"pending\") {\n          this.status = \"resolved\";\n          resolve(value);\n        }\n      };\n      this.reject = (reason) => {\n        if (this.status === \"pending\") {\n          this.status = \"rejected\";\n          reject(reason);\n        }\n      };\n    });\n  }\n}\n\n/**\n * Given a Remix Router instance, render the appropriate UI\n */\nexport function RouterProvider({\n  fallbackElement,\n  router,\n  future,\n}: RouterProviderProps): React.ReactElement {\n  let [state, setStateImpl] = React.useState(router.state);\n  let [pendingState, setPendingState] = React.useState<RouterState>();\n  let [vtContext, setVtContext] = React.useState<ViewTransitionContextObject>({\n    isTransitioning: false,\n  });\n  let [renderDfd, setRenderDfd] = React.useState<Deferred<void>>();\n  let [transition, setTransition] = React.useState<ViewTransition>();\n  let [interruption, setInterruption] = React.useState<{\n    state: RouterState;\n    currentLocation: Location;\n    nextLocation: Location;\n  }>();\n  let fetcherData = React.useRef<Map<string, any>>(new Map());\n  let { v7_startTransition } = future || {};\n\n  let optInStartTransition = React.useCallback(\n    (cb: () => void) => {\n      if (v7_startTransition) {\n        startTransitionSafe(cb);\n      } else {\n        cb();\n      }\n    },\n    [v7_startTransition]\n  );\n\n  let setState = React.useCallback<RouterSubscriber>(\n    (\n      newState: RouterState,\n      { deletedFetchers, unstable_viewTransitionOpts: viewTransitionOpts }\n    ) => {\n      deletedFetchers.forEach((key) => fetcherData.current.delete(key));\n      newState.fetchers.forEach((fetcher, key) => {\n        if (fetcher.data !== undefined) {\n          fetcherData.current.set(key, fetcher.data);\n        }\n      });\n\n      if (\n        !viewTransitionOpts ||\n        router.window == null ||\n        typeof router.window.document.startViewTransition !== \"function\"\n      ) {\n        // Mid-navigation state update, or startViewTransition isn't available\n        optInStartTransition(() => setStateImpl(newState));\n      } else if (transition && renderDfd) {\n        // Interrupting an in-progress transition, cancel and let everything flush\n        // out, and then kick off a new transition from the interruption state\n        renderDfd.resolve();\n        transition.skipTransition();\n        setInterruption({\n          state: newState,\n          currentLocation: viewTransitionOpts.currentLocation,\n          nextLocation: viewTransitionOpts.nextLocation,\n        });\n      } else {\n        // Completed navigation update with opted-in view transitions, let 'er rip\n        setPendingState(newState);\n        setVtContext({\n          isTransitioning: true,\n          currentLocation: viewTransitionOpts.currentLocation,\n          nextLocation: viewTransitionOpts.nextLocation,\n        });\n      }\n    },\n    [router.window, transition, renderDfd, fetcherData, optInStartTransition]\n  );\n\n  // Need to use a layout effect here so we are subscribed early enough to\n  // pick up on any render-driven redirects/navigations (useEffect/<Navigate>)\n  React.useLayoutEffect(() => router.subscribe(setState), [router, setState]);\n\n  // When we start a view transition, create a Deferred we can use for the\n  // eventual \"completed\" render\n  React.useEffect(() => {\n    if (vtContext.isTransitioning) {\n      setRenderDfd(new Deferred<void>());\n    }\n  }, [vtContext.isTransitioning]);\n\n  // Once the deferred is created, kick off startViewTransition() to update the\n  // DOM and then wait on the Deferred to resolve (indicating the DOM update has\n  // happened)\n  React.useEffect(() => {\n    if (renderDfd && pendingState && router.window) {\n      let newState = pendingState;\n      let renderPromise = renderDfd.promise;\n      let transition = router.window.document.startViewTransition(async () => {\n        optInStartTransition(() => setStateImpl(newState));\n        await renderPromise;\n      });\n      transition.finished.finally(() => {\n        setRenderDfd(undefined);\n        setTransition(undefined);\n        setPendingState(undefined);\n        setVtContext({ isTransitioning: false });\n      });\n      setTransition(transition);\n    }\n  }, [optInStartTransition, pendingState, renderDfd, router.window]);\n\n  // When the new location finally renders and is committed to the DOM, this\n  // effect will run to resolve the transition\n  React.useEffect(() => {\n    if (\n      renderDfd &&\n      pendingState &&\n      state.location.key === pendingState.location.key\n    ) {\n      renderDfd.resolve();\n    }\n  }, [renderDfd, transition, state.location, pendingState]);\n\n  // If we get interrupted with a new navigation during a transition, we skip\n  // the active transition, let it cleanup, then kick it off again here\n  React.useEffect(() => {\n    if (!vtContext.isTransitioning && interruption) {\n      setPendingState(interruption.state);\n      setVtContext({\n        isTransitioning: true,\n        currentLocation: interruption.currentLocation,\n        nextLocation: interruption.nextLocation,\n      });\n      setInterruption(undefined);\n    }\n  }, [vtContext.isTransitioning, interruption]);\n\n  let navigator = React.useMemo((): Navigator => {\n    return {\n      createHref: router.createHref,\n      encodeLocation: router.encodeLocation,\n      go: (n) => router.navigate(n),\n      push: (to, state, opts) =>\n        router.navigate(to, {\n          state,\n          preventScrollReset: opts?.preventScrollReset,\n        }),\n      replace: (to, state, opts) =>\n        router.navigate(to, {\n          replace: true,\n          state,\n          preventScrollReset: opts?.preventScrollReset,\n        }),\n    };\n  }, [router]);\n\n  let basename = router.basename || \"/\";\n\n  let dataRouterContext = React.useMemo(\n    () => ({\n      router,\n      navigator,\n      static: false,\n      basename,\n    }),\n    [router, navigator, basename]\n  );\n\n  // The fragment and {null} here are important!  We need them to keep React 18's\n  // useId happy when we are server-rendering since we may have a <script> here\n  // containing the hydrated server-side staticContext (from StaticRouterProvider).\n  // useId relies on the component tree structure to generate deterministic id's\n  // so we need to ensure it remains the same on the client even though\n  // we don't need the <script> tag\n  return (\n    <>\n      <DataRouterContext.Provider value={dataRouterContext}>\n        <DataRouterStateContext.Provider value={state}>\n          <FetchersContext.Provider value={fetcherData.current}>\n            <ViewTransitionContext.Provider value={vtContext}>\n              <Router\n                basename={basename}\n                location={state.location}\n                navigationType={state.historyAction}\n                navigator={navigator}\n              >\n                {state.initialized ? (\n                  <DataRoutes routes={router.routes} state={state} />\n                ) : (\n                  fallbackElement\n                )}\n              </Router>\n            </ViewTransitionContext.Provider>\n          </FetchersContext.Provider>\n        </DataRouterStateContext.Provider>\n      </DataRouterContext.Provider>\n      {null}\n    </>\n  );\n}\n\nfunction DataRoutes({\n  routes,\n  state,\n}: {\n  routes: DataRouteObject[];\n  state: RouterState;\n}): React.ReactElement | null {\n  return useRoutesImpl(routes, undefined, state);\n}\n\nexport interface BrowserRouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  future?: Partial<FutureConfig>;\n  window?: Window;\n}\n\n/**\n * A `<Router>` for use in web browsers. Provides the cleanest URLs.\n */\nexport function BrowserRouter({\n  basename,\n  children,\n  future,\n  window,\n}: BrowserRouterProps) {\n  let historyRef = React.useRef<BrowserHistory>();\n  if (historyRef.current == null) {\n    historyRef.current = createBrowserHistory({ window, v5Compat: true });\n  }\n\n  let history = historyRef.current;\n  let [state, setStateImpl] = React.useState({\n    action: history.action,\n    location: history.location,\n  });\n  let { v7_startTransition } = future || {};\n  let setState = React.useCallback(\n    (newState: { action: NavigationType; location: Location }) => {\n      v7_startTransition && startTransitionImpl\n        ? startTransitionImpl(() => setStateImpl(newState))\n        : setStateImpl(newState);\n    },\n    [setStateImpl, v7_startTransition]\n  );\n\n  React.useLayoutEffect(() => history.listen(setState), [history, setState]);\n\n  return (\n    <Router\n      basename={basename}\n      children={children}\n      location={state.location}\n      navigationType={state.action}\n      navigator={history}\n    />\n  );\n}\n\nexport interface HashRouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  future?: Partial<FutureConfig>;\n  window?: Window;\n}\n\n/**\n * A `<Router>` for use in web browsers. Stores the location in the hash\n * portion of the URL so it is not sent to the server.\n */\nexport function HashRouter({\n  basename,\n  children,\n  future,\n  window,\n}: HashRouterProps) {\n  let historyRef = React.useRef<HashHistory>();\n  if (historyRef.current == null) {\n    historyRef.current = createHashHistory({ window, v5Compat: true });\n  }\n\n  let history = historyRef.current;\n  let [state, setStateImpl] = React.useState({\n    action: history.action,\n    location: history.location,\n  });\n  let { v7_startTransition } = future || {};\n  let setState = React.useCallback(\n    (newState: { action: NavigationType; location: Location }) => {\n      v7_startTransition && startTransitionImpl\n        ? startTransitionImpl(() => setStateImpl(newState))\n        : setStateImpl(newState);\n    },\n    [setStateImpl, v7_startTransition]\n  );\n\n  React.useLayoutEffect(() => history.listen(setState), [history, setState]);\n\n  return (\n    <Router\n      basename={basename}\n      children={children}\n      location={state.location}\n      navigationType={state.action}\n      navigator={history}\n    />\n  );\n}\n\nexport interface HistoryRouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  future?: FutureConfig;\n  history: History;\n}\n\n/**\n * A `<Router>` that accepts a pre-instantiated history object. It's important\n * to note that using your own history object is highly discouraged and may add\n * two versions of the history library to your bundles unless you use the same\n * version of the history library that React Router uses internally.\n */\nfunction HistoryRouter({\n  basename,\n  children,\n  future,\n  history,\n}: HistoryRouterProps) {\n  let [state, setStateImpl] = React.useState({\n    action: history.action,\n    location: history.location,\n  });\n  let { v7_startTransition } = future || {};\n  let setState = React.useCallback(\n    (newState: { action: NavigationType; location: Location }) => {\n      v7_startTransition && startTransitionImpl\n        ? startTransitionImpl(() => setStateImpl(newState))\n        : setStateImpl(newState);\n    },\n    [setStateImpl, v7_startTransition]\n  );\n\n  React.useLayoutEffect(() => history.listen(setState), [history, setState]);\n\n  return (\n    <Router\n      basename={basename}\n      children={children}\n      location={state.location}\n      navigationType={state.action}\n      navigator={history}\n    />\n  );\n}\n\nif (__DEV__) {\n  HistoryRouter.displayName = \"unstable_HistoryRouter\";\n}\n\nexport { HistoryRouter as unstable_HistoryRouter };\n\nexport interface LinkProps\n  extends Omit<React.AnchorHTMLAttributes<HTMLAnchorElement>, \"href\"> {\n  reloadDocument?: boolean;\n  replace?: boolean;\n  state?: any;\n  preventScrollReset?: boolean;\n  relative?: RelativeRoutingType;\n  to: To;\n  unstable_viewTransition?: boolean;\n}\n\nconst isBrowser =\n  typeof window !== \"undefined\" &&\n  typeof window.document !== \"undefined\" &&\n  typeof window.document.createElement !== \"undefined\";\n\nconst ABSOLUTE_URL_REGEX = /^(?:[a-z][a-z0-9+.-]*:|\\/\\/)/i;\n\n/**\n * The public API for rendering a history-aware `<a>`.\n */\nexport const Link = React.forwardRef<HTMLAnchorElement, LinkProps>(\n  function LinkWithRef(\n    {\n      onClick,\n      relative,\n      reloadDocument,\n      replace,\n      state,\n      target,\n      to,\n      preventScrollReset,\n      unstable_viewTransition,\n      ...rest\n    },\n    ref\n  ) {\n    let { basename } = React.useContext(NavigationContext);\n\n    // Rendered into <a href> for absolute URLs\n    let absoluteHref;\n    let isExternal = false;\n\n    if (typeof to === \"string\" && ABSOLUTE_URL_REGEX.test(to)) {\n      // Render the absolute href server- and client-side\n      absoluteHref = to;\n\n      // Only check for external origins client-side\n      if (isBrowser) {\n        try {\n          let currentUrl = new URL(window.location.href);\n          let targetUrl = to.startsWith(\"//\")\n            ? new URL(currentUrl.protocol + to)\n            : new URL(to);\n          let path = stripBasename(targetUrl.pathname, basename);\n\n          if (targetUrl.origin === currentUrl.origin && path != null) {\n            // Strip the protocol/origin/basename for same-origin absolute URLs\n            to = path + targetUrl.search + targetUrl.hash;\n          } else {\n            isExternal = true;\n          }\n        } catch (e) {\n          // We can't do external URL detection without a valid URL\n          warning(\n            false,\n            `<Link to=\"${to}\"> contains an invalid URL which will probably break ` +\n              `when clicked - please update to a valid URL path.`\n          );\n        }\n      }\n    }\n\n    // Rendered into <a href> for relative URLs\n    let href = useHref(to, { relative });\n\n    let internalOnClick = useLinkClickHandler(to, {\n      replace,\n      state,\n      target,\n      preventScrollReset,\n      relative,\n      unstable_viewTransition,\n    });\n    function handleClick(\n      event: React.MouseEvent<HTMLAnchorElement, MouseEvent>\n    ) {\n      if (onClick) onClick(event);\n      if (!event.defaultPrevented) {\n        internalOnClick(event);\n      }\n    }\n\n    return (\n      // eslint-disable-next-line jsx-a11y/anchor-has-content\n      <a\n        {...rest}\n        href={absoluteHref || href}\n        onClick={isExternal || reloadDocument ? onClick : handleClick}\n        ref={ref}\n        target={target}\n      />\n    );\n  }\n);\n\nif (__DEV__) {\n  Link.displayName = \"Link\";\n}\n\ntype NavLinkRenderProps = {\n  isActive: boolean;\n  isPending: boolean;\n  isTransitioning: boolean;\n};\n\nexport interface NavLinkProps\n  extends Omit<LinkProps, \"className\" | \"style\" | \"children\"> {\n  children?: React.ReactNode | ((props: NavLinkRenderProps) => React.ReactNode);\n  caseSensitive?: boolean;\n  className?: string | ((props: NavLinkRenderProps) => string | undefined);\n  end?: boolean;\n  style?:\n    | React.CSSProperties\n    | ((props: NavLinkRenderProps) => React.CSSProperties | undefined);\n  unstable_viewTransition?: boolean;\n}\n\n/**\n * A `<Link>` wrapper that knows if it's \"active\" or not.\n */\nexport const NavLink = React.forwardRef<HTMLAnchorElement, NavLinkProps>(\n  function NavLinkWithRef(\n    {\n      \"aria-current\": ariaCurrentProp = \"page\",\n      caseSensitive = false,\n      className: classNameProp = \"\",\n      end = false,\n      style: styleProp,\n      to,\n      unstable_viewTransition,\n      children,\n      ...rest\n    },\n    ref\n  ) {\n    let path = useResolvedPath(to, { relative: rest.relative });\n    let location = useLocation();\n    let routerState = React.useContext(DataRouterStateContext);\n    let { navigator } = React.useContext(NavigationContext);\n    let isTransitioning =\n      routerState != null &&\n      // Conditional usage is OK here because the usage of a data router is static\n      // eslint-disable-next-line react-hooks/rules-of-hooks\n      useViewTransitionState(path) &&\n      unstable_viewTransition === true;\n\n    let toPathname = navigator.encodeLocation\n      ? navigator.encodeLocation(path).pathname\n      : path.pathname;\n    let locationPathname = location.pathname;\n    let nextLocationPathname =\n      routerState && routerState.navigation && routerState.navigation.location\n        ? routerState.navigation.location.pathname\n        : null;\n\n    if (!caseSensitive) {\n      locationPathname = locationPathname.toLowerCase();\n      nextLocationPathname = nextLocationPathname\n        ? nextLocationPathname.toLowerCase()\n        : null;\n      toPathname = toPathname.toLowerCase();\n    }\n\n    let isActive =\n      locationPathname === toPathname ||\n      (!end &&\n        locationPathname.startsWith(toPathname) &&\n        locationPathname.charAt(toPathname.length) === \"/\");\n\n    let isPending =\n      nextLocationPathname != null &&\n      (nextLocationPathname === toPathname ||\n        (!end &&\n          nextLocationPathname.startsWith(toPathname) &&\n          nextLocationPathname.charAt(toPathname.length) === \"/\"));\n\n    let renderProps = {\n      isActive,\n      isPending,\n      isTransitioning,\n    };\n\n    let ariaCurrent = isActive ? ariaCurrentProp : undefined;\n\n    let className: string | undefined;\n    if (typeof classNameProp === \"function\") {\n      className = classNameProp(renderProps);\n    } else {\n      // If the className prop is not a function, we use a default `active`\n      // class for <NavLink />s that are active. In v5 `active` was the default\n      // value for `activeClassName`, but we are removing that API and can still\n      // use the old default behavior for a cleaner upgrade path and keep the\n      // simple styling rules working as they currently do.\n      className = [\n        classNameProp,\n        isActive ? \"active\" : null,\n        isPending ? \"pending\" : null,\n        isTransitioning ? \"transitioning\" : null,\n      ]\n        .filter(Boolean)\n        .join(\" \");\n    }\n\n    let style =\n      typeof styleProp === \"function\" ? styleProp(renderProps) : styleProp;\n\n    return (\n      <Link\n        {...rest}\n        aria-current={ariaCurrent}\n        className={className}\n        ref={ref}\n        style={style}\n        to={to}\n        unstable_viewTransition={unstable_viewTransition}\n      >\n        {typeof children === \"function\" ? children(renderProps) : children}\n      </Link>\n    );\n  }\n);\n\nif (__DEV__) {\n  NavLink.displayName = \"NavLink\";\n}\n\nexport interface FetcherFormProps\n  extends React.FormHTMLAttributes<HTMLFormElement> {\n  /**\n   * The HTTP verb to use when the form is submit. Supports \"get\", \"post\",\n   * \"put\", \"delete\", \"patch\".\n   */\n  method?: HTMLFormMethod;\n\n  /**\n   * `<form encType>` - enhancing beyond the normal string type and limiting\n   * to the built-in browser supported values\n   */\n  encType?:\n    | \"application/x-www-form-urlencoded\"\n    | \"multipart/form-data\"\n    | \"text/plain\";\n\n  /**\n   * Normal `<form action>` but supports React Router's relative paths.\n   */\n  action?: string;\n\n  /**\n   * Determines whether the form action is relative to the route hierarchy or\n   * the pathname.  Use this if you want to opt out of navigating the route\n   * hierarchy and want to instead route based on /-delimited URL segments\n   */\n  relative?: RelativeRoutingType;\n\n  /**\n   * Prevent the scroll position from resetting to the top of the viewport on\n   * completion of the navigation when using the <ScrollRestoration> component\n   */\n  preventScrollReset?: boolean;\n\n  /**\n   * A function to call when the form is submitted. If you call\n   * `event.preventDefault()` then this form will not do anything.\n   */\n  onSubmit?: React.FormEventHandler<HTMLFormElement>;\n}\n\nexport interface FormProps extends FetcherFormProps {\n  /**\n   * Indicate a specific fetcherKey to use when using navigate=false\n   */\n  fetcherKey?: string;\n\n  /**\n   * navigate=false will use a fetcher instead of a navigation\n   */\n  navigate?: boolean;\n\n  /**\n   * Forces a full document navigation instead of a fetch.\n   */\n  reloadDocument?: boolean;\n\n  /**\n   * Replaces the current entry in the browser history stack when the form\n   * navigates. Use this if you don't want the user to be able to click \"back\"\n   * to the page with the form on it.\n   */\n  replace?: boolean;\n\n  /**\n   * State object to add to the history stack entry for this navigation\n   */\n  state?: any;\n\n  /**\n   * Enable view transitions on this Form navigation\n   */\n  unstable_viewTransition?: boolean;\n}\n\ntype HTMLSubmitEvent = React.BaseSyntheticEvent<\n  SubmitEvent,\n  Event,\n  HTMLFormElement\n>;\n\ntype HTMLFormSubmitter = HTMLButtonElement | HTMLInputElement;\n\n/**\n * A `@remix-run/router`-aware `<form>`. It behaves like a normal form except\n * that the interaction with the server is with `fetch` instead of new document\n * requests, allowing components to add nicer UX to the page as the form is\n * submitted and returns with data.\n */\nexport const Form = React.forwardRef<HTMLFormElement, FormProps>(\n  (\n    {\n      fetcherKey,\n      navigate,\n      reloadDocument,\n      replace,\n      state,\n      method = defaultMethod,\n      action,\n      onSubmit,\n      relative,\n      preventScrollReset,\n      unstable_viewTransition,\n      ...props\n    },\n    forwardedRef\n  ) => {\n    let submit = useSubmit();\n    let formAction = useFormAction(action, { relative });\n    let formMethod: HTMLFormMethod =\n      method.toLowerCase() === \"get\" ? \"get\" : \"post\";\n\n    let submitHandler: React.FormEventHandler<HTMLFormElement> = (event) => {\n      onSubmit && onSubmit(event);\n      if (event.defaultPrevented) return;\n      event.preventDefault();\n\n      let submitter = (event as unknown as HTMLSubmitEvent).nativeEvent\n        .submitter as HTMLFormSubmitter | null;\n\n      let submitMethod =\n        (submitter?.getAttribute(\"formmethod\") as HTMLFormMethod | undefined) ||\n        method;\n\n      submit(submitter || event.currentTarget, {\n        fetcherKey,\n        method: submitMethod,\n        navigate,\n        replace,\n        state,\n        relative,\n        preventScrollReset,\n        unstable_viewTransition,\n      });\n    };\n\n    return (\n      <form\n        ref={forwardedRef}\n        method={formMethod}\n        action={formAction}\n        onSubmit={reloadDocument ? onSubmit : submitHandler}\n        {...props}\n      />\n    );\n  }\n);\n\nif (__DEV__) {\n  Form.displayName = \"Form\";\n}\n\nexport interface ScrollRestorationProps {\n  getKey?: GetScrollRestorationKeyFunction;\n  storageKey?: string;\n}\n\n/**\n * This component will emulate the browser's scroll restoration on location\n * changes.\n */\nexport function ScrollRestoration({\n  getKey,\n  storageKey,\n}: ScrollRestorationProps) {\n  useScrollRestoration({ getKey, storageKey });\n  return null;\n}\n\nif (__DEV__) {\n  ScrollRestoration.displayName = \"ScrollRestoration\";\n}\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Hooks\n////////////////////////////////////////////////////////////////////////////////\n\nenum DataRouterHook {\n  UseScrollRestoration = \"useScrollRestoration\",\n  UseSubmit = \"useSubmit\",\n  UseSubmitFetcher = \"useSubmitFetcher\",\n  UseFetcher = \"useFetcher\",\n  useViewTransitionState = \"useViewTransitionState\",\n}\n\nenum DataRouterStateHook {\n  UseFetcher = \"useFetcher\",\n  UseFetchers = \"useFetchers\",\n  UseScrollRestoration = \"useScrollRestoration\",\n}\n\n// Internal hooks\n\nfunction getDataRouterConsoleError(\n  hookName: DataRouterHook | DataRouterStateHook\n) {\n  return `${hookName} must be used within a data router.  See https://reactrouter.com/routers/picking-a-router.`;\n}\n\nfunction useDataRouterContext(hookName: DataRouterHook) {\n  let ctx = React.useContext(DataRouterContext);\n  invariant(ctx, getDataRouterConsoleError(hookName));\n  return ctx;\n}\n\nfunction useDataRouterState(hookName: DataRouterStateHook) {\n  let state = React.useContext(DataRouterStateContext);\n  invariant(state, getDataRouterConsoleError(hookName));\n  return state;\n}\n\n// External hooks\n\n/**\n * Handles the click behavior for router `<Link>` components. This is useful if\n * you need to create custom `<Link>` components with the same click behavior we\n * use in our exported `<Link>`.\n */\nexport function useLinkClickHandler<E extends Element = HTMLAnchorElement>(\n  to: To,\n  {\n    target,\n    replace: replaceProp,\n    state,\n    preventScrollReset,\n    relative,\n    unstable_viewTransition,\n  }: {\n    target?: React.HTMLAttributeAnchorTarget;\n    replace?: boolean;\n    state?: any;\n    preventScrollReset?: boolean;\n    relative?: RelativeRoutingType;\n    unstable_viewTransition?: boolean;\n  } = {}\n): (event: React.MouseEvent<E, MouseEvent>) => void {\n  let navigate = useNavigate();\n  let location = useLocation();\n  let path = useResolvedPath(to, { relative });\n\n  return React.useCallback(\n    (event: React.MouseEvent<E, MouseEvent>) => {\n      if (shouldProcessLinkClick(event, target)) {\n        event.preventDefault();\n\n        // If the URL hasn't changed, a regular <a> will do a replace instead of\n        // a push, so do the same here unless the replace prop is explicitly set\n        let replace =\n          replaceProp !== undefined\n            ? replaceProp\n            : createPath(location) === createPath(path);\n\n        navigate(to, {\n          replace,\n          state,\n          preventScrollReset,\n          relative,\n          unstable_viewTransition,\n        });\n      }\n    },\n    [\n      location,\n      navigate,\n      path,\n      replaceProp,\n      state,\n      target,\n      to,\n      preventScrollReset,\n      relative,\n      unstable_viewTransition,\n    ]\n  );\n}\n\n/**\n * A convenient wrapper for reading and writing search parameters via the\n * URLSearchParams interface.\n */\nexport function useSearchParams(\n  defaultInit?: URLSearchParamsInit\n): [URLSearchParams, SetURLSearchParams] {\n  warning(\n    typeof URLSearchParams !== \"undefined\",\n    `You cannot use the \\`useSearchParams\\` hook in a browser that does not ` +\n      `support the URLSearchParams API. If you need to support Internet ` +\n      `Explorer 11, we recommend you load a polyfill such as ` +\n      `https://github.com/ungap/url-search-params\\n\\n` +\n      `If you're unsure how to load polyfills, we recommend you check out ` +\n      `https://polyfill.io/v3/ which provides some recommendations about how ` +\n      `to load polyfills only for users that need them, instead of for every ` +\n      `user.`\n  );\n\n  let defaultSearchParamsRef = React.useRef(createSearchParams(defaultInit));\n  let hasSetSearchParamsRef = React.useRef(false);\n\n  let location = useLocation();\n  let searchParams = React.useMemo(\n    () =>\n      // Only merge in the defaults if we haven't yet called setSearchParams.\n      // Once we call that we want those to take precedence, otherwise you can't\n      // remove a param with setSearchParams({}) if it has an initial value\n      getSearchParamsForLocation(\n        location.search,\n        hasSetSearchParamsRef.current ? null : defaultSearchParamsRef.current\n      ),\n    [location.search]\n  );\n\n  let navigate = useNavigate();\n  let setSearchParams = React.useCallback<SetURLSearchParams>(\n    (nextInit, navigateOptions) => {\n      const newSearchParams = createSearchParams(\n        typeof nextInit === \"function\" ? nextInit(searchParams) : nextInit\n      );\n      hasSetSearchParamsRef.current = true;\n      navigate(\"?\" + newSearchParams, navigateOptions);\n    },\n    [navigate, searchParams]\n  );\n\n  return [searchParams, setSearchParams];\n}\n\nexport type SetURLSearchParams = (\n  nextInit?:\n    | URLSearchParamsInit\n    | ((prev: URLSearchParams) => URLSearchParamsInit),\n  navigateOpts?: NavigateOptions\n) => void;\n\n/**\n * Submits a HTML `<form>` to the server without reloading the page.\n */\nexport interface SubmitFunction {\n  (\n    /**\n     * Specifies the `<form>` to be submitted to the server, a specific\n     * `<button>` or `<input type=\"submit\">` to use to submit the form, or some\n     * arbitrary data to submit.\n     *\n     * Note: When using a `<button>` its `name` and `value` will also be\n     * included in the form data that is submitted.\n     */\n    target: SubmitTarget,\n\n    /**\n     * Options that override the `<form>`'s own attributes. Required when\n     * submitting arbitrary data without a backing `<form>`.\n     */\n    options?: SubmitOptions\n  ): void;\n}\n\n/**\n * Submits a fetcher `<form>` to the server without reloading the page.\n */\nexport interface FetcherSubmitFunction {\n  (\n    target: SubmitTarget,\n    // Fetchers cannot replace or set state because they are not navigation events\n    options?: Omit<SubmitOptions, \"replace\" | \"state\">\n  ): void;\n}\n\nfunction validateClientSideSubmission() {\n  if (typeof document === \"undefined\") {\n    throw new Error(\n      \"You are calling submit during the server render. \" +\n        \"Try calling submit within a `useEffect` or callback instead.\"\n    );\n  }\n}\n\nlet fetcherId = 0;\nlet getUniqueFetcherId = () => `__${String(++fetcherId)}__`;\n\n/**\n * Returns a function that may be used to programmatically submit a form (or\n * some arbitrary data) to the server.\n */\nexport function useSubmit(): SubmitFunction {\n  let { router } = useDataRouterContext(DataRouterHook.UseSubmit);\n  let { basename } = React.useContext(NavigationContext);\n  let currentRouteId = useRouteId();\n\n  return React.useCallback<SubmitFunction>(\n    (target, options = {}) => {\n      validateClientSideSubmission();\n\n      let { action, method, encType, formData, body } = getFormSubmissionInfo(\n        target,\n        basename\n      );\n\n      if (options.navigate === false) {\n        let key = options.fetcherKey || getUniqueFetcherId();\n        router.fetch(key, currentRouteId, options.action || action, {\n          preventScrollReset: options.preventScrollReset,\n          formData,\n          body,\n          formMethod: options.method || (method as HTMLFormMethod),\n          formEncType: options.encType || (encType as FormEncType),\n        });\n      } else {\n        router.navigate(options.action || action, {\n          preventScrollReset: options.preventScrollReset,\n          formData,\n          body,\n          formMethod: options.method || (method as HTMLFormMethod),\n          formEncType: options.encType || (encType as FormEncType),\n          replace: options.replace,\n          state: options.state,\n          fromRouteId: currentRouteId,\n          unstable_viewTransition: options.unstable_viewTransition,\n        });\n      }\n    },\n    [router, basename, currentRouteId]\n  );\n}\n\n// v7: Eventually we should deprecate this entirely in favor of using the\n// router method directly?\nexport function useFormAction(\n  action?: string,\n  { relative }: { relative?: RelativeRoutingType } = {}\n): string {\n  let { basename } = React.useContext(NavigationContext);\n  let routeContext = React.useContext(RouteContext);\n  invariant(routeContext, \"useFormAction must be used inside a RouteContext\");\n\n  let [match] = routeContext.matches.slice(-1);\n  // Shallow clone path so we can modify it below, otherwise we modify the\n  // object referenced by useMemo inside useResolvedPath\n  let path = { ...useResolvedPath(action ? action : \".\", { relative }) };\n\n  // Previously we set the default action to \".\". The problem with this is that\n  // `useResolvedPath(\".\")` excludes search params of the resolved URL. This is\n  // the intended behavior of when \".\" is specifically provided as\n  // the form action, but inconsistent w/ browsers when the action is omitted.\n  // https://github.com/remix-run/remix/issues/927\n  let location = useLocation();\n  if (action == null) {\n    // Safe to write to this directly here since if action was undefined, we\n    // would have called useResolvedPath(\".\") which will never include a search\n    path.search = location.search;\n\n    // When grabbing search params from the URL, remove the automatically\n    // inserted ?index param so we match the useResolvedPath search behavior\n    // which would not include ?index\n    if (match.route.index) {\n      let params = new URLSearchParams(path.search);\n      params.delete(\"index\");\n      path.search = params.toString() ? `?${params.toString()}` : \"\";\n    }\n  }\n\n  if ((!action || action === \".\") && match.route.index) {\n    path.search = path.search\n      ? path.search.replace(/^\\?/, \"?index&\")\n      : \"?index\";\n  }\n\n  // If we're operating within a basename, prepend it to the pathname prior\n  // to creating the form action.  If this is a root navigation, then just use\n  // the raw basename which allows the basename to have full control over the\n  // presence of a trailing slash on root actions\n  if (basename !== \"/\") {\n    path.pathname =\n      path.pathname === \"/\" ? basename : joinPaths([basename, path.pathname]);\n  }\n\n  return createPath(path);\n}\n\nexport type FetcherWithComponents<TData> = Fetcher<TData> & {\n  Form: React.ForwardRefExoticComponent<\n    FetcherFormProps & React.RefAttributes<HTMLFormElement>\n  >;\n  submit: FetcherSubmitFunction;\n  load: (href: string) => void;\n};\n\n// TODO: (v7) Change the useFetcher generic default from `any` to `unknown`\n\n/**\n * Interacts with route loaders and actions without causing a navigation. Great\n * for any interaction that stays on the same page.\n */\nexport function useFetcher<TData = any>({\n  key,\n}: { key?: string } = {}): FetcherWithComponents<TData> {\n  let { router } = useDataRouterContext(DataRouterHook.UseFetcher);\n  let state = useDataRouterState(DataRouterStateHook.UseFetcher);\n  let fetcherData = React.useContext(FetchersContext);\n  let route = React.useContext(RouteContext);\n  let routeId = route.matches[route.matches.length - 1]?.route.id;\n\n  invariant(fetcherData, `useFetcher must be used inside a FetchersContext`);\n  invariant(route, `useFetcher must be used inside a RouteContext`);\n  invariant(\n    routeId != null,\n    `useFetcher can only be used on routes that contain a unique \"id\"`\n  );\n\n  // Fetcher key handling\n  let [fetcherKey, setFetcherKey] = React.useState<string>(key || \"\");\n  if (!fetcherKey) {\n    setFetcherKey(getUniqueFetcherId());\n  }\n\n  // Registration/cleanup\n  React.useEffect(() => {\n    router.getFetcher(fetcherKey);\n    return () => {\n      // Tell the router we've unmounted - if v7_fetcherPersist is enabled this\n      // will not delete immediately but instead queue up a delete after the\n      // fetcher returns to an `idle` state\n      router.deleteFetcher(fetcherKey);\n    };\n  }, [router, fetcherKey]);\n\n  // Fetcher additions\n  let load = React.useCallback(\n    (href: string) => {\n      invariant(routeId, \"No routeId available for fetcher.load()\");\n      router.fetch(fetcherKey, routeId, href);\n    },\n    [fetcherKey, routeId, router]\n  );\n\n  let submitImpl = useSubmit();\n  let submit = React.useCallback<FetcherSubmitFunction>(\n    (target, opts) => {\n      submitImpl(target, {\n        ...opts,\n        navigate: false,\n        fetcherKey,\n      });\n    },\n    [fetcherKey, submitImpl]\n  );\n\n  let FetcherForm = React.useMemo(() => {\n    let FetcherForm = React.forwardRef<HTMLFormElement, FetcherFormProps>(\n      (props, ref) => {\n        return (\n          <Form {...props} navigate={false} fetcherKey={fetcherKey} ref={ref} />\n        );\n      }\n    );\n    if (__DEV__) {\n      FetcherForm.displayName = \"fetcher.Form\";\n    }\n    return FetcherForm;\n  }, [fetcherKey]);\n\n  // Exposed FetcherWithComponents\n  let fetcher = state.fetchers.get(fetcherKey) || IDLE_FETCHER;\n  let data = fetcherData.get(fetcherKey);\n  let fetcherWithComponents = React.useMemo(\n    () => ({\n      Form: FetcherForm,\n      submit,\n      load,\n      ...fetcher,\n      data,\n    }),\n    [FetcherForm, submit, load, fetcher, data]\n  );\n\n  return fetcherWithComponents;\n}\n\n/**\n * Provides all fetchers currently on the page. Useful for layouts and parent\n * routes that need to provide pending/optimistic UI regarding the fetch.\n */\nexport function useFetchers(): (Fetcher & { key: string })[] {\n  let state = useDataRouterState(DataRouterStateHook.UseFetchers);\n  return Array.from(state.fetchers.entries()).map(([key, fetcher]) => ({\n    ...fetcher,\n    key,\n  }));\n}\n\nconst SCROLL_RESTORATION_STORAGE_KEY = \"react-router-scroll-positions\";\nlet savedScrollPositions: Record<string, number> = {};\n\n/**\n * When rendered inside a RouterProvider, will restore scroll positions on navigations\n */\nfunction useScrollRestoration({\n  getKey,\n  storageKey,\n}: {\n  getKey?: GetScrollRestorationKeyFunction;\n  storageKey?: string;\n} = {}) {\n  let { router } = useDataRouterContext(DataRouterHook.UseScrollRestoration);\n  let { restoreScrollPosition, preventScrollReset } = useDataRouterState(\n    DataRouterStateHook.UseScrollRestoration\n  );\n  let { basename } = React.useContext(NavigationContext);\n  let location = useLocation();\n  let matches = useMatches();\n  let navigation = useNavigation();\n\n  // Trigger manual scroll restoration while we're active\n  React.useEffect(() => {\n    window.history.scrollRestoration = \"manual\";\n    return () => {\n      window.history.scrollRestoration = \"auto\";\n    };\n  }, []);\n\n  // Save positions on pagehide\n  usePageHide(\n    React.useCallback(() => {\n      if (navigation.state === \"idle\") {\n        let key = (getKey ? getKey(location, matches) : null) || location.key;\n        savedScrollPositions[key] = window.scrollY;\n      }\n      try {\n        sessionStorage.setItem(\n          storageKey || SCROLL_RESTORATION_STORAGE_KEY,\n          JSON.stringify(savedScrollPositions)\n        );\n      } catch (error) {\n        warning(\n          false,\n          `Failed to save scroll positions in sessionStorage, <ScrollRestoration /> will not work properly (${error}).`\n        );\n      }\n      window.history.scrollRestoration = \"auto\";\n    }, [storageKey, getKey, navigation.state, location, matches])\n  );\n\n  // Read in any saved scroll locations\n  if (typeof document !== \"undefined\") {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(() => {\n      try {\n        let sessionPositions = sessionStorage.getItem(\n          storageKey || SCROLL_RESTORATION_STORAGE_KEY\n        );\n        if (sessionPositions) {\n          savedScrollPositions = JSON.parse(sessionPositions);\n        }\n      } catch (e) {\n        // no-op, use default empty object\n      }\n    }, [storageKey]);\n\n    // Enable scroll restoration in the router\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(() => {\n      let getKeyWithoutBasename: GetScrollRestorationKeyFunction | undefined =\n        getKey && basename !== \"/\"\n          ? (location, matches) =>\n              getKey(\n                // Strip the basename to match useLocation()\n                {\n                  ...location,\n                  pathname:\n                    stripBasename(location.pathname, basename) ||\n                    location.pathname,\n                },\n                matches\n              )\n          : getKey;\n      let disableScrollRestoration = router?.enableScrollRestoration(\n        savedScrollPositions,\n        () => window.scrollY,\n        getKeyWithoutBasename\n      );\n      return () => disableScrollRestoration && disableScrollRestoration();\n    }, [router, basename, getKey]);\n\n    // Restore scrolling when state.restoreScrollPosition changes\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(() => {\n      // Explicit false means don't do anything (used for submissions)\n      if (restoreScrollPosition === false) {\n        return;\n      }\n\n      // been here before, scroll to it\n      if (typeof restoreScrollPosition === \"number\") {\n        window.scrollTo(0, restoreScrollPosition);\n        return;\n      }\n\n      // try to scroll to the hash\n      if (location.hash) {\n        let el = document.getElementById(\n          decodeURIComponent(location.hash.slice(1))\n        );\n        if (el) {\n          el.scrollIntoView();\n          return;\n        }\n      }\n\n      // Don't reset if this navigation opted out\n      if (preventScrollReset === true) {\n        return;\n      }\n\n      // otherwise go to the top on new locations\n      window.scrollTo(0, 0);\n    }, [location, restoreScrollPosition, preventScrollReset]);\n  }\n}\n\nexport { useScrollRestoration as UNSAFE_useScrollRestoration };\n\n/**\n * Setup a callback to be fired on the window's `beforeunload` event. This is\n * useful for saving some data to `window.localStorage` just before the page\n * refreshes.\n *\n * Note: The `callback` argument should be a function created with\n * `React.useCallback()`.\n */\nexport function useBeforeUnload(\n  callback: (event: BeforeUnloadEvent) => any,\n  options?: { capture?: boolean }\n): void {\n  let { capture } = options || {};\n  React.useEffect(() => {\n    let opts = capture != null ? { capture } : undefined;\n    window.addEventListener(\"beforeunload\", callback, opts);\n    return () => {\n      window.removeEventListener(\"beforeunload\", callback, opts);\n    };\n  }, [callback, capture]);\n}\n\n/**\n * Setup a callback to be fired on the window's `pagehide` event. This is\n * useful for saving some data to `window.localStorage` just before the page\n * refreshes.  This event is better supported than beforeunload across browsers.\n *\n * Note: The `callback` argument should be a function created with\n * `React.useCallback()`.\n */\nfunction usePageHide(\n  callback: (event: PageTransitionEvent) => any,\n  options?: { capture?: boolean }\n): void {\n  let { capture } = options || {};\n  React.useEffect(() => {\n    let opts = capture != null ? { capture } : undefined;\n    window.addEventListener(\"pagehide\", callback, opts);\n    return () => {\n      window.removeEventListener(\"pagehide\", callback, opts);\n    };\n  }, [callback, capture]);\n}\n\n/**\n * Wrapper around useBlocker to show a window.confirm prompt to users instead\n * of building a custom UI with useBlocker.\n *\n * Warning: This has *a lot of rough edges* and behaves very differently (and\n * very incorrectly in some cases) across browsers if user click addition\n * back/forward navigations while the confirm is open.  Use at your own risk.\n */\nfunction usePrompt({ when, message }: { when: boolean; message: string }) {\n  let blocker = useBlocker(when);\n\n  React.useEffect(() => {\n    if (blocker.state === \"blocked\") {\n      let proceed = window.confirm(message);\n      if (proceed) {\n        // This timeout is needed to avoid a weird \"race\" on POP navigations\n        // between the `window.history` revert navigation and the result of\n        // `window.confirm`\n        setTimeout(blocker.proceed, 0);\n      } else {\n        blocker.reset();\n      }\n    }\n  }, [blocker, message]);\n\n  React.useEffect(() => {\n    if (blocker.state === \"blocked\" && !when) {\n      blocker.reset();\n    }\n  }, [blocker, when]);\n}\n\nexport { usePrompt as unstable_usePrompt };\n\n/**\n * Return a boolean indicating if there is an active view transition to the\n * given href.  You can use this value to render CSS classes or viewTransitionName\n * styles onto your elements\n *\n * @param href The destination href\n * @param [opts.relative] Relative routing type (\"route\" | \"path\")\n */\nfunction useViewTransitionState(\n  to: To,\n  opts: { relative?: RelativeRoutingType } = {}\n) {\n  let vtContext = React.useContext(ViewTransitionContext);\n\n  invariant(\n    vtContext != null,\n    \"`unstable_useViewTransitionState` must be used within `react-router-dom`'s `RouterProvider`.  \" +\n      \"Did you accidentally import `RouterProvider` from `react-router`?\"\n  );\n\n  let { basename } = useDataRouterContext(\n    DataRouterHook.useViewTransitionState\n  );\n  let path = useResolvedPath(to, { relative: opts.relative });\n  if (!vtContext.isTransitioning) {\n    return false;\n  }\n\n  let currentPath =\n    stripBasename(vtContext.currentLocation.pathname, basename) ||\n    vtContext.currentLocation.pathname;\n  let nextPath =\n    stripBasename(vtContext.nextLocation.pathname, basename) ||\n    vtContext.nextLocation.pathname;\n\n  // Transition is active if we're going to or coming from the indicated\n  // destination.  This ensures that other PUSH navigations that reverse\n  // an indicated transition apply.  I.e., on the list view you have:\n  //\n  //   <NavLink to=\"/details/1\" unstable_viewTransition>\n  //\n  // If you click the breadcrumb back to the list view:\n  //\n  //   <NavLink to=\"/list\" unstable_viewTransition>\n  //\n  // We should apply the transition because it's indicated as active going\n  // from /list -> /details/1 and therefore should be active on the reverse\n  // (even though this isn't strictly a POP reverse)\n  return (\n    matchPath(path.pathname, nextPath) != null ||\n    matchPath(path.pathname, currentPath) != null\n  );\n}\n\nexport { useViewTransitionState as unstable_useViewTransitionState };\n\n//#endregion\n","var _defs, _g;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgFundIcon(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 48 48\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), _defs || (_defs = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"style\", null, \".cls-1{fill:#9dcc6b;}.cls-2{fill:#b5e08c;}.cls-3{fill:#84b749;}.cls-4{fill:#fc6;}.cls-5{fill:#ffde76;}.cls-6{fill:#f8834b;}\"))), title === undefined ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, \"Money and Coin\") : title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    id: \"Money_and_Coin\",\n    \"data-name\": \"Money and Coin\"\n  }, /*#__PURE__*/React.createElement(\"rect\", {\n    className: \"cls-1\",\n    x: 1,\n    y: 11,\n    width: 38,\n    height: 18\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    className: \"cls-2\",\n    d: \"M39,11V26H7a3,3,0,0,1-3-3V11Z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    className: \"cls-3\",\n    d: \"M7,11a6,6,0,0,1-6,6V15a4,4,0,0,0,4-4Z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    className: \"cls-3\",\n    d: \"M24.35,11h-8.7a10,10,0,0,0,0,18h8.7A10,10,0,0,0,24.35,11ZM20,28a8,8,0,1,1,8-8A8,8,0,0,1,20,28Z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    className: \"cls-3\",\n    d: \"M20,17a1,1,0,0,1,1,1,1,1,0,0,0,1,1c1.66,0,1.21-3-1-3.82a1,1,0,1,0-2,0A3,3,0,0,0,20,21a1,1,0,1,1-1,1,1,1,0,0,0-1-1c-1.66,0-1.21,3,1,3.82a1,1,0,1,0,2,0A3,3,0,0,0,20,19,1,1,0,0,1,20,17Z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    className: \"cls-3\",\n    d: \"M6.71,19.29a1,1,0,1,0,0,1.42A1,1,0,0,0,6.71,19.29Z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    className: \"cls-3\",\n    d: \"M34.71,19.29a1,1,0,0,0-1.54,1.27A1,1,0,1,0,34.71,19.29Z\"\n  }), /*#__PURE__*/React.createElement(\"rect\", {\n    className: \"cls-1\",\n    x: 3,\n    y: 7,\n    width: 34,\n    height: 4\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    className: \"cls-2\",\n    d: \"M37,7V9H8A2,2,0,0,1,6,7Z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    className: \"cls-3\",\n    d: \"M39,15v2a6,6,0,0,1-6-6h2A4,4,0,0,0,39,15Z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    className: \"cls-3\",\n    d: \"M7,29H5a4,4,0,0,0-4-4V23A6,6,0,0,1,7,29Z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    className: \"cls-3\",\n    d: \"M39,23v2a4,4,0,0,0-4,4H33A6,6,0,0,1,39,23Z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    className: \"cls-4\",\n    d: \"M47,32a9,9,0,1,1-14.28-7.28A9,9,0,0,1,47,32Z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    className: \"cls-5\",\n    d: \"M45.67,36.69c-8,4.86-17.26-4.33-12.36-12.36C41.34,19.41,50.57,28.69,45.67,36.69Z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    className: \"cls-6\",\n    d: \"M38,31a1,1,0,1,1,1-1,1,1,0,0,0,1,1c1.66,0,1.21-3-1-3.82a1,1,0,1,0-2,0A3,3,0,0,0,38,33a1,1,0,1,1-1,1,1,1,0,0,0-1-1c-1.66,0-1.21,3,1,3.82a1,1,0,1,0,2,0A3,3,0,0,0,38,31Z\"\n  }))));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgFundIcon);\nexport default __webpack_public_path__ + \"static/media/fundIcon.a84de177d5522c55329ce37828f2c7d2.svg\";\nexport { ForwardRef as ReactComponent };","import React, { createContext, useState, useContext } from 'react';\r\n\r\nconst BalanceContext = createContext();\r\n\r\nexport const useBalance = () => useContext(BalanceContext);\r\n\r\nexport const BalanceProvider = ({ children }) => {\r\n  const [balance, setBalance] = useState(() => parseFloat(localStorage.getItem('balance')) || 0);\r\n\r\n  const updateBalance = (newBalance) => {\r\n    setBalance(newBalance);\r\n    localStorage.setItem('balance', newBalance);\r\n  };\r\n\r\n  return (\r\n    <BalanceContext.Provider value={{ balance, updateBalance }}>\r\n      {children}\r\n    </BalanceContext.Provider>\r\n  );\r\n};\r\n","\r\nimport '../styles/Header.css'\r\nimport {React, useState, useEffect} from 'react'\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport fundLogo from \"../assets/svgs/fundIcon.svg\"\r\nimport { useBalance } from '../BalanceContext';\r\n\r\nconst Navigation  = () => {\r\n  const [isLogged, setIsLogged] = useState(() => localStorage.getItem('isLogged') === 'true');\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    // Update state\r\n    const handleStorageChange = () => {\r\n      setIsLogged(localStorage.getItem('isLogged') === 'true');\r\n    };\r\n\r\n    \r\n    window.addEventListener('storage', handleStorageChange);\r\n\r\n    //Cleanup\r\n    return () => {\r\n      window.removeEventListener('storage', handleStorageChange);\r\n    };\r\n  }, []);\r\n\r\n  const handleSignOut = () => {\r\n    console.log('Logged Out');\r\n    localStorage.setItem('isLogged', false);\r\n    setIsLogged(false);\r\n    navigate('/Login');\r\n  };\r\n\r\n  return (\r\n    <div className=\"navs\">\r\n        <ul>\r\n            <li><Link to=\"/\">Home</Link></li>\r\n            {isLogged && (<li><Link to=\"/Games\">Games</Link></li>)}\r\n            {isLogged && (<li><Link to=\"/AddFunds\">Add Funds</Link></li>)}\r\n            {isLogged ? (<li><Link to=\"/Login\" onClick={handleSignOut}>SignOut</Link></li>)  : (<li><Link to=\"/Login\">Login</Link></li> )}   \r\n        </ul>\r\n      </div>\r\n  );\r\n};\r\n\r\nconst Balance = () => {\r\n  const { balance } = useBalance(); \r\n  const [isLogged, setIsLogged] = useState(() => localStorage.getItem('isLogged') === 'true');\r\n\r\n  return (\r\n    <div className=\"balance\">\r\n      {isLogged ? (\r\n        <>\r\n          <ul>\r\n            <li><img src={fundLogo} alt=\"Fund Icon\" /></li>\r\n            <li>${balance.toFixed(0)}</li>\r\n          </ul>\r\n        </>\r\n      ) : (\r\n        <ul><li></li><li></li></ul>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction Header() {\r\n  return (\r\n    <div className=\"HeaderBody\">\r\n      <Navigation />\r\n      <Balance />\r\n      <div className=\"headerBackground\"></div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;","var _polygon,_polygon2,_polygon3,_rect,_polygon4,_polygon5,_polygon6,_polygon7,_polygon8,_polygon9,_polygon10,_polygon11,_polygon12,_polygon13,_polygon14,_polygon15,_rect2,_polygon16,_polygon17,_polygon18,_polygon19,_polygon20,_polygon21,_rect3,_rect4,_polygon22,_polygon23,_polygon24,_rect5,_polygon25,_polygon26,_polygon27,_polygon28,_rect6,_polygon29,_rect7,_polygon30,_polygon31,_rect8,_polygon32,_polygon33,_polygon34,_polygon35,_path,_path2,_g,_path3,_path4,_path5,_path6,_path7,_path8,_path9,_path10,_path11,_path12,_path13,_path14,_path15,_path16,_path17,_path18,_path19,_path20,_path21,_path22,_path23,_path24,_g2,_path25,_path26,_path27,_path28,_path29,_path30,_path31,_path32,_path33,_path34,_path35,_path36,_path37,_path38,_path39,_path40,_path41,_path42,_path43,_path44,_g3,_g4,_path45,_g5,_path46,_path47,_path48,_path49,_path50,_path51,_path52,_path53,_path54;function _extends(){_extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}import*as React from\"react\";function SvgPyramid(_ref,svgRef){let{title,titleId,...props}=_ref;return/*#__PURE__*/React.createElement(\"svg\",_extends({xmlns:\"http://www.w3.org/2000/svg\",xmlnsXlink:\"http://www.w3.org/1999/xlink\",x:\"0px\",y:\"0px\",viewBox:\"0 0 750 500\",style:{enableBackground:\"new 0 0 750 500\"},xmlSpace:\"preserve\",ref:svgRef,\"aria-labelledby\":titleId},props),title?/*#__PURE__*/React.createElement(\"title\",{id:titleId},title):null,/*#__PURE__*/React.createElement(\"g\",{id:\"Background_Complete\"},/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{fill:\"#EBEBEB\"},d:\"M87.727,195.772c5.965,0,154.839-1.037,196.889-1.037c2.941,0-0.776-5.092-2.397-5.446 c-5.172-1.132-10.557-1.191-15.812-1.735c-5.274-0.549-10.179-1.71-15.069-3.776c-4.137-1.746-8.265-3.766-12.747-4.464 c-8.663-1.358-16.263,3.336-24.388,5.408c-5.281,1.345-10.075,0.803-14.77-2.018c-3.757-2.253-7.171-4.955-11.099-6.946 c-14.916-7.533-33.087-8.229-48.648-2.229c-3.72,1.441-7.307,3.256-10.642,5.448c-3.967,2.603-7.39,5.932-11.371,8.504 c-8.819,5.707-19.72,3.85-29.337,7.121C87.807,194.778,87.212,195.772,87.727,195.772z\"}),/*#__PURE__*/React.createElement(\"path\",{style:{fill:\"#EBEBEB\"},d:\"M179.213,83.491c7.887,0,140.616,0.873,148.958,0.608c0.599-0.017,0.921-0.899,0.326-1.195 c-5.259-2.604-11.224-2.081-16.687-3.923c-3.216-1.083-5.19-3.186-7.421-5.597c-1.927-2.085-4.162-3.683-6.907-4.509 c-2.428-0.728-5.053-0.822-7.519-0.236c-2.693,0.642-5.031,2.184-7.601,3.156c-6.376,2.407-12.572,0.12-17.124-4.599 c-3.755-3.888-7.447-7.558-12.551-9.652c-4.273-1.756-9.018-2.12-13.296-0.184c-4.869,2.205-8.209,6.642-12.782,9.309 c-5.421,3.169-11.904,2.419-17.891,3.374c-6.004,0.959-10.585,5.999-15.835,8.903c-1.794,0.993-3.631,1.824-5.725,1.773 c-1.173-0.03-2.325-0.347-3.486-0.492c-1.807-0.223-3.524-0.171-4.74,1.336C178.634,81.933,178.695,83.491,179.213,83.491z\"}),/*#__PURE__*/React.createElement(\"path\",{style:{fill:\"#EBEBEB\"},d:\"M508.458,111.579c7.888,0,140.616,0.874,148.958,0.608c0.6-0.017,0.921-0.899,0.326-1.195 c-5.259-2.604-11.224-2.081-16.688-3.923c-3.216-1.083-5.19-3.186-7.421-5.597c-1.927-2.085-4.162-3.683-6.907-4.509 c-2.428-0.728-5.053-0.822-7.519-0.236c-2.693,0.642-5.031,2.184-7.601,3.156c-6.376,2.407-12.572,0.12-17.124-4.599 c-3.755-3.888-7.447-7.558-12.551-9.652c-4.273-1.756-9.018-2.12-13.296-0.184c-4.869,2.205-8.209,6.642-12.782,9.309 c-5.421,3.169-11.904,2.419-17.891,3.374c-6.003,0.959-10.585,5.999-15.835,8.903c-1.794,0.993-3.631,1.824-5.725,1.773 c-1.173-0.03-2.325-0.347-3.486-0.492c-1.807-0.223-3.524-0.171-4.74,1.336C507.88,110.02,507.94,111.579,508.458,111.579z\"}),/*#__PURE__*/React.createElement(\"path\",{style:{fill:\"#EBEBEB\"},d:\"M333.62,159.787c5.759,0,102.663,0.638,108.753,0.444c0.438-0.012,0.672-0.656,0.238-0.872 c-3.839-1.901-8.194-1.519-12.183-2.864c-2.348-0.791-3.789-2.326-5.418-4.086c-1.407-1.523-3.039-2.689-5.043-3.292 c-1.773-0.532-3.689-0.6-5.49-0.172c-1.966,0.469-3.673,1.594-5.549,2.304c-4.655,1.757-9.179,0.087-12.502-3.358 c-2.742-2.839-5.437-5.518-9.163-7.047c-3.12-1.282-6.584-1.548-9.707-0.135c-3.555,1.61-5.993,4.849-9.332,6.797 c-3.958,2.313-8.691,1.766-13.062,2.464c-4.383,0.7-7.728,4.38-11.561,6.5c-1.31,0.725-2.651,1.332-4.18,1.294 c-0.857-0.022-1.698-0.253-2.545-0.36c-1.319-0.163-2.573-0.125-3.461,0.975C333.198,158.649,333.242,159.787,333.62,159.787z\"}),/*#__PURE__*/React.createElement(\"path\",{style:{fill:\"#EBEBEB\"},d:\"M518.223,184.014c0.112,0.324,152.733,0,150.808,0c-0.878,0,1.332-1.314,0.473-1.737 c-4.968-2.465-10.404-2.534-15.814-3.032c-3.156-0.286-6.4-0.747-9.239-2.241c-2.876-1.507-4.669-4.122-6.711-6.537 c-6.307-7.49-16.343-11.393-26.062-9.874c-10.852,1.7-19.406,9.968-30.277,11.487c-6.531,0.915-12.707-1.613-19.089-2.503 c-5.255-0.729-9.631,0.293-14.332,2.621c-3.443,1.706-6.624,3.144-10.516,3.412c-2.989,0.212-5.989-0.131-8.984-0.162 c-4.794-0.044-9.526,2.033-13.218,5.283C514.777,181.16,513.24,184.014,518.223,184.014z\"}),/*#__PURE__*/React.createElement(\"path\",{style:{fill:\"#EBEBEB\"},d:\"M78.031,304.689c0.112,0.324,152.734,0,150.808,0c-0.878,0,1.332-1.314,0.473-1.737 c-4.968-2.466-10.404-2.534-15.814-3.032c-3.156-0.286-6.4-0.747-9.239-2.241c-2.877-1.507-4.67-4.122-6.712-6.537 c-6.307-7.49-16.343-11.393-26.062-9.874c-10.852,1.7-19.406,9.968-30.277,11.487c-6.531,0.915-12.707-1.613-19.089-2.503 c-5.255-0.728-9.632,0.293-14.332,2.621c-3.443,1.706-6.624,3.144-10.516,3.412c-2.989,0.212-5.989-0.131-8.984-0.162 c-4.794-0.044-9.526,2.033-13.218,5.283C74.585,301.834,73.048,304.689,78.031,304.689z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{fill:\"#EBEBEB\"},d:\"M486.966,384.231c4.475,0.116,8.932,0.389,13.378,0.698c4.445,0.315,8.877,0.69,13.289,1.134 c4.411,0.446,8.804,0.956,13.148,1.587c4.333,0.643,8.66,1.364,12.731,2.468c1.019,0.273,2.002,0.594,2.941,0.955 c0.932,0.364,1.834,0.779,2.516,1.318c0.687,0.528,1.067,1.24,0.784,1.909c-0.286,0.664-1.034,1.207-1.847,1.656 c-1.671,0.891-3.655,1.532-5.663,2.104c-2.02,0.566-4.104,1.046-6.205,1.494c-8.436,1.77-17.22,2.844-25.767,4.334 c-8.569,1.454-17.077,3.046-25.329,4.987c-4.116,0.979-8.18,2.04-12.017,3.317c-1.912,0.641-3.777,1.331-5.469,2.133 c-1.666,0.799-3.272,1.711-4.064,2.83c-0.377,0.553-0.547,1.154-0.297,1.722c0.226,0.569,0.77,1.095,1.477,1.548 c1.439,0.904,3.36,1.563,5.323,2.121c3.97,1.108,8.274,1.829,12.585,2.459c8.696,1.16,17.47,2.182,26.276,3.09 c35.194,3.754,70.681,6.645,105.816,10.672c8.765,1.052,17.527,2.143,26.128,3.596l3.2,0.594c1.061,0.207,2.149,0.373,3.177,0.628 l6.244,1.418c2.107,0.439,4.094,1.035,6.128,1.569c2.022,0.549,4.074,1.065,5.998,1.722c7.875,2.416,15.334,5.349,21.582,8.997 l2.309,1.383c0.741,0.475,1.416,0.983,2.128,1.473l1.053,0.741l0.947,0.786c0.609,0.532,1.315,1.029,1.836,1.591 c0.54,0.555,1.154,1.088,1.632,1.661c0.457,0.578,1.017,1.131,1.39,1.729l0.609,0.885c0.183,0.299,0.337,0.604,0.507,0.905 c0.323,0.605,0.576,1.225,0.724,1.852c-0.158-0.626-0.42-1.244-0.753-1.847c-0.175-0.3-0.333-0.604-0.521-0.902l-0.622-0.881 c-0.381-0.595-0.95-1.145-1.415-1.719c-0.486-0.569-1.108-1.098-1.655-1.649c-0.528-0.558-1.241-1.051-1.856-1.578l-0.957-0.778 l-1.062-0.734c-0.717-0.485-1.398-0.987-2.144-1.457l-2.324-1.366c-6.284-3.603-13.759-6.485-21.641-8.851 c-1.925-0.644-3.968-1.16-5.987-1.701c-2.03-0.528-4.011-1.118-6.114-1.552l-6.231-1.402c-1.027-0.252-2.109-0.415-3.165-0.619 l-3.186-0.585c-8.575-1.431-17.333-2.506-26.092-3.542c-35.127-3.962-70.625-6.786-105.867-10.485 c-8.812-0.925-17.585-1.963-26.317-3.143c-4.344-0.644-8.682-1.376-12.75-2.519c-2.014-0.58-4.005-1.257-5.572-2.245 c-0.768-0.495-1.396-1.093-1.658-1.763c-0.288-0.67-0.082-1.379,0.347-1.997c0.904-1.249,2.598-2.183,4.317-3.008 c1.747-0.823,3.648-1.519,5.588-2.166c3.893-1.285,7.988-2.345,12.129-3.322c8.302-1.936,16.836-3.515,25.428-4.957 c8.578-1.479,17.367-2.537,25.754-4.281c2.09-0.442,4.161-0.915,6.158-1.47c1.984-0.559,3.938-1.191,5.536-2.038 c0.78-0.426,1.461-0.931,1.709-1.507c0.241-0.577-0.066-1.181-0.692-1.672c-0.622-0.496-1.482-0.898-2.384-1.252 c-0.91-0.351-1.87-0.668-2.869-0.943c-3.996-1.11-8.299-1.853-12.608-2.515c-4.322-0.651-8.701-1.183-13.099-1.651 c-4.4-0.466-8.823-0.864-13.261-1.201C495.89,384.666,491.438,384.37,486.966,384.231z\"}),/*#__PURE__*/React.createElement(\"path\",{style:{fill:\"#EBEBEB\"},d:\"M525.127,384.231c8.444,0.242,16.859,0.738,25.257,1.282c8.397,0.56,16.775,1.221,25.105,2.056 c4.165,0.417,8.313,0.893,12.431,1.447c4.113,0.561,8.211,1.186,12.185,2.038c1.98,0.432,3.942,0.914,5.753,1.571 c0.898,0.332,1.767,0.71,2.463,1.201c0.699,0.476,1.144,1.166,0.836,1.813c-0.291,0.639-1.048,1.139-1.847,1.546 c-0.807,0.414-1.709,0.749-2.63,1.057c-1.849,0.611-3.805,1.092-5.779,1.532c-3.961,0.867-8.028,1.551-12.116,2.171l-12.257,1.839 l-24.515,3.665c-8.16,1.242-16.311,2.505-24.386,3.901c-4.035,0.701-8.053,1.434-12.005,2.258 c-1.975,0.413-3.934,0.85-5.846,1.337c-1.902,0.49-3.798,1.018-5.438,1.706c-0.793,0.343-1.58,0.752-1.848,1.209 c-0.287,0.443,0.251,0.882,1.058,1.2c1.625,0.633,3.682,0.984,5.678,1.297c4.046,0.61,8.234,0.938,12.406,1.288 c8.361,0.656,16.765,1.153,25.178,1.602c16.827,0.895,33.686,1.658,50.497,2.712c16.806,1.056,33.585,2.372,50.137,4.363 c16.515,2.03,32.874,4.72,48.17,8.817c-15.367-4.011-31.752-6.597-48.274-8.539c-16.54-1.956-33.307-3.238-50.107-4.26 c-16.805-1.02-33.661-1.75-50.503-2.612c-8.421-0.433-16.839-0.914-25.229-1.555c-4.186-0.343-8.395-0.663-12.529-1.278 c-2.053-0.324-4.142-0.651-6.012-1.383c-0.458-0.19-0.904-0.42-1.22-0.736c-0.319-0.314-0.406-0.741-0.187-1.084 c0.437-0.688,1.348-1.1,2.2-1.48c1.765-0.734,3.695-1.261,5.634-1.758c1.945-0.491,3.923-0.927,5.914-1.34 c3.984-0.822,8.019-1.549,12.067-2.245c8.102-1.384,16.266-2.634,24.437-3.861l24.54-3.62l12.265-1.816 c4.077-0.611,8.13-1.285,12.058-2.137c1.957-0.433,3.892-0.905,5.698-1.498c0.898-0.297,1.773-0.622,2.534-1.01 c0.759-0.382,1.432-0.842,1.671-1.37c0.251-0.528-0.087-1.085-0.717-1.525c-0.626-0.445-1.448-0.811-2.313-1.131 c-1.746-0.638-3.68-1.12-5.636-1.55c-3.929-0.851-8.008-1.481-12.105-2.048c-4.102-0.561-8.241-1.037-12.391-1.481 c-8.304-0.877-16.667-1.58-25.05-2.183C541.97,385.055,533.566,384.517,525.127,384.231z\"}),/*#__PURE__*/React.createElement(\"path\",{style:{fill:\"#EBEBEB\"},d:\"M596.953,384.231c7.187,0.194,14.351,0.592,21.505,1.022c7.152,0.443,14.294,0.954,21.406,1.582 c7.107,0.641,14.196,1.372,21.196,2.343c3.497,0.491,6.975,1.039,10.369,1.746c1.693,0.358,3.369,0.753,4.972,1.245 c1.572,0.502,3.199,1.065,4.219,2.009c0.496,0.469,0.664,1.091,0.33,1.625c-0.314,0.536-0.949,0.959-1.618,1.321 c-1.373,0.715-2.974,1.23-4.593,1.691c-3.261,0.907-6.682,1.58-10.123,2.191c-3.445,0.608-6.934,1.12-10.415,1.633 c-3.484,0.51-6.977,1.001-10.475,1.479c-13.995,1.905-28.062,3.628-42.14,5.302c-7.039,0.837-14.08,1.669-21.097,2.552 c-3.508,0.443-7.01,0.899-10.493,1.392c-3.476,0.5-6.959,1.015-10.309,1.703c-0.833,0.176-1.657,0.364-2.434,0.589 c-0.385,0.113-0.761,0.236-1.089,0.376c-0.32,0.135-0.603,0.318-0.601,0.436c-0.031,0.104,0.23,0.266,0.58,0.379 c0.345,0.118,0.746,0.211,1.154,0.292c0.82,0.163,1.688,0.278,2.556,0.383c3.496,0.401,7.075,0.59,10.654,0.79l21.472,1.233 c14.308,0.859,28.602,1.905,42.724,3.498c7.052,0.818,14.055,1.768,20.989,2.856c6.923,1.112,13.762,2.383,20.519,3.777 c-6.784-1.353-13.643-2.581-20.581-3.65c-6.949-1.045-13.961-1.95-21.018-2.724c-14.12-1.537-28.395-2.569-42.702-3.392 l-21.476-1.187c-3.577-0.193-7.177-0.374-10.738-0.774c-0.89-0.106-1.779-0.22-2.658-0.393c-0.439-0.087-0.877-0.185-1.304-0.329 c-0.213-0.071-0.426-0.158-0.618-0.279c-0.189-0.115-0.365-0.299-0.344-0.5c0.077-0.406,0.547-0.598,0.906-0.773 c0.389-0.167,0.795-0.299,1.206-0.422c0.824-0.24,1.669-0.434,2.519-0.616c3.409-0.709,6.895-1.23,10.383-1.741 c3.491-0.503,6.997-0.967,10.506-1.418c7.02-0.9,14.057-1.747,21.091-2.599c14.07-1.698,28.154-3.351,42.142-5.235 c3.497-0.47,6.989-0.954,10.471-1.455c3.482-0.505,6.963-1.008,10.39-1.604c3.422-0.598,6.823-1.26,10.027-2.142 c1.589-0.446,3.15-0.949,4.432-1.612c0.625-0.333,1.186-0.716,1.441-1.152c0.268-0.434,0.15-0.903-0.264-1.31 c-0.861-0.817-2.416-1.386-3.941-1.871c-1.555-0.483-3.205-0.877-4.877-1.234c-3.352-0.707-6.811-1.262-10.289-1.759 c-6.967-0.985-14.039-1.731-21.132-2.388c-7.094-0.66-14.215-1.23-21.355-1.718C611.287,384.921,604.134,384.474,596.953,384.231z \"}),/*#__PURE__*/React.createElement(\"path\",{style:{fill:\"#EBEBEB\"},d:\"M464.652,384.231c4.29,0.111,8.563,0.37,12.825,0.662c4.262,0.298,8.512,0.652,12.744,1.067 c4.231,0.417,8.447,0.892,12.622,1.469c4.17,0.583,8.32,1.246,12.307,2.179c1.982,0.476,3.945,1.009,5.683,1.761 c0.858,0.378,1.673,0.818,2.211,1.383c0.55,0.558,0.653,1.279,0.203,1.874c-0.426,0.598-1.175,1.083-1.984,1.496 c-0.811,0.418-1.712,0.766-2.631,1.09c-1.848,0.642-3.808,1.161-5.791,1.637c-7.967,1.879-16.365,3.011-24.64,4.281 c-16.58,2.523-33.175,5.031-49.528,7.973c-8.152,1.496-16.308,3.05-24.031,5.124c-1.919,0.527-3.807,1.094-5.573,1.754 c-0.88,0.331-1.73,0.686-2.493,1.086c-0.757,0.397-1.45,0.846-1.82,1.354c-0.394,0.505-0.299,1.055,0.233,1.511 c0.522,0.461,1.352,0.828,2.225,1.137c1.772,0.617,3.779,1.043,5.797,1.413c33.259,4.646,66.92,8.736,99.97,14.039 c8.257,1.34,16.48,2.759,24.579,4.389c8.11,1.612,16.027,3.564,23.518,5.961c7.475,2.402,14.483,5.318,20.415,8.847 c2.927,1.78,5.602,3.703,7.762,5.806c2.13,2.1,3.924,4.362,4.551,6.77c-0.673-2.403-2.507-4.649-4.671-6.729 c-2.194-2.084-4.897-3.983-7.844-5.737c-5.966-3.486-13.024-6.316-20.469-8.7c-7.474-2.37-15.37-4.298-23.468-5.888 c-8.09-1.61-16.311-3.009-24.567-4.33c-16.526-2.622-33.212-4.919-49.919-7.156l-25.082-3.315l-12.535-1.674l-6.266-0.842 c-2.09-0.277-4.192-0.576-6.25-0.954c-2.056-0.382-4.104-0.816-5.991-1.476c-0.93-0.335-1.849-0.729-2.494-1.296 c-0.312-0.283-0.552-0.612-0.595-0.961c-0.054-0.348,0.069-0.696,0.299-1.002c0.461-0.618,1.234-1.1,2.04-1.524 c0.815-0.424,1.7-0.79,2.607-1.13c1.82-0.676,3.737-1.246,5.68-1.777c7.81-2.082,15.984-3.623,24.162-5.11 c16.395-2.921,33.006-5.403,49.6-7.9c8.289-1.257,16.67-2.375,24.588-4.228c1.968-0.469,3.911-0.98,5.725-1.607 c0.902-0.316,1.782-0.655,2.561-1.054c0.779-0.394,1.478-0.852,1.858-1.384c0.398-0.53,0.313-1.131-0.17-1.639 c-0.475-0.511-1.238-0.937-2.061-1.304c-1.667-0.734-3.601-1.273-5.556-1.753c-3.938-0.943-8.069-1.624-12.22-2.225 c-4.158-0.595-8.361-1.089-12.583-1.525c-4.222-0.434-8.465-0.807-12.72-1.125C473.208,384.641,468.94,384.362,464.652,384.231z\"}),/*#__PURE__*/React.createElement(\"path\",{style:{fill:\"#EBEBEB\"},d:\"M290.707,384.231c4.475,0.116,8.932,0.389,13.378,0.698c4.445,0.315,8.877,0.69,13.289,1.134 c4.411,0.446,8.804,0.956,13.148,1.587c4.333,0.643,8.66,1.364,12.731,2.468c1.019,0.273,2.002,0.594,2.941,0.955 c0.932,0.364,1.833,0.779,2.516,1.318c0.686,0.528,1.067,1.24,0.784,1.909c-0.286,0.664-1.033,1.207-1.847,1.656 c-1.671,0.891-3.655,1.532-5.663,2.104c-2.02,0.566-4.104,1.046-6.205,1.494c-8.436,1.77-17.22,2.844-25.767,4.334 c-8.569,1.454-17.077,3.046-25.329,4.987c-4.116,0.979-8.18,2.04-12.017,3.317c-1.912,0.641-3.778,1.331-5.469,2.133 c-1.666,0.799-3.272,1.711-4.064,2.83c-0.377,0.553-0.547,1.154-0.297,1.722c0.226,0.569,0.77,1.095,1.477,1.548 c1.439,0.904,3.36,1.563,5.323,2.121c3.97,1.108,8.274,1.829,12.585,2.459c8.696,1.16,17.47,2.182,26.276,3.09 c35.193,3.754,70.681,6.645,105.816,10.672c8.765,1.052,17.527,2.143,26.128,3.596l3.2,0.594c1.061,0.207,2.148,0.373,3.177,0.628 l6.244,1.418c2.107,0.439,4.094,1.035,6.128,1.569c2.022,0.549,4.074,1.065,5.998,1.722c7.875,2.416,15.334,5.349,21.582,8.997 l2.309,1.383c0.741,0.475,1.416,0.983,2.128,1.473l1.053,0.741l0.947,0.786c0.609,0.532,1.315,1.029,1.836,1.591 c0.54,0.555,1.154,1.088,1.632,1.661c0.457,0.578,1.017,1.131,1.39,1.729l0.609,0.885c0.184,0.299,0.337,0.604,0.507,0.905 c0.323,0.605,0.576,1.225,0.724,1.852c-0.158-0.626-0.42-1.244-0.753-1.847c-0.175-0.3-0.333-0.604-0.521-0.902l-0.622-0.881 c-0.382-0.595-0.95-1.145-1.415-1.719c-0.486-0.569-1.108-1.098-1.655-1.649c-0.528-0.558-1.241-1.051-1.857-1.578l-0.957-0.778 l-1.062-0.734c-0.717-0.485-1.398-0.987-2.144-1.457l-2.324-1.366c-6.284-3.603-13.759-6.485-21.641-8.851 c-1.925-0.644-3.968-1.16-5.987-1.701c-2.03-0.528-4.011-1.118-6.114-1.552l-6.231-1.402c-1.027-0.252-2.109-0.415-3.165-0.619 l-3.186-0.585c-8.575-1.431-17.332-2.506-26.092-3.542c-35.127-3.962-70.625-6.786-105.867-10.485 c-8.812-0.925-17.585-1.963-26.317-3.143c-4.344-0.644-8.682-1.376-12.75-2.519c-2.014-0.58-4.005-1.257-5.572-2.245 c-0.768-0.495-1.396-1.093-1.658-1.763c-0.288-0.67-0.082-1.379,0.347-1.997c0.904-1.249,2.598-2.183,4.317-3.008 c1.747-0.823,3.648-1.519,5.588-2.166c3.893-1.285,7.988-2.345,12.129-3.322c8.302-1.936,16.836-3.515,25.428-4.957 c8.578-1.479,17.367-2.537,25.754-4.281c2.09-0.442,4.161-0.915,6.158-1.47c1.984-0.559,3.938-1.191,5.536-2.038 c0.779-0.426,1.461-0.931,1.709-1.507c0.241-0.577-0.066-1.181-0.691-1.672c-0.622-0.496-1.482-0.898-2.384-1.252 c-0.911-0.351-1.87-0.668-2.869-0.943c-3.996-1.11-8.299-1.853-12.608-2.515c-4.322-0.651-8.701-1.183-13.099-1.651 c-4.4-0.466-8.823-0.864-13.261-1.201C299.63,384.666,295.179,384.37,290.707,384.231z\"}),/*#__PURE__*/React.createElement(\"path\",{style:{fill:\"#EBEBEB\"},d:\"M100.733,384.231c8.444,0.242,16.858,0.738,25.257,1.282c8.397,0.56,16.775,1.221,25.105,2.056 c4.165,0.417,8.313,0.893,12.431,1.447c4.113,0.561,8.211,1.186,12.185,2.038c1.98,0.432,3.942,0.914,5.753,1.571 c0.898,0.332,1.766,0.71,2.462,1.201c0.699,0.476,1.144,1.166,0.836,1.813c-0.291,0.639-1.048,1.139-1.847,1.546 c-0.808,0.414-1.709,0.749-2.63,1.057c-1.849,0.611-3.805,1.092-5.779,1.532c-3.961,0.867-8.028,1.551-12.116,2.171l-12.257,1.839 l-24.515,3.665c-8.16,1.242-16.311,2.505-24.386,3.901c-4.035,0.701-8.053,1.434-12.006,2.258 c-1.975,0.413-3.934,0.85-5.846,1.337c-1.902,0.49-3.798,1.018-5.438,1.706c-0.793,0.343-1.58,0.752-1.849,1.209 c-0.287,0.443,0.251,0.882,1.058,1.2c1.625,0.633,3.682,0.984,5.678,1.297c4.046,0.61,8.234,0.938,12.406,1.288 c8.361,0.656,16.765,1.153,25.178,1.602c16.827,0.895,33.686,1.658,50.497,2.712c16.806,1.056,33.584,2.372,50.137,4.363 c16.514,2.03,32.874,4.72,48.17,8.817c-15.367-4.011-31.752-6.597-48.274-8.539c-16.54-1.956-33.307-3.238-50.107-4.26 c-16.805-1.02-33.661-1.75-50.503-2.612c-8.421-0.433-16.839-0.914-25.229-1.555c-4.186-0.343-8.395-0.663-12.529-1.278 c-2.053-0.324-4.142-0.651-6.012-1.383c-0.458-0.19-0.904-0.42-1.22-0.736c-0.319-0.314-0.406-0.741-0.187-1.084 c0.437-0.688,1.348-1.1,2.2-1.48c1.765-0.734,3.695-1.261,5.633-1.758c1.945-0.491,3.923-0.927,5.914-1.34 c3.984-0.822,8.019-1.549,12.067-2.245c8.102-1.384,16.265-2.634,24.437-3.861l24.54-3.62l12.265-1.816 c4.077-0.611,8.13-1.285,12.059-2.137c1.957-0.433,3.892-0.905,5.697-1.498c0.898-0.297,1.773-0.622,2.534-1.01 c0.759-0.382,1.431-0.842,1.671-1.37c0.251-0.528-0.087-1.085-0.717-1.525c-0.626-0.445-1.448-0.811-2.313-1.131 c-1.746-0.638-3.68-1.12-5.636-1.55c-3.929-0.851-8.008-1.481-12.105-2.048c-4.102-0.561-8.241-1.037-12.391-1.481 c-8.304-0.877-16.667-1.58-25.05-2.183C117.577,385.055,109.172,384.517,100.733,384.231z\"}),/*#__PURE__*/React.createElement(\"path\",{style:{fill:\"#EBEBEB\"},d:\"M83.337,384.231c4.475,0.116,8.932,0.389,13.378,0.698c4.445,0.315,8.877,0.69,13.289,1.134 c4.411,0.446,8.804,0.956,13.148,1.587c4.333,0.643,8.66,1.364,12.731,2.468c1.019,0.273,2.002,0.594,2.941,0.955 c0.932,0.364,1.833,0.779,2.516,1.318c0.687,0.528,1.067,1.24,0.784,1.909c-0.286,0.664-1.034,1.207-1.847,1.656 c-1.671,0.891-3.655,1.532-5.663,2.104c-2.02,0.566-4.104,1.046-6.205,1.494c-8.436,1.77-17.22,2.844-25.767,4.334 c-8.569,1.454-17.077,3.046-25.329,4.987c-4.116,0.979-8.18,2.04-12.017,3.317c-1.912,0.641-3.778,1.331-5.469,2.133 c-1.666,0.799-3.272,1.711-4.064,2.83c-0.377,0.553-0.547,1.154-0.297,1.722c0.226,0.569,0.77,1.095,1.477,1.548 c1.439,0.904,3.36,1.563,5.323,2.121c3.97,1.108,8.274,1.829,12.585,2.459c8.696,1.16,17.47,2.182,26.276,3.09 c35.193,3.754,70.682,6.645,105.816,10.672c8.765,1.052,17.527,2.143,26.128,3.596l3.2,0.594c1.061,0.207,2.149,0.373,3.177,0.628 l6.244,1.418c2.107,0.439,4.094,1.035,6.128,1.569c2.022,0.549,4.074,1.065,5.998,1.722c7.875,2.416,15.334,5.349,21.582,8.997 l2.309,1.383c0.741,0.475,1.417,0.983,2.128,1.473l1.053,0.741l0.947,0.786c0.609,0.532,1.315,1.029,1.836,1.591 c0.54,0.555,1.154,1.088,1.632,1.661c0.457,0.578,1.017,1.131,1.39,1.729l0.609,0.885c0.184,0.299,0.337,0.604,0.507,0.905 c0.323,0.605,0.576,1.225,0.724,1.852c-0.158-0.626-0.42-1.244-0.753-1.847c-0.175-0.3-0.333-0.604-0.521-0.902l-0.622-0.881 c-0.381-0.595-0.95-1.145-1.415-1.719c-0.486-0.569-1.108-1.098-1.655-1.649c-0.528-0.558-1.241-1.051-1.856-1.578l-0.957-0.778 l-1.062-0.734c-0.717-0.485-1.398-0.987-2.144-1.457l-2.324-1.366c-6.284-3.603-13.759-6.485-21.641-8.851 c-1.925-0.644-3.968-1.16-5.987-1.701c-2.03-0.528-4.011-1.118-6.114-1.552l-6.231-1.402c-1.027-0.252-2.109-0.415-3.165-0.619 l-3.186-0.585c-8.575-1.431-17.332-2.506-26.092-3.542c-35.127-3.962-70.625-6.786-105.867-10.485 c-8.812-0.925-17.585-1.963-26.317-3.143c-4.344-0.644-8.682-1.376-12.75-2.519c-2.014-0.58-4.005-1.257-5.572-2.245 c-0.768-0.495-1.396-1.093-1.658-1.763c-0.288-0.67-0.082-1.379,0.347-1.997c0.904-1.249,2.598-2.183,4.317-3.008 c1.747-0.823,3.648-1.519,5.588-2.166c3.894-1.285,7.988-2.345,12.129-3.322c8.302-1.936,16.836-3.515,25.428-4.957 c8.578-1.479,17.367-2.537,25.754-4.281c2.09-0.442,4.161-0.915,6.158-1.47c1.984-0.559,3.938-1.191,5.536-2.038 c0.78-0.426,1.461-0.931,1.709-1.507c0.242-0.577-0.066-1.181-0.691-1.672c-0.622-0.496-1.482-0.898-2.384-1.252 c-0.911-0.351-1.87-0.668-2.869-0.943c-3.996-1.11-8.299-1.853-12.607-2.515c-4.322-0.651-8.701-1.183-13.1-1.651 c-4.4-0.466-8.823-0.864-13.261-1.201C92.26,384.666,87.809,384.37,83.337,384.231z\"}),/*#__PURE__*/React.createElement(\"path\",{style:{fill:\"#EBEBEB\"},d:\"M257.282,384.231c4.29,0.111,8.563,0.37,12.825,0.662c4.262,0.298,8.512,0.652,12.744,1.067 c4.231,0.417,8.447,0.892,12.622,1.469c4.17,0.583,8.32,1.246,12.307,2.179c1.981,0.476,3.945,1.009,5.683,1.761 c0.858,0.378,1.673,0.818,2.211,1.383c0.55,0.558,0.653,1.279,0.203,1.874c-0.426,0.598-1.175,1.083-1.984,1.496 c-0.811,0.418-1.712,0.766-2.631,1.09c-1.848,0.642-3.808,1.161-5.791,1.637c-7.967,1.879-16.365,3.011-24.64,4.281 c-16.58,2.523-33.175,5.031-49.528,7.973c-8.152,1.496-16.308,3.05-24.031,5.124c-1.919,0.527-3.807,1.094-5.572,1.754 c-0.88,0.331-1.73,0.686-2.493,1.086c-0.757,0.397-1.45,0.846-1.821,1.354c-0.394,0.505-0.299,1.055,0.233,1.511 c0.522,0.461,1.352,0.828,2.225,1.137c1.772,0.617,3.779,1.043,5.797,1.413c33.259,4.646,66.92,8.736,99.97,14.039 c8.257,1.34,16.48,2.759,24.579,4.389c8.11,1.612,16.027,3.564,23.518,5.961c7.475,2.402,14.483,5.318,20.415,8.847 c2.926,1.78,5.602,3.703,7.762,5.806c2.13,2.1,3.924,4.362,4.551,6.77c-0.673-2.403-2.507-4.649-4.671-6.729 c-2.194-2.084-4.897-3.983-7.844-5.737c-5.966-3.486-13.024-6.316-20.469-8.7c-7.474-2.37-15.37-4.298-23.468-5.888 c-8.09-1.61-16.311-3.009-24.567-4.33c-16.526-2.622-33.212-4.919-49.919-7.156l-25.082-3.315l-12.535-1.674l-6.266-0.842 c-2.09-0.277-4.192-0.576-6.251-0.954c-2.056-0.382-4.104-0.816-5.991-1.476c-0.93-0.335-1.849-0.729-2.494-1.296 c-0.312-0.283-0.552-0.612-0.595-0.961c-0.054-0.348,0.069-0.696,0.299-1.002c0.461-0.618,1.234-1.1,2.04-1.524 c0.815-0.424,1.699-0.79,2.607-1.13c1.82-0.676,3.737-1.246,5.681-1.777c7.81-2.082,15.984-3.623,24.161-5.11 c16.395-2.921,33.006-5.403,49.601-7.9c8.289-1.257,16.67-2.375,24.588-4.228c1.969-0.469,3.911-0.98,5.725-1.607 c0.902-0.316,1.782-0.655,2.561-1.054c0.779-0.394,1.478-0.852,1.858-1.384c0.398-0.53,0.313-1.131-0.17-1.639 c-0.475-0.511-1.238-0.937-2.061-1.304c-1.667-0.734-3.601-1.273-5.556-1.753c-3.938-0.943-8.068-1.624-12.22-2.225 c-4.158-0.595-8.361-1.089-12.583-1.525c-4.222-0.434-8.465-0.807-12.72-1.125C265.838,384.641,261.57,384.362,257.282,384.231z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"polygon\",{style:{fill:\"#DBDBDB\"},points:\"608.931,270.702 608.931,383.543 479.671,383.543 479.671,296.068 490.824,296.068  490.824,325.213 493.695,325.213 493.695,274.28 507.878,274.28 507.878,322.622 509.755,322.622 509.755,261.311  522.081,261.311 522.081,278.135 528.401,278.135 528.401,299.077 530.315,299.077 530.315,285.908 541.521,285.908  541.521,325.201 544.797,325.201 544.797,293.262 555.046,293.262 555.046,268.993 562.014,268.993 562.014,255.179  570.075,255.179 570.075,316.467 572.788,316.467 572.788,290.886 586.066,290.886 586.066,327.498 587.901,327.498  587.901,297.618 601.368,297.618 601.368,270.702  \"}),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"rect\",{x:481.038,y:299.735,style:{fill:\"#FFFFFF\"},width:1.887,height:5.572}),/*#__PURE__*/React.createElement(\"rect\",{x:484.309,y:299.735,style:{fill:\"#FFFFFF\"},width:1.887,height:5.572}),/*#__PURE__*/React.createElement(\"rect\",{x:487.58,y:299.735,style:{fill:\"#FFFFFF\"},width:1.887,height:5.572}),/*#__PURE__*/React.createElement(\"rect\",{x:481.038,y:308.118,style:{fill:\"#FFFFFF\"},width:1.887,height:5.572}),/*#__PURE__*/React.createElement(\"rect\",{x:484.309,y:308.118,style:{fill:\"#FFFFFF\"},width:1.887,height:5.572}),/*#__PURE__*/React.createElement(\"rect\",{x:487.58,y:308.118,style:{fill:\"#FFFFFF\"},width:1.887,height:5.572}),/*#__PURE__*/React.createElement(\"rect\",{x:481.038,y:316.502,style:{fill:\"#FFFFFF\"},width:1.887,height:5.572}),/*#__PURE__*/React.createElement(\"rect\",{x:484.309,y:316.502,style:{fill:\"#FFFFFF\"},width:1.887,height:5.572}),/*#__PURE__*/React.createElement(\"rect\",{x:487.58,y:316.502,style:{fill:\"#FFFFFF\"},width:1.887,height:5.572}),/*#__PURE__*/React.createElement(\"rect\",{x:481.038,y:324.885,style:{fill:\"#FFFFFF\"},width:1.887,height:5.572}),/*#__PURE__*/React.createElement(\"rect\",{x:484.309,y:324.885,style:{fill:\"#FFFFFF\"},width:1.887,height:5.572}),/*#__PURE__*/React.createElement(\"rect\",{x:487.58,y:324.885,style:{fill:\"#FFFFFF\"},width:1.887,height:5.572}),/*#__PURE__*/React.createElement(\"rect\",{x:546.372,y:297.24,style:{fill:\"#FFFFFF\"},width:1.887,height:4.648}),/*#__PURE__*/React.createElement(\"rect\",{x:549.643,y:297.24,style:{fill:\"#FFFFFF\"},width:1.887,height:4.648}),/*#__PURE__*/React.createElement(\"rect\",{x:552.914,y:297.24,style:{fill:\"#FFFFFF\"},width:1.887,height:4.648}),/*#__PURE__*/React.createElement(\"rect\",{x:546.372,y:304.234,style:{fill:\"#FFFFFF\"},width:1.887,height:4.648}),/*#__PURE__*/React.createElement(\"rect\",{x:549.643,y:304.234,style:{fill:\"#FFFFFF\"},width:1.887,height:4.648}),/*#__PURE__*/React.createElement(\"rect\",{x:552.914,y:304.234,style:{fill:\"#FFFFFF\"},width:1.887,height:4.648}),/*#__PURE__*/React.createElement(\"rect\",{x:546.372,y:311.228,style:{fill:\"#FFFFFF\"},width:1.887,height:4.648}),/*#__PURE__*/React.createElement(\"rect\",{x:549.643,y:311.228,style:{fill:\"#FFFFFF\"},width:1.887,height:4.648}),/*#__PURE__*/React.createElement(\"rect\",{x:552.914,y:311.228,style:{fill:\"#FFFFFF\"},width:1.887,height:4.648}),/*#__PURE__*/React.createElement(\"rect\",{x:546.372,y:318.222,style:{fill:\"#FFFFFF\"},width:1.887,height:4.648}),/*#__PURE__*/React.createElement(\"rect\",{x:549.643,y:318.222,style:{fill:\"#FFFFFF\"},width:1.887,height:4.648}),/*#__PURE__*/React.createElement(\"rect\",{x:552.914,y:318.222,style:{fill:\"#FFFFFF\"},width:1.887,height:4.648}),/*#__PURE__*/React.createElement(\"rect\",{x:546.372,y:325.389,style:{fill:\"#FFFFFF\"},width:1.887,height:4.648}),/*#__PURE__*/React.createElement(\"rect\",{x:549.643,y:325.389,style:{fill:\"#FFFFFF\"},width:1.887,height:4.648}),/*#__PURE__*/React.createElement(\"rect\",{x:552.914,y:325.389,style:{fill:\"#FFFFFF\"},width:1.887,height:4.648}),/*#__PURE__*/React.createElement(\"rect\",{x:546.372,y:332.557,style:{fill:\"#FFFFFF\"},width:1.887,height:4.648}),/*#__PURE__*/React.createElement(\"rect\",{x:549.643,y:332.557,style:{fill:\"#FFFFFF\"},width:1.887,height:4.648}),/*#__PURE__*/React.createElement(\"rect\",{x:552.914,y:332.557,style:{fill:\"#FFFFFF\"},width:1.887,height:4.648}),/*#__PURE__*/React.createElement(\"rect\",{x:546.372,y:339.724,style:{fill:\"#FFFFFF\"},width:1.887,height:4.648}),/*#__PURE__*/React.createElement(\"rect\",{x:549.643,y:339.724,style:{fill:\"#FFFFFF\"},width:1.887,height:4.648}),/*#__PURE__*/React.createElement(\"rect\",{x:552.914,y:339.724,style:{fill:\"#FFFFFF\"},width:1.887,height:4.648}),/*#__PURE__*/React.createElement(\"rect\",{x:546.372,y:346.891,style:{fill:\"#FFFFFF\"},width:1.887,height:4.649}),/*#__PURE__*/React.createElement(\"rect\",{x:549.643,y:346.891,style:{fill:\"#FFFFFF\"},width:1.887,height:4.649}),/*#__PURE__*/React.createElement(\"rect\",{x:552.914,y:346.891,style:{fill:\"#FFFFFF\"},width:1.887,height:4.649}),/*#__PURE__*/React.createElement(\"rect\",{x:495.305,y:277.851,style:{fill:\"#FFFFFF\"},width:10.864,height:3.485}),/*#__PURE__*/React.createElement(\"rect\",{x:495.305,y:284.612,style:{fill:\"#FFFFFF\"},width:10.864,height:3.484}),/*#__PURE__*/React.createElement(\"rect\",{x:495.305,y:291.373,style:{fill:\"#FFFFFF\"},width:10.864,height:3.485}),/*#__PURE__*/React.createElement(\"rect\",{x:495.305,y:298.135,style:{fill:\"#FFFFFF\"},width:10.864,height:3.484}),/*#__PURE__*/React.createElement(\"rect\",{x:495.305,y:304.896,style:{fill:\"#FFFFFF\"},width:10.864,height:3.485}),/*#__PURE__*/React.createElement(\"rect\",{x:495.305,y:311.658,style:{fill:\"#FFFFFF\"},width:10.864,height:3.485}),/*#__PURE__*/React.createElement(\"rect\",{x:495.305,y:318.419,style:{fill:\"#FFFFFF\"},width:10.864,height:3.485}),/*#__PURE__*/React.createElement(\"rect\",{x:495.305,y:325.18,style:{fill:\"#FFFFFF\"},width:10.864,height:3.485}),/*#__PURE__*/React.createElement(\"rect\",{x:574.392,y:294.139,style:{fill:\"#FFFFFF\"},width:9.988,height:3.485}),/*#__PURE__*/React.createElement(\"rect\",{x:574.392,y:300.901,style:{fill:\"#FFFFFF\"},width:9.988,height:3.485}),/*#__PURE__*/React.createElement(\"rect\",{x:574.392,y:307.663,style:{fill:\"#FFFFFF\"},width:9.988,height:3.484}),/*#__PURE__*/React.createElement(\"rect\",{x:574.392,y:314.424,style:{fill:\"#FFFFFF\"},width:9.988,height:3.484}),/*#__PURE__*/React.createElement(\"rect\",{x:574.392,y:321.185,style:{fill:\"#FFFFFF\"},width:9.988,height:3.484}),/*#__PURE__*/React.createElement(\"rect\",{x:574.392,y:327.947,style:{fill:\"#FFFFFF\"},width:9.988,height:3.485}),/*#__PURE__*/React.createElement(\"rect\",{x:574.392,y:334.708,style:{fill:\"#FFFFFF\"},width:9.988,height:3.485}),/*#__PURE__*/React.createElement(\"rect\",{x:574.392,y:341.469,style:{fill:\"#FFFFFF\"},width:9.988,height:3.485}),/*#__PURE__*/React.createElement(\"rect\",{x:574.392,y:347.894,style:{fill:\"#FFFFFF\"},width:9.988,height:3.485}),/*#__PURE__*/React.createElement(\"rect\",{x:574.392,y:354.318,style:{fill:\"#FFFFFF\"},width:9.988,height:3.485}),/*#__PURE__*/React.createElement(\"rect\",{x:574.392,y:360.743,style:{fill:\"#FFFFFF\"},width:9.988,height:3.485}),/*#__PURE__*/React.createElement(\"rect\",{x:574.392,y:367.168,style:{fill:\"#FFFFFF\"},width:9.988,height:3.485}),/*#__PURE__*/React.createElement(\"rect\",{x:574.392,y:373.592,style:{fill:\"#FFFFFF\"},width:9.988,height:3.484}),/*#__PURE__*/React.createElement(\"rect\",{x:589.979,y:302.307,style:{fill:\"#FFFFFF\"},width:10.55,height:3.484}),/*#__PURE__*/React.createElement(\"rect\",{x:589.979,y:309.068,style:{fill:\"#FFFFFF\"},width:10.55,height:3.485}),/*#__PURE__*/React.createElement(\"rect\",{x:589.979,y:315.829,style:{fill:\"#FFFFFF\"},width:10.55,height:3.485}),/*#__PURE__*/React.createElement(\"rect\",{x:589.979,y:322.591,style:{fill:\"#FFFFFF\"},width:10.55,height:3.485}),/*#__PURE__*/React.createElement(\"rect\",{x:589.979,y:329.352,style:{fill:\"#FFFFFF\"},width:10.55,height:3.484}),/*#__PURE__*/React.createElement(\"rect\",{x:589.979,y:336.113,style:{fill:\"#FFFFFF\"},width:10.55,height:3.484}),/*#__PURE__*/React.createElement(\"rect\",{x:589.979,y:342.875,style:{fill:\"#FFFFFF\"},width:10.55,height:3.485}),/*#__PURE__*/React.createElement(\"rect\",{x:589.979,y:349.636,style:{fill:\"#FFFFFF\"},width:10.55,height:3.485}),/*#__PURE__*/React.createElement(\"rect\",{x:589.979,y:355.688,style:{fill:\"#FFFFFF\"},width:10.55,height:3.485}),/*#__PURE__*/React.createElement(\"rect\",{x:589.979,y:361.739,style:{fill:\"#FFFFFF\"},width:10.55,height:3.485}),/*#__PURE__*/React.createElement(\"rect\",{x:589.979,y:367.791,style:{fill:\"#FFFFFF\"},width:10.55,height:3.485}),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"rect\",{x:533.593,y:289.064,style:{fill:\"#FFFFFF\"},width:3.355,height:3.365}),/*#__PURE__*/React.createElement(\"rect\",{x:533.593,y:295.593,style:{fill:\"#FFFFFF\"},width:3.355,height:3.365}),/*#__PURE__*/React.createElement(\"rect\",{x:533.593,y:302.123,style:{fill:\"#FFFFFF\"},width:3.355,height:3.365}),/*#__PURE__*/React.createElement(\"rect\",{x:533.593,y:308.652,style:{fill:\"#FFFFFF\"},width:3.355,height:3.365}),/*#__PURE__*/React.createElement(\"rect\",{x:533.593,y:315.182,style:{fill:\"#FFFFFF\"},width:3.355,height:3.365}),/*#__PURE__*/React.createElement(\"rect\",{x:533.593,y:321.711,style:{fill:\"#FFFFFF\"},width:3.355,height:3.365}),/*#__PURE__*/React.createElement(\"rect\",{x:533.593,y:328.241,style:{fill:\"#FFFFFF\"},width:3.355,height:3.365}),/*#__PURE__*/React.createElement(\"rect\",{x:533.593,y:334.77,style:{fill:\"#FFFFFF\"},width:3.355,height:3.365})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"rect\",{x:538.158,y:289.064,style:{fill:\"#FFFFFF\"},width:3.355,height:3.365}),/*#__PURE__*/React.createElement(\"rect\",{x:538.158,y:295.593,style:{fill:\"#FFFFFF\"},width:3.355,height:3.365}),/*#__PURE__*/React.createElement(\"rect\",{x:538.158,y:302.123,style:{fill:\"#FFFFFF\"},width:3.355,height:3.365}),/*#__PURE__*/React.createElement(\"rect\",{x:538.158,y:308.652,style:{fill:\"#FFFFFF\"},width:3.355,height:3.365}),/*#__PURE__*/React.createElement(\"rect\",{x:538.158,y:315.182,style:{fill:\"#FFFFFF\"},width:3.355,height:3.365}),/*#__PURE__*/React.createElement(\"rect\",{x:538.158,y:321.711,style:{fill:\"#FFFFFF\"},width:3.355,height:3.365}),/*#__PURE__*/React.createElement(\"rect\",{x:538.158,y:328.241,style:{fill:\"#FFFFFF\"},width:3.355,height:3.365}),/*#__PURE__*/React.createElement(\"rect\",{x:538.158,y:334.77,style:{fill:\"#FFFFFF\"},width:3.355,height:3.365})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"rect\",{x:511.624,y:264.839,style:{fill:\"#FFFFFF\"},width:3.495,height:5.307}),/*#__PURE__*/React.createElement(\"rect\",{x:516.835,y:264.839,style:{fill:\"#FFFFFF\"},width:3.495,height:5.307}),/*#__PURE__*/React.createElement(\"rect\",{x:511.624,y:272.635,style:{fill:\"#FFFFFF\"},width:3.495,height:5.307}),/*#__PURE__*/React.createElement(\"rect\",{x:516.835,y:272.635,style:{fill:\"#FFFFFF\"},width:3.495,height:5.307}),/*#__PURE__*/React.createElement(\"rect\",{x:511.624,y:280.431,style:{fill:\"#FFFFFF\"},width:3.495,height:5.307}),/*#__PURE__*/React.createElement(\"rect\",{x:516.835,y:280.431,style:{fill:\"#FFFFFF\"},width:3.495,height:5.307}),/*#__PURE__*/React.createElement(\"rect\",{x:511.624,y:288.227,style:{fill:\"#FFFFFF\"},width:3.495,height:5.307}),/*#__PURE__*/React.createElement(\"rect\",{x:516.835,y:288.227,style:{fill:\"#FFFFFF\"},width:3.495,height:5.307}),/*#__PURE__*/React.createElement(\"rect\",{x:511.624,y:296.023,style:{fill:\"#FFFFFF\"},width:3.495,height:5.307}),/*#__PURE__*/React.createElement(\"rect\",{x:516.835,y:296.023,style:{fill:\"#FFFFFF\"},width:3.495,height:5.307}),/*#__PURE__*/React.createElement(\"rect\",{x:511.624,y:303.819,style:{fill:\"#FFFFFF\"},width:3.495,height:5.307}),/*#__PURE__*/React.createElement(\"rect\",{x:516.835,y:303.819,style:{fill:\"#FFFFFF\"},width:3.495,height:5.307}),/*#__PURE__*/React.createElement(\"rect\",{x:511.624,y:311.615,style:{fill:\"#FFFFFF\"},width:3.495,height:5.307}),/*#__PURE__*/React.createElement(\"rect\",{x:516.835,y:311.615,style:{fill:\"#FFFFFF\"},width:3.495,height:5.307}),/*#__PURE__*/React.createElement(\"rect\",{x:511.624,y:319.411,style:{fill:\"#FFFFFF\"},width:3.495,height:5.307}),/*#__PURE__*/React.createElement(\"rect\",{x:516.835,y:319.411,style:{fill:\"#FFFFFF\"},width:3.495,height:5.307})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"rect\",{x:523.294,y:280.431,style:{fill:\"#FFFFFF\"},width:3.495,height:5.307}),/*#__PURE__*/React.createElement(\"rect\",{x:523.294,y:288.227,style:{fill:\"#FFFFFF\"},width:3.495,height:5.307}),/*#__PURE__*/React.createElement(\"rect\",{x:523.294,y:296.023,style:{fill:\"#FFFFFF\"},width:3.495,height:5.307}),/*#__PURE__*/React.createElement(\"rect\",{x:523.294,y:303.819,style:{fill:\"#FFFFFF\"},width:3.495,height:5.307}),/*#__PURE__*/React.createElement(\"rect\",{x:523.294,y:311.615,style:{fill:\"#FFFFFF\"},width:3.495,height:5.307}),/*#__PURE__*/React.createElement(\"rect\",{x:523.294,y:319.411,style:{fill:\"#FFFFFF\"},width:3.495,height:5.307}),/*#__PURE__*/React.createElement(\"rect\",{x:511.624,y:327.114,style:{fill:\"#FFFFFF\"},width:3.495,height:5.307}),/*#__PURE__*/React.createElement(\"rect\",{x:516.835,y:327.114,style:{fill:\"#FFFFFF\"},width:3.495,height:5.307}),/*#__PURE__*/React.createElement(\"rect\",{x:523.294,y:327.114,style:{fill:\"#FFFFFF\"},width:3.495,height:5.307}),/*#__PURE__*/React.createElement(\"rect\",{x:511.624,y:334.817,style:{fill:\"#FFFFFF\"},width:3.495,height:5.307}),/*#__PURE__*/React.createElement(\"rect\",{x:516.835,y:334.817,style:{fill:\"#FFFFFF\"},width:3.495,height:5.307}),/*#__PURE__*/React.createElement(\"rect\",{x:523.294,y:334.817,style:{fill:\"#FFFFFF\"},width:3.495,height:5.307}),/*#__PURE__*/React.createElement(\"rect\",{x:511.624,y:342.52,style:{fill:\"#FFFFFF\"},width:3.495,height:5.307}),/*#__PURE__*/React.createElement(\"rect\",{x:516.835,y:342.52,style:{fill:\"#FFFFFF\"},width:3.495,height:5.307}),/*#__PURE__*/React.createElement(\"rect\",{x:523.294,y:342.52,style:{fill:\"#FFFFFF\"},width:3.495,height:5.307}),/*#__PURE__*/React.createElement(\"rect\",{x:511.624,y:350.223,style:{fill:\"#FFFFFF\"},width:3.495,height:5.307}),/*#__PURE__*/React.createElement(\"rect\",{x:516.835,y:350.223,style:{fill:\"#FFFFFF\"},width:3.495,height:5.307}),/*#__PURE__*/React.createElement(\"rect\",{x:523.294,y:350.223,style:{fill:\"#FFFFFF\"},width:3.495,height:5.307}),/*#__PURE__*/React.createElement(\"rect\",{x:511.624,y:357.926,style:{fill:\"#FFFFFF\"},width:3.495,height:5.307}),/*#__PURE__*/React.createElement(\"rect\",{x:516.835,y:357.926,style:{fill:\"#FFFFFF\"},width:3.495,height:5.307}),/*#__PURE__*/React.createElement(\"rect\",{x:523.294,y:357.926,style:{fill:\"#FFFFFF\"},width:3.495,height:5.307})),/*#__PURE__*/React.createElement(\"rect\",{x:556.47,y:272.414,style:{fill:\"#FFFFFF\"},width:1.887,height:4.648}),/*#__PURE__*/React.createElement(\"rect\",{x:559.741,y:272.414,style:{fill:\"#FFFFFF\"},width:1.887,height:4.648}),/*#__PURE__*/React.createElement(\"rect\",{x:556.47,y:279.408,style:{fill:\"#FFFFFF\"},width:1.887,height:4.648}),/*#__PURE__*/React.createElement(\"rect\",{x:559.741,y:279.408,style:{fill:\"#FFFFFF\"},width:1.887,height:4.648}),/*#__PURE__*/React.createElement(\"rect\",{x:556.47,y:286.402,style:{fill:\"#FFFFFF\"},width:1.887,height:4.649}),/*#__PURE__*/React.createElement(\"rect\",{x:559.741,y:286.402,style:{fill:\"#FFFFFF\"},width:1.887,height:4.649}),/*#__PURE__*/React.createElement(\"rect\",{x:556.47,y:293.396,style:{fill:\"#FFFFFF\"},width:1.887,height:4.648}),/*#__PURE__*/React.createElement(\"rect\",{x:559.741,y:293.396,style:{fill:\"#FFFFFF\"},width:1.887,height:4.648}),/*#__PURE__*/React.createElement(\"rect\",{x:556.47,y:300.564,style:{fill:\"#FFFFFF\"},width:1.887,height:4.648}),/*#__PURE__*/React.createElement(\"rect\",{x:559.741,y:300.564,style:{fill:\"#FFFFFF\"},width:1.887,height:4.648}),/*#__PURE__*/React.createElement(\"rect\",{x:556.47,y:307.731,style:{fill:\"#FFFFFF\"},width:1.887,height:4.648}),/*#__PURE__*/React.createElement(\"rect\",{x:559.741,y:307.731,style:{fill:\"#FFFFFF\"},width:1.887,height:4.648}),/*#__PURE__*/React.createElement(\"rect\",{x:556.47,y:314.898,style:{fill:\"#FFFFFF\"},width:1.887,height:4.649}),/*#__PURE__*/React.createElement(\"rect\",{x:559.741,y:314.898,style:{fill:\"#FFFFFF\"},width:1.887,height:4.649}),/*#__PURE__*/React.createElement(\"rect\",{x:556.47,y:322.066,style:{fill:\"#FFFFFF\"},width:1.887,height:4.648}),/*#__PURE__*/React.createElement(\"rect\",{x:559.741,y:322.066,style:{fill:\"#FFFFFF\"},width:1.887,height:4.648}),/*#__PURE__*/React.createElement(\"rect\",{x:556.47,y:329.309,style:{fill:\"#FFFFFF\"},width:1.887,height:4.648}),/*#__PURE__*/React.createElement(\"rect\",{x:559.741,y:329.309,style:{fill:\"#FFFFFF\"},width:1.887,height:4.648}),/*#__PURE__*/React.createElement(\"rect\",{x:556.47,y:336.553,style:{fill:\"#FFFFFF\"},width:1.887,height:4.648}),/*#__PURE__*/React.createElement(\"rect\",{x:559.741,y:336.553,style:{fill:\"#FFFFFF\"},width:1.887,height:4.648}),/*#__PURE__*/React.createElement(\"rect\",{x:556.47,y:343.796,style:{fill:\"#FFFFFF\"},width:1.887,height:4.648}),/*#__PURE__*/React.createElement(\"rect\",{x:559.741,y:343.796,style:{fill:\"#FFFFFF\"},width:1.887,height:4.648}),/*#__PURE__*/React.createElement(\"rect\",{x:556.47,y:351.039,style:{fill:\"#FFFFFF\"},width:1.887,height:4.649}),/*#__PURE__*/React.createElement(\"rect\",{x:559.741,y:351.039,style:{fill:\"#FFFFFF\"},width:1.887,height:4.649}),/*#__PURE__*/React.createElement(\"rect\",{x:602.551,y:273.17,style:{fill:\"#FFFFFF\"},width:1.887,height:5.477}),/*#__PURE__*/React.createElement(\"rect\",{x:605.821,y:273.17,style:{fill:\"#FFFFFF\"},width:1.887,height:5.477}),/*#__PURE__*/React.createElement(\"rect\",{x:602.551,y:281.409,style:{fill:\"#FFFFFF\"},width:1.887,height:5.476}),/*#__PURE__*/React.createElement(\"rect\",{x:605.821,y:281.409,style:{fill:\"#FFFFFF\"},width:1.887,height:5.476}),/*#__PURE__*/React.createElement(\"rect\",{x:602.551,y:289.649,style:{fill:\"#FFFFFF\"},width:1.887,height:5.476}),/*#__PURE__*/React.createElement(\"rect\",{x:605.821,y:289.649,style:{fill:\"#FFFFFF\"},width:1.887,height:5.476}),/*#__PURE__*/React.createElement(\"rect\",{x:602.551,y:297.889,style:{fill:\"#FFFFFF\"},width:1.887,height:5.476}),/*#__PURE__*/React.createElement(\"rect\",{x:605.821,y:297.889,style:{fill:\"#FFFFFF\"},width:1.887,height:5.476}),/*#__PURE__*/React.createElement(\"rect\",{x:602.551,y:306.333,style:{fill:\"#FFFFFF\"},width:1.887,height:5.477}),/*#__PURE__*/React.createElement(\"rect\",{x:605.821,y:306.333,style:{fill:\"#FFFFFF\"},width:1.887,height:5.477}),/*#__PURE__*/React.createElement(\"rect\",{x:602.551,y:314.777,style:{fill:\"#FFFFFF\"},width:1.887,height:5.476}),/*#__PURE__*/React.createElement(\"rect\",{x:605.821,y:314.777,style:{fill:\"#FFFFFF\"},width:1.887,height:5.476}),/*#__PURE__*/React.createElement(\"rect\",{x:602.551,y:323.221,style:{fill:\"#FFFFFF\"},width:1.887,height:5.476}),/*#__PURE__*/React.createElement(\"rect\",{x:605.821,y:323.221,style:{fill:\"#FFFFFF\"},width:1.887,height:5.476}),/*#__PURE__*/React.createElement(\"rect\",{x:602.551,y:331.665,style:{fill:\"#FFFFFF\"},width:1.887,height:5.476}),/*#__PURE__*/React.createElement(\"rect\",{x:605.821,y:331.665,style:{fill:\"#FFFFFF\"},width:1.887,height:5.476}),/*#__PURE__*/React.createElement(\"rect\",{x:602.551,y:340.199,style:{fill:\"#FFFFFF\"},width:1.887,height:5.476}),/*#__PURE__*/React.createElement(\"rect\",{x:605.821,y:340.199,style:{fill:\"#FFFFFF\"},width:1.887,height:5.476}),/*#__PURE__*/React.createElement(\"rect\",{x:602.551,y:348.732,style:{fill:\"#FFFFFF\"},width:1.887,height:5.477}),/*#__PURE__*/React.createElement(\"rect\",{x:605.821,y:348.732,style:{fill:\"#FFFFFF\"},width:1.887,height:5.477}),/*#__PURE__*/React.createElement(\"rect\",{x:602.551,y:357.266,style:{fill:\"#FFFFFF\"},width:1.887,height:5.476}),/*#__PURE__*/React.createElement(\"rect\",{x:605.821,y:357.266,style:{fill:\"#FFFFFF\"},width:1.887,height:5.476}),/*#__PURE__*/React.createElement(\"rect\",{x:602.551,y:365.799,style:{fill:\"#FFFFFF\"},width:1.887,height:5.476}),/*#__PURE__*/React.createElement(\"rect\",{x:605.821,y:365.799,style:{fill:\"#FFFFFF\"},width:1.887,height:5.476}),/*#__PURE__*/React.createElement(\"rect\",{x:563.465,y:272.414,style:{fill:\"#FFFFFF\"},width:1.887,height:4.648}),/*#__PURE__*/React.createElement(\"rect\",{x:566.735,y:272.414,style:{fill:\"#FFFFFF\"},width:1.887,height:4.648}),/*#__PURE__*/React.createElement(\"rect\",{x:563.465,y:265.243,style:{fill:\"#FFFFFF\"},width:1.887,height:4.648}),/*#__PURE__*/React.createElement(\"rect\",{x:566.735,y:265.243,style:{fill:\"#FFFFFF\"},width:1.887,height:4.648}),/*#__PURE__*/React.createElement(\"rect\",{x:563.465,y:258.071,style:{fill:\"#FFFFFF\"},width:1.887,height:4.648}),/*#__PURE__*/React.createElement(\"rect\",{x:566.735,y:258.071,style:{fill:\"#FFFFFF\"},width:1.887,height:4.648}),/*#__PURE__*/React.createElement(\"rect\",{x:563.465,y:279.408,style:{fill:\"#FFFFFF\"},width:1.887,height:4.648}),/*#__PURE__*/React.createElement(\"rect\",{x:566.735,y:279.408,style:{fill:\"#FFFFFF\"},width:1.887,height:4.648}),/*#__PURE__*/React.createElement(\"rect\",{x:563.465,y:286.402,style:{fill:\"#FFFFFF\"},width:1.887,height:4.649}),/*#__PURE__*/React.createElement(\"rect\",{x:566.735,y:286.402,style:{fill:\"#FFFFFF\"},width:1.887,height:4.649}),/*#__PURE__*/React.createElement(\"rect\",{x:563.465,y:293.396,style:{fill:\"#FFFFFF\"},width:1.887,height:4.648}),/*#__PURE__*/React.createElement(\"rect\",{x:566.735,y:293.396,style:{fill:\"#FFFFFF\"},width:1.887,height:4.648}),/*#__PURE__*/React.createElement(\"rect\",{x:563.465,y:300.564,style:{fill:\"#FFFFFF\"},width:1.887,height:4.648}),/*#__PURE__*/React.createElement(\"rect\",{x:566.735,y:300.564,style:{fill:\"#FFFFFF\"},width:1.887,height:4.648}),/*#__PURE__*/React.createElement(\"rect\",{x:563.465,y:307.731,style:{fill:\"#FFFFFF\"},width:1.887,height:4.648}),/*#__PURE__*/React.createElement(\"rect\",{x:566.735,y:307.731,style:{fill:\"#FFFFFF\"},width:1.887,height:4.648}),/*#__PURE__*/React.createElement(\"rect\",{x:563.465,y:314.898,style:{fill:\"#FFFFFF\"},width:1.887,height:4.649}),/*#__PURE__*/React.createElement(\"rect\",{x:566.735,y:314.898,style:{fill:\"#FFFFFF\"},width:1.887,height:4.649}),/*#__PURE__*/React.createElement(\"rect\",{x:563.465,y:322.066,style:{fill:\"#FFFFFF\"},width:1.887,height:4.648}),/*#__PURE__*/React.createElement(\"rect\",{x:566.735,y:322.066,style:{fill:\"#FFFFFF\"},width:1.887,height:4.648}),/*#__PURE__*/React.createElement(\"rect\",{x:563.465,y:329.309,style:{fill:\"#FFFFFF\"},width:1.887,height:4.648}),/*#__PURE__*/React.createElement(\"rect\",{x:566.735,y:329.309,style:{fill:\"#FFFFFF\"},width:1.887,height:4.648}),/*#__PURE__*/React.createElement(\"rect\",{x:563.465,y:336.553,style:{fill:\"#FFFFFF\"},width:1.887,height:4.648}),/*#__PURE__*/React.createElement(\"rect\",{x:566.735,y:336.553,style:{fill:\"#FFFFFF\"},width:1.887,height:4.648}),/*#__PURE__*/React.createElement(\"rect\",{x:563.465,y:343.796,style:{fill:\"#FFFFFF\"},width:1.887,height:4.648}),/*#__PURE__*/React.createElement(\"rect\",{x:566.735,y:343.796,style:{fill:\"#FFFFFF\"},width:1.887,height:4.648}),/*#__PURE__*/React.createElement(\"rect\",{x:563.465,y:351.039,style:{fill:\"#FFFFFF\"},width:1.887,height:4.649}),/*#__PURE__*/React.createElement(\"rect\",{x:566.735,y:351.039,style:{fill:\"#FFFFFF\"},width:1.887,height:4.649}))),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"polygon\",{style:{fill:\"#DBDBDB\"},points:\"479.671,383.543 386.551,383.543 386.551,283.849 397.704,283.849 397.704,312.993  400.575,312.993 400.575,296.498 414.757,296.498 414.757,322.622 416.634,322.622 416.634,261.311 428.96,261.311  428.96,278.135 435.281,278.135 435.281,299.077 437.195,299.077 437.195,285.908 448.401,285.908 448.401,325.201  451.677,325.201 451.677,293.262 461.926,293.262 461.926,268.993 468.893,268.993 476.954,269.075 476.954,316.467  479.668,316.467  \"}),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"rect\",{x:387.918,y:287.515,style:{fill:\"#FFFFFF\"},width:1.887,height:5.572}),/*#__PURE__*/React.createElement(\"rect\",{x:391.188,y:287.515,style:{fill:\"#FFFFFF\"},width:1.887,height:5.572}),/*#__PURE__*/React.createElement(\"rect\",{x:394.459,y:287.515,style:{fill:\"#FFFFFF\"},width:1.887,height:5.572}),/*#__PURE__*/React.createElement(\"rect\",{x:387.918,y:295.899,style:{fill:\"#FFFFFF\"},width:1.887,height:5.572}),/*#__PURE__*/React.createElement(\"rect\",{x:391.188,y:295.899,style:{fill:\"#FFFFFF\"},width:1.887,height:5.572}),/*#__PURE__*/React.createElement(\"rect\",{x:394.459,y:295.899,style:{fill:\"#FFFFFF\"},width:1.887,height:5.572}),/*#__PURE__*/React.createElement(\"rect\",{x:387.918,y:304.282,style:{fill:\"#FFFFFF\"},width:1.887,height:5.572}),/*#__PURE__*/React.createElement(\"rect\",{x:391.188,y:304.282,style:{fill:\"#FFFFFF\"},width:1.887,height:5.572}),/*#__PURE__*/React.createElement(\"rect\",{x:394.459,y:304.282,style:{fill:\"#FFFFFF\"},width:1.887,height:5.572}),/*#__PURE__*/React.createElement(\"rect\",{x:387.918,y:312.666,style:{fill:\"#FFFFFF\"},width:1.887,height:5.572}),/*#__PURE__*/React.createElement(\"rect\",{x:391.188,y:312.666,style:{fill:\"#FFFFFF\"},width:1.887,height:5.572}),/*#__PURE__*/React.createElement(\"rect\",{x:394.459,y:312.666,style:{fill:\"#FFFFFF\"},width:1.887,height:5.572}),/*#__PURE__*/React.createElement(\"rect\",{x:453.252,y:297.24,style:{fill:\"#FFFFFF\"},width:1.887,height:4.648}),/*#__PURE__*/React.createElement(\"rect\",{x:456.523,y:297.24,style:{fill:\"#FFFFFF\"},width:1.887,height:4.648}),/*#__PURE__*/React.createElement(\"rect\",{x:459.793,y:297.24,style:{fill:\"#FFFFFF\"},width:1.887,height:4.648}),/*#__PURE__*/React.createElement(\"rect\",{x:453.252,y:304.234,style:{fill:\"#FFFFFF\"},width:1.887,height:4.648}),/*#__PURE__*/React.createElement(\"rect\",{x:456.523,y:304.234,style:{fill:\"#FFFFFF\"},width:1.887,height:4.648}),/*#__PURE__*/React.createElement(\"rect\",{x:459.793,y:304.234,style:{fill:\"#FFFFFF\"},width:1.887,height:4.648}),/*#__PURE__*/React.createElement(\"rect\",{x:453.252,y:311.228,style:{fill:\"#FFFFFF\"},width:1.887,height:4.648}),/*#__PURE__*/React.createElement(\"rect\",{x:456.523,y:311.228,style:{fill:\"#FFFFFF\"},width:1.887,height:4.648}),/*#__PURE__*/React.createElement(\"rect\",{x:459.793,y:311.228,style:{fill:\"#FFFFFF\"},width:1.887,height:4.648}),/*#__PURE__*/React.createElement(\"rect\",{x:453.252,y:318.222,style:{fill:\"#FFFFFF\"},width:1.887,height:4.648}),/*#__PURE__*/React.createElement(\"rect\",{x:456.523,y:318.222,style:{fill:\"#FFFFFF\"},width:1.887,height:4.648}),/*#__PURE__*/React.createElement(\"rect\",{x:459.793,y:318.222,style:{fill:\"#FFFFFF\"},width:1.887,height:4.648}),/*#__PURE__*/React.createElement(\"rect\",{x:453.252,y:325.389,style:{fill:\"#FFFFFF\"},width:1.887,height:4.648}),/*#__PURE__*/React.createElement(\"rect\",{x:456.523,y:325.389,style:{fill:\"#FFFFFF\"},width:1.887,height:4.648}),/*#__PURE__*/React.createElement(\"rect\",{x:459.793,y:325.389,style:{fill:\"#FFFFFF\"},width:1.887,height:4.648}),/*#__PURE__*/React.createElement(\"rect\",{x:453.252,y:332.557,style:{fill:\"#FFFFFF\"},width:1.887,height:4.648}),/*#__PURE__*/React.createElement(\"rect\",{x:456.523,y:332.557,style:{fill:\"#FFFFFF\"},width:1.887,height:4.648}),/*#__PURE__*/React.createElement(\"rect\",{x:459.793,y:332.557,style:{fill:\"#FFFFFF\"},width:1.887,height:4.648}),/*#__PURE__*/React.createElement(\"rect\",{x:453.252,y:339.724,style:{fill:\"#FFFFFF\"},width:1.887,height:4.648}),/*#__PURE__*/React.createElement(\"rect\",{x:456.523,y:339.724,style:{fill:\"#FFFFFF\"},width:1.887,height:4.648}),/*#__PURE__*/React.createElement(\"rect\",{x:459.793,y:339.724,style:{fill:\"#FFFFFF\"},width:1.887,height:4.648}),/*#__PURE__*/React.createElement(\"rect\",{x:453.252,y:346.891,style:{fill:\"#FFFFFF\"},width:1.887,height:4.649}),/*#__PURE__*/React.createElement(\"rect\",{x:456.523,y:346.891,style:{fill:\"#FFFFFF\"},width:1.887,height:4.649}),/*#__PURE__*/React.createElement(\"rect\",{x:459.793,y:346.891,style:{fill:\"#FFFFFF\"},width:1.887,height:4.649}),/*#__PURE__*/React.createElement(\"rect\",{x:402.185,y:300.068,style:{fill:\"#FFFFFF\"},width:10.864,height:3.485}),/*#__PURE__*/React.createElement(\"rect\",{x:402.185,y:306.83,style:{fill:\"#FFFFFF\"},width:10.864,height:3.484}),/*#__PURE__*/React.createElement(\"rect\",{x:402.185,y:313.591,style:{fill:\"#FFFFFF\"},width:10.864,height:3.485}),/*#__PURE__*/React.createElement(\"rect\",{x:402.185,y:320.352,style:{fill:\"#FFFFFF\"},width:10.864,height:3.485}),/*#__PURE__*/React.createElement(\"rect\",{x:402.185,y:327.114,style:{fill:\"#FFFFFF\"},width:10.864,height:3.485}),/*#__PURE__*/React.createElement(\"rect\",{x:402.185,y:333.875,style:{fill:\"#FFFFFF\"},width:10.864,height:3.485}),/*#__PURE__*/React.createElement(\"rect\",{x:402.185,y:340.637,style:{fill:\"#FFFFFF\"},width:10.864,height:3.484}),/*#__PURE__*/React.createElement(\"rect\",{x:402.185,y:347.398,style:{fill:\"#FFFFFF\"},width:10.864,height:3.485}),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"rect\",{x:440.472,y:289.064,style:{fill:\"#FFFFFF\"},width:3.355,height:3.365}),/*#__PURE__*/React.createElement(\"rect\",{x:440.472,y:295.593,style:{fill:\"#FFFFFF\"},width:3.355,height:3.365}),/*#__PURE__*/React.createElement(\"rect\",{x:440.472,y:302.123,style:{fill:\"#FFFFFF\"},width:3.355,height:3.365}),/*#__PURE__*/React.createElement(\"rect\",{x:440.472,y:308.652,style:{fill:\"#FFFFFF\"},width:3.355,height:3.365}),/*#__PURE__*/React.createElement(\"rect\",{x:440.472,y:315.182,style:{fill:\"#FFFFFF\"},width:3.355,height:3.365}),/*#__PURE__*/React.createElement(\"rect\",{x:440.472,y:321.711,style:{fill:\"#FFFFFF\"},width:3.355,height:3.365}),/*#__PURE__*/React.createElement(\"rect\",{x:440.472,y:328.241,style:{fill:\"#FFFFFF\"},width:3.355,height:3.365}),/*#__PURE__*/React.createElement(\"rect\",{x:440.472,y:334.77,style:{fill:\"#FFFFFF\"},width:3.355,height:3.365})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"rect\",{x:445.037,y:289.064,style:{fill:\"#FFFFFF\"},width:3.355,height:3.365}),/*#__PURE__*/React.createElement(\"rect\",{x:445.037,y:295.593,style:{fill:\"#FFFFFF\"},width:3.355,height:3.365}),/*#__PURE__*/React.createElement(\"rect\",{x:445.037,y:302.123,style:{fill:\"#FFFFFF\"},width:3.355,height:3.365}),/*#__PURE__*/React.createElement(\"rect\",{x:445.037,y:308.652,style:{fill:\"#FFFFFF\"},width:3.355,height:3.365}),/*#__PURE__*/React.createElement(\"rect\",{x:445.037,y:315.182,style:{fill:\"#FFFFFF\"},width:3.355,height:3.365}),/*#__PURE__*/React.createElement(\"rect\",{x:445.037,y:321.711,style:{fill:\"#FFFFFF\"},width:3.355,height:3.365}),/*#__PURE__*/React.createElement(\"rect\",{x:445.037,y:328.241,style:{fill:\"#FFFFFF\"},width:3.355,height:3.365}),/*#__PURE__*/React.createElement(\"rect\",{x:445.037,y:334.77,style:{fill:\"#FFFFFF\"},width:3.355,height:3.365})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"rect\",{x:418.504,y:264.839,style:{fill:\"#FFFFFF\"},width:3.495,height:5.307}),/*#__PURE__*/React.createElement(\"rect\",{x:423.715,y:264.839,style:{fill:\"#FFFFFF\"},width:3.495,height:5.307}),/*#__PURE__*/React.createElement(\"rect\",{x:418.504,y:272.635,style:{fill:\"#FFFFFF\"},width:3.495,height:5.307}),/*#__PURE__*/React.createElement(\"rect\",{x:423.715,y:272.635,style:{fill:\"#FFFFFF\"},width:3.495,height:5.307}),/*#__PURE__*/React.createElement(\"rect\",{x:418.504,y:280.431,style:{fill:\"#FFFFFF\"},width:3.495,height:5.307}),/*#__PURE__*/React.createElement(\"rect\",{x:423.715,y:280.431,style:{fill:\"#FFFFFF\"},width:3.495,height:5.307}),/*#__PURE__*/React.createElement(\"rect\",{x:418.504,y:288.227,style:{fill:\"#FFFFFF\"},width:3.495,height:5.307}),/*#__PURE__*/React.createElement(\"rect\",{x:423.715,y:288.227,style:{fill:\"#FFFFFF\"},width:3.495,height:5.307}),/*#__PURE__*/React.createElement(\"rect\",{x:418.504,y:296.023,style:{fill:\"#FFFFFF\"},width:3.495,height:5.307}),/*#__PURE__*/React.createElement(\"rect\",{x:423.715,y:296.023,style:{fill:\"#FFFFFF\"},width:3.495,height:5.307}),/*#__PURE__*/React.createElement(\"rect\",{x:418.504,y:303.819,style:{fill:\"#FFFFFF\"},width:3.495,height:5.307}),/*#__PURE__*/React.createElement(\"rect\",{x:423.715,y:303.819,style:{fill:\"#FFFFFF\"},width:3.495,height:5.307}),/*#__PURE__*/React.createElement(\"rect\",{x:418.504,y:311.615,style:{fill:\"#FFFFFF\"},width:3.495,height:5.307}),/*#__PURE__*/React.createElement(\"rect\",{x:423.715,y:311.615,style:{fill:\"#FFFFFF\"},width:3.495,height:5.307}),/*#__PURE__*/React.createElement(\"rect\",{x:418.504,y:319.411,style:{fill:\"#FFFFFF\"},width:3.495,height:5.307}),/*#__PURE__*/React.createElement(\"rect\",{x:423.715,y:319.411,style:{fill:\"#FFFFFF\"},width:3.495,height:5.307})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"rect\",{x:430.173,y:280.431,style:{fill:\"#FFFFFF\"},width:3.495,height:5.307}),/*#__PURE__*/React.createElement(\"rect\",{x:430.173,y:288.227,style:{fill:\"#FFFFFF\"},width:3.495,height:5.307}),/*#__PURE__*/React.createElement(\"rect\",{x:430.173,y:296.023,style:{fill:\"#FFFFFF\"},width:3.495,height:5.307}),/*#__PURE__*/React.createElement(\"rect\",{x:430.173,y:303.819,style:{fill:\"#FFFFFF\"},width:3.495,height:5.307}),/*#__PURE__*/React.createElement(\"rect\",{x:430.173,y:311.615,style:{fill:\"#FFFFFF\"},width:3.495,height:5.307}),/*#__PURE__*/React.createElement(\"rect\",{x:430.173,y:319.411,style:{fill:\"#FFFFFF\"},width:3.495,height:5.307}),/*#__PURE__*/React.createElement(\"rect\",{x:418.504,y:327.114,style:{fill:\"#FFFFFF\"},width:3.495,height:5.307}),/*#__PURE__*/React.createElement(\"rect\",{x:423.715,y:327.114,style:{fill:\"#FFFFFF\"},width:3.495,height:5.307}),/*#__PURE__*/React.createElement(\"rect\",{x:430.173,y:327.114,style:{fill:\"#FFFFFF\"},width:3.495,height:5.307}),/*#__PURE__*/React.createElement(\"rect\",{x:418.504,y:334.817,style:{fill:\"#FFFFFF\"},width:3.495,height:5.307}),/*#__PURE__*/React.createElement(\"rect\",{x:423.715,y:334.817,style:{fill:\"#FFFFFF\"},width:3.495,height:5.307}),/*#__PURE__*/React.createElement(\"rect\",{x:430.173,y:334.817,style:{fill:\"#FFFFFF\"},width:3.495,height:5.307}),/*#__PURE__*/React.createElement(\"rect\",{x:418.504,y:342.52,style:{fill:\"#FFFFFF\"},width:3.495,height:5.307}),/*#__PURE__*/React.createElement(\"rect\",{x:423.715,y:342.52,style:{fill:\"#FFFFFF\"},width:3.495,height:5.307}),/*#__PURE__*/React.createElement(\"rect\",{x:430.173,y:342.52,style:{fill:\"#FFFFFF\"},width:3.495,height:5.307}),/*#__PURE__*/React.createElement(\"rect\",{x:418.504,y:350.223,style:{fill:\"#FFFFFF\"},width:3.495,height:5.307}),/*#__PURE__*/React.createElement(\"rect\",{x:423.715,y:350.223,style:{fill:\"#FFFFFF\"},width:3.495,height:5.307}),/*#__PURE__*/React.createElement(\"rect\",{x:430.173,y:350.223,style:{fill:\"#FFFFFF\"},width:3.495,height:5.307}),/*#__PURE__*/React.createElement(\"rect\",{x:418.504,y:357.926,style:{fill:\"#FFFFFF\"},width:3.495,height:5.307}),/*#__PURE__*/React.createElement(\"rect\",{x:423.715,y:357.926,style:{fill:\"#FFFFFF\"},width:3.495,height:5.307}),/*#__PURE__*/React.createElement(\"rect\",{x:430.173,y:357.926,style:{fill:\"#FFFFFF\"},width:3.495,height:5.307})),/*#__PURE__*/React.createElement(\"rect\",{x:463.35,y:272.414,style:{fill:\"#FFFFFF\"},width:1.887,height:4.648}),/*#__PURE__*/React.createElement(\"rect\",{x:466.62,y:272.414,style:{fill:\"#FFFFFF\"},width:1.887,height:4.648}),/*#__PURE__*/React.createElement(\"rect\",{x:463.35,y:279.408,style:{fill:\"#FFFFFF\"},width:1.887,height:4.648}),/*#__PURE__*/React.createElement(\"rect\",{x:466.62,y:279.408,style:{fill:\"#FFFFFF\"},width:1.887,height:4.648}),/*#__PURE__*/React.createElement(\"rect\",{x:463.35,y:286.402,style:{fill:\"#FFFFFF\"},width:1.887,height:4.649}),/*#__PURE__*/React.createElement(\"rect\",{x:466.62,y:286.402,style:{fill:\"#FFFFFF\"},width:1.887,height:4.649}),/*#__PURE__*/React.createElement(\"rect\",{x:463.35,y:293.396,style:{fill:\"#FFFFFF\"},width:1.887,height:4.648}),/*#__PURE__*/React.createElement(\"rect\",{x:466.62,y:293.396,style:{fill:\"#FFFFFF\"},width:1.887,height:4.648}),/*#__PURE__*/React.createElement(\"rect\",{x:463.35,y:300.564,style:{fill:\"#FFFFFF\"},width:1.887,height:4.648}),/*#__PURE__*/React.createElement(\"rect\",{x:466.62,y:300.564,style:{fill:\"#FFFFFF\"},width:1.887,height:4.648}),/*#__PURE__*/React.createElement(\"rect\",{x:463.35,y:307.731,style:{fill:\"#FFFFFF\"},width:1.887,height:4.648}),/*#__PURE__*/React.createElement(\"rect\",{x:466.62,y:307.731,style:{fill:\"#FFFFFF\"},width:1.887,height:4.648}),/*#__PURE__*/React.createElement(\"rect\",{x:463.35,y:314.898,style:{fill:\"#FFFFFF\"},width:1.887,height:4.649}),/*#__PURE__*/React.createElement(\"rect\",{x:466.62,y:314.898,style:{fill:\"#FFFFFF\"},width:1.887,height:4.649}),/*#__PURE__*/React.createElement(\"rect\",{x:463.35,y:322.066,style:{fill:\"#FFFFFF\"},width:1.887,height:4.648}),/*#__PURE__*/React.createElement(\"rect\",{x:466.62,y:322.066,style:{fill:\"#FFFFFF\"},width:1.887,height:4.648}),/*#__PURE__*/React.createElement(\"rect\",{x:463.35,y:329.309,style:{fill:\"#FFFFFF\"},width:1.887,height:4.648}),/*#__PURE__*/React.createElement(\"rect\",{x:466.62,y:329.309,style:{fill:\"#FFFFFF\"},width:1.887,height:4.648}),/*#__PURE__*/React.createElement(\"rect\",{x:463.35,y:336.553,style:{fill:\"#FFFFFF\"},width:1.887,height:4.648}),/*#__PURE__*/React.createElement(\"rect\",{x:466.62,y:336.553,style:{fill:\"#FFFFFF\"},width:1.887,height:4.648}),/*#__PURE__*/React.createElement(\"rect\",{x:463.35,y:343.796,style:{fill:\"#FFFFFF\"},width:1.887,height:4.648}),/*#__PURE__*/React.createElement(\"rect\",{x:466.62,y:343.796,style:{fill:\"#FFFFFF\"},width:1.887,height:4.648}),/*#__PURE__*/React.createElement(\"rect\",{x:463.35,y:351.039,style:{fill:\"#FFFFFF\"},width:1.887,height:4.649}),/*#__PURE__*/React.createElement(\"rect\",{x:466.62,y:351.039,style:{fill:\"#FFFFFF\"},width:1.887,height:4.649}),/*#__PURE__*/React.createElement(\"rect\",{x:470.344,y:272.414,style:{fill:\"#FFFFFF\"},width:1.887,height:4.648}),/*#__PURE__*/React.createElement(\"rect\",{x:473.615,y:272.414,style:{fill:\"#FFFFFF\"},width:1.887,height:4.648}),/*#__PURE__*/React.createElement(\"rect\",{x:470.344,y:279.408,style:{fill:\"#FFFFFF\"},width:1.887,height:4.648}),/*#__PURE__*/React.createElement(\"rect\",{x:473.615,y:279.408,style:{fill:\"#FFFFFF\"},width:1.887,height:4.648}),/*#__PURE__*/React.createElement(\"rect\",{x:470.344,y:286.402,style:{fill:\"#FFFFFF\"},width:1.887,height:4.649}),/*#__PURE__*/React.createElement(\"rect\",{x:473.615,y:286.402,style:{fill:\"#FFFFFF\"},width:1.887,height:4.649}),/*#__PURE__*/React.createElement(\"rect\",{x:470.344,y:293.396,style:{fill:\"#FFFFFF\"},width:1.887,height:4.648}),/*#__PURE__*/React.createElement(\"rect\",{x:473.615,y:293.396,style:{fill:\"#FFFFFF\"},width:1.887,height:4.648}),/*#__PURE__*/React.createElement(\"rect\",{x:470.344,y:300.564,style:{fill:\"#FFFFFF\"},width:1.887,height:4.648}),/*#__PURE__*/React.createElement(\"rect\",{x:473.615,y:300.564,style:{fill:\"#FFFFFF\"},width:1.887,height:4.648}),/*#__PURE__*/React.createElement(\"rect\",{x:470.344,y:307.731,style:{fill:\"#FFFFFF\"},width:1.887,height:4.648}),/*#__PURE__*/React.createElement(\"rect\",{x:473.615,y:307.731,style:{fill:\"#FFFFFF\"},width:1.887,height:4.648}),/*#__PURE__*/React.createElement(\"rect\",{x:470.344,y:314.898,style:{fill:\"#FFFFFF\"},width:1.887,height:4.649}),/*#__PURE__*/React.createElement(\"rect\",{x:473.615,y:314.898,style:{fill:\"#FFFFFF\"},width:1.887,height:4.649}),/*#__PURE__*/React.createElement(\"rect\",{x:470.344,y:322.066,style:{fill:\"#FFFFFF\"},width:1.887,height:4.648}),/*#__PURE__*/React.createElement(\"rect\",{x:473.615,y:322.066,style:{fill:\"#FFFFFF\"},width:1.887,height:4.648}),/*#__PURE__*/React.createElement(\"rect\",{x:470.344,y:329.309,style:{fill:\"#FFFFFF\"},width:1.887,height:4.648}),/*#__PURE__*/React.createElement(\"rect\",{x:473.615,y:329.309,style:{fill:\"#FFFFFF\"},width:1.887,height:4.648}),/*#__PURE__*/React.createElement(\"rect\",{x:470.344,y:336.553,style:{fill:\"#FFFFFF\"},width:1.887,height:4.648}),/*#__PURE__*/React.createElement(\"rect\",{x:473.615,y:336.553,style:{fill:\"#FFFFFF\"},width:1.887,height:4.648}),/*#__PURE__*/React.createElement(\"rect\",{x:470.344,y:343.796,style:{fill:\"#FFFFFF\"},width:1.887,height:4.648}),/*#__PURE__*/React.createElement(\"rect\",{x:473.615,y:343.796,style:{fill:\"#FFFFFF\"},width:1.887,height:4.648}),/*#__PURE__*/React.createElement(\"rect\",{x:470.344,y:351.039,style:{fill:\"#FFFFFF\"},width:1.887,height:4.649}),/*#__PURE__*/React.createElement(\"rect\",{x:473.615,y:351.039,style:{fill:\"#FFFFFF\"},width:1.887,height:4.649}))),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"polygon\",{style:{fill:\"#DBDBDB\"},points:\"702.056,383.543 608.936,383.543 608.936,283.849 620.089,283.849 620.089,312.993  622.96,312.993 622.96,296.498 637.142,296.498 637.142,322.622 639.019,322.622 639.019,261.311 651.345,261.311  651.345,278.135 657.666,278.135 657.666,299.077 659.58,299.077 659.58,285.908 670.786,285.908 670.786,325.201  674.062,325.201 674.062,293.262 684.311,293.262 684.311,268.993 691.278,268.993 699.339,269.075 699.339,316.467  702.053,316.467  \"}),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"rect\",{x:610.303,y:287.515,style:{fill:\"#FFFFFF\"},width:1.887,height:5.572}),/*#__PURE__*/React.createElement(\"rect\",{x:613.573,y:287.515,style:{fill:\"#FFFFFF\"},width:1.887,height:5.572}),/*#__PURE__*/React.createElement(\"rect\",{x:616.844,y:287.515,style:{fill:\"#FFFFFF\"},width:1.887,height:5.572}),/*#__PURE__*/React.createElement(\"rect\",{x:610.303,y:295.899,style:{fill:\"#FFFFFF\"},width:1.887,height:5.572}),/*#__PURE__*/React.createElement(\"rect\",{x:613.573,y:295.899,style:{fill:\"#FFFFFF\"},width:1.887,height:5.572}),/*#__PURE__*/React.createElement(\"rect\",{x:616.844,y:295.899,style:{fill:\"#FFFFFF\"},width:1.887,height:5.572}),/*#__PURE__*/React.createElement(\"rect\",{x:610.303,y:304.282,style:{fill:\"#FFFFFF\"},width:1.887,height:5.572}),/*#__PURE__*/React.createElement(\"rect\",{x:613.573,y:304.282,style:{fill:\"#FFFFFF\"},width:1.887,height:5.572}),/*#__PURE__*/React.createElement(\"rect\",{x:616.844,y:304.282,style:{fill:\"#FFFFFF\"},width:1.887,height:5.572}),/*#__PURE__*/React.createElement(\"rect\",{x:610.303,y:312.666,style:{fill:\"#FFFFFF\"},width:1.887,height:5.572}),/*#__PURE__*/React.createElement(\"rect\",{x:613.573,y:312.666,style:{fill:\"#FFFFFF\"},width:1.887,height:5.572}),/*#__PURE__*/React.createElement(\"rect\",{x:616.844,y:312.666,style:{fill:\"#FFFFFF\"},width:1.887,height:5.572}),/*#__PURE__*/React.createElement(\"rect\",{x:675.637,y:297.24,style:{fill:\"#FFFFFF\"},width:1.887,height:4.648}),/*#__PURE__*/React.createElement(\"rect\",{x:678.908,y:297.24,style:{fill:\"#FFFFFF\"},width:1.887,height:4.648}),/*#__PURE__*/React.createElement(\"rect\",{x:682.178,y:297.24,style:{fill:\"#FFFFFF\"},width:1.887,height:4.648}),/*#__PURE__*/React.createElement(\"rect\",{x:675.637,y:304.234,style:{fill:\"#FFFFFF\"},width:1.887,height:4.648}),/*#__PURE__*/React.createElement(\"rect\",{x:678.908,y:304.234,style:{fill:\"#FFFFFF\"},width:1.887,height:4.648}),/*#__PURE__*/React.createElement(\"rect\",{x:682.178,y:304.234,style:{fill:\"#FFFFFF\"},width:1.887,height:4.648}),/*#__PURE__*/React.createElement(\"rect\",{x:675.637,y:311.228,style:{fill:\"#FFFFFF\"},width:1.887,height:4.648}),/*#__PURE__*/React.createElement(\"rect\",{x:678.908,y:311.228,style:{fill:\"#FFFFFF\"},width:1.887,height:4.648}),/*#__PURE__*/React.createElement(\"rect\",{x:682.178,y:311.228,style:{fill:\"#FFFFFF\"},width:1.887,height:4.648}),/*#__PURE__*/React.createElement(\"rect\",{x:675.637,y:318.222,style:{fill:\"#FFFFFF\"},width:1.887,height:4.648}),/*#__PURE__*/React.createElement(\"rect\",{x:678.908,y:318.222,style:{fill:\"#FFFFFF\"},width:1.887,height:4.648}),/*#__PURE__*/React.createElement(\"rect\",{x:682.178,y:318.222,style:{fill:\"#FFFFFF\"},width:1.887,height:4.648}),/*#__PURE__*/React.createElement(\"rect\",{x:675.637,y:325.389,style:{fill:\"#FFFFFF\"},width:1.887,height:4.648}),/*#__PURE__*/React.createElement(\"rect\",{x:678.908,y:325.389,style:{fill:\"#FFFFFF\"},width:1.887,height:4.648}),/*#__PURE__*/React.createElement(\"rect\",{x:682.178,y:325.389,style:{fill:\"#FFFFFF\"},width:1.887,height:4.648}),/*#__PURE__*/React.createElement(\"rect\",{x:675.637,y:332.557,style:{fill:\"#FFFFFF\"},width:1.887,height:4.648}),/*#__PURE__*/React.createElement(\"rect\",{x:678.908,y:332.557,style:{fill:\"#FFFFFF\"},width:1.887,height:4.648}),/*#__PURE__*/React.createElement(\"rect\",{x:682.178,y:332.557,style:{fill:\"#FFFFFF\"},width:1.887,height:4.648}),/*#__PURE__*/React.createElement(\"rect\",{x:675.637,y:339.724,style:{fill:\"#FFFFFF\"},width:1.887,height:4.648}),/*#__PURE__*/React.createElement(\"rect\",{x:678.908,y:339.724,style:{fill:\"#FFFFFF\"},width:1.887,height:4.648}),/*#__PURE__*/React.createElement(\"rect\",{x:682.178,y:339.724,style:{fill:\"#FFFFFF\"},width:1.887,height:4.648}),/*#__PURE__*/React.createElement(\"rect\",{x:675.637,y:346.891,style:{fill:\"#FFFFFF\"},width:1.887,height:4.649}),/*#__PURE__*/React.createElement(\"rect\",{x:678.908,y:346.891,style:{fill:\"#FFFFFF\"},width:1.887,height:4.649}),/*#__PURE__*/React.createElement(\"rect\",{x:682.178,y:346.891,style:{fill:\"#FFFFFF\"},width:1.887,height:4.649}),/*#__PURE__*/React.createElement(\"rect\",{x:624.57,y:300.068,style:{fill:\"#FFFFFF\"},width:10.864,height:3.485}),/*#__PURE__*/React.createElement(\"rect\",{x:624.57,y:306.83,style:{fill:\"#FFFFFF\"},width:10.864,height:3.484}),/*#__PURE__*/React.createElement(\"rect\",{x:624.57,y:313.591,style:{fill:\"#FFFFFF\"},width:10.864,height:3.485}),/*#__PURE__*/React.createElement(\"rect\",{x:624.57,y:320.352,style:{fill:\"#FFFFFF\"},width:10.864,height:3.485}),/*#__PURE__*/React.createElement(\"rect\",{x:624.57,y:327.114,style:{fill:\"#FFFFFF\"},width:10.864,height:3.485}),/*#__PURE__*/React.createElement(\"rect\",{x:624.57,y:333.875,style:{fill:\"#FFFFFF\"},width:10.864,height:3.485}),/*#__PURE__*/React.createElement(\"rect\",{x:624.57,y:340.637,style:{fill:\"#FFFFFF\"},width:10.864,height:3.484}),/*#__PURE__*/React.createElement(\"rect\",{x:624.57,y:347.398,style:{fill:\"#FFFFFF\"},width:10.864,height:3.485}),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"rect\",{x:662.857,y:289.064,style:{fill:\"#FFFFFF\"},width:3.355,height:3.365}),/*#__PURE__*/React.createElement(\"rect\",{x:662.857,y:295.593,style:{fill:\"#FFFFFF\"},width:3.355,height:3.365}),/*#__PURE__*/React.createElement(\"rect\",{x:662.857,y:302.123,style:{fill:\"#FFFFFF\"},width:3.355,height:3.365}),/*#__PURE__*/React.createElement(\"rect\",{x:662.857,y:308.652,style:{fill:\"#FFFFFF\"},width:3.355,height:3.365}),/*#__PURE__*/React.createElement(\"rect\",{x:662.857,y:315.182,style:{fill:\"#FFFFFF\"},width:3.355,height:3.365}),/*#__PURE__*/React.createElement(\"rect\",{x:662.857,y:321.711,style:{fill:\"#FFFFFF\"},width:3.355,height:3.365}),/*#__PURE__*/React.createElement(\"rect\",{x:662.857,y:328.241,style:{fill:\"#FFFFFF\"},width:3.355,height:3.365}),/*#__PURE__*/React.createElement(\"rect\",{x:662.857,y:334.77,style:{fill:\"#FFFFFF\"},width:3.355,height:3.365})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"rect\",{x:667.422,y:289.064,style:{fill:\"#FFFFFF\"},width:3.355,height:3.365}),/*#__PURE__*/React.createElement(\"rect\",{x:667.422,y:295.593,style:{fill:\"#FFFFFF\"},width:3.355,height:3.365}),/*#__PURE__*/React.createElement(\"rect\",{x:667.422,y:302.123,style:{fill:\"#FFFFFF\"},width:3.355,height:3.365}),/*#__PURE__*/React.createElement(\"rect\",{x:667.422,y:308.652,style:{fill:\"#FFFFFF\"},width:3.355,height:3.365}),/*#__PURE__*/React.createElement(\"rect\",{x:667.422,y:315.182,style:{fill:\"#FFFFFF\"},width:3.355,height:3.365}),/*#__PURE__*/React.createElement(\"rect\",{x:667.422,y:321.711,style:{fill:\"#FFFFFF\"},width:3.355,height:3.365}),/*#__PURE__*/React.createElement(\"rect\",{x:667.422,y:328.241,style:{fill:\"#FFFFFF\"},width:3.355,height:3.365}),/*#__PURE__*/React.createElement(\"rect\",{x:667.422,y:334.77,style:{fill:\"#FFFFFF\"},width:3.355,height:3.365})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"rect\",{x:640.889,y:264.839,style:{fill:\"#FFFFFF\"},width:3.495,height:5.307}),/*#__PURE__*/React.createElement(\"rect\",{x:646.1,y:264.839,style:{fill:\"#FFFFFF\"},width:3.495,height:5.307}),/*#__PURE__*/React.createElement(\"rect\",{x:640.889,y:272.635,style:{fill:\"#FFFFFF\"},width:3.495,height:5.307}),/*#__PURE__*/React.createElement(\"rect\",{x:646.1,y:272.635,style:{fill:\"#FFFFFF\"},width:3.495,height:5.307}),/*#__PURE__*/React.createElement(\"rect\",{x:640.889,y:280.431,style:{fill:\"#FFFFFF\"},width:3.495,height:5.307}),/*#__PURE__*/React.createElement(\"rect\",{x:646.1,y:280.431,style:{fill:\"#FFFFFF\"},width:3.495,height:5.307}),/*#__PURE__*/React.createElement(\"rect\",{x:640.889,y:288.227,style:{fill:\"#FFFFFF\"},width:3.495,height:5.307}),/*#__PURE__*/React.createElement(\"rect\",{x:646.1,y:288.227,style:{fill:\"#FFFFFF\"},width:3.495,height:5.307}),/*#__PURE__*/React.createElement(\"rect\",{x:640.889,y:296.023,style:{fill:\"#FFFFFF\"},width:3.495,height:5.307}),/*#__PURE__*/React.createElement(\"rect\",{x:646.1,y:296.023,style:{fill:\"#FFFFFF\"},width:3.495,height:5.307}),/*#__PURE__*/React.createElement(\"rect\",{x:640.889,y:303.819,style:{fill:\"#FFFFFF\"},width:3.495,height:5.307}),/*#__PURE__*/React.createElement(\"rect\",{x:646.1,y:303.819,style:{fill:\"#FFFFFF\"},width:3.495,height:5.307}),/*#__PURE__*/React.createElement(\"rect\",{x:640.889,y:311.615,style:{fill:\"#FFFFFF\"},width:3.495,height:5.307}),/*#__PURE__*/React.createElement(\"rect\",{x:646.1,y:311.615,style:{fill:\"#FFFFFF\"},width:3.495,height:5.307}),/*#__PURE__*/React.createElement(\"rect\",{x:640.889,y:319.411,style:{fill:\"#FFFFFF\"},width:3.495,height:5.307}),/*#__PURE__*/React.createElement(\"rect\",{x:646.1,y:319.411,style:{fill:\"#FFFFFF\"},width:3.495,height:5.307})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"rect\",{x:652.558,y:280.431,style:{fill:\"#FFFFFF\"},width:3.495,height:5.307}),/*#__PURE__*/React.createElement(\"rect\",{x:652.558,y:288.227,style:{fill:\"#FFFFFF\"},width:3.495,height:5.307}),/*#__PURE__*/React.createElement(\"rect\",{x:652.558,y:296.023,style:{fill:\"#FFFFFF\"},width:3.495,height:5.307}),/*#__PURE__*/React.createElement(\"rect\",{x:652.558,y:303.819,style:{fill:\"#FFFFFF\"},width:3.495,height:5.307}),/*#__PURE__*/React.createElement(\"rect\",{x:652.558,y:311.615,style:{fill:\"#FFFFFF\"},width:3.495,height:5.307}),/*#__PURE__*/React.createElement(\"rect\",{x:652.558,y:319.411,style:{fill:\"#FFFFFF\"},width:3.495,height:5.307}),/*#__PURE__*/React.createElement(\"rect\",{x:640.889,y:327.114,style:{fill:\"#FFFFFF\"},width:3.495,height:5.307}),/*#__PURE__*/React.createElement(\"rect\",{x:646.1,y:327.114,style:{fill:\"#FFFFFF\"},width:3.495,height:5.307}),/*#__PURE__*/React.createElement(\"rect\",{x:652.558,y:327.114,style:{fill:\"#FFFFFF\"},width:3.495,height:5.307}),/*#__PURE__*/React.createElement(\"rect\",{x:640.889,y:334.817,style:{fill:\"#FFFFFF\"},width:3.495,height:5.307}),/*#__PURE__*/React.createElement(\"rect\",{x:646.1,y:334.817,style:{fill:\"#FFFFFF\"},width:3.495,height:5.307}),/*#__PURE__*/React.createElement(\"rect\",{x:652.558,y:334.817,style:{fill:\"#FFFFFF\"},width:3.495,height:5.307}),/*#__PURE__*/React.createElement(\"rect\",{x:640.889,y:342.52,style:{fill:\"#FFFFFF\"},width:3.495,height:5.307}),/*#__PURE__*/React.createElement(\"rect\",{x:646.1,y:342.52,style:{fill:\"#FFFFFF\"},width:3.495,height:5.307}),/*#__PURE__*/React.createElement(\"rect\",{x:652.558,y:342.52,style:{fill:\"#FFFFFF\"},width:3.495,height:5.307}),/*#__PURE__*/React.createElement(\"rect\",{x:640.889,y:350.223,style:{fill:\"#FFFFFF\"},width:3.495,height:5.307}),/*#__PURE__*/React.createElement(\"rect\",{x:646.1,y:350.223,style:{fill:\"#FFFFFF\"},width:3.495,height:5.307}),/*#__PURE__*/React.createElement(\"rect\",{x:652.558,y:350.223,style:{fill:\"#FFFFFF\"},width:3.495,height:5.307}),/*#__PURE__*/React.createElement(\"rect\",{x:640.889,y:357.926,style:{fill:\"#FFFFFF\"},width:3.495,height:5.307}),/*#__PURE__*/React.createElement(\"rect\",{x:646.1,y:357.926,style:{fill:\"#FFFFFF\"},width:3.495,height:5.307}),/*#__PURE__*/React.createElement(\"rect\",{x:652.558,y:357.926,style:{fill:\"#FFFFFF\"},width:3.495,height:5.307})),/*#__PURE__*/React.createElement(\"rect\",{x:685.735,y:272.414,style:{fill:\"#FFFFFF\"},width:1.887,height:4.648}),/*#__PURE__*/React.createElement(\"rect\",{x:689.005,y:272.414,style:{fill:\"#FFFFFF\"},width:1.887,height:4.648}),/*#__PURE__*/React.createElement(\"rect\",{x:685.735,y:279.408,style:{fill:\"#FFFFFF\"},width:1.887,height:4.648}),/*#__PURE__*/React.createElement(\"rect\",{x:689.005,y:279.408,style:{fill:\"#FFFFFF\"},width:1.887,height:4.648}),/*#__PURE__*/React.createElement(\"rect\",{x:685.735,y:286.402,style:{fill:\"#FFFFFF\"},width:1.887,height:4.649}),/*#__PURE__*/React.createElement(\"rect\",{x:689.005,y:286.402,style:{fill:\"#FFFFFF\"},width:1.887,height:4.649}),/*#__PURE__*/React.createElement(\"rect\",{x:685.735,y:293.396,style:{fill:\"#FFFFFF\"},width:1.887,height:4.648}),/*#__PURE__*/React.createElement(\"rect\",{x:689.005,y:293.396,style:{fill:\"#FFFFFF\"},width:1.887,height:4.648}),/*#__PURE__*/React.createElement(\"rect\",{x:685.735,y:300.564,style:{fill:\"#FFFFFF\"},width:1.887,height:4.648}),/*#__PURE__*/React.createElement(\"rect\",{x:689.005,y:300.564,style:{fill:\"#FFFFFF\"},width:1.887,height:4.648}),/*#__PURE__*/React.createElement(\"rect\",{x:685.735,y:307.731,style:{fill:\"#FFFFFF\"},width:1.887,height:4.648}),/*#__PURE__*/React.createElement(\"rect\",{x:689.005,y:307.731,style:{fill:\"#FFFFFF\"},width:1.887,height:4.648}),/*#__PURE__*/React.createElement(\"rect\",{x:685.735,y:314.898,style:{fill:\"#FFFFFF\"},width:1.887,height:4.649}),/*#__PURE__*/React.createElement(\"rect\",{x:689.005,y:314.898,style:{fill:\"#FFFFFF\"},width:1.887,height:4.649}),/*#__PURE__*/React.createElement(\"rect\",{x:685.735,y:322.066,style:{fill:\"#FFFFFF\"},width:1.887,height:4.648}),/*#__PURE__*/React.createElement(\"rect\",{x:689.005,y:322.066,style:{fill:\"#FFFFFF\"},width:1.887,height:4.648}),/*#__PURE__*/React.createElement(\"rect\",{x:685.735,y:329.309,style:{fill:\"#FFFFFF\"},width:1.887,height:4.648}),/*#__PURE__*/React.createElement(\"rect\",{x:689.005,y:329.309,style:{fill:\"#FFFFFF\"},width:1.887,height:4.648}),/*#__PURE__*/React.createElement(\"rect\",{x:685.735,y:336.553,style:{fill:\"#FFFFFF\"},width:1.887,height:4.648}),/*#__PURE__*/React.createElement(\"rect\",{x:689.005,y:336.553,style:{fill:\"#FFFFFF\"},width:1.887,height:4.648}),/*#__PURE__*/React.createElement(\"rect\",{x:685.735,y:343.796,style:{fill:\"#FFFFFF\"},width:1.887,height:4.648}),/*#__PURE__*/React.createElement(\"rect\",{x:689.005,y:343.796,style:{fill:\"#FFFFFF\"},width:1.887,height:4.648}),/*#__PURE__*/React.createElement(\"rect\",{x:685.735,y:351.039,style:{fill:\"#FFFFFF\"},width:1.887,height:4.649}),/*#__PURE__*/React.createElement(\"rect\",{x:689.005,y:351.039,style:{fill:\"#FFFFFF\"},width:1.887,height:4.649}),/*#__PURE__*/React.createElement(\"rect\",{x:692.729,y:272.414,style:{fill:\"#FFFFFF\"},width:1.887,height:4.648}),/*#__PURE__*/React.createElement(\"rect\",{x:696,y:272.414,style:{fill:\"#FFFFFF\"},width:1.887,height:4.648}),/*#__PURE__*/React.createElement(\"rect\",{x:692.729,y:279.408,style:{fill:\"#FFFFFF\"},width:1.887,height:4.648}),/*#__PURE__*/React.createElement(\"rect\",{x:696,y:279.408,style:{fill:\"#FFFFFF\"},width:1.887,height:4.648}),/*#__PURE__*/React.createElement(\"rect\",{x:692.729,y:286.402,style:{fill:\"#FFFFFF\"},width:1.887,height:4.649}),/*#__PURE__*/React.createElement(\"rect\",{x:696,y:286.402,style:{fill:\"#FFFFFF\"},width:1.887,height:4.649}),/*#__PURE__*/React.createElement(\"rect\",{x:692.729,y:293.396,style:{fill:\"#FFFFFF\"},width:1.887,height:4.648}),/*#__PURE__*/React.createElement(\"rect\",{x:696,y:293.396,style:{fill:\"#FFFFFF\"},width:1.887,height:4.648}),/*#__PURE__*/React.createElement(\"rect\",{x:692.729,y:300.564,style:{fill:\"#FFFFFF\"},width:1.887,height:4.648}),/*#__PURE__*/React.createElement(\"rect\",{x:696,y:300.564,style:{fill:\"#FFFFFF\"},width:1.887,height:4.648}),/*#__PURE__*/React.createElement(\"rect\",{x:692.729,y:307.731,style:{fill:\"#FFFFFF\"},width:1.887,height:4.648}),/*#__PURE__*/React.createElement(\"rect\",{x:696,y:307.731,style:{fill:\"#FFFFFF\"},width:1.887,height:4.648}),/*#__PURE__*/React.createElement(\"rect\",{x:692.729,y:314.898,style:{fill:\"#FFFFFF\"},width:1.887,height:4.649}),/*#__PURE__*/React.createElement(\"rect\",{x:696,y:314.898,style:{fill:\"#FFFFFF\"},width:1.887,height:4.649}),/*#__PURE__*/React.createElement(\"rect\",{x:692.729,y:322.066,style:{fill:\"#FFFFFF\"},width:1.887,height:4.648}),/*#__PURE__*/React.createElement(\"rect\",{x:696,y:322.066,style:{fill:\"#FFFFFF\"},width:1.887,height:4.648}),/*#__PURE__*/React.createElement(\"rect\",{x:692.729,y:329.309,style:{fill:\"#FFFFFF\"},width:1.887,height:4.648}),/*#__PURE__*/React.createElement(\"rect\",{x:696,y:329.309,style:{fill:\"#FFFFFF\"},width:1.887,height:4.648}),/*#__PURE__*/React.createElement(\"rect\",{x:692.729,y:336.553,style:{fill:\"#FFFFFF\"},width:1.887,height:4.648}),/*#__PURE__*/React.createElement(\"rect\",{x:696,y:336.553,style:{fill:\"#FFFFFF\"},width:1.887,height:4.648}),/*#__PURE__*/React.createElement(\"rect\",{x:692.729,y:343.796,style:{fill:\"#FFFFFF\"},width:1.887,height:4.648}),/*#__PURE__*/React.createElement(\"rect\",{x:696,y:343.796,style:{fill:\"#FFFFFF\"},width:1.887,height:4.648}),/*#__PURE__*/React.createElement(\"rect\",{x:692.729,y:351.039,style:{fill:\"#FFFFFF\"},width:1.887,height:4.649}),/*#__PURE__*/React.createElement(\"rect\",{x:696,y:351.039,style:{fill:\"#FFFFFF\"},width:1.887,height:4.649}))))),/*#__PURE__*/React.createElement(\"g\",{id:\"Background_Simple\",style:{display:\"none\"}},/*#__PURE__*/React.createElement(\"path\",{style:{display:\"inline\",fill:\"#DBDBDB\"},d:\"M139.335,272.825l1.607-1.621c0.111,0.182,0.193,0.383,0.193,0.612 c0,0.661-0.535,1.196-1.196,1.196C139.713,273.012,139.514,272.933,139.335,272.825z M147.122,270.62 c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C148.318,271.155,147.782,270.62,147.122,270.62z M150.669,274.22l0.186,0.019c-0.048-0.006-0.091-0.029-0.141-0.029 C150.698,274.211,150.684,274.22,150.669,274.22z M144.726,268.224c0-0.237-0.087-0.446-0.206-0.632l-1.613,1.628 c0.184,0.116,0.389,0.2,0.623,0.2C144.19,269.42,144.726,268.884,144.726,268.224z M148.318,264.632 c0-0.246-0.092-0.461-0.219-0.651l-1.619,1.634c0.188,0.124,0.4,0.213,0.642,0.213 C147.782,265.828,148.318,265.292,148.318,264.632z M154.305,270.62c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C155.502,271.155,154.966,270.62,154.305,270.62z  M154.305,263.436c-0.661,0-1.196,0.536-1.196,1.196c0,0.66,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C155.502,263.971,154.966,263.436,154.305,263.436z M150.714,267.028c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C151.91,267.563,151.374,267.028,150.714,267.028z  M151.91,261.04c0-0.254-0.097-0.477-0.232-0.671l-1.626,1.641c0.192,0.132,0.412,0.226,0.662,0.226 C151.374,262.236,151.91,261.701,151.91,261.04z M155.502,257.448c0-0.263-0.102-0.493-0.246-0.691l-1.632,1.647 c0.196,0.14,0.423,0.24,0.682,0.24C154.966,258.644,155.502,258.109,155.502,257.448z M161.489,270.62 c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C162.686,271.155,162.15,270.62,161.489,270.62z M157.897,274.211c-0.462,0-0.851,0.27-1.05,0.653l2.183,0.228 C158.889,274.589,158.446,274.211,157.897,274.211z M161.489,263.436c-0.661,0-1.196,0.536-1.196,1.196 c0,0.66,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C162.686,263.971,162.15,263.436,161.489,263.436z  M157.897,267.028c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C159.094,267.563,158.558,267.028,157.897,267.028z M161.489,256.252c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C162.686,256.787,162.15,256.252,161.489,256.252z  M157.897,259.844c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C159.094,260.379,158.558,259.844,157.897,259.844z M159.094,253.856c0-0.271-0.107-0.51-0.259-0.71l-1.639,1.654 c0.199,0.148,0.434,0.253,0.701,0.253C158.558,255.052,159.094,254.517,159.094,253.856z M162.686,250.264 c0-0.28-0.111-0.526-0.272-0.73l-1.645,1.66c0.202,0.157,0.445,0.266,0.721,0.266C162.15,251.46,162.686,250.925,162.686,250.264z  M168.673,270.62c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C169.869,271.155,169.334,270.62,168.673,270.62z M165.081,274.211c-0.661,0-1.196,0.535-1.196,1.196 c0,0.069,0.028,0.129,0.039,0.195l2.266,0.236c0.052-0.135,0.087-0.279,0.087-0.432 C166.277,274.747,165.742,274.211,165.081,274.211z M168.673,263.436c-0.661,0-1.196,0.536-1.196,1.196 c0,0.66,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C169.869,263.971,169.334,263.436,168.673,263.436z  M165.081,267.028c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C166.277,267.563,165.742,267.028,165.081,267.028z M168.673,256.252c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C169.869,256.787,169.334,256.252,168.673,256.252z  M165.081,259.844c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C166.277,260.379,165.742,259.844,165.081,259.844z M168.673,249.068c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C169.869,249.604,169.334,249.068,168.673,249.068z  M165.081,252.66c-0.661,0-1.196,0.536-1.196,1.196c0,0.66,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C166.277,253.195,165.742,252.66,165.081,252.66z M166.277,246.672c0-0.288-0.115-0.543-0.285-0.75l-1.651,1.666 c0.205,0.166,0.456,0.279,0.741,0.279C165.742,247.868,166.277,247.333,166.277,246.672z M169.869,243.081 c0-0.297-0.119-0.56-0.299-0.769l-1.658,1.673c0.208,0.175,0.467,0.293,0.76,0.293 C169.334,244.277,169.869,243.741,169.869,243.081z M173.461,275.408c0-0.661-0.536-1.196-1.196-1.196 c-0.661,0-1.196,0.535-1.196,1.196c0,0.43,0.24,0.79,0.58,1.001l1.044,0.109C173.141,276.344,173.461,275.916,173.461,275.408z  M175.857,270.62c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C177.053,271.155,176.518,270.62,175.857,270.62z M175.857,263.436c-0.661,0-1.196,0.536-1.196,1.196 c0,0.66,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C177.053,263.971,176.518,263.436,175.857,263.436z  M172.265,267.028c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.535,1.196-1.196 C173.461,267.563,172.925,267.028,172.265,267.028z M175.857,256.252c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C177.053,256.787,176.518,256.252,175.857,256.252z  M172.265,259.844c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.536,1.196-1.196 C173.461,260.379,172.925,259.844,172.265,259.844z M175.857,249.068c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C177.053,249.604,176.518,249.068,175.857,249.068z  M172.265,252.66c-0.661,0-1.196,0.536-1.196,1.196c0,0.66,0.536,1.196,1.196,1.196c0.66,0,1.196-0.536,1.196-1.196 C173.461,253.195,172.925,252.66,172.265,252.66z M175.857,241.884c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C177.053,242.42,176.518,241.884,175.857,241.884z  M172.265,245.476c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.536,1.196-1.196 C173.461,246.012,172.925,245.476,172.265,245.476z M173.461,239.489c0-0.306-0.123-0.578-0.312-0.789l-1.664,1.679 c0.21,0.184,0.478,0.306,0.78,0.306C172.925,240.685,173.461,240.149,173.461,239.489z M177.053,235.897 c0-0.314-0.127-0.595-0.325-0.809l-1.67,1.686c0.213,0.194,0.489,0.319,0.799,0.319 C176.518,237.093,177.053,236.557,177.053,235.897z M183.041,270.62c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C184.237,271.155,183.701,270.62,183.041,270.62z  M179.449,274.211c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C180.645,274.747,180.109,274.211,179.449,274.211z M183.041,263.436c-0.661,0-1.196,0.536-1.196,1.196 c0,0.66,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C184.237,263.971,183.701,263.436,183.041,263.436z  M179.449,267.028c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C180.645,267.563,180.109,267.028,179.449,267.028z M183.041,256.252c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C184.237,256.787,183.701,256.252,183.041,256.252z  M179.449,259.844c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C180.645,260.379,180.109,259.844,179.449,259.844z M183.041,249.068c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C184.237,249.604,183.701,249.068,183.041,249.068z  M179.449,252.66c-0.661,0-1.196,0.536-1.196,1.196c0,0.66,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C180.645,253.195,180.109,252.66,179.449,252.66z M183.041,241.884c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C184.237,242.42,183.701,241.884,183.041,241.884z  M179.449,245.476c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C180.645,246.012,180.109,245.476,179.449,245.476z M183.041,234.701c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C184.237,235.236,183.701,234.701,183.041,234.701z  M179.449,238.292c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C180.645,238.828,180.109,238.292,179.449,238.292z M180.645,232.305c0-0.323-0.131-0.613-0.339-0.828l-1.677,1.692 c0.214,0.203,0.5,0.332,0.819,0.332C180.109,233.501,180.645,232.965,180.645,232.305z M184.237,228.713 c0-0.331-0.135-0.631-0.353-0.847l-1.682,1.698c0.216,0.213,0.512,0.346,0.839,0.346 C183.701,229.909,184.237,229.374,184.237,228.713z M186.632,226.317c0.661,0,1.196-0.535,1.196-1.196 c0-0.34-0.145-0.643-0.372-0.861l-1.678,1.694C185.995,226.177,186.297,226.317,186.632,226.317z M190.225,277.803 c-0.372,0-0.692,0.181-0.911,0.447l1.96,0.204C191.074,278.073,190.686,277.803,190.225,277.803z M190.225,270.62 c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C191.421,271.155,190.885,270.62,190.225,270.62z M186.632,274.211c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C187.829,274.747,187.293,274.211,186.632,274.211z  M190.225,263.436c-0.661,0-1.196,0.536-1.196,1.196c0,0.66,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C191.421,263.971,190.885,263.436,190.225,263.436z M186.632,267.028c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C187.829,267.563,187.293,267.028,186.632,267.028z  M190.225,256.252c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C191.421,256.787,190.885,256.252,190.225,256.252z M186.632,259.844c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C187.829,260.379,187.293,259.844,186.632,259.844z  M190.225,249.068c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C191.421,249.604,190.885,249.068,190.225,249.068z M186.632,252.66c-0.661,0-1.196,0.536-1.196,1.196 c0,0.66,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C187.829,253.195,187.293,252.66,186.632,252.66z  M190.225,241.884c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C191.421,242.42,190.885,241.884,190.225,241.884z M186.632,245.476c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C187.829,246.012,187.293,245.476,186.632,245.476z  M190.225,234.701c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C191.421,235.236,190.885,234.701,190.225,234.701z M186.632,238.292c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C187.829,238.828,187.293,238.292,186.632,238.292z  M190.225,227.517c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C191.421,228.052,190.885,227.517,190.225,227.517z M186.632,231.109c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C187.829,231.644,187.293,231.109,186.632,231.109z  M190.225,222.725c0.661,0,1.196-0.536,1.196-1.196c0-0.348-0.154-0.655-0.392-0.874l-1.672,1.687 C189.575,222.576,189.88,222.725,190.225,222.725z M193.816,219.133c0.661,0,1.196-0.536,1.196-1.196 c0-0.357-0.164-0.668-0.411-0.887l-1.666,1.681C193.154,218.974,193.464,219.133,193.816,219.133z M197.408,277.803 c-0.65,0-1.174,0.521-1.19,1.167l2.343,0.244c0.014-0.073,0.043-0.139,0.043-0.216 C198.604,278.339,198.069,277.803,197.408,277.803z M197.408,270.62c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C198.604,271.155,198.069,270.62,197.408,270.62z  M193.816,274.211c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C195.013,274.747,194.477,274.211,193.816,274.211z M197.408,263.436c-0.661,0-1.196,0.536-1.196,1.196 c0,0.66,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C198.604,263.971,198.069,263.436,197.408,263.436z  M193.816,267.028c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C195.013,267.563,194.477,267.028,193.816,267.028z M197.408,256.252c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C198.604,256.787,198.069,256.252,197.408,256.252z  M193.816,259.844c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C195.013,260.379,194.477,259.844,193.816,259.844z M197.408,249.068c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C198.604,249.604,198.069,249.068,197.408,249.068z  M193.816,252.66c-0.661,0-1.196,0.536-1.196,1.196c0,0.66,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C195.013,253.195,194.477,252.66,193.816,252.66z M197.408,241.884c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C198.604,242.42,198.069,241.884,197.408,241.884z  M193.816,245.476c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C195.013,246.012,194.477,245.476,193.816,245.476z M197.408,234.701c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C198.604,235.236,198.069,234.701,197.408,234.701z  M193.816,238.292c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C195.013,238.828,194.477,238.292,193.816,238.292z M197.408,227.517c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C198.604,228.052,198.069,227.517,197.408,227.517z  M193.816,231.109c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C195.013,231.644,194.477,231.109,193.816,231.109z M197.408,220.333c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C198.604,220.868,198.069,220.333,197.408,220.333z  M193.816,223.925c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C195.013,224.46,194.477,223.925,193.816,223.925z M197.408,215.541c0.661,0,1.196-0.535,1.196-1.196 c0-0.365-0.173-0.681-0.431-0.9l-1.659,1.674C196.733,215.373,197.047,215.541,197.408,215.541z M201,211.949 c0.661,0,1.196-0.535,1.196-1.196c0-0.374-0.182-0.694-0.451-0.913l-1.653,1.668C200.312,211.772,200.63,211.949,201,211.949z  M205.788,278.999c0-0.661-0.536-1.196-1.196-1.196c-0.661,0-1.196,0.536-1.196,1.196c0,0.289,0.115,0.543,0.285,0.75l1.645,0.172 C205.601,279.701,205.788,279.378,205.788,278.999z M204.592,270.62c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C205.788,271.155,205.253,270.62,204.592,270.62z M201,274.211 c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C202.196,274.747,201.661,274.211,201,274.211z M204.592,263.436c-0.661,0-1.196,0.536-1.196,1.196c0,0.66,0.535,1.196,1.196,1.196 c0.661,0,1.196-0.536,1.196-1.196C205.788,263.971,205.253,263.436,204.592,263.436z M201,267.028 c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C202.196,267.563,201.661,267.028,201,267.028z M204.592,256.252c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C205.788,256.787,205.253,256.252,204.592,256.252z M201,259.844 c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C202.196,260.379,201.661,259.844,201,259.844z M204.592,249.068c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C205.788,249.604,205.253,249.068,204.592,249.068z M201,252.66 c-0.661,0-1.196,0.536-1.196,1.196c0,0.66,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C202.196,253.195,201.661,252.66,201,252.66z M204.592,241.884c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196 c0.661,0,1.196-0.535,1.196-1.196C205.788,242.42,205.253,241.884,204.592,241.884z M201,245.476c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C202.196,246.012,201.661,245.476,201,245.476z M204.592,234.701 c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C205.788,235.236,205.253,234.701,204.592,234.701z M201,238.292c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C202.196,238.828,201.661,238.292,201,238.292z M204.592,227.517 c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C205.788,228.052,205.253,227.517,204.592,227.517z M201,231.109c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C202.196,231.644,201.661,231.109,201,231.109z M204.592,220.333 c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C205.788,220.868,205.253,220.333,204.592,220.333z M201,223.925c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C202.196,224.46,201.661,223.925,201,223.925z M204.592,213.149 c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C205.788,213.685,205.253,213.149,204.592,213.149z M201,216.741c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C202.196,217.277,201.661,216.741,201,216.741z M204.592,208.358 c0.661,0,1.196-0.536,1.196-1.196c0-0.382-0.191-0.708-0.47-0.927l-1.646,1.662C203.89,208.171,204.214,208.358,204.592,208.358z  M208.184,204.766c0.66,0,1.196-0.536,1.196-1.196c0-0.391-0.2-0.722-0.49-0.94l-1.64,1.655 C207.469,204.57,207.797,204.766,208.184,204.766z M211.776,277.803c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C212.972,278.339,212.437,277.803,211.776,277.803z  M211.776,270.62c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C212.972,271.155,212.437,270.62,211.776,270.62z M208.184,274.211c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.535,1.196-1.196C209.38,274.747,208.845,274.211,208.184,274.211z  M211.776,263.436c-0.661,0-1.196,0.536-1.196,1.196c0,0.66,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C212.972,263.971,212.437,263.436,211.776,263.436z M208.184,267.028c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.535,1.196-1.196C209.38,267.563,208.845,267.028,208.184,267.028z  M211.776,256.252c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C212.972,256.787,212.437,256.252,211.776,256.252z M208.184,259.844c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.536,1.196-1.196C209.38,260.379,208.845,259.844,208.184,259.844z  M211.776,249.068c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C212.972,249.604,212.437,249.068,211.776,249.068z M208.184,252.66c-0.661,0-1.196,0.536-1.196,1.196 c0,0.66,0.536,1.196,1.196,1.196c0.66,0,1.196-0.536,1.196-1.196C209.38,253.195,208.845,252.66,208.184,252.66z M211.776,241.884 c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C212.972,242.42,212.437,241.884,211.776,241.884z M208.184,245.476c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.536,1.196-1.196C209.38,246.012,208.845,245.476,208.184,245.476z  M211.776,234.701c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C212.972,235.236,212.437,234.701,211.776,234.701z M208.184,238.292c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.535,1.196-1.196C209.38,238.828,208.845,238.292,208.184,238.292z  M211.776,227.517c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C212.972,228.052,212.437,227.517,211.776,227.517z M208.184,231.109c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.536,1.196-1.196C209.38,231.644,208.845,231.109,208.184,231.109z  M211.776,220.333c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C212.972,220.868,212.437,220.333,211.776,220.333z M208.184,223.925c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.535,1.196-1.196C209.38,224.46,208.845,223.925,208.184,223.925z  M211.776,213.149c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C212.972,213.685,212.437,213.149,211.776,213.149z M208.184,216.741c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.536,1.196-1.196C209.38,217.277,208.845,216.741,208.184,216.741z  M211.776,205.965c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C212.972,206.501,212.437,205.965,211.776,205.965z M208.184,209.557c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.535,1.196-1.196C209.38,210.093,208.845,209.557,208.184,209.557z  M211.776,201.174c0.661,0,1.196-0.535,1.196-1.196c0-0.4-0.209-0.736-0.51-0.953l-1.634,1.649 C211.046,200.969,211.38,201.174,211.776,201.174z M215.368,197.582c0.661,0,1.196-0.535,1.196-1.196 c0-0.408-0.217-0.751-0.529-0.967l-1.627,1.642C214.624,197.368,214.964,197.582,215.368,197.582z M218.96,277.803 c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C220.156,278.339,219.62,277.803,218.96,277.803z M218.96,270.62c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C220.156,271.155,219.62,270.62,218.96,270.62z M215.368,274.211 c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C216.564,274.747,216.028,274.211,215.368,274.211z M218.96,263.436c-0.661,0-1.196,0.536-1.196,1.196 c0,0.66,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C220.156,263.971,219.62,263.436,218.96,263.436z  M215.368,267.028c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C216.564,267.563,216.028,267.028,215.368,267.028z M218.96,256.252c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C220.156,256.787,219.62,256.252,218.96,256.252z  M215.368,259.844c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C216.564,260.379,216.028,259.844,215.368,259.844z M218.96,249.068c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C220.156,249.604,219.62,249.068,218.96,249.068z  M215.368,252.66c-0.661,0-1.196,0.536-1.196,1.196c0,0.66,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C216.564,253.195,216.028,252.66,215.368,252.66z M218.96,241.884c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C220.156,242.42,219.62,241.884,218.96,241.884z  M215.368,245.476c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C216.564,246.012,216.028,245.476,215.368,245.476z M218.96,234.701c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C220.156,235.236,219.62,234.701,218.96,234.701z  M215.368,238.292c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C216.564,238.828,216.028,238.292,215.368,238.292z M218.96,227.517c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C220.156,228.052,219.62,227.517,218.96,227.517z  M215.368,231.109c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C216.564,231.644,216.028,231.109,215.368,231.109z M218.96,220.333c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C220.156,220.868,219.62,220.333,218.96,220.333z  M215.368,223.925c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C216.564,224.46,216.028,223.925,215.368,223.925z M218.96,213.149c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C220.156,213.685,219.62,213.149,218.96,213.149z  M215.368,216.741c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C216.564,217.277,216.028,216.741,215.368,216.741z M218.96,205.965c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C220.156,206.501,219.62,205.965,218.96,205.965z  M215.368,209.557c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C216.564,210.093,216.028,209.557,215.368,209.557z M218.96,198.781c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C220.156,199.317,219.62,198.781,218.96,198.781z  M215.368,202.373c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C216.564,202.909,216.028,202.373,215.368,202.373z M218.96,193.99c0.661,0,1.196-0.536,1.196-1.196 c0-0.417-0.226-0.765-0.549-0.98l-1.621,1.636C218.201,193.768,218.547,193.99,218.96,193.99z M222.552,190.398 c0.661,0,1.196-0.536,1.196-1.196c0-0.425-0.234-0.781-0.569-0.993l-1.615,1.63C221.778,190.167,222.13,190.398,222.552,190.398z  M226.143,277.803c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C227.34,278.339,226.804,277.803,226.143,277.803z M222.552,281.395c-0.265,0-0.497,0.103-0.696,0.249l1.585,0.165 C223.221,281.56,222.91,281.395,222.552,281.395z M226.143,270.62c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C227.34,271.155,226.804,270.62,226.143,270.62z  M222.552,274.211c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C223.748,274.747,223.212,274.211,222.552,274.211z M226.143,263.436c-0.661,0-1.196,0.536-1.196,1.196 c0,0.66,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C227.34,263.971,226.804,263.436,226.143,263.436z  M222.552,267.028c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C223.748,267.563,223.212,267.028,222.552,267.028z M226.143,256.252c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C227.34,256.787,226.804,256.252,226.143,256.252z  M222.552,259.844c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C223.748,260.379,223.212,259.844,222.552,259.844z M226.143,249.068c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C227.34,249.604,226.804,249.068,226.143,249.068z  M222.552,252.66c-0.661,0-1.196,0.536-1.196,1.196c0,0.66,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C223.748,253.195,223.212,252.66,222.552,252.66z M226.143,241.884c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C227.34,242.42,226.804,241.884,226.143,241.884z  M222.552,245.476c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C223.748,246.012,223.212,245.476,222.552,245.476z M226.143,234.701c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C227.34,235.236,226.804,234.701,226.143,234.701z  M222.552,238.292c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C223.748,238.828,223.212,238.292,222.552,238.292z M226.143,227.517c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C227.34,228.052,226.804,227.517,226.143,227.517z  M222.552,231.109c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C223.748,231.644,223.212,231.109,222.552,231.109z M226.143,220.333c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C227.34,220.868,226.804,220.333,226.143,220.333z  M222.552,223.925c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C223.748,224.46,223.212,223.925,222.552,223.925z M226.143,213.149c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C227.34,213.685,226.804,213.149,226.143,213.149z  M222.552,216.741c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C223.748,217.277,223.212,216.741,222.552,216.741z M226.143,205.965c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C227.34,206.501,226.804,205.965,226.143,205.965z  M222.552,209.557c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C223.748,210.093,223.212,209.557,222.552,209.557z M226.143,198.781c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C227.34,199.317,226.804,198.781,226.143,198.781z  M222.552,202.373c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C223.748,202.909,223.212,202.373,222.552,202.373z M226.143,191.598c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C227.34,192.133,226.804,191.598,226.143,191.598z  M222.552,195.189c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C223.748,195.725,223.212,195.189,222.552,195.189z M226.143,186.806c0.661,0,1.196-0.535,1.196-1.196 c0-0.434-0.243-0.796-0.588-1.006l-1.608,1.623C225.354,186.567,225.714,186.806,226.143,186.806z M229.735,183.214 c0.661,0,1.196-0.535,1.196-1.196c0-0.442-0.251-0.813-0.608-1.02l-1.602,1.617C228.93,182.967,229.297,183.214,229.735,183.214z  M233.327,277.803c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C234.523,278.339,233.988,277.803,233.327,277.803z M229.735,281.395c-0.574,0-1.031,0.412-1.147,0.951l2.343,0.244 C230.931,281.93,230.396,281.395,229.735,281.395z M233.327,270.62c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C234.523,271.155,233.988,270.62,233.327,270.62z  M229.735,274.211c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C230.932,274.747,230.396,274.211,229.735,274.211z M233.327,263.436c-0.661,0-1.196,0.536-1.196,1.196 c0,0.66,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C234.523,263.971,233.988,263.436,233.327,263.436z  M229.735,267.028c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C230.932,267.563,230.396,267.028,229.735,267.028z M233.327,256.252c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C234.523,256.787,233.988,256.252,233.327,256.252z  M229.735,259.844c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C230.932,260.379,230.396,259.844,229.735,259.844z M233.327,249.068c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C234.523,249.604,233.988,249.068,233.327,249.068z  M229.735,252.66c-0.661,0-1.196,0.536-1.196,1.196c0,0.66,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C230.932,253.195,230.396,252.66,229.735,252.66z M233.327,241.884c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C234.523,242.42,233.988,241.884,233.327,241.884z  M229.735,245.476c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C230.932,246.012,230.396,245.476,229.735,245.476z M233.327,234.701c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C234.523,235.236,233.988,234.701,233.327,234.701z  M229.735,238.292c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C230.932,238.828,230.396,238.292,229.735,238.292z M233.327,227.517c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C234.523,228.052,233.988,227.517,233.327,227.517z  M229.735,231.109c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C230.932,231.644,230.396,231.109,229.735,231.109z M233.327,220.333c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C234.523,220.868,233.988,220.333,233.327,220.333z  M229.735,223.925c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C230.932,224.46,230.396,223.925,229.735,223.925z M233.327,213.149c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C234.523,213.685,233.988,213.149,233.327,213.149z  M229.735,216.741c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C230.932,217.277,230.396,216.741,229.735,216.741z M233.327,205.965c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C234.523,206.501,233.988,205.965,233.327,205.965z  M229.735,209.557c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C230.932,210.093,230.396,209.557,229.735,209.557z M233.327,198.781c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C234.523,199.317,233.988,198.781,233.327,198.781z  M229.735,202.373c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C230.932,202.909,230.396,202.373,229.735,202.373z M233.327,191.598c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C234.523,192.133,233.988,191.598,233.327,191.598z  M229.735,195.189c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C230.932,195.725,230.396,195.189,229.735,195.189z M233.327,184.414c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C234.523,184.949,233.988,184.414,233.327,184.414z  M229.735,188.006c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C230.932,188.541,230.396,188.006,229.735,188.006z M233.327,179.622c0.661,0,1.196-0.536,1.196-1.196 c0-0.451-0.259-0.829-0.628-1.033l-1.596,1.61C232.506,179.367,232.88,179.622,233.327,179.622z M236.919,176.031 c0.661,0,1.196-0.536,1.196-1.196c0-0.459-0.267-0.845-0.647-1.046l-1.589,1.604C236.081,175.767,236.464,176.031,236.919,176.031z  M240.511,277.803c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C241.707,278.339,241.172,277.803,240.511,277.803z M236.919,281.395c-0.661,0-1.196,0.535-1.196,1.196 c0,0.185,0.05,0.356,0.125,0.512l2.001,0.209c0.157-0.202,0.266-0.445,0.266-0.721C238.115,281.931,237.58,281.395,236.919,281.395 z M240.511,270.62c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C241.707,271.155,241.172,270.62,240.511,270.62z M236.919,274.211c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C238.115,274.747,237.58,274.211,236.919,274.211z  M240.511,263.436c-0.661,0-1.196,0.536-1.196,1.196c0,0.66,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C241.707,263.971,241.172,263.436,240.511,263.436z M236.919,267.028c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C238.115,267.563,237.58,267.028,236.919,267.028z  M240.511,256.252c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C241.707,256.787,241.172,256.252,240.511,256.252z M236.919,259.844c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C238.115,260.379,237.58,259.844,236.919,259.844z  M240.511,249.068c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C241.707,249.604,241.172,249.068,240.511,249.068z M236.919,252.66c-0.661,0-1.196,0.536-1.196,1.196 c0,0.66,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C238.115,253.195,237.58,252.66,236.919,252.66z M240.511,241.884 c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C241.707,242.42,241.172,241.884,240.511,241.884z M236.919,245.476c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C238.115,246.012,237.58,245.476,236.919,245.476z  M240.511,234.701c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C241.707,235.236,241.172,234.701,240.511,234.701z M236.919,238.292c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C238.115,238.828,237.58,238.292,236.919,238.292z  M240.511,227.517c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C241.707,228.052,241.172,227.517,240.511,227.517z M236.919,231.109c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C238.115,231.644,237.58,231.109,236.919,231.109z  M240.511,220.333c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C241.707,220.868,241.172,220.333,240.511,220.333z M236.919,223.925c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C238.115,224.46,237.58,223.925,236.919,223.925z  M240.511,213.149c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C241.707,213.685,241.172,213.149,240.511,213.149z M236.919,216.741c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C238.115,217.277,237.58,216.741,236.919,216.741z  M240.511,205.965c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C241.707,206.501,241.172,205.965,240.511,205.965z M236.919,209.557c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C238.115,210.093,237.58,209.557,236.919,209.557z  M240.511,198.781c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C241.707,199.317,241.172,198.781,240.511,198.781z M236.919,202.373c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C238.115,202.909,237.58,202.373,236.919,202.373z  M240.511,191.598c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C241.707,192.133,241.172,191.598,240.511,191.598z M236.919,195.189c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C238.115,195.725,237.58,195.189,236.919,195.189z  M240.511,184.414c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C241.707,184.949,241.172,184.414,240.511,184.414z M236.919,188.006c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C238.115,188.541,237.58,188.006,236.919,188.006z  M240.511,177.23c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C241.707,177.766,241.172,177.23,240.511,177.23z M236.919,180.822c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C238.115,181.357,237.58,180.822,236.919,180.822z  M240.511,172.439c0.661,0,1.196-0.535,1.196-1.196c0-0.468-0.275-0.863-0.667-1.059l-1.583,1.597 C239.656,172.167,240.047,172.439,240.511,172.439z M244.103,168.847c0.661,0,1.196-0.535,1.196-1.196 c0-0.476-0.283-0.88-0.686-1.072l-1.576,1.591C243.231,168.567,243.63,168.847,244.103,168.847z M247.695,277.803 c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C248.891,278.339,248.356,277.803,247.695,277.803z M244.103,281.395c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C245.299,281.931,244.764,281.395,244.103,281.395z  M247.695,270.62c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C248.891,271.155,248.356,270.62,247.695,270.62z M244.103,274.211c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C245.299,274.747,244.764,274.211,244.103,274.211z  M247.695,263.436c-0.661,0-1.196,0.536-1.196,1.196c0,0.66,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C248.891,263.971,248.356,263.436,247.695,263.436z M244.103,267.028c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C245.299,267.563,244.764,267.028,244.103,267.028z  M247.695,256.252c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C248.891,256.787,248.356,256.252,247.695,256.252z M244.103,259.844c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C245.299,260.379,244.764,259.844,244.103,259.844z  M247.695,249.068c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C248.891,249.604,248.356,249.068,247.695,249.068z M244.103,252.66c-0.661,0-1.196,0.536-1.196,1.196 c0,0.66,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C245.299,253.195,244.764,252.66,244.103,252.66z  M247.695,241.884c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C248.891,242.42,248.356,241.884,247.695,241.884z M244.103,245.476c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C245.299,246.012,244.764,245.476,244.103,245.476z  M247.695,234.701c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C248.891,235.236,248.356,234.701,247.695,234.701z M244.103,238.292c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C245.299,238.828,244.764,238.292,244.103,238.292z  M247.695,227.517c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C248.891,228.052,248.356,227.517,247.695,227.517z M244.103,231.109c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C245.299,231.644,244.764,231.109,244.103,231.109z  M247.695,220.333c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C248.891,220.868,248.356,220.333,247.695,220.333z M244.103,223.925c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C245.299,224.46,244.764,223.925,244.103,223.925z  M247.695,213.149c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C248.891,213.685,248.356,213.149,247.695,213.149z M244.103,216.741c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C245.299,217.277,244.764,216.741,244.103,216.741z  M247.695,205.965c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C248.891,206.501,248.356,205.965,247.695,205.965z M244.103,209.557c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C245.299,210.093,244.764,209.557,244.103,209.557z  M247.695,198.781c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C248.891,199.317,248.356,198.781,247.695,198.781z M244.103,202.373c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C245.299,202.909,244.764,202.373,244.103,202.373z  M247.695,191.598c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C248.891,192.133,248.356,191.598,247.695,191.598z M244.103,195.189c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C245.299,195.725,244.764,195.189,244.103,195.189z  M247.695,184.414c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C248.891,184.949,248.356,184.414,247.695,184.414z M244.103,188.006c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C245.299,188.541,244.764,188.006,244.103,188.006z  M247.695,177.23c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C248.891,177.766,248.356,177.23,247.695,177.23z M244.103,180.822c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C245.299,181.357,244.764,180.822,244.103,180.822z  M247.695,170.046c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C248.891,170.582,248.356,170.046,247.695,170.046z M244.103,173.638c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C245.299,174.174,244.764,173.638,244.103,173.638z  M247.695,165.255c0.661,0,1.196-0.536,1.196-1.196c0-0.485-0.291-0.898-0.706-1.086l-1.57,1.584 C246.805,164.967,247.214,165.255,247.695,165.255z M251.287,161.663c0.661,0,1.196-0.536,1.196-1.196 c0-0.493-0.299-0.916-0.726-1.099l-1.564,1.578C250.379,161.367,250.797,161.663,251.287,161.663z M254.549,285.054l0.893,0.093 c-0.17-0.093-0.356-0.16-0.563-0.16C254.762,284.987,254.656,285.022,254.549,285.054z M254.879,277.803 c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C256.075,278.339,255.539,277.803,254.879,277.803z M251.287,281.395c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C252.483,281.931,251.947,281.395,251.287,281.395z  M254.879,270.62c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C256.075,271.155,255.539,270.62,254.879,270.62z M251.287,274.211c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C252.483,274.747,251.947,274.211,251.287,274.211z  M254.879,263.436c-0.661,0-1.196,0.536-1.196,1.196c0,0.66,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C256.075,263.971,255.539,263.436,254.879,263.436z M251.287,267.028c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C252.483,267.563,251.947,267.028,251.287,267.028z  M254.879,256.252c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C256.075,256.787,255.539,256.252,254.879,256.252z M251.287,259.844c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C252.483,260.379,251.947,259.844,251.287,259.844z  M254.879,249.068c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C256.075,249.604,255.539,249.068,254.879,249.068z M251.287,252.66c-0.661,0-1.196,0.536-1.196,1.196 c0,0.66,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C252.483,253.195,251.947,252.66,251.287,252.66z  M254.879,241.884c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C256.075,242.42,255.539,241.884,254.879,241.884z M251.287,245.476c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C252.483,246.012,251.947,245.476,251.287,245.476z  M254.879,234.701c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C256.075,235.236,255.539,234.701,254.879,234.701z M251.287,238.292c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C252.483,238.828,251.947,238.292,251.287,238.292z  M254.879,227.517c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C256.075,228.052,255.539,227.517,254.879,227.517z M251.287,231.109c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C252.483,231.644,251.947,231.109,251.287,231.109z  M254.879,220.333c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C256.075,220.868,255.539,220.333,254.879,220.333z M251.287,223.925c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C252.483,224.46,251.947,223.925,251.287,223.925z  M254.879,213.149c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C256.075,213.685,255.539,213.149,254.879,213.149z M251.287,216.741c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C252.483,217.277,251.947,216.741,251.287,216.741z  M254.879,205.965c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C256.075,206.501,255.539,205.965,254.879,205.965z M251.287,209.557c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C252.483,210.093,251.947,209.557,251.287,209.557z  M254.879,198.781c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C256.075,199.317,255.539,198.781,254.879,198.781z M251.287,202.373c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C252.483,202.909,251.947,202.373,251.287,202.373z  M254.879,191.598c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C256.075,192.133,255.539,191.598,254.879,191.598z M251.287,195.189c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C252.483,195.725,251.947,195.189,251.287,195.189z  M254.879,184.414c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C256.075,184.949,255.539,184.414,254.879,184.414z M251.287,188.006c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C252.483,188.541,251.947,188.006,251.287,188.006z  M254.879,177.23c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C256.075,177.766,255.539,177.23,254.879,177.23z M251.287,180.822c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C252.483,181.357,251.947,180.822,251.287,180.822z  M254.879,170.046c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C256.075,170.582,255.539,170.046,254.879,170.046z M251.287,173.638c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C252.483,174.174,251.947,173.638,251.287,173.638z  M254.879,162.863c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C256.075,163.398,255.539,162.863,254.879,162.863z M251.287,166.454c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C252.483,166.99,251.947,166.454,251.287,166.454z  M254.879,158.071c0.661,0,1.196-0.535,1.196-1.196c0-0.503-0.312-0.929-0.751-1.106l-1.549,1.563 C253.954,157.765,254.38,158.071,254.879,158.071z M258.471,154.479c0.661,0,1.196-0.535,1.196-1.196 c0-0.512-0.325-0.941-0.778-1.112l-1.527,1.541C257.534,154.16,257.962,154.479,258.471,154.479z M262.063,284.987 c-0.497,0-0.922,0.303-1.103,0.735l2.254,0.235C263.104,285.409,262.643,284.987,262.063,284.987z M262.063,277.803 c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C263.259,278.339,262.723,277.803,262.063,277.803z M258.471,281.395c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C259.667,281.931,259.131,281.395,258.471,281.395z  M262.063,270.62c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C263.259,271.155,262.723,270.62,262.063,270.62z M258.471,274.211c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C259.667,274.747,259.131,274.211,258.471,274.211z  M262.063,263.436c-0.661,0-1.196,0.536-1.196,1.196c0,0.66,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C263.259,263.971,262.723,263.436,262.063,263.436z M258.471,267.028c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C259.667,267.563,259.131,267.028,258.471,267.028z  M262.063,256.252c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C263.259,256.787,262.723,256.252,262.063,256.252z M258.471,259.844c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C259.667,260.379,259.131,259.844,258.471,259.844z  M262.063,249.068c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C263.259,249.604,262.723,249.068,262.063,249.068z M258.471,252.66c-0.661,0-1.196,0.536-1.196,1.196 c0,0.66,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C259.667,253.195,259.131,252.66,258.471,252.66z  M262.063,241.884c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C263.259,242.42,262.723,241.884,262.063,241.884z M258.471,245.476c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C259.667,246.012,259.131,245.476,258.471,245.476z  M262.063,234.701c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C263.259,235.236,262.723,234.701,262.063,234.701z M258.471,238.292c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C259.667,238.828,259.131,238.292,258.471,238.292z  M262.063,227.517c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C263.259,228.052,262.723,227.517,262.063,227.517z M258.471,231.109c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C259.667,231.644,259.131,231.109,258.471,231.109z  M262.063,220.333c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C263.259,220.868,262.723,220.333,262.063,220.333z M258.471,223.925c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C259.667,224.46,259.131,223.925,258.471,223.925z  M262.063,213.149c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C263.259,213.685,262.723,213.149,262.063,213.149z M258.471,216.741c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C259.667,217.277,259.131,216.741,258.471,216.741z  M262.063,205.965c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C263.259,206.501,262.723,205.965,262.063,205.965z M258.471,209.557c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C259.667,210.093,259.131,209.557,258.471,209.557z  M262.063,198.781c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C263.259,199.317,262.723,198.781,262.063,198.781z M258.471,202.373c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C259.667,202.909,259.131,202.373,258.471,202.373z  M262.063,191.598c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C263.259,192.133,262.723,191.598,262.063,191.598z M258.471,195.189c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C259.667,195.725,259.131,195.189,258.471,195.189z  M262.063,184.414c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C263.259,184.949,262.723,184.414,262.063,184.414z M258.471,188.006c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C259.667,188.541,259.131,188.006,258.471,188.006z  M262.063,177.23c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C263.259,177.766,262.723,177.23,262.063,177.23z M258.471,180.822c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C259.667,181.357,259.131,180.822,258.471,180.822z  M262.063,170.046c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C263.259,170.582,262.723,170.046,262.063,170.046z M258.471,173.638c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C259.667,174.174,259.131,173.638,258.471,173.638z  M262.063,162.863c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C263.259,163.398,262.723,162.863,262.063,162.863z M258.471,166.454c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C259.667,166.99,259.131,166.454,258.471,166.454z  M262.063,155.679c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C263.259,156.214,262.723,155.679,262.063,155.679z M258.471,159.27c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C259.667,159.806,259.131,159.27,258.471,159.27z  M262.063,150.887c0.661,0,1.196-0.536,1.196-1.196c0-0.522-0.339-0.954-0.806-1.118l-1.505,1.519 C261.114,150.554,261.544,150.887,262.063,150.887z M265.654,147.295c0.661,0,1.196-0.536,1.196-1.196 c0-0.532-0.353-0.967-0.833-1.123l-1.484,1.497C264.693,146.948,265.127,147.295,265.654,147.295z M269.246,284.987 c-0.661,0-1.196,0.536-1.196,1.196c0,0.101,0.034,0.191,0.057,0.284l2.208,0.23c0.076-0.157,0.127-0.328,0.127-0.515 C270.443,285.523,269.907,284.987,269.246,284.987z M269.246,277.803c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C270.443,278.339,269.907,277.803,269.246,277.803z  M265.654,281.395c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C266.851,281.931,266.315,281.395,265.654,281.395z M269.246,270.62c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C270.443,271.155,269.907,270.62,269.246,270.62z  M265.654,274.211c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C266.851,274.747,266.315,274.211,265.654,274.211z M269.246,263.436c-0.661,0-1.196,0.536-1.196,1.196 c0,0.66,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C270.443,263.971,269.907,263.436,269.246,263.436z  M265.654,267.028c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C266.851,267.563,266.315,267.028,265.654,267.028z M269.246,256.252c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C270.443,256.787,269.907,256.252,269.246,256.252z  M265.654,259.844c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C266.851,260.379,266.315,259.844,265.654,259.844z M269.246,249.068c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C270.443,249.604,269.907,249.068,269.246,249.068z  M265.654,252.66c-0.661,0-1.196,0.536-1.196,1.196c0,0.66,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C266.851,253.195,266.315,252.66,265.654,252.66z M269.246,241.884c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C270.443,242.42,269.907,241.884,269.246,241.884z  M265.654,245.476c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C266.851,246.012,266.315,245.476,265.654,245.476z M269.246,234.701c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C270.443,235.236,269.907,234.701,269.246,234.701z  M265.654,238.292c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C266.851,238.828,266.315,238.292,265.654,238.292z M269.246,227.517c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C270.443,228.052,269.907,227.517,269.246,227.517z  M265.654,231.109c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C266.851,231.644,266.315,231.109,265.654,231.109z M269.246,220.333c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C270.443,220.868,269.907,220.333,269.246,220.333z  M265.654,223.925c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C266.851,224.46,266.315,223.925,265.654,223.925z M269.246,213.149c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C270.443,213.685,269.907,213.149,269.246,213.149z  M265.654,216.741c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C266.851,217.277,266.315,216.741,265.654,216.741z M269.246,205.965c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C270.443,206.501,269.907,205.965,269.246,205.965z  M265.654,209.557c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C266.851,210.093,266.315,209.557,265.654,209.557z M269.246,198.781c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C270.443,199.317,269.907,198.781,269.246,198.781z  M265.654,202.373c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C266.851,202.909,266.315,202.373,265.654,202.373z M269.246,191.598c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C270.443,192.133,269.907,191.598,269.246,191.598z  M265.654,195.189c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C266.851,195.725,266.315,195.189,265.654,195.189z M269.246,184.414c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C270.443,184.949,269.907,184.414,269.246,184.414z  M265.654,188.006c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C266.851,188.541,266.315,188.006,265.654,188.006z M269.246,177.23c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C270.443,177.766,269.907,177.23,269.246,177.23z  M265.654,180.822c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C266.851,181.357,266.315,180.822,265.654,180.822z M269.246,170.046c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C270.443,170.582,269.907,170.046,269.246,170.046z  M265.654,173.638c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C266.851,174.174,266.315,173.638,265.654,173.638z M269.246,162.863c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C270.443,163.398,269.907,162.863,269.246,162.863z  M265.654,166.454c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C266.851,166.99,266.315,166.454,265.654,166.454z M269.246,155.679c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C270.443,156.214,269.907,155.679,269.246,155.679z  M265.654,159.27c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C266.851,159.806,266.315,159.27,265.654,159.27z M269.246,148.495c-0.661,0-1.196,0.536-1.196,1.196 c0,0.66,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C270.443,149.03,269.907,148.495,269.246,148.495z  M265.654,152.087c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C266.851,152.622,266.315,152.087,265.654,152.087z M269.246,143.703c0.661,0,1.196-0.536,1.196-1.196 c0-0.542-0.367-0.981-0.86-1.128l-1.462,1.475C268.271,143.342,268.709,143.703,269.246,143.703z M272.838,140.111 c0.661,0,1.196-0.535,1.196-1.196c0-0.551-0.38-0.995-0.888-1.134l-1.44,1.453C271.849,139.737,272.291,140.111,272.838,140.111z  M277.626,286.183c0-0.661-0.535-1.196-1.196-1.196c-0.661,0-1.196,0.536-1.196,1.196c0,0.502,0.31,0.928,0.748,1.106l0.591,0.062 C277.163,287.277,277.626,286.793,277.626,286.183z M276.43,277.803c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.535,1.196-1.196C277.626,278.339,277.091,277.803,276.43,277.803z  M272.838,281.395c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C274.034,281.931,273.499,281.395,272.838,281.395z M276.43,270.62c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.536,1.196-1.196C277.626,271.155,277.091,270.62,276.43,270.62z M272.838,274.211 c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C274.034,274.747,273.499,274.211,272.838,274.211z M276.43,263.436c-0.661,0-1.196,0.536-1.196,1.196 c0,0.66,0.536,1.196,1.196,1.196c0.66,0,1.196-0.536,1.196-1.196C277.626,263.971,277.091,263.436,276.43,263.436z  M272.838,267.028c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C274.034,267.563,273.499,267.028,272.838,267.028z M276.43,256.252c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.535,1.196-1.196C277.626,256.787,277.091,256.252,276.43,256.252z  M272.838,259.844c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C274.034,260.379,273.499,259.844,272.838,259.844z M276.43,249.068c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.536,1.196-1.196C277.626,249.604,277.091,249.068,276.43,249.068z  M272.838,252.66c-0.661,0-1.196,0.536-1.196,1.196c0,0.66,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C274.034,253.195,273.499,252.66,272.838,252.66z M276.43,241.884c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.535,1.196-1.196C277.626,242.42,277.091,241.884,276.43,241.884z  M272.838,245.476c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C274.034,246.012,273.499,245.476,272.838,245.476z M276.43,234.701c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.536,1.196-1.196C277.626,235.236,277.091,234.701,276.43,234.701z  M272.838,238.292c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C274.034,238.828,273.499,238.292,272.838,238.292z M276.43,227.517c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.535,1.196-1.196C277.626,228.052,277.091,227.517,276.43,227.517z  M272.838,231.109c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C274.034,231.644,273.499,231.109,272.838,231.109z M276.43,220.333c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.536,1.196-1.196C277.626,220.868,277.091,220.333,276.43,220.333z  M272.838,223.925c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C274.034,224.46,273.499,223.925,272.838,223.925z M276.43,213.149c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.535,1.196-1.196C277.626,213.685,277.091,213.149,276.43,213.149z  M272.838,216.741c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C274.034,217.277,273.499,216.741,272.838,216.741z M276.43,205.965c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.536,1.196-1.196C277.626,206.501,277.091,205.965,276.43,205.965z  M272.838,209.557c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C274.034,210.093,273.499,209.557,272.838,209.557z M276.43,198.781c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.535,1.196-1.196C277.626,199.317,277.091,198.781,276.43,198.781z  M272.838,202.373c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C274.034,202.909,273.499,202.373,272.838,202.373z M276.43,191.598c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.536,1.196-1.196C277.626,192.133,277.091,191.598,276.43,191.598z  M272.838,195.189c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C274.034,195.725,273.499,195.189,272.838,195.189z M276.43,184.414c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.535,1.196-1.196C277.626,184.949,277.091,184.414,276.43,184.414z  M272.838,188.006c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C274.034,188.541,273.499,188.006,272.838,188.006z M276.43,177.23c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.536,1.196-1.196C277.626,177.766,277.091,177.23,276.43,177.23z M272.838,180.822 c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C274.034,181.357,273.499,180.822,272.838,180.822z M276.43,170.046c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.535,1.196-1.196C277.626,170.582,277.091,170.046,276.43,170.046z  M272.838,173.638c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C274.034,174.174,273.499,173.638,272.838,173.638z M276.43,162.863c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.536,1.196-1.196C277.626,163.398,277.091,162.863,276.43,162.863z  M272.838,166.454c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C274.034,166.99,273.499,166.454,272.838,166.454z M276.43,155.679c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.535,1.196-1.196C277.626,156.214,277.091,155.679,276.43,155.679z  M272.838,159.27c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C274.034,159.806,273.499,159.27,272.838,159.27z M276.43,148.495c-0.661,0-1.196,0.536-1.196,1.196 c0,0.66,0.536,1.196,1.196,1.196c0.66,0,1.196-0.536,1.196-1.196C277.626,149.03,277.091,148.495,276.43,148.495z M272.838,152.087 c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C274.034,152.622,273.499,152.087,272.838,152.087z M276.43,141.311c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.536,1.196-1.196C277.626,141.847,277.091,141.311,276.43,141.311z  M272.838,144.903c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C274.034,145.439,273.499,144.903,272.838,144.903z M276.43,136.52c0.66,0,1.196-0.536,1.196-1.196c0-0.561-0.394-1.01-0.915-1.139 l-1.418,1.432C275.426,136.131,275.873,136.52,276.43,136.52z M278.879,131.996c0.123,0.529,0.576,0.932,1.143,0.932 c0.661,0,1.196-0.536,1.196-1.196c0-0.571-0.408-1.025-0.942-1.145L278.879,131.996z M283.614,284.987 c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C284.81,285.523,284.275,284.987,283.614,284.987z M287.206,283.788c0.661,0,1.196-0.535,1.196-1.196 c0-0.661-0.535-1.196-1.196-1.196c-0.661,0-1.196,0.535-1.196,1.196C286.01,283.252,286.545,283.788,287.206,283.788z  M283.614,277.803c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C284.81,278.339,284.275,277.803,283.614,277.803z M280.022,281.395c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C281.218,281.931,280.683,281.395,280.022,281.395z  M283.614,270.62c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C284.81,271.155,284.275,270.62,283.614,270.62z M280.022,274.211c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C281.218,274.747,280.683,274.211,280.022,274.211z  M283.614,263.436c-0.661,0-1.196,0.536-1.196,1.196c0,0.66,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C284.81,263.971,284.275,263.436,283.614,263.436z M280.022,267.028c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C281.218,267.563,280.683,267.028,280.022,267.028z  M283.614,256.252c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C284.81,256.787,284.275,256.252,283.614,256.252z M280.022,259.844c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C281.218,260.379,280.683,259.844,280.022,259.844z  M283.614,249.068c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C284.81,249.604,284.275,249.068,283.614,249.068z M280.022,252.66c-0.661,0-1.196,0.536-1.196,1.196 c0,0.66,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C281.218,253.195,280.683,252.66,280.022,252.66z  M283.614,241.884c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C284.81,242.42,284.275,241.884,283.614,241.884z M280.022,245.476c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C281.218,246.012,280.683,245.476,280.022,245.476z  M283.614,234.701c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C284.81,235.236,284.275,234.701,283.614,234.701z M280.022,238.292c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C281.218,238.828,280.683,238.292,280.022,238.292z  M283.614,227.517c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C284.81,228.052,284.275,227.517,283.614,227.517z M280.022,231.109c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C281.218,231.644,280.683,231.109,280.022,231.109z  M283.614,220.333c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C284.81,220.868,284.275,220.333,283.614,220.333z M280.022,223.925c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C281.218,224.46,280.683,223.925,280.022,223.925z  M283.614,213.149c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C284.81,213.685,284.275,213.149,283.614,213.149z M280.022,216.741c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C281.218,217.277,280.683,216.741,280.022,216.741z  M283.614,205.965c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C284.81,206.501,284.275,205.965,283.614,205.965z M280.022,209.557c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C281.218,210.093,280.683,209.557,280.022,209.557z  M283.614,198.781c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C284.81,199.317,284.275,198.781,283.614,198.781z M280.022,202.373c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C281.218,202.909,280.683,202.373,280.022,202.373z  M283.614,191.598c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C284.81,192.133,284.275,191.598,283.614,191.598z M280.022,195.189c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C281.218,195.725,280.683,195.189,280.022,195.189z  M283.614,184.414c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C284.81,184.949,284.275,184.414,283.614,184.414z M280.022,188.006c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C281.218,188.541,280.683,188.006,280.022,188.006z  M283.614,177.23c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C284.81,177.766,284.275,177.23,283.614,177.23z M280.022,180.822c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C281.218,181.357,280.683,180.822,280.022,180.822z  M283.614,170.046c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C284.81,170.582,284.275,170.046,283.614,170.046z M280.022,173.638c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C281.218,174.174,280.683,173.638,280.022,173.638z  M283.614,162.863c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C284.81,163.398,284.275,162.863,283.614,162.863z M280.022,166.454c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C281.218,166.99,280.683,166.454,280.022,166.454z  M283.614,155.679c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C284.81,156.214,284.275,155.679,283.614,155.679z M280.022,159.27c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C281.218,159.806,280.683,159.27,280.022,159.27z  M283.614,148.495c-0.661,0-1.196,0.536-1.196,1.196c0,0.66,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C284.81,149.03,284.275,148.495,283.614,148.495z M280.022,152.087c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C281.218,152.622,280.683,152.087,280.022,152.087z  M283.614,141.311c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C284.81,141.847,284.275,141.311,283.614,141.311z M280.022,144.903c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C281.218,145.439,280.683,144.903,280.022,144.903z  M283.614,134.127c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C284.81,134.663,284.275,134.127,283.614,134.127z M280.022,137.719c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C281.218,138.255,280.683,137.719,280.022,137.719z  M283.614,129.336c0.661,0,1.196-0.536,1.196-1.196c0-0.58-0.421-1.041-0.97-1.15l-1.375,1.388 C282.579,128.92,283.037,129.336,283.614,129.336z M290.798,284.987c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C291.994,285.523,291.458,284.987,290.798,284.987z  M290.798,277.803c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C291.994,278.339,291.458,277.803,290.798,277.803z M290.798,270.62c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C291.994,271.155,291.458,270.62,290.798,270.62z  M287.206,274.211c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C288.402,274.747,287.866,274.211,287.206,274.211z M290.798,263.436c-0.661,0-1.196,0.536-1.196,1.196 c0,0.66,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C291.994,263.971,291.458,263.436,290.798,263.436z  M287.206,267.028c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C288.402,267.563,287.866,267.028,287.206,267.028z M290.798,256.252c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C291.994,256.787,291.458,256.252,290.798,256.252z  M287.206,259.844c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C288.402,260.379,287.866,259.844,287.206,259.844z M290.798,249.068c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C291.994,249.604,291.458,249.068,290.798,249.068z  M287.206,252.66c-0.661,0-1.196,0.536-1.196,1.196c0,0.66,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C288.402,253.195,287.866,252.66,287.206,252.66z M290.798,241.884c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C291.994,242.42,291.458,241.884,290.798,241.884z  M287.206,245.476c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C288.402,246.012,287.866,245.476,287.206,245.476z M290.798,234.701c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C291.994,235.236,291.458,234.701,290.798,234.701z  M287.206,238.292c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C288.402,238.828,287.866,238.292,287.206,238.292z M290.798,227.517c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C291.994,228.052,291.458,227.517,290.798,227.517z  M287.206,231.109c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C288.402,231.644,287.866,231.109,287.206,231.109z M290.798,220.333c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C291.994,220.868,291.458,220.333,290.798,220.333z  M287.206,223.925c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C288.402,224.46,287.866,223.925,287.206,223.925z M290.798,213.149c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C291.994,213.685,291.458,213.149,290.798,213.149z  M287.206,216.741c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C288.402,217.277,287.866,216.741,287.206,216.741z M290.798,205.965c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C291.994,206.501,291.458,205.965,290.798,205.965z  M287.206,209.557c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C288.402,210.093,287.866,209.557,287.206,209.557z M290.798,198.781c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C291.994,199.317,291.458,198.781,290.798,198.781z  M287.206,202.373c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C288.402,202.909,287.866,202.373,287.206,202.373z M290.798,191.598c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C291.994,192.133,291.458,191.598,290.798,191.598z  M287.206,195.189c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C288.402,195.725,287.866,195.189,287.206,195.189z M290.798,184.414c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C291.994,184.949,291.458,184.414,290.798,184.414z  M287.206,188.006c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C288.402,188.541,287.866,188.006,287.206,188.006z M290.798,177.23c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C291.994,177.766,291.458,177.23,290.798,177.23z  M287.206,180.822c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C288.402,181.357,287.866,180.822,287.206,180.822z M290.798,170.046c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C291.994,170.582,291.458,170.046,290.798,170.046z  M287.206,173.638c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C288.402,174.174,287.866,173.638,287.206,173.638z M290.798,162.863c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C291.994,163.398,291.458,162.863,290.798,162.863z  M287.206,166.454c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C288.402,166.99,287.866,166.454,287.206,166.454z M290.798,155.679c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C291.994,156.214,291.458,155.679,290.798,155.679z  M287.206,159.27c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C288.402,159.806,287.866,159.27,287.206,159.27z M290.798,148.495c-0.661,0-1.196,0.536-1.196,1.196 c0,0.66,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C291.994,149.03,291.458,148.495,290.798,148.495z  M287.206,152.087c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C288.402,152.622,287.866,152.087,287.206,152.087z M290.798,141.311c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C291.994,141.847,291.458,141.311,290.798,141.311z  M287.206,144.903c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C288.402,145.439,287.866,144.903,287.206,144.903z M290.798,134.127c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C291.994,134.663,291.458,134.127,290.798,134.127z  M294.389,132.928c0.12,0,0.228-0.035,0.337-0.068l-1.522-1.185c-0.001,0.02-0.011,0.037-0.011,0.057 C293.193,132.392,293.729,132.928,294.389,132.928z M287.206,137.719c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C288.402,138.255,287.866,137.719,287.206,137.719z  M287.206,130.535c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C288.402,131.071,287.866,130.535,287.206,130.535z M297.981,284.987c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C299.178,285.523,298.642,284.987,297.981,284.987z  M294.389,288.579c-0.408,0-0.75,0.217-0.966,0.529l2.071,0.216C295.316,288.888,294.89,288.579,294.389,288.579z M297.981,277.803 c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C299.178,278.339,298.642,277.803,297.981,277.803z M294.389,281.395c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C295.586,281.931,295.05,281.395,294.389,281.395z  M297.981,270.62c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C299.178,271.155,298.642,270.62,297.981,270.62z M294.389,274.211c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C295.586,274.747,295.05,274.211,294.389,274.211z  M297.981,263.436c-0.661,0-1.196,0.536-1.196,1.196c0,0.66,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C299.178,263.971,298.642,263.436,297.981,263.436z M294.389,267.028c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C295.586,267.563,295.05,267.028,294.389,267.028z  M297.981,256.252c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C299.178,256.787,298.642,256.252,297.981,256.252z M294.389,259.844c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C295.586,260.379,295.05,259.844,294.389,259.844z  M297.981,249.068c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C299.178,249.604,298.642,249.068,297.981,249.068z M294.389,252.66c-0.661,0-1.196,0.536-1.196,1.196 c0,0.66,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C295.586,253.195,295.05,252.66,294.389,252.66z M297.981,241.884 c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C299.178,242.42,298.642,241.884,297.981,241.884z M294.389,245.476c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C295.586,246.012,295.05,245.476,294.389,245.476z  M297.981,234.701c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C299.178,235.236,298.642,234.701,297.981,234.701z M294.389,238.292c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C295.586,238.828,295.05,238.292,294.389,238.292z  M297.981,227.517c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C299.178,228.052,298.642,227.517,297.981,227.517z M294.389,231.109c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C295.586,231.644,295.05,231.109,294.389,231.109z  M297.981,220.333c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C299.178,220.868,298.642,220.333,297.981,220.333z M294.389,223.925c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C295.586,224.46,295.05,223.925,294.389,223.925z  M297.981,213.149c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C299.178,213.685,298.642,213.149,297.981,213.149z M294.389,216.741c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C295.586,217.277,295.05,216.741,294.389,216.741z  M297.981,205.965c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C299.178,206.501,298.642,205.965,297.981,205.965z M294.389,209.557c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C295.586,210.093,295.05,209.557,294.389,209.557z  M297.981,198.781c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C299.178,199.317,298.642,198.781,297.981,198.781z M294.389,202.373c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C295.586,202.909,295.05,202.373,294.389,202.373z  M297.981,191.598c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C299.178,192.133,298.642,191.598,297.981,191.598z M294.389,195.189c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C295.586,195.725,295.05,195.189,294.389,195.189z  M297.981,184.414c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C299.178,184.949,298.642,184.414,297.981,184.414z M294.389,188.006c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C295.586,188.541,295.05,188.006,294.389,188.006z  M297.981,177.23c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C299.178,177.766,298.642,177.23,297.981,177.23z M294.389,180.822c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C295.586,181.357,295.05,180.822,294.389,180.822z  M297.981,170.046c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C299.178,170.582,298.642,170.046,297.981,170.046z M294.389,173.638c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C295.586,174.174,295.05,173.638,294.389,173.638z  M297.981,162.863c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C299.178,163.398,298.642,162.863,297.981,162.863z M294.389,166.454c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C295.586,166.99,295.05,166.454,294.389,166.454z  M297.981,155.679c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C299.178,156.214,298.642,155.679,297.981,155.679z M294.389,159.27c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C295.586,159.806,295.05,159.27,294.389,159.27z  M297.981,148.495c-0.661,0-1.196,0.536-1.196,1.196c0,0.66,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C299.178,149.03,298.642,148.495,297.981,148.495z M294.389,152.087c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C295.586,152.622,295.05,152.087,294.389,152.087z  M297.981,141.311c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C299.178,141.847,298.642,141.311,297.981,141.311z M294.389,144.903c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C295.586,145.439,295.05,144.903,294.389,144.903z  M297.981,136.52c0.364,0,0.679-0.171,0.898-0.428l-1.857-1.446c-0.138,0.195-0.237,0.42-0.237,0.678 C296.785,135.984,297.321,136.52,297.981,136.52z M300.377,138.915c0,0.661,0.535,1.196,1.196,1.196 c0.598,0,1.072-0.447,1.161-1.02l-1.635-1.273C300.675,138.003,300.377,138.424,300.377,138.915z M294.389,137.719 c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C295.586,138.255,295.05,137.719,294.389,137.719z M305.165,284.987c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C306.361,285.523,305.826,284.987,305.165,284.987z  M301.573,288.579c-0.661,0-1.196,0.536-1.196,1.196c0,0.021,0.011,0.039,0.012,0.059l2.319,0.242 c0.026-0.099,0.061-0.194,0.061-0.301C302.77,289.115,302.234,288.579,301.573,288.579z M305.165,277.803 c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C306.361,278.339,305.826,277.803,305.165,277.803z M301.573,281.395c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C302.77,281.931,302.234,281.395,301.573,281.395z  M305.165,270.62c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C306.361,271.155,305.826,270.62,305.165,270.62z M301.573,274.211c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C302.77,274.747,302.234,274.211,301.573,274.211z  M305.165,263.436c-0.661,0-1.196,0.536-1.196,1.196c0,0.66,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C306.361,263.971,305.826,263.436,305.165,263.436z M301.573,267.028c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C302.77,267.563,302.234,267.028,301.573,267.028z  M305.165,256.252c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C306.361,256.787,305.826,256.252,305.165,256.252z M301.573,259.844c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C302.77,260.379,302.234,259.844,301.573,259.844z  M305.165,249.068c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C306.361,249.604,305.826,249.068,305.165,249.068z M301.573,252.66c-0.661,0-1.196,0.536-1.196,1.196 c0,0.66,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C302.77,253.195,302.234,252.66,301.573,252.66z M305.165,241.884 c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C306.361,242.42,305.826,241.884,305.165,241.884z M301.573,245.476c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C302.77,246.012,302.234,245.476,301.573,245.476z  M305.165,234.701c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C306.361,235.236,305.826,234.701,305.165,234.701z M301.573,238.292c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C302.77,238.828,302.234,238.292,301.573,238.292z  M305.165,227.517c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C306.361,228.052,305.826,227.517,305.165,227.517z M301.573,231.109c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C302.77,231.644,302.234,231.109,301.573,231.109z  M305.165,220.333c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C306.361,220.868,305.826,220.333,305.165,220.333z M301.573,223.925c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C302.77,224.46,302.234,223.925,301.573,223.925z  M305.165,213.149c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C306.361,213.685,305.826,213.149,305.165,213.149z M301.573,216.741c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C302.77,217.277,302.234,216.741,301.573,216.741z  M305.165,205.965c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C306.361,206.501,305.826,205.965,305.165,205.965z M301.573,209.557c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C302.77,210.093,302.234,209.557,301.573,209.557z  M305.165,198.781c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C306.361,199.317,305.826,198.781,305.165,198.781z M301.573,202.373c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C302.77,202.909,302.234,202.373,301.573,202.373z  M305.165,191.598c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C306.361,192.133,305.826,191.598,305.165,191.598z M301.573,195.189c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C302.77,195.725,302.234,195.189,301.573,195.189z  M305.165,184.414c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C306.361,184.949,305.826,184.414,305.165,184.414z M301.573,188.006c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C302.77,188.541,302.234,188.006,301.573,188.006z  M305.165,177.23c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C306.361,177.766,305.826,177.23,305.165,177.23z M301.573,180.822c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C302.77,181.357,302.234,180.822,301.573,180.822z  M305.165,170.046c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C306.361,170.582,305.826,170.046,305.165,170.046z M301.573,173.638c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C302.77,174.174,302.234,173.638,301.573,173.638z  M305.165,162.863c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C306.361,163.398,305.826,162.863,305.165,162.863z M301.573,166.454c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C302.77,166.99,302.234,166.454,301.573,166.454z  M305.165,155.679c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C306.361,156.214,305.826,155.679,305.165,155.679z M301.573,159.27c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C302.77,159.806,302.234,159.27,301.573,159.27z  M305.165,148.495c-0.661,0-1.196,0.536-1.196,1.196c0,0.66,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C306.361,149.03,305.826,148.495,305.165,148.495z M301.573,152.087c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C302.77,152.622,302.234,152.087,301.573,152.087z  M305.165,141.311c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C306.361,141.847,305.826,141.311,305.165,141.311z M301.573,144.903c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C302.77,145.439,302.234,144.903,301.573,144.903z  M309.953,289.775c0-0.661-0.535-1.196-1.196-1.196c-0.661,0-1.196,0.536-1.196,1.196c0,0.329,0.133,0.627,0.349,0.844l1.47,0.153 C309.717,290.56,309.953,290.203,309.953,289.775z M312.349,284.987c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.535,1.196-1.196C313.545,285.523,313.01,284.987,312.349,284.987z  M312.349,277.803c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.535,1.196-1.196 C313.545,278.339,313.01,277.803,312.349,277.803z M308.757,281.395c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C309.953,281.931,309.418,281.395,308.757,281.395z  M312.349,270.62c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.536,1.196-1.196 C313.545,271.155,313.01,270.62,312.349,270.62z M308.757,274.211c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C309.953,274.747,309.418,274.211,308.757,274.211z  M312.349,263.436c-0.661,0-1.196,0.536-1.196,1.196c0,0.66,0.536,1.196,1.196,1.196c0.66,0,1.196-0.536,1.196-1.196 C313.545,263.971,313.01,263.436,312.349,263.436z M308.757,267.028c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C309.953,267.563,309.418,267.028,308.757,267.028z  M312.349,256.252c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.535,1.196-1.196 C313.545,256.787,313.01,256.252,312.349,256.252z M308.757,259.844c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C309.953,260.379,309.418,259.844,308.757,259.844z  M312.349,249.068c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.536,1.196-1.196 C313.545,249.604,313.01,249.068,312.349,249.068z M308.757,252.66c-0.661,0-1.196,0.536-1.196,1.196 c0,0.66,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C309.953,253.195,309.418,252.66,308.757,252.66z  M312.349,241.884c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.535,1.196-1.196 C313.545,242.42,313.01,241.884,312.349,241.884z M308.757,245.476c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C309.953,246.012,309.418,245.476,308.757,245.476z  M312.349,234.701c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.536,1.196-1.196 C313.545,235.236,313.01,234.701,312.349,234.701z M308.757,238.292c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C309.953,238.828,309.418,238.292,308.757,238.292z  M312.349,227.517c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.535,1.196-1.196 C313.545,228.052,313.01,227.517,312.349,227.517z M308.757,231.109c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C309.953,231.644,309.418,231.109,308.757,231.109z  M312.349,220.333c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.536,1.196-1.196 C313.545,220.868,313.01,220.333,312.349,220.333z M308.757,223.925c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C309.953,224.46,309.418,223.925,308.757,223.925z  M312.349,213.149c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.535,1.196-1.196 C313.545,213.685,313.01,213.149,312.349,213.149z M308.757,216.741c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C309.953,217.277,309.418,216.741,308.757,216.741z  M312.349,205.965c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.536,1.196-1.196 C313.545,206.501,313.01,205.965,312.349,205.965z M308.757,209.557c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C309.953,210.093,309.418,209.557,308.757,209.557z  M312.349,198.781c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.535,1.196-1.196 C313.545,199.317,313.01,198.781,312.349,198.781z M308.757,202.373c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C309.953,202.909,309.418,202.373,308.757,202.373z  M312.349,191.598c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.536,1.196-1.196 C313.545,192.133,313.01,191.598,312.349,191.598z M308.757,195.189c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C309.953,195.725,309.418,195.189,308.757,195.189z  M312.349,184.414c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.535,1.196-1.196 C313.545,184.949,313.01,184.414,312.349,184.414z M308.757,188.006c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C309.953,188.541,309.418,188.006,308.757,188.006z  M312.349,177.23c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.536,1.196-1.196 C313.545,177.766,313.01,177.23,312.349,177.23z M308.757,180.822c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C309.953,181.357,309.418,180.822,308.757,180.822z  M312.349,170.046c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.535,1.196-1.196 C313.545,170.582,313.01,170.046,312.349,170.046z M308.757,173.638c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C309.953,174.174,309.418,173.638,308.757,173.638z  M312.349,162.863c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.536,1.196-1.196 C313.545,163.398,313.01,162.863,312.349,162.863z M308.757,166.454c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C309.953,166.99,309.418,166.454,308.757,166.454z  M312.349,155.679c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.535,1.196-1.196 C313.545,156.214,313.01,155.679,312.349,155.679z M308.757,159.27c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C309.953,159.806,309.418,159.27,308.757,159.27z  M312.349,148.495c-0.661,0-1.196,0.536-1.196,1.196c0,0.66,0.536,1.196,1.196,1.196c0.66,0,1.196-0.536,1.196-1.196 C313.545,149.03,313.01,148.495,312.349,148.495z M308.757,152.087c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C309.953,152.622,309.418,152.087,308.757,152.087z  M308.757,144.903c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C309.953,145.439,309.418,144.903,308.757,144.903z M319.533,284.987c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C320.729,285.523,320.193,284.987,319.533,284.987z  M315.941,288.579c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C317.137,289.115,316.602,288.579,315.941,288.579z M319.533,277.803c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C320.729,278.339,320.193,277.803,319.533,277.803z  M315.941,281.395c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C317.137,281.931,316.602,281.395,315.941,281.395z M319.533,270.62c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C320.729,271.155,320.193,270.62,319.533,270.62z  M315.941,274.211c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C317.137,274.747,316.602,274.211,315.941,274.211z M319.533,263.436c-0.661,0-1.196,0.536-1.196,1.196 c0,0.66,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C320.729,263.971,320.193,263.436,319.533,263.436z  M315.941,267.028c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C317.137,267.563,316.602,267.028,315.941,267.028z M319.533,256.252c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C320.729,256.787,320.193,256.252,319.533,256.252z  M315.941,259.844c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C317.137,260.379,316.602,259.844,315.941,259.844z M319.533,249.068c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C320.729,249.604,320.193,249.068,319.533,249.068z  M315.941,252.66c-0.661,0-1.196,0.536-1.196,1.196c0,0.66,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C317.137,253.195,316.602,252.66,315.941,252.66z M319.533,241.884c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C320.729,242.42,320.193,241.884,319.533,241.884z  M315.941,245.476c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C317.137,246.012,316.602,245.476,315.941,245.476z M319.533,234.701c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C320.729,235.236,320.193,234.701,319.533,234.701z  M315.941,238.292c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C317.137,238.828,316.602,238.292,315.941,238.292z M319.533,227.517c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C320.729,228.052,320.193,227.517,319.533,227.517z  M315.941,231.109c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C317.137,231.644,316.602,231.109,315.941,231.109z M319.533,220.333c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C320.729,220.868,320.193,220.333,319.533,220.333z  M315.941,223.925c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C317.137,224.46,316.602,223.925,315.941,223.925z M319.533,213.149c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C320.729,213.685,320.193,213.149,319.533,213.149z  M315.941,216.741c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C317.137,217.277,316.602,216.741,315.941,216.741z M319.533,205.965c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C320.729,206.501,320.193,205.965,319.533,205.965z  M315.941,209.557c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C317.137,210.093,316.602,209.557,315.941,209.557z M319.533,198.781c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C320.729,199.317,320.193,198.781,319.533,198.781z  M315.941,202.373c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C317.137,202.909,316.602,202.373,315.941,202.373z M319.533,191.598c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C320.729,192.133,320.193,191.598,319.533,191.598z  M315.941,195.189c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C317.137,195.725,316.602,195.189,315.941,195.189z M319.533,184.414c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C320.729,184.949,320.193,184.414,319.533,184.414z  M315.941,188.006c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C317.137,188.541,316.602,188.006,315.941,188.006z M319.533,177.23c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C320.729,177.766,320.193,177.23,319.533,177.23z  M315.941,180.822c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C317.137,181.357,316.602,180.822,315.941,180.822z M319.533,170.046c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C320.729,170.582,320.193,170.046,319.533,170.046z  M315.941,173.638c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C317.137,174.174,316.602,173.638,315.941,173.638z M319.533,162.863c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C320.729,163.398,320.193,162.863,319.533,162.863z  M315.941,166.454c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C317.137,166.99,316.602,166.454,315.941,166.454z M319.533,155.679c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C320.729,156.214,320.193,155.679,319.533,155.679z  M315.941,159.27c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C317.137,159.806,316.602,159.27,315.941,159.27z M315.941,152.087c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C317.137,152.622,316.602,152.087,315.941,152.087z  M326.717,292.171c-0.314,0-0.594,0.127-0.808,0.325l1.76,0.184C327.452,292.379,327.115,292.171,326.717,292.171z  M326.717,284.987c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C327.913,285.523,327.377,284.987,326.717,284.987z M323.125,288.579c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.536,1.196-1.196C324.321,289.115,323.785,288.579,323.125,288.579z  M326.717,277.803c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C327.913,278.339,327.377,277.803,326.717,277.803z M323.125,281.395c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.535,1.196-1.196C324.321,281.931,323.785,281.395,323.125,281.395z  M326.717,270.62c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C327.913,271.155,327.377,270.62,326.717,270.62z M323.125,274.211c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.535,1.196-1.196C324.321,274.747,323.785,274.211,323.125,274.211z  M326.717,263.436c-0.661,0-1.196,0.536-1.196,1.196c0,0.66,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C327.913,263.971,327.377,263.436,326.717,263.436z M323.125,267.028c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.535,1.196-1.196C324.321,267.563,323.785,267.028,323.125,267.028z  M326.717,256.252c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C327.913,256.787,327.377,256.252,326.717,256.252z M323.125,259.844c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.536,1.196-1.196C324.321,260.379,323.785,259.844,323.125,259.844z  M326.717,249.068c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C327.913,249.604,327.377,249.068,326.717,249.068z M323.125,252.66c-0.661,0-1.196,0.536-1.196,1.196 c0,0.66,0.536,1.196,1.196,1.196c0.66,0,1.196-0.536,1.196-1.196C324.321,253.195,323.785,252.66,323.125,252.66z M326.717,241.884 c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C327.913,242.42,327.377,241.884,326.717,241.884z M323.125,245.476c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.536,1.196-1.196C324.321,246.012,323.785,245.476,323.125,245.476z  M326.717,234.701c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C327.913,235.236,327.377,234.701,326.717,234.701z M323.125,238.292c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.535,1.196-1.196C324.321,238.828,323.785,238.292,323.125,238.292z  M326.717,227.517c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C327.913,228.052,327.377,227.517,326.717,227.517z M323.125,231.109c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.536,1.196-1.196C324.321,231.644,323.785,231.109,323.125,231.109z  M326.717,220.333c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C327.913,220.868,327.377,220.333,326.717,220.333z M323.125,223.925c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.535,1.196-1.196C324.321,224.46,323.785,223.925,323.125,223.925z  M326.717,213.149c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C327.913,213.685,327.377,213.149,326.717,213.149z M323.125,216.741c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.536,1.196-1.196C324.321,217.277,323.785,216.741,323.125,216.741z  M326.717,205.965c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C327.913,206.501,327.377,205.965,326.717,205.965z M323.125,209.557c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.535,1.196-1.196C324.321,210.093,323.785,209.557,323.125,209.557z  M326.717,198.781c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C327.913,199.317,327.377,198.781,326.717,198.781z M323.125,202.373c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.536,1.196-1.196C324.321,202.909,323.785,202.373,323.125,202.373z  M326.717,191.598c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C327.913,192.133,327.377,191.598,326.717,191.598z M323.125,195.189c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.535,1.196-1.196C324.321,195.725,323.785,195.189,323.125,195.189z  M326.717,184.414c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C327.913,184.949,327.377,184.414,326.717,184.414z M323.125,188.006c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.536,1.196-1.196C324.321,188.541,323.785,188.006,323.125,188.006z  M326.717,177.23c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C327.913,177.766,327.377,177.23,326.717,177.23z M323.125,180.822c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.535,1.196-1.196C324.321,181.357,323.785,180.822,323.125,180.822z  M326.717,170.046c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C327.913,170.582,327.377,170.046,326.717,170.046z M323.125,173.638c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.536,1.196-1.196C324.321,174.174,323.785,173.638,323.125,173.638z  M326.717,162.863c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C327.913,163.398,327.377,162.863,326.717,162.863z M330.309,161.663c0.359,0,0.671-0.166,0.89-0.416l-1.857-1.446 c-0.133,0.193-0.229,0.414-0.229,0.666C329.112,161.127,329.648,161.663,330.309,161.663z M323.125,166.454 c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.535,1.196-1.196 C324.321,166.99,323.785,166.454,323.125,166.454z M326.717,158.071c0.113,0,0.215-0.035,0.319-0.064l-1.507-1.173 c-0.001,0.014-0.008,0.027-0.008,0.041C325.52,157.536,326.056,158.071,326.717,158.071z M323.125,159.27 c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.536,1.196-1.196 C324.321,159.806,323.785,159.27,323.125,159.27z M333.9,292.171c-0.604,0-1.083,0.455-1.164,1.037l2.343,0.244 c0.002-0.03,0.017-0.055,0.017-0.085C335.097,292.706,334.561,292.171,333.9,292.171z M333.9,284.987 c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C335.097,285.523,334.561,284.987,333.9,284.987z M330.309,288.579c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C331.505,289.115,330.969,288.579,330.309,288.579z  M333.9,277.803c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C335.097,278.339,334.561,277.803,333.9,277.803z M330.309,281.395c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C331.505,281.931,330.969,281.395,330.309,281.395z  M333.9,270.62c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C335.097,271.155,334.561,270.62,333.9,270.62z M330.309,274.211c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C331.505,274.747,330.969,274.211,330.309,274.211z  M333.9,263.436c-0.661,0-1.196,0.536-1.196,1.196c0,0.66,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C335.097,263.971,334.561,263.436,333.9,263.436z M330.309,267.028c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C331.505,267.563,330.969,267.028,330.309,267.028z  M333.9,256.252c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C335.097,256.787,334.561,256.252,333.9,256.252z M330.309,259.844c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C331.505,260.379,330.969,259.844,330.309,259.844z  M333.9,249.068c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C335.097,249.604,334.561,249.068,333.9,249.068z M330.309,252.66c-0.661,0-1.196,0.536-1.196,1.196 c0,0.66,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C331.505,253.195,330.969,252.66,330.309,252.66z M333.9,241.884 c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C335.097,242.42,334.561,241.884,333.9,241.884z M330.309,245.476c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C331.505,246.012,330.969,245.476,330.309,245.476z  M333.9,234.701c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C335.097,235.236,334.561,234.701,333.9,234.701z M330.309,238.292c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C331.505,238.828,330.969,238.292,330.309,238.292z  M333.9,227.517c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C335.097,228.052,334.561,227.517,333.9,227.517z M330.309,231.109c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C331.505,231.644,330.969,231.109,330.309,231.109z  M333.9,220.333c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C335.097,220.868,334.561,220.333,333.9,220.333z M330.309,223.925c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C331.505,224.46,330.969,223.925,330.309,223.925z  M333.9,213.149c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C335.097,213.685,334.561,213.149,333.9,213.149z M330.309,216.741c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C331.505,217.277,330.969,216.741,330.309,216.741z  M333.9,205.965c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C335.097,206.501,334.561,205.965,333.9,205.965z M330.309,209.557c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C331.505,210.093,330.969,209.557,330.309,209.557z  M333.9,198.781c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C335.097,199.317,334.561,198.781,333.9,198.781z M330.309,202.373c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C331.505,202.909,330.969,202.373,330.309,202.373z  M333.9,191.598c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C335.097,192.133,334.561,191.598,333.9,191.598z M330.309,195.189c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C331.505,195.725,330.969,195.189,330.309,195.189z  M333.9,184.414c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C335.097,184.949,334.561,184.414,333.9,184.414z M330.309,188.006c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C331.505,188.541,330.969,188.006,330.309,188.006z  M333.9,177.23c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C335.097,177.766,334.561,177.23,333.9,177.23z M330.309,180.822c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C331.505,181.357,330.969,180.822,330.309,180.822z  M333.9,170.046c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C335.097,170.582,334.561,170.046,333.9,170.046z M330.309,173.638c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C331.505,174.174,330.969,173.638,330.309,173.638z  M332.704,164.059c0,0.661,0.536,1.196,1.196,1.196c0.593,0,1.062-0.439,1.157-1.004l-1.644-1.28 C332.997,163.158,332.704,163.572,332.704,164.059z M330.309,166.454c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C331.505,166.99,330.969,166.454,330.309,166.454z  M341.084,292.171c-0.661,0-1.196,0.535-1.196,1.196c0,0.226,0.079,0.426,0.189,0.606l1.883,0.196 c0.195-0.213,0.321-0.491,0.321-0.802C342.28,292.706,341.745,292.171,341.084,292.171z M341.084,284.987 c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C342.28,285.523,341.745,284.987,341.084,284.987z M337.492,288.579c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C338.688,289.115,338.153,288.579,337.492,288.579z  M341.084,277.803c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C342.28,278.339,341.745,277.803,341.084,277.803z M337.492,281.395c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C338.688,281.931,338.153,281.395,337.492,281.395z  M341.084,270.62c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C342.28,271.155,341.745,270.62,341.084,270.62z M337.492,274.211c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C338.688,274.747,338.153,274.211,337.492,274.211z  M341.084,263.436c-0.661,0-1.196,0.536-1.196,1.196c0,0.66,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C342.28,263.971,341.745,263.436,341.084,263.436z M337.492,267.028c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C338.688,267.563,338.153,267.028,337.492,267.028z  M341.084,256.252c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C342.28,256.787,341.745,256.252,341.084,256.252z M337.492,259.844c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C338.688,260.379,338.153,259.844,337.492,259.844z  M341.084,249.068c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C342.28,249.604,341.745,249.068,341.084,249.068z M337.492,252.66c-0.661,0-1.196,0.536-1.196,1.196 c0,0.66,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C338.688,253.195,338.153,252.66,337.492,252.66z  M341.084,241.884c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C342.28,242.42,341.745,241.884,341.084,241.884z M337.492,245.476c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C338.688,246.012,338.153,245.476,337.492,245.476z  M341.084,234.701c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C342.28,235.236,341.745,234.701,341.084,234.701z M337.492,238.292c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C338.688,238.828,338.153,238.292,337.492,238.292z  M341.084,227.517c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C342.28,228.052,341.745,227.517,341.084,227.517z M337.492,231.109c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C338.688,231.644,338.153,231.109,337.492,231.109z  M341.084,220.333c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C342.28,220.868,341.745,220.333,341.084,220.333z M337.492,223.925c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C338.688,224.46,338.153,223.925,337.492,223.925z  M341.084,213.149c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C342.28,213.685,341.745,213.149,341.084,213.149z M337.492,216.741c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C338.688,217.277,338.153,216.741,337.492,216.741z  M341.084,205.965c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C342.28,206.501,341.745,205.965,341.084,205.965z M337.492,209.557c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C338.688,210.093,338.153,209.557,337.492,209.557z  M341.084,198.781c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C342.28,199.317,341.745,198.781,341.084,198.781z M337.492,202.373c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C338.688,202.909,338.153,202.373,337.492,202.373z  M341.084,191.598c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C342.28,192.133,341.745,191.598,341.084,191.598z M337.492,195.189c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C338.688,195.725,338.153,195.189,337.492,195.189z  M341.084,184.414c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C342.28,184.949,341.745,184.414,341.084,184.414z M337.492,188.006c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C338.688,188.541,338.153,188.006,337.492,188.006z  M341.084,177.23c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C342.28,177.766,341.745,177.23,341.084,177.23z M337.492,180.822c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C338.688,181.357,338.153,180.822,337.492,180.822z  M341.084,170.046c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C342.28,170.582,341.745,170.046,341.084,170.046z M337.492,173.638c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C338.688,174.174,338.153,173.638,337.492,173.638z  M337.492,166.454c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C338.688,166.99,338.153,166.454,337.492,166.454z M348.268,292.171c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C349.464,292.706,348.929,292.171,348.268,292.171z  M348.268,284.987c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C349.464,285.523,348.929,284.987,348.268,284.987z M344.676,288.579c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C345.872,289.115,345.337,288.579,344.676,288.579z  M348.268,277.803c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C349.464,278.339,348.929,277.803,348.268,277.803z M344.676,281.395c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C345.872,281.931,345.337,281.395,344.676,281.395z  M348.268,270.62c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C349.464,271.155,348.929,270.62,348.268,270.62z M344.676,274.211c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C345.872,274.747,345.337,274.211,344.676,274.211z  M348.268,263.436c-0.661,0-1.196,0.536-1.196,1.196c0,0.66,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C349.464,263.971,348.929,263.436,348.268,263.436z M344.676,267.028c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C345.872,267.563,345.337,267.028,344.676,267.028z  M348.268,256.252c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C349.464,256.787,348.929,256.252,348.268,256.252z M344.676,259.844c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C345.872,260.379,345.337,259.844,344.676,259.844z  M348.268,249.068c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C349.464,249.604,348.929,249.068,348.268,249.068z M344.676,252.66c-0.661,0-1.196,0.536-1.196,1.196 c0,0.66,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C345.872,253.195,345.337,252.66,344.676,252.66z  M348.268,241.884c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C349.464,242.42,348.929,241.884,348.268,241.884z M344.676,245.476c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C345.872,246.012,345.337,245.476,344.676,245.476z  M348.268,234.701c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C349.464,235.236,348.929,234.701,348.268,234.701z M344.676,238.292c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C345.872,238.828,345.337,238.292,344.676,238.292z  M348.268,227.517c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C349.464,228.052,348.929,227.517,348.268,227.517z M344.676,231.109c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C345.872,231.644,345.337,231.109,344.676,231.109z  M348.268,220.333c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C349.464,220.868,348.929,220.333,348.268,220.333z M344.676,223.925c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C345.872,224.46,345.337,223.925,344.676,223.925z  M348.268,213.149c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C349.464,213.685,348.929,213.149,348.268,213.149z M344.676,216.741c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C345.872,217.277,345.337,216.741,344.676,216.741z  M348.268,205.965c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C349.464,206.501,348.929,205.965,348.268,205.965z M344.676,209.557c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C345.872,210.093,345.337,209.557,344.676,209.557z  M348.268,198.781c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C349.464,199.317,348.929,198.781,348.268,198.781z M344.676,202.373c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C345.872,202.909,345.337,202.373,344.676,202.373z  M348.268,191.598c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C349.464,192.133,348.929,191.598,348.268,191.598z M344.676,195.189c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C345.872,195.725,345.337,195.189,344.676,195.189z  M348.268,184.414c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C349.464,184.949,348.929,184.414,348.268,184.414z M344.676,188.006c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C345.872,188.541,345.337,188.006,344.676,188.006z  M348.268,177.23c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C349.464,177.766,348.929,177.23,348.268,177.23z M344.676,180.822c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C345.872,181.357,345.337,180.822,344.676,180.822z  M344.676,173.638c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C345.872,174.174,345.337,173.638,344.676,173.638z M355.452,292.171c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C356.648,292.706,356.112,292.171,355.452,292.171z  M358.519,295.896l1.241,0.129c-0.202-0.155-0.442-0.263-0.716-0.263C358.853,295.763,358.679,295.817,358.519,295.896z  M355.452,284.987c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C356.648,285.523,356.112,284.987,355.452,284.987z M351.86,288.579c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C353.056,289.115,352.521,288.579,351.86,288.579z  M355.452,277.803c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C356.648,278.339,356.112,277.803,355.452,277.803z M351.86,281.395c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C353.056,281.931,352.521,281.395,351.86,281.395z  M355.452,270.62c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C356.648,271.155,356.112,270.62,355.452,270.62z M351.86,274.211c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C353.056,274.747,352.521,274.211,351.86,274.211z  M355.452,263.436c-0.661,0-1.196,0.536-1.196,1.196c0,0.66,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C356.648,263.971,356.112,263.436,355.452,263.436z M351.86,267.028c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C353.056,267.563,352.521,267.028,351.86,267.028z  M355.452,256.252c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C356.648,256.787,356.112,256.252,355.452,256.252z M351.86,259.844c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C353.056,260.379,352.521,259.844,351.86,259.844z  M355.452,249.068c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C356.648,249.604,356.112,249.068,355.452,249.068z M351.86,252.66c-0.661,0-1.196,0.536-1.196,1.196 c0,0.66,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C353.056,253.195,352.521,252.66,351.86,252.66z M355.452,241.884 c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C356.648,242.42,356.112,241.884,355.452,241.884z M351.86,245.476c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C353.056,246.012,352.521,245.476,351.86,245.476z  M355.452,234.701c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C356.648,235.236,356.112,234.701,355.452,234.701z M351.86,238.292c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C353.056,238.828,352.521,238.292,351.86,238.292z  M355.452,227.517c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C356.648,228.052,356.112,227.517,355.452,227.517z M351.86,231.109c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C353.056,231.644,352.521,231.109,351.86,231.109z  M355.452,220.333c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C356.648,220.868,356.112,220.333,355.452,220.333z M351.86,223.925c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C353.056,224.46,352.521,223.925,351.86,223.925z  M355.452,213.149c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C356.648,213.685,356.112,213.149,355.452,213.149z M351.86,216.741c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C353.056,217.277,352.521,216.741,351.86,216.741z  M355.452,205.965c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C356.648,206.501,356.112,205.965,355.452,205.965z M351.86,209.557c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C353.056,210.093,352.521,209.557,351.86,209.557z  M355.452,198.781c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C356.648,199.317,356.112,198.781,355.452,198.781z M351.86,202.373c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C353.056,202.909,352.521,202.373,351.86,202.373z  M355.452,191.598c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C356.648,192.133,356.112,191.598,355.452,191.598z M351.86,195.189c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C353.056,195.725,352.521,195.189,351.86,195.189z  M355.452,184.414c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C356.648,184.949,356.112,184.414,355.452,184.414z M359.044,183.214c0.107,0,0.202-0.035,0.301-0.061l-1.492-1.161 c0,0.009-0.005,0.017-0.005,0.026C357.848,182.679,358.383,183.214,359.044,183.214z M351.86,188.006 c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C353.056,188.541,352.521,188.006,351.86,188.006z M351.86,180.822c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C353.056,181.357,352.521,180.822,351.86,180.822z  M362.636,292.171c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C363.832,292.706,363.296,292.171,362.636,292.171z M362.636,284.987c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C363.832,285.523,363.296,284.987,362.636,284.987z  M359.044,288.579c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C360.24,289.115,359.704,288.579,359.044,288.579z M362.636,277.803c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C363.832,278.339,363.296,277.803,362.636,277.803z  M359.044,281.395c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C360.24,281.931,359.704,281.395,359.044,281.395z M362.636,270.62c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C363.832,271.155,363.296,270.62,362.636,270.62z  M359.044,274.211c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C360.24,274.747,359.704,274.211,359.044,274.211z M362.636,263.436c-0.661,0-1.196,0.536-1.196,1.196 c0,0.66,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C363.832,263.971,363.296,263.436,362.636,263.436z  M359.044,267.028c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C360.24,267.563,359.704,267.028,359.044,267.028z M362.636,256.252c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C363.832,256.787,363.296,256.252,362.636,256.252z  M359.044,259.844c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C360.24,260.379,359.704,259.844,359.044,259.844z M362.636,249.068c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C363.832,249.604,363.296,249.068,362.636,249.068z  M359.044,252.66c-0.661,0-1.196,0.536-1.196,1.196c0,0.66,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C360.24,253.195,359.704,252.66,359.044,252.66z M362.636,241.884c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C363.832,242.42,363.296,241.884,362.636,241.884z  M359.044,245.476c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C360.24,246.012,359.704,245.476,359.044,245.476z M362.636,234.701c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C363.832,235.236,363.296,234.701,362.636,234.701z  M359.044,238.292c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C360.24,238.828,359.704,238.292,359.044,238.292z M362.636,227.517c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C363.832,228.052,363.296,227.517,362.636,227.517z  M359.044,231.109c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C360.24,231.644,359.704,231.109,359.044,231.109z M362.636,220.333c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C363.832,220.868,363.296,220.333,362.636,220.333z  M359.044,223.925c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C360.24,224.46,359.704,223.925,359.044,223.925z M362.636,213.149c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C363.832,213.685,363.296,213.149,362.636,213.149z  M359.044,216.741c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C360.24,217.277,359.704,216.741,359.044,216.741z M362.636,205.965c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C363.832,206.501,363.296,205.965,362.636,205.965z  M359.044,209.557c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C360.24,210.093,359.704,209.557,359.044,209.557z M362.636,198.781c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C363.832,199.317,363.296,198.781,362.636,198.781z  M359.044,202.373c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C360.24,202.909,359.704,202.373,359.044,202.373z M362.636,191.598c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C363.832,192.133,363.296,191.598,362.636,191.598z  M359.044,195.189c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C360.24,195.725,359.704,195.189,359.044,195.189z M362.636,186.806c0.354,0,0.663-0.16,0.882-0.404l-1.857-1.446 c-0.128,0.191-0.221,0.407-0.221,0.654C361.439,186.271,361.975,186.806,362.636,186.806z M365.031,189.202 c0,0.661,0.535,1.196,1.196,1.196c0.587,0,1.053-0.431,1.154-0.989l-1.653-1.287C365.319,188.312,365.031,188.721,365.031,189.202z  M359.044,188.006c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C360.24,188.541,359.704,188.006,359.044,188.006z M369.819,292.171c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C371.016,292.706,370.48,292.171,369.819,292.171z  M366.227,295.763c-0.527,0-0.961,0.347-1.12,0.821l2.289,0.239C367.325,296.229,366.84,295.763,366.227,295.763z M369.819,284.987 c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C371.016,285.523,370.48,284.987,369.819,284.987z M366.227,288.579c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C367.424,289.115,366.888,288.579,366.227,288.579z  M369.819,277.803c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C371.016,278.339,370.48,277.803,369.819,277.803z M366.227,281.395c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C367.424,281.931,366.888,281.395,366.227,281.395z  M369.819,270.62c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C371.016,271.155,370.48,270.62,369.819,270.62z M366.227,274.211c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C367.424,274.747,366.888,274.211,366.227,274.211z  M369.819,263.436c-0.661,0-1.196,0.536-1.196,1.196c0,0.66,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C371.016,263.971,370.48,263.436,369.819,263.436z M366.227,267.028c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C367.424,267.563,366.888,267.028,366.227,267.028z  M369.819,256.252c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C371.016,256.787,370.48,256.252,369.819,256.252z M366.227,259.844c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C367.424,260.379,366.888,259.844,366.227,259.844z  M369.819,249.068c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C371.016,249.604,370.48,249.068,369.819,249.068z M366.227,252.66c-0.661,0-1.196,0.536-1.196,1.196 c0,0.66,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C367.424,253.195,366.888,252.66,366.227,252.66z  M369.819,241.884c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C371.016,242.42,370.48,241.884,369.819,241.884z M366.227,245.476c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C367.424,246.012,366.888,245.476,366.227,245.476z  M369.819,234.701c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C371.016,235.236,370.48,234.701,369.819,234.701z M366.227,238.292c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C367.424,238.828,366.888,238.292,366.227,238.292z  M369.819,227.517c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C371.016,228.052,370.48,227.517,369.819,227.517z M366.227,231.109c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C367.424,231.644,366.888,231.109,366.227,231.109z  M369.819,220.333c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C371.016,220.868,370.48,220.333,369.819,220.333z M366.227,223.925c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C367.424,224.46,366.888,223.925,366.227,223.925z  M369.819,213.149c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C371.016,213.685,370.48,213.149,369.819,213.149z M366.227,216.741c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C367.424,217.277,366.888,216.741,366.227,216.741z  M369.819,205.965c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C371.016,206.501,370.48,205.965,369.819,205.965z M366.227,209.557c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C367.424,210.093,366.888,209.557,366.227,209.557z  M369.819,198.781c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C371.016,199.317,370.48,198.781,369.819,198.781z M366.227,202.373c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C367.424,202.909,366.888,202.373,366.227,202.373z  M368.623,192.794c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196c0-0.315-0.127-0.597-0.326-0.81l-0.186-0.145 c-0.196-0.141-0.424-0.241-0.684-0.241C369.159,191.598,368.623,192.133,368.623,192.794z M366.227,195.189 c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C367.424,195.725,366.888,195.189,366.227,195.189z M377.003,292.171c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C378.199,292.706,377.664,292.171,377.003,292.171z  M373.411,295.763c-0.661,0-1.196,0.536-1.196,1.196c0,0.133,0.036,0.255,0.075,0.374l2.135,0.223 c0.105-0.178,0.182-0.374,0.182-0.596C374.607,296.298,374.072,295.763,373.411,295.763z M377.003,284.987 c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C378.199,285.523,377.664,284.987,377.003,284.987z M373.411,288.579c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C374.607,289.115,374.072,288.579,373.411,288.579z  M377.003,277.803c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C378.199,278.339,377.664,277.803,377.003,277.803z M373.411,281.395c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C374.607,281.931,374.072,281.395,373.411,281.395z  M377.003,270.62c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C378.199,271.155,377.664,270.62,377.003,270.62z M373.411,274.211c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C374.607,274.747,374.072,274.211,373.411,274.211z  M377.003,263.436c-0.661,0-1.196,0.536-1.196,1.196c0,0.66,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C378.199,263.971,377.664,263.436,377.003,263.436z M373.411,267.028c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C374.607,267.563,374.072,267.028,373.411,267.028z  M377.003,256.252c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C378.199,256.787,377.664,256.252,377.003,256.252z M373.411,259.844c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C374.607,260.379,374.072,259.844,373.411,259.844z  M377.003,249.068c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C378.199,249.604,377.664,249.068,377.003,249.068z M373.411,252.66c-0.661,0-1.196,0.536-1.196,1.196 c0,0.66,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C374.607,253.195,374.072,252.66,373.411,252.66z  M377.003,241.884c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C378.199,242.42,377.664,241.884,377.003,241.884z M373.411,245.476c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C374.607,246.012,374.072,245.476,373.411,245.476z  M377.003,234.701c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C378.199,235.236,377.664,234.701,377.003,234.701z M373.411,238.292c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C374.607,238.828,374.072,238.292,373.411,238.292z  M377.003,227.517c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C378.199,228.052,377.664,227.517,377.003,227.517z M373.411,231.109c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C374.607,231.644,374.072,231.109,373.411,231.109z  M377.003,220.333c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C378.199,220.868,377.664,220.333,377.003,220.333z M373.411,223.925c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C374.607,224.46,374.072,223.925,373.411,223.925z  M377.003,213.149c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C378.199,213.685,377.664,213.149,377.003,213.149z M373.411,216.741c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C374.607,217.277,374.072,216.741,373.411,216.741z  M377.003,205.965c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C378.199,206.501,377.664,205.965,377.003,205.965z M373.411,209.557c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C374.607,210.093,374.072,209.557,373.411,209.557z  M377.003,198.781c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C378.199,199.317,377.664,198.781,377.003,198.781z M373.411,202.373c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C374.607,202.909,374.072,202.373,373.411,202.373z  M373.411,195.189c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C374.607,195.725,374.072,195.189,373.411,195.189z M384.187,292.171c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C385.383,292.706,384.848,292.171,384.187,292.171z  M380.595,295.763c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.535,1.196-1.196 C381.791,296.298,381.256,295.763,380.595,295.763z M384.187,284.987c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C385.383,285.523,384.848,284.987,384.187,284.987z  M380.595,288.579c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.536,1.196-1.196 C381.791,289.115,381.256,288.579,380.595,288.579z M384.187,277.803c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C385.383,278.339,384.848,277.803,384.187,277.803z  M380.595,281.395c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.535,1.196-1.196 C381.791,281.931,381.256,281.395,380.595,281.395z M384.187,270.62c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C385.383,271.155,384.848,270.62,384.187,270.62z  M380.595,274.211c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.535,1.196-1.196 C381.791,274.747,381.256,274.211,380.595,274.211z M384.187,263.436c-0.661,0-1.196,0.536-1.196,1.196 c0,0.66,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C385.383,263.971,384.848,263.436,384.187,263.436z  M380.595,267.028c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.535,1.196-1.196 C381.791,267.563,381.256,267.028,380.595,267.028z M384.187,256.252c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C385.383,256.787,384.848,256.252,384.187,256.252z  M380.595,259.844c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.536,1.196-1.196 C381.791,260.379,381.256,259.844,380.595,259.844z M384.187,249.068c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C385.383,249.604,384.848,249.068,384.187,249.068z  M380.595,252.66c-0.661,0-1.196,0.536-1.196,1.196c0,0.66,0.536,1.196,1.196,1.196c0.66,0,1.196-0.536,1.196-1.196 C381.791,253.195,381.256,252.66,380.595,252.66z M384.187,241.884c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C385.383,242.42,384.848,241.884,384.187,241.884z  M380.595,245.476c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.536,1.196-1.196 C381.791,246.012,381.256,245.476,380.595,245.476z M384.187,234.701c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C385.383,235.236,384.848,234.701,384.187,234.701z  M380.595,238.292c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.535,1.196-1.196 C381.791,238.828,381.256,238.292,380.595,238.292z M384.187,227.517c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C385.383,228.052,384.848,227.517,384.187,227.517z  M380.595,231.109c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.536,1.196-1.196 C381.791,231.644,381.256,231.109,380.595,231.109z M384.187,220.333c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C385.383,220.868,384.848,220.333,384.187,220.333z  M380.595,223.925c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.535,1.196-1.196 C381.791,224.46,381.256,223.925,380.595,223.925z M384.187,213.149c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C385.383,213.685,384.848,213.149,384.187,213.149z  M380.595,216.741c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.536,1.196-1.196 C381.791,217.277,381.256,216.741,380.595,216.741z M384.187,205.965c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C385.383,206.501,384.848,205.965,384.187,205.965z  M380.595,209.557c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.535,1.196-1.196 C381.791,210.093,381.256,209.557,380.595,209.557z M380.595,202.373c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.536,1.196-1.196C381.791,202.909,381.256,202.373,380.595,202.373z  M391.371,292.171c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C392.567,292.706,392.031,292.171,391.371,292.171z M387.779,295.763c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C388.975,296.298,388.44,295.763,387.779,295.763z  M391.371,284.987c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C392.567,285.523,392.031,284.987,391.371,284.987z M387.779,288.579c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C388.975,289.115,388.44,288.579,387.779,288.579z  M391.371,277.803c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C392.567,278.339,392.031,277.803,391.371,277.803z M387.779,281.395c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C388.975,281.931,388.44,281.395,387.779,281.395z  M391.371,270.62c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C392.567,271.155,392.031,270.62,391.371,270.62z M387.779,274.211c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C388.975,274.747,388.44,274.211,387.779,274.211z  M391.371,263.436c-0.661,0-1.196,0.536-1.196,1.196c0,0.66,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C392.567,263.971,392.031,263.436,391.371,263.436z M387.779,267.028c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C388.975,267.563,388.44,267.028,387.779,267.028z  M391.371,256.252c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C392.567,256.787,392.031,256.252,391.371,256.252z M387.779,259.844c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C388.975,260.379,388.44,259.844,387.779,259.844z  M391.371,249.068c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C392.567,249.604,392.031,249.068,391.371,249.068z M387.779,252.66c-0.661,0-1.196,0.536-1.196,1.196 c0,0.66,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C388.975,253.195,388.44,252.66,387.779,252.66z M391.371,241.884 c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C392.567,242.42,392.031,241.884,391.371,241.884z M387.779,245.476c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C388.975,246.012,388.44,245.476,387.779,245.476z  M391.371,234.701c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C392.567,235.236,392.031,234.701,391.371,234.701z M387.779,238.292c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C388.975,238.828,388.44,238.292,387.779,238.292z  M391.371,227.517c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C392.567,228.052,392.031,227.517,391.371,227.517z M387.779,231.109c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C388.975,231.644,388.44,231.109,387.779,231.109z  M391.371,220.333c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C392.567,220.868,392.031,220.333,391.371,220.333z M387.779,223.925c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C388.975,224.46,388.44,223.925,387.779,223.925z  M391.371,213.149c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C392.567,213.685,392.031,213.149,391.371,213.149z M394.963,211.949c0.349,0,0.656-0.155,0.874-0.393l-1.857-1.446 c-0.123,0.188-0.213,0.4-0.213,0.642C393.766,211.414,394.302,211.949,394.963,211.949z M387.779,216.741 c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C388.975,217.277,388.44,216.741,387.779,216.741z M391.371,208.358c0.1,0,0.189-0.034,0.282-0.057l-1.477-1.149 c0,0.004-0.002,0.007-0.002,0.01C390.175,207.822,390.71,208.358,391.371,208.358z M387.779,209.557 c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C388.975,210.093,388.44,209.557,387.779,209.557z M398.555,299.355c-0.443,0-0.814,0.252-1.021,0.61l2.144,0.224 C399.522,299.708,399.087,299.355,398.555,299.355z M398.555,292.171c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C399.751,292.706,399.215,292.171,398.555,292.171z  M394.963,295.763c-0.66,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C396.159,296.298,395.623,295.763,394.963,295.763z M398.555,284.987c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C399.751,285.523,399.215,284.987,398.555,284.987z  M394.963,288.579c-0.66,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C396.159,289.115,395.623,288.579,394.963,288.579z M398.555,277.803c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C399.751,278.339,399.215,277.803,398.555,277.803z  M394.963,281.395c-0.66,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C396.159,281.931,395.623,281.395,394.963,281.395z M398.555,270.62c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C399.751,271.155,399.215,270.62,398.555,270.62z  M394.963,274.211c-0.66,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C396.159,274.747,395.623,274.211,394.963,274.211z M398.555,263.436c-0.661,0-1.196,0.536-1.196,1.196 c0,0.66,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C399.751,263.971,399.215,263.436,398.555,263.436z  M394.963,267.028c-0.66,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C396.159,267.563,395.623,267.028,394.963,267.028z M398.555,256.252c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C399.751,256.787,399.215,256.252,398.555,256.252z  M394.963,259.844c-0.66,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C396.159,260.379,395.623,259.844,394.963,259.844z M398.555,249.068c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C399.751,249.604,399.215,249.068,398.555,249.068z  M394.963,252.66c-0.66,0-1.196,0.536-1.196,1.196c0,0.66,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C396.159,253.195,395.623,252.66,394.963,252.66z M398.555,241.884c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C399.751,242.42,399.215,241.884,398.555,241.884z  M394.963,245.476c-0.66,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C396.159,246.012,395.623,245.476,394.963,245.476z M398.555,234.701c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C399.751,235.236,399.215,234.701,398.555,234.701z  M394.963,238.292c-0.66,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C396.159,238.828,395.623,238.292,394.963,238.292z M398.555,227.517c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C399.751,228.052,399.215,227.517,398.555,227.517z  M394.963,231.109c-0.66,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C396.159,231.644,395.623,231.109,394.963,231.109z M398.555,220.333c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C399.751,220.868,399.215,220.333,398.555,220.333z  M394.963,223.925c-0.66,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C396.159,224.46,395.623,223.925,394.963,223.925z M397.358,214.345c0,0.661,0.536,1.196,1.196,1.196 c0.582,0,1.044-0.423,1.151-0.973l-1.663-1.294C397.641,213.467,397.358,213.87,397.358,214.345z M400.95,217.937 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196c0-0.298-0.12-0.563-0.301-0.773l-0.384-0.299 c-0.156-0.075-0.326-0.124-0.511-0.124C401.486,216.741,400.95,217.277,400.95,217.937z M394.963,216.741 c-0.66,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C396.159,217.277,395.623,216.741,394.963,216.741z M405.738,299.355c-0.661,0-1.196,0.536-1.196,1.196 c0,0.053,0.023,0.097,0.03,0.148l2.284,0.238c0.043-0.123,0.078-0.249,0.078-0.386C406.935,299.89,406.399,299.355,405.738,299.355 z M405.738,292.171c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C406.935,292.706,406.399,292.171,405.738,292.171z M402.147,295.763c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C403.343,296.298,402.807,295.763,402.147,295.763z  M405.738,284.987c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C406.935,285.523,406.399,284.987,405.738,284.987z M402.147,288.579c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C403.343,289.115,402.807,288.579,402.147,288.579z  M405.738,277.803c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C406.935,278.339,406.399,277.803,405.738,277.803z M402.147,281.395c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C403.343,281.931,402.807,281.395,402.147,281.395z  M405.738,270.62c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C406.935,271.155,406.399,270.62,405.738,270.62z M402.147,274.211c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C403.343,274.747,402.807,274.211,402.147,274.211z  M405.738,263.436c-0.661,0-1.196,0.536-1.196,1.196c0,0.66,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C406.935,263.971,406.399,263.436,405.738,263.436z M402.147,267.028c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C403.343,267.563,402.807,267.028,402.147,267.028z  M405.738,256.252c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C406.935,256.787,406.399,256.252,405.738,256.252z M402.147,259.844c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C403.343,260.379,402.807,259.844,402.147,259.844z  M405.738,249.068c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C406.935,249.604,406.399,249.068,405.738,249.068z M402.147,252.66c-0.661,0-1.196,0.536-1.196,1.196 c0,0.66,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C403.343,253.195,402.807,252.66,402.147,252.66z  M405.738,241.884c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C406.935,242.42,406.399,241.884,405.738,241.884z M402.147,245.476c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C403.343,246.012,402.807,245.476,402.147,245.476z  M405.738,234.701c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C406.935,235.236,406.399,234.701,405.738,234.701z M402.147,238.292c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C403.343,238.828,402.807,238.292,402.147,238.292z  M405.738,227.517c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C406.935,228.052,406.399,227.517,405.738,227.517z M402.147,231.109c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C403.343,231.644,402.807,231.109,402.147,231.109z  M405.738,220.333c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C406.935,220.868,406.399,220.333,405.738,220.333z M402.147,223.925c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C403.343,224.46,402.807,223.925,402.147,223.925z  M414.118,300.551c0-0.661-0.535-1.196-1.196-1.196c-0.661,0-1.196,0.536-1.196,1.196c0,0.395,0.204,0.728,0.499,0.946l1.207,0.126 C413.835,301.431,414.118,301.027,414.118,300.551z M412.922,292.171c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C414.118,292.706,413.583,292.171,412.922,292.171z  M409.33,295.763c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C410.526,296.298,409.991,295.763,409.33,295.763z M412.922,284.987c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C414.118,285.523,413.583,284.987,412.922,284.987z  M409.33,288.579c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C410.526,289.115,409.991,288.579,409.33,288.579z M412.922,277.803c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C414.118,278.339,413.583,277.803,412.922,277.803z  M409.33,281.395c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C410.526,281.931,409.991,281.395,409.33,281.395z M412.922,270.62c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C414.118,271.155,413.583,270.62,412.922,270.62z  M409.33,274.211c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C410.526,274.747,409.991,274.211,409.33,274.211z M412.922,263.436c-0.661,0-1.196,0.536-1.196,1.196 c0,0.66,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C414.118,263.971,413.583,263.436,412.922,263.436z  M409.33,267.028c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C410.526,267.563,409.991,267.028,409.33,267.028z M412.922,256.252c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C414.118,256.787,413.583,256.252,412.922,256.252z  M409.33,259.844c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C410.526,260.379,409.991,259.844,409.33,259.844z M412.922,249.068c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C414.118,249.604,413.583,249.068,412.922,249.068z  M409.33,252.66c-0.661,0-1.196,0.536-1.196,1.196c0,0.66,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C410.526,253.195,409.991,252.66,409.33,252.66z M412.922,241.884c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C414.118,242.42,413.583,241.884,412.922,241.884z  M409.33,245.476c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C410.526,246.012,409.991,245.476,409.33,245.476z M412.922,234.701c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C414.118,235.236,413.583,234.701,412.922,234.701z  M409.33,238.292c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C410.526,238.828,409.991,238.292,409.33,238.292z M412.922,227.517c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C414.118,228.052,413.583,227.517,412.922,227.517z  M409.33,231.109c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C410.526,231.644,409.991,231.109,409.33,231.109z M409.33,223.925c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C410.526,224.46,409.991,223.925,409.33,223.925z  M420.106,299.355c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C421.302,299.89,420.767,299.355,420.106,299.355z M420.106,292.171c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C421.302,292.706,420.767,292.171,420.106,292.171z  M416.514,295.763c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.535,1.196-1.196 C417.71,296.298,417.175,295.763,416.514,295.763z M420.106,284.987c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C421.302,285.523,420.767,284.987,420.106,284.987z  M416.514,288.579c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.536,1.196-1.196 C417.71,289.115,417.175,288.579,416.514,288.579z M420.106,277.803c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C421.302,278.339,420.767,277.803,420.106,277.803z  M416.514,281.395c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.535,1.196-1.196 C417.71,281.931,417.175,281.395,416.514,281.395z M420.106,270.62c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C421.302,271.155,420.767,270.62,420.106,270.62z  M416.514,274.211c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.535,1.196-1.196 C417.71,274.747,417.175,274.211,416.514,274.211z M420.106,263.436c-0.661,0-1.196,0.536-1.196,1.196 c0,0.66,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C421.302,263.971,420.767,263.436,420.106,263.436z  M416.514,267.028c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.535,1.196-1.196 C417.71,267.563,417.175,267.028,416.514,267.028z M420.106,256.252c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C421.302,256.787,420.767,256.252,420.106,256.252z  M416.514,259.844c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.536,1.196-1.196 C417.71,260.379,417.175,259.844,416.514,259.844z M420.106,249.068c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C421.302,249.604,420.767,249.068,420.106,249.068z  M416.514,252.66c-0.661,0-1.196,0.536-1.196,1.196c0,0.66,0.536,1.196,1.196,1.196c0.66,0,1.196-0.536,1.196-1.196 C417.71,253.195,417.175,252.66,416.514,252.66z M420.106,241.884c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C421.302,242.42,420.767,241.884,420.106,241.884z  M416.514,245.476c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.536,1.196-1.196 C417.71,246.012,417.175,245.476,416.514,245.476z M420.106,234.701c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C421.302,235.236,420.767,234.701,420.106,234.701z  M423.698,233.501c0.094,0,0.177-0.033,0.264-0.053l-1.459-1.135C422.507,232.969,423.04,233.501,423.698,233.501z  M416.514,238.292c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.535,1.196-1.196 C417.71,238.828,417.175,238.292,416.514,238.292z M416.514,231.109c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.536,1.196-1.196C417.71,231.644,417.175,231.109,416.514,231.109z  M427.29,299.355c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.536,1.196-1.196 C428.486,299.89,427.95,299.355,427.29,299.355z M427.29,292.171c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.535,1.196-1.196C428.486,292.706,427.95,292.171,427.29,292.171z  M423.698,295.763c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C424.894,296.298,424.359,295.763,423.698,295.763z M427.29,284.987c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.535,1.196-1.196C428.486,285.523,427.95,284.987,427.29,284.987z  M423.698,288.579c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C424.894,289.115,424.359,288.579,423.698,288.579z M427.29,277.803c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.535,1.196-1.196C428.486,278.339,427.95,277.803,427.29,277.803z  M423.698,281.395c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C424.894,281.931,424.359,281.395,423.698,281.395z M427.29,270.62c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.536,1.196-1.196C428.486,271.155,427.95,270.62,427.29,270.62z M423.698,274.211 c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C424.894,274.747,424.359,274.211,423.698,274.211z M427.29,263.436c-0.661,0-1.196,0.536-1.196,1.196 c0,0.66,0.536,1.196,1.196,1.196c0.66,0,1.196-0.536,1.196-1.196C428.486,263.971,427.95,263.436,427.29,263.436z M423.698,267.028 c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C424.894,267.563,424.359,267.028,423.698,267.028z M427.29,256.252c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.535,1.196-1.196C428.486,256.787,427.95,256.252,427.29,256.252z  M423.698,259.844c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C424.894,260.379,424.359,259.844,423.698,259.844z M427.29,249.068c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.536,1.196-1.196C428.486,249.604,427.95,249.068,427.29,249.068z M423.698,252.66 c-0.661,0-1.196,0.536-1.196,1.196c0,0.66,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C424.894,253.195,424.359,252.66,423.698,252.66z M427.29,241.884c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.535,1.196-1.196C428.486,242.42,427.95,241.884,427.29,241.884z M423.698,245.476 c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C424.894,246.012,424.359,245.476,423.698,245.476z M427.29,237.093c0.344,0,0.648-0.149,0.866-0.381l-1.858-1.446 c-0.118,0.186-0.205,0.394-0.205,0.63C426.094,236.557,426.629,237.093,427.29,237.093z M429.686,239.489 c0,0.661,0.536,1.196,1.196,1.196c0.576,0,1.035-0.415,1.148-0.958l-1.672-1.301C429.963,238.621,429.686,239.018,429.686,239.489z  M423.698,238.292c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C424.894,238.828,424.359,238.292,423.698,238.292z M434.474,299.355c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C435.67,299.89,435.134,299.355,434.474,299.355z  M430.882,302.947c-0.354,0-0.663,0.16-0.882,0.404l1.898,0.198C431.69,303.195,431.322,302.947,430.882,302.947z M434.474,292.171 c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C435.67,292.706,435.134,292.171,434.474,292.171z M430.882,295.763c-0.66,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C432.078,296.298,431.542,295.763,430.882,295.763z  M434.474,284.987c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C435.67,285.523,435.134,284.987,434.474,284.987z M430.882,288.579c-0.66,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C432.078,289.115,431.542,288.579,430.882,288.579z  M434.474,277.803c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C435.67,278.339,435.134,277.803,434.474,277.803z M430.882,281.395c-0.66,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C432.078,281.931,431.542,281.395,430.882,281.395z  M434.474,270.62c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C435.67,271.155,435.134,270.62,434.474,270.62z M430.882,274.211c-0.66,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C432.078,274.747,431.542,274.211,430.882,274.211z  M434.474,263.436c-0.661,0-1.196,0.536-1.196,1.196c0,0.66,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C435.67,263.971,435.134,263.436,434.474,263.436z M430.882,267.028c-0.66,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C432.078,267.563,431.542,267.028,430.882,267.028z  M434.474,256.252c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C435.67,256.787,435.134,256.252,434.474,256.252z M430.882,259.844c-0.66,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C432.078,260.379,431.542,259.844,430.882,259.844z  M434.474,249.068c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C435.67,249.604,435.134,249.068,434.474,249.068z M430.882,252.66c-0.66,0-1.196,0.536-1.196,1.196 c0,0.66,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C432.078,253.195,431.542,252.66,430.882,252.66z  M433.277,243.081c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196c0-0.282-0.112-0.53-0.275-0.735l-0.478-0.372 c-0.137-0.055-0.286-0.089-0.443-0.089C433.813,241.884,433.277,242.42,433.277,243.081z M430.882,245.476 c-0.66,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C432.078,246.012,431.542,245.476,430.882,245.476z M441.657,299.355c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C442.854,299.89,442.318,299.355,441.657,299.355z  M438.066,302.947c-0.634,0-1.141,0.498-1.181,1.122l2.343,0.244c0.009-0.058,0.034-0.11,0.034-0.17 C439.262,303.482,438.726,302.947,438.066,302.947z M441.657,292.171c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C442.854,292.706,442.318,292.171,441.657,292.171z  M438.066,295.763c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C439.262,296.298,438.726,295.763,438.066,295.763z M441.657,284.987c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C442.854,285.523,442.318,284.987,441.657,284.987z  M438.066,288.579c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C439.262,289.115,438.726,288.579,438.066,288.579z M441.657,277.803c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C442.854,278.339,442.318,277.803,441.657,277.803z  M438.066,281.395c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C439.262,281.931,438.726,281.395,438.066,281.395z M441.657,270.62c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C442.854,271.155,442.318,270.62,441.657,270.62z  M438.066,274.211c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C439.262,274.747,438.726,274.211,438.066,274.211z M441.657,263.436c-0.661,0-1.196,0.536-1.196,1.196 c0,0.66,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C442.854,263.971,442.318,263.436,441.657,263.436z  M438.066,267.028c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C439.262,267.563,438.726,267.028,438.066,267.028z M441.657,256.252c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C442.854,256.787,442.318,256.252,441.657,256.252z  M438.066,259.844c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C439.262,260.379,438.726,259.844,438.066,259.844z M441.657,249.068c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C442.854,249.604,442.318,249.068,441.657,249.068z  M438.066,252.66c-0.661,0-1.196,0.536-1.196,1.196c0,0.66,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C439.262,253.195,438.726,252.66,438.066,252.66z M438.066,245.476c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C439.262,246.012,438.726,245.476,438.066,245.476z  M446.445,304.143c0-0.661-0.535-1.196-1.196-1.196c-0.661,0-1.196,0.535-1.196,1.196c0,0.267,0.104,0.501,0.252,0.7l1.738,0.181 C446.286,304.805,446.445,304.496,446.445,304.143z M448.841,299.355c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C450.037,299.89,449.502,299.355,448.841,299.355z  M448.841,292.171c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C450.037,292.706,449.502,292.171,448.841,292.171z M445.249,295.763c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C446.445,296.298,445.91,295.763,445.249,295.763z  M448.841,284.987c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C450.037,285.523,449.502,284.987,448.841,284.987z M445.249,288.579c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C446.445,289.115,445.91,288.579,445.249,288.579z  M448.841,277.803c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C450.037,278.339,449.502,277.803,448.841,277.803z M445.249,281.395c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C446.445,281.931,445.91,281.395,445.249,281.395z  M448.841,270.62c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C450.037,271.155,449.502,270.62,448.841,270.62z M445.249,274.211c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C446.445,274.747,445.91,274.211,445.249,274.211z  M448.841,263.436c-0.661,0-1.196,0.536-1.196,1.196c0,0.66,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C450.037,263.971,449.502,263.436,448.841,263.436z M445.249,267.028c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C446.445,267.563,445.91,267.028,445.249,267.028z  M448.841,256.252c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C450.037,256.787,449.502,256.252,448.841,256.252z M445.249,259.844c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C446.445,260.379,445.91,259.844,445.249,259.844z  M445.249,252.66c-0.661,0-1.196,0.536-1.196,1.196c0,0.66,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C446.445,253.195,445.91,252.66,445.249,252.66z M456.025,299.355c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C457.221,299.89,456.686,299.355,456.025,299.355z  M452.433,302.947c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C453.629,303.482,453.094,302.947,452.433,302.947z M456.025,292.171c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C457.221,292.706,456.686,292.171,456.025,292.171z  M452.433,295.763c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C453.629,296.298,453.094,295.763,452.433,295.763z M456.025,284.987c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C457.221,285.523,456.686,284.987,456.025,284.987z  M452.433,288.579c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C453.629,289.115,453.094,288.579,452.433,288.579z M456.025,277.803c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C457.221,278.339,456.686,277.803,456.025,277.803z  M452.433,281.395c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C453.629,281.931,453.094,281.395,452.433,281.395z M456.025,270.62c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C457.221,271.155,456.686,270.62,456.025,270.62z  M452.433,274.211c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C453.629,274.747,453.094,274.211,452.433,274.211z M456.025,263.436c-0.661,0-1.196,0.536-1.196,1.196 c0,0.66,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C457.221,263.971,456.686,263.436,456.025,263.436z  M459.617,262.236c0.339,0,0.641-0.143,0.859-0.369l-1.858-1.446c-0.114,0.183-0.197,0.387-0.197,0.618 C458.421,261.701,458.956,262.236,459.617,262.236z M452.433,267.028c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C453.629,267.563,453.094,267.028,452.433,267.028z  M456.025,258.644c0.087,0,0.164-0.032,0.246-0.05l-1.436-1.118C454.851,258.123,455.375,258.644,456.025,258.644z  M452.433,259.844c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C453.629,260.379,453.094,259.844,452.433,259.844z M463.209,306.539c-0.24,0-0.45,0.088-0.637,0.209l1.492,0.156 C463.847,306.68,463.546,306.539,463.209,306.539z M463.209,299.355c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C464.405,299.89,463.869,299.355,463.209,299.355z  M459.617,302.947c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C460.813,303.482,460.278,302.947,459.617,302.947z M463.209,292.171c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C464.405,292.706,463.869,292.171,463.209,292.171z  M459.617,295.763c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C460.813,296.298,460.278,295.763,459.617,295.763z M463.209,284.987c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C464.405,285.523,463.869,284.987,463.209,284.987z  M459.617,288.579c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C460.813,289.115,460.278,288.579,459.617,288.579z M463.209,277.803c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C464.405,278.339,463.869,277.803,463.209,277.803z  M459.617,281.395c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C460.813,281.931,460.278,281.395,459.617,281.395z M463.209,270.62c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C464.405,271.155,463.869,270.62,463.209,270.62z  M459.617,274.211c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C460.813,274.747,460.278,274.211,459.617,274.211z M462.013,264.632c0,0.66,0.536,1.196,1.196,1.196 c0.57,0,1.025-0.408,1.145-0.942l-1.681-1.309C462.285,263.775,462.013,264.167,462.013,264.632z M465.605,268.224 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196c0-0.266-0.103-0.499-0.25-0.697l-0.535-0.416 c-0.129-0.048-0.266-0.083-0.412-0.083C466.14,267.028,465.605,267.563,465.605,268.224z M459.617,267.028 c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C460.813,267.563,460.278,267.028,459.617,267.028z M470.393,306.539c-0.558,0-1.005,0.39-1.138,0.906l2.324,0.242 C471.553,307.05,471.036,306.539,470.393,306.539z M470.393,299.355c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C471.589,299.89,471.053,299.355,470.393,299.355z  M466.801,302.947c-0.66,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C467.997,303.482,467.461,302.947,466.801,302.947z M470.393,292.171c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C471.589,292.706,471.053,292.171,470.393,292.171z  M466.801,295.763c-0.66,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C467.997,296.298,467.461,295.763,466.801,295.763z M470.393,284.987c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C471.589,285.523,471.053,284.987,470.393,284.987z  M466.801,288.579c-0.66,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C467.997,289.115,467.461,288.579,466.801,288.579z M470.393,277.803c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C471.589,278.339,471.053,277.803,470.393,277.803z  M466.801,281.395c-0.66,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C467.997,281.931,467.461,281.395,466.801,281.395z M470.393,270.62c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C471.589,271.155,471.053,270.62,470.393,270.62z  M466.801,274.211c-0.66,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C467.997,274.747,467.461,274.211,466.801,274.211z M477.576,306.539c-0.661,0-1.196,0.535-1.196,1.196 c0,0.164,0.034,0.32,0.093,0.463l2.062,0.215c0.138-0.195,0.237-0.42,0.237-0.678C478.773,307.074,478.237,306.539,477.576,306.539 z M477.576,299.355c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C478.773,299.89,478.237,299.355,477.576,299.355z M473.985,302.947c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C475.181,303.482,474.645,302.947,473.985,302.947z  M477.576,292.171c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C478.773,292.706,478.237,292.171,477.576,292.171z M473.985,295.763c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C475.181,296.298,474.645,295.763,473.985,295.763z  M477.576,284.987c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C478.773,285.523,478.237,284.987,477.576,284.987z M473.985,288.579c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C475.181,289.115,474.645,288.579,473.985,288.579z  M477.576,277.803c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C478.773,278.339,478.237,277.803,477.576,277.803z M473.985,281.395c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C475.181,281.931,474.645,281.395,473.985,281.395z  M473.985,274.211c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C475.181,274.747,474.645,274.211,473.985,274.211z M484.76,306.539c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.535,1.196-1.196C485.956,307.074,485.421,306.539,484.76,306.539z  M484.76,299.355c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.536,1.196-1.196 C485.956,299.89,485.421,299.355,484.76,299.355z M481.168,302.947c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C482.365,303.482,481.829,302.947,481.168,302.947z  M484.76,292.171c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.535,1.196-1.196 C485.956,292.706,485.421,292.171,484.76,292.171z M481.168,295.763c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C482.365,296.298,481.829,295.763,481.168,295.763z  M484.76,284.987c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.535,1.196-1.196 C485.956,285.523,485.421,284.987,484.76,284.987z M488.352,283.788c0.081,0,0.151-0.031,0.228-0.046l-1.414-1.1 C487.194,283.277,487.709,283.788,488.352,283.788z M481.168,288.579c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C482.365,289.115,481.829,288.579,481.168,288.579z  M481.168,281.395c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C482.365,281.931,481.829,281.395,481.168,281.395z M491.944,306.539c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C493.14,307.074,492.605,306.539,491.944,306.539z  M495.356,310.167l0.662,0.069c-0.148-0.066-0.31-0.105-0.482-0.105C495.472,310.13,495.417,310.157,495.356,310.167z  M491.944,299.355c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C493.14,299.89,492.605,299.355,491.944,299.355z M488.352,302.947c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C489.548,303.482,489.013,302.947,488.352,302.947z  M491.944,292.171c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C493.14,292.706,492.605,292.171,491.944,292.171z M488.352,295.763c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C489.548,296.298,489.013,295.763,488.352,295.763z  M491.944,287.379c0.333,0,0.634-0.137,0.851-0.357l-1.857-1.446c-0.109,0.181-0.189,0.38-0.189,0.607 C490.748,286.844,491.283,287.379,491.944,287.379z M494.34,289.775c0,0.661,0.535,1.196,1.196,1.196 c0.565,0,1.017-0.4,1.142-0.927l-1.69-1.316C494.607,288.929,494.34,289.316,494.34,289.775z M488.352,288.579 c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C489.548,289.115,489.013,288.579,488.352,288.579z M499.128,306.539c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C500.324,307.074,499.788,306.539,499.128,306.539z  M499.128,299.355c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C500.324,299.89,499.788,299.355,499.128,299.355z M495.536,302.947c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C496.732,303.482,496.197,302.947,495.536,302.947z  M497.932,293.367c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196c0-0.249-0.094-0.468-0.224-0.659l-0.591-0.46 c-0.121-0.041-0.246-0.077-0.381-0.077C498.467,292.171,497.932,292.706,497.932,293.367z M495.536,295.763 c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C496.732,296.298,496.197,295.763,495.536,295.763z M506.312,306.539c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C507.508,307.074,506.972,306.539,506.312,306.539z  M502.72,310.13c-0.479,0-0.885,0.286-1.076,0.692l2.217,0.231C503.734,310.529,503.283,310.13,502.72,310.13z M506.312,299.355 c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C507.508,299.89,506.972,299.355,506.312,299.355z M508.707,304.143c0,0.661,0.536,1.196,1.196,1.196 c0.661,0,1.196-0.535,1.196-1.196c0-0.661-0.536-1.196-1.196-1.196C509.243,302.947,508.707,303.482,508.707,304.143z  M502.72,302.947c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C503.916,303.482,503.38,302.947,502.72,302.947z M502.72,295.763c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C503.916,296.298,503.38,295.763,502.72,295.763z  M512.299,307.735c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196c0-0.661-0.535-1.196-1.196-1.196 C512.835,306.539,512.299,307.074,512.299,307.735z M509.903,310.13c-0.661,0-1.196,0.536-1.196,1.196 c0,0.084,0.031,0.158,0.048,0.237l2.246,0.234c0.062-0.145,0.098-0.304,0.098-0.472C511.1,310.666,510.564,310.13,509.903,310.13z  M524.271,312.523c0.328,0,0.625-0.133,0.841-0.347l-1.856-1.444c-0.105,0.178-0.181,0.374-0.181,0.595 C523.075,311.987,523.61,312.523,524.271,312.523z M518.284,311.327c0-0.661-0.536-1.196-1.196-1.196 c-0.661,0-1.196,0.536-1.196,1.196c0,0.462,0.27,0.85,0.653,1.05l0.837,0.087C517.896,312.33,518.284,311.883,518.284,311.327z  M520.679,308.931c0.074,0,0.139-0.029,0.209-0.042l-1.391-1.083C519.536,308.431,520.044,308.931,520.679,308.931z  M321.391,57.989c0-0.633-0.496-1.138-1.118-1.18h-0.156c-0.594,0.04-1.061,0.506-1.102,1.101l1.502,1.211 C321.018,58.977,321.391,58.535,321.391,57.989z M327.379,63.977c-0.225,0-0.424,0.079-0.603,0.187l1.723,1.389 c0.041-0.121,0.077-0.245,0.077-0.379C328.575,64.512,328.04,63.977,327.379,63.977z M324.983,61.581 c0-0.661-0.535-1.196-1.196-1.196c-0.426,0-0.781,0.235-0.993,0.569l1.833,1.477C324.846,62.215,324.983,61.914,324.983,61.581z  M326.183,57.989c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196c0-0.633-0.496-1.138-1.118-1.18h-0.156 C326.679,56.851,326.183,57.356,326.183,57.989z M329.775,61.581c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 c0-0.661-0.536-1.196-1.196-1.196C330.31,60.385,329.775,60.921,329.775,61.581z M334.563,63.977c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C335.759,64.512,335.224,63.977,334.563,63.977z M331.011,67.577 l1.094,0.882C331.971,67.964,331.544,67.595,331.011,67.577z M333.367,57.989c0,0.661,0.535,1.196,1.196,1.196 c0.661,0,1.196-0.535,1.196-1.196c0-0.633-0.496-1.138-1.118-1.18h-0.156C333.863,56.851,333.367,57.356,333.367,57.989z  M341.747,71.161c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C342.943,71.696,342.407,71.161,341.747,71.161z M341.747,63.977c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C342.943,64.512,342.407,63.977,341.747,63.977z M338.155,67.569 c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C339.351,68.104,338.815,67.569,338.155,67.569z M340.551,57.989c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 c0-0.633-0.496-1.138-1.118-1.18h-0.156C341.046,56.851,340.551,57.356,340.551,57.989z M338.155,60.385 c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C339.351,60.921,338.815,60.385,338.155,60.385z M348.931,78.344c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.535,1.196-1.196C350.127,78.88,349.591,78.344,348.931,78.344z M348.931,71.161 c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.535,1.196-1.196 C350.127,71.696,349.591,71.161,348.931,71.161z M345.339,74.753c-0.661,0-1.196,0.536-1.196,1.196c0,0.66,0.536,1.196,1.196,1.196 c0.661,0,1.196-0.536,1.196-1.196C346.535,75.288,345.999,74.753,345.339,74.753z M348.931,63.977 c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.535,1.196-1.196 C350.127,64.512,349.591,63.977,348.931,63.977z M345.339,67.569c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C346.535,68.104,345.999,67.569,345.339,67.569z M347.734,57.989 c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.535,1.196-1.196c0-0.633-0.496-1.138-1.118-1.18h-0.156 C348.23,56.851,347.734,57.356,347.734,57.989z M345.339,60.385c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196 c0.661,0,1.196-0.536,1.196-1.196C346.535,60.921,345.999,60.385,345.339,60.385z M357.31,86.725c0-0.661-0.535-1.196-1.196-1.196 c-0.661,0-1.196,0.536-1.196,1.196c0,0.05,0.023,0.093,0.029,0.142l1.28,1.031C356.832,87.839,357.31,87.345,357.31,86.725z  M356.114,78.344c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C357.31,78.88,356.775,78.344,356.114,78.344z M352.522,81.936c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196 c0.661,0,1.196-0.535,1.196-1.196C353.719,82.472,353.183,81.936,352.522,81.936z M356.114,71.161 c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C357.31,71.696,356.775,71.161,356.114,71.161z M352.522,74.753c-0.661,0-1.196,0.536-1.196,1.196c0,0.66,0.536,1.196,1.196,1.196 c0.661,0,1.196-0.536,1.196-1.196C353.719,75.288,353.183,74.753,352.522,74.753z M356.114,63.977 c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C357.31,64.512,356.775,63.977,356.114,63.977z M352.522,67.569c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196 c0.661,0,1.196-0.535,1.196-1.196C353.719,68.104,353.183,67.569,352.522,67.569z M354.918,57.989c0,0.661,0.536,1.196,1.196,1.196 c0.661,0,1.196-0.535,1.196-1.196c0-0.633-0.496-1.138-1.118-1.18h-0.156C355.414,56.851,354.918,57.356,354.918,57.989z  M352.522,60.385c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C353.719,60.921,353.183,60.385,352.522,60.385z M363.298,92.712c-0.287,0-0.54,0.115-0.746,0.283l1.8,1.451 c0.084-0.164,0.143-0.341,0.143-0.538C364.494,93.248,363.959,92.712,363.298,92.712z M360.902,90.316 c0-0.661-0.536-1.196-1.196-1.196c-0.485,0-0.898,0.292-1.086,0.707l1.782,1.436C360.698,91.045,360.902,90.712,360.902,90.316z  M363.298,85.528c-0.661,0-1.196,0.536-1.196,1.196c0,0.66,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C364.494,86.064,363.959,85.528,363.298,85.528z M363.298,78.344c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C364.494,78.88,363.959,78.344,363.298,78.344z M359.706,81.936 c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C360.902,82.472,360.367,81.936,359.706,81.936z M363.298,71.161c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C364.494,71.696,363.959,71.161,363.298,71.161z M359.706,74.753 c-0.661,0-1.196,0.536-1.196,1.196c0,0.66,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C360.902,75.288,360.367,74.753,359.706,74.753z M363.298,63.977c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C364.494,64.512,363.959,63.977,363.298,63.977z M359.706,67.569 c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C360.902,68.104,360.367,67.569,359.706,67.569z M362.102,57.989c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 c0-0.633-0.496-1.138-1.118-1.18h-0.156C362.598,56.851,362.102,57.356,362.102,57.989z M359.706,60.385 c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C360.902,60.921,360.367,60.385,359.706,60.385z M370.482,92.712c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C371.678,93.248,371.143,92.712,370.482,92.712z M366.89,96.304 c-0.066,0-0.123,0.027-0.186,0.038l1.372,1.105C368.046,96.812,367.532,96.304,366.89,96.304z M370.482,85.528 c-0.661,0-1.196,0.536-1.196,1.196c0,0.66,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C371.678,86.064,371.143,85.528,370.482,85.528z M366.89,89.12c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196 c0.661,0,1.196-0.535,1.196-1.196C368.086,89.656,367.551,89.12,366.89,89.12z M370.482,78.344c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C371.678,78.88,371.143,78.344,370.482,78.344z M366.89,81.936 c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C368.086,82.472,367.551,81.936,366.89,81.936z M370.482,71.161c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196 c0.661,0,1.196-0.535,1.196-1.196C371.678,71.696,371.143,71.161,370.482,71.161z M366.89,74.753c-0.661,0-1.196,0.536-1.196,1.196 c0,0.66,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C368.086,75.288,367.551,74.753,366.89,74.753z M370.482,63.977 c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C371.678,64.512,371.143,63.977,370.482,63.977z M366.89,67.569c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196 c0.661,0,1.196-0.535,1.196-1.196C368.086,68.104,367.551,67.569,366.89,67.569z M369.286,57.989c0,0.661,0.535,1.196,1.196,1.196 c0.661,0,1.196-0.535,1.196-1.196c0-0.633-0.496-1.138-1.118-1.18h-0.156C369.782,56.851,369.286,57.356,369.286,57.989z  M366.89,60.385c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C368.086,60.921,367.551,60.385,366.89,60.385z M377.666,99.896c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196 c0.661,0,1.196-0.535,1.196-1.196C378.862,100.431,378.326,99.896,377.666,99.896z M377.666,92.712 c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C378.862,93.248,378.326,92.712,377.666,92.712z M374.074,96.304c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C375.27,96.84,374.734,96.304,374.074,96.304z M377.666,85.528 c-0.661,0-1.196,0.536-1.196,1.196c0,0.66,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C378.862,86.064,378.326,85.528,377.666,85.528z M374.074,89.12c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196 c0.661,0,1.196-0.535,1.196-1.196C375.27,89.656,374.734,89.12,374.074,89.12z M377.666,78.344c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C378.862,78.88,378.326,78.344,377.666,78.344z M374.074,81.936 c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C375.27,82.472,374.734,81.936,374.074,81.936z M377.666,71.161c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196 c0.661,0,1.196-0.535,1.196-1.196C378.862,71.696,378.326,71.161,377.666,71.161z M374.074,74.753 c-0.661,0-1.196,0.536-1.196,1.196c0,0.66,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C375.27,75.288,374.734,74.753,374.074,74.753z M377.666,63.977c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196 c0.661,0,1.196-0.535,1.196-1.196C378.862,64.512,378.326,63.977,377.666,63.977z M374.074,67.569 c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C375.27,68.104,374.734,67.569,374.074,67.569z M376.47,57.989c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 c0-0.633-0.496-1.138-1.118-1.18h-0.156C376.965,56.851,376.47,57.356,376.47,57.989z M374.074,60.385 c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C375.27,60.921,374.734,60.385,374.074,60.385z M384.85,107.08c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196 c0.661,0,1.196-0.535,1.196-1.196C386.046,107.615,385.51,107.08,384.85,107.08z M384.85,99.896c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C386.046,100.431,385.51,99.896,384.85,99.896z M381.258,103.488 c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C382.454,104.023,381.918,103.488,381.258,103.488z M384.85,92.712c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C386.046,93.248,385.51,92.712,384.85,92.712z M381.258,96.304 c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C382.454,96.84,381.918,96.304,381.258,96.304z M384.85,85.528c-0.661,0-1.196,0.536-1.196,1.196c0,0.66,0.536,1.196,1.196,1.196 c0.661,0,1.196-0.536,1.196-1.196C386.046,86.064,385.51,85.528,384.85,85.528z M381.258,89.12c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C382.454,89.656,381.918,89.12,381.258,89.12z M384.85,78.344 c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C386.046,78.88,385.51,78.344,384.85,78.344z M381.258,81.936c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196 c0.661,0,1.196-0.535,1.196-1.196C382.454,82.472,381.918,81.936,381.258,81.936z M384.85,71.161c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C386.046,71.696,385.51,71.161,384.85,71.161z M381.258,74.753 c-0.661,0-1.196,0.536-1.196,1.196c0,0.66,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C382.454,75.288,381.918,74.753,381.258,74.753z M384.85,63.977c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196 c0.661,0,1.196-0.535,1.196-1.196C386.046,64.512,385.51,63.977,384.85,63.977z M381.258,67.569c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C382.454,68.104,381.918,67.569,381.258,67.569z M383.653,57.989 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196c0-0.633-0.496-1.138-1.118-1.18h-0.156 C384.149,56.851,383.653,57.356,383.653,57.989z M381.258,60.385c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C382.454,60.921,381.918,60.385,381.258,60.385z M393.229,115.46 c0-0.661-0.535-1.196-1.196-1.196c-0.661,0-1.196,0.536-1.196,1.196c0,0.14,0.035,0.27,0.08,0.395l0.953,0.768 c0.056,0.008,0.105,0.033,0.163,0.033C392.694,116.656,393.229,116.12,393.229,115.46z M392.033,107.08 c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C393.229,107.615,392.694,107.08,392.033,107.08z M388.441,110.672c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C389.638,111.207,389.102,110.672,388.441,110.672z  M392.033,99.896c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C393.229,100.431,392.694,99.896,392.033,99.896z M388.441,103.488c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C389.638,104.023,389.102,103.488,388.441,103.488z  M392.033,92.712c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C393.229,93.248,392.694,92.712,392.033,92.712z M388.441,96.304c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C389.638,96.84,389.102,96.304,388.441,96.304z M392.033,85.528 c-0.661,0-1.196,0.536-1.196,1.196c0,0.66,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C393.229,86.064,392.694,85.528,392.033,85.528z M388.441,89.12c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196 c0.661,0,1.196-0.535,1.196-1.196C389.638,89.656,389.102,89.12,388.441,89.12z M392.033,78.344c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C393.229,78.88,392.694,78.344,392.033,78.344z M388.441,81.936 c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C389.638,82.472,389.102,81.936,388.441,81.936z M392.033,71.161c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C393.229,71.696,392.694,71.161,392.033,71.161z M388.441,74.753 c-0.661,0-1.196,0.536-1.196,1.196c0,0.66,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C389.638,75.288,389.102,74.753,388.441,74.753z M392.033,63.977c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C393.229,64.512,392.694,63.977,392.033,63.977z M388.441,67.569 c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C389.638,68.104,389.102,67.569,388.441,67.569z M390.837,57.989c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 c0-0.633-0.496-1.138-1.118-1.18h-0.156C391.333,56.851,390.837,57.356,390.837,57.989z M388.441,60.385 c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C389.638,60.921,389.102,60.385,388.441,60.385z M399.217,121.447c-0.348,0-0.655,0.155-0.874,0.392l1.835,1.479 c0.137-0.195,0.235-0.419,0.235-0.675C400.413,121.983,399.878,121.447,399.217,121.447z M396.821,119.051 c0-0.661-0.536-1.196-1.196-1.196c-0.549,0-0.992,0.377-1.133,0.881l1.686,1.358C396.556,119.894,396.821,119.509,396.821,119.051z  M399.217,114.263c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C400.413,114.799,399.878,114.263,399.217,114.263z M399.217,107.08c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C400.413,107.615,399.878,107.08,399.217,107.08z  M395.625,110.672c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.536,1.196-1.196 C396.821,111.207,396.286,110.672,395.625,110.672z M399.217,99.896c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C400.413,100.431,399.878,99.896,399.217,99.896z  M395.625,103.488c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.535,1.196-1.196 C396.821,104.023,396.286,103.488,395.625,103.488z M399.217,92.712c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C400.413,93.248,399.878,92.712,399.217,92.712z M395.625,96.304 c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.535,1.196-1.196 C396.821,96.84,396.286,96.304,395.625,96.304z M399.217,85.528c-0.661,0-1.196,0.536-1.196,1.196c0,0.66,0.536,1.196,1.196,1.196 c0.661,0,1.196-0.536,1.196-1.196C400.413,86.064,399.878,85.528,399.217,85.528z M395.625,89.12c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.535,1.196-1.196C396.821,89.656,396.286,89.12,395.625,89.12z M399.217,78.344 c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C400.413,78.88,399.878,78.344,399.217,78.344z M395.625,81.936c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196 c0.66,0,1.196-0.535,1.196-1.196C396.821,82.472,396.286,81.936,395.625,81.936z M399.217,71.161c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C400.413,71.696,399.878,71.161,399.217,71.161z M395.625,74.753 c-0.661,0-1.196,0.536-1.196,1.196c0,0.66,0.536,1.196,1.196,1.196c0.66,0,1.196-0.536,1.196-1.196 C396.821,75.288,396.286,74.753,395.625,74.753z M399.217,63.977c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C400.413,64.512,399.878,63.977,399.217,63.977z M395.625,67.569 c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.535,1.196-1.196 C396.821,68.104,396.286,67.569,395.625,67.569z M398.021,57.989c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 c0-0.633-0.496-1.138-1.118-1.18h-0.156C398.517,56.851,398.021,57.356,398.021,57.989z M395.625,60.385 c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.536,1.196-1.196 C396.821,60.921,396.286,60.385,395.625,60.385z M406.992,128.81l0.304,0.245C407.21,128.955,407.107,128.877,406.992,128.81z  M406.401,121.447c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C407.597,121.983,407.062,121.447,406.401,121.447z M402.809,125.039c-0.141,0-0.271,0.035-0.396,0.08l1.563,1.26 c0.006-0.049,0.029-0.093,0.029-0.144C404.005,125.575,403.47,125.039,402.809,125.039z M406.401,114.263 c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C407.597,114.799,407.062,114.263,406.401,114.263z M402.809,117.855c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C404.005,118.391,403.47,117.855,402.809,117.855z  M406.401,107.08c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C407.597,107.615,407.062,107.08,406.401,107.08z M402.809,110.672c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C404.005,111.207,403.47,110.672,402.809,110.672z  M406.401,99.896c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C407.597,100.431,407.062,99.896,406.401,99.896z M402.809,103.488c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C404.005,104.023,403.47,103.488,402.809,103.488z  M406.401,92.712c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C407.597,93.248,407.062,92.712,406.401,92.712z M402.809,96.304c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C404.005,96.84,403.47,96.304,402.809,96.304z M406.401,85.528 c-0.661,0-1.196,0.536-1.196,1.196c0,0.66,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C407.597,86.064,407.062,85.528,406.401,85.528z M402.809,89.12c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196 c0.661,0,1.196-0.535,1.196-1.196C404.005,89.656,403.47,89.12,402.809,89.12z M406.401,78.344c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C407.597,78.88,407.062,78.344,406.401,78.344z M402.809,81.936 c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C404.005,82.472,403.47,81.936,402.809,81.936z M406.401,71.161c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196 c0.661,0,1.196-0.535,1.196-1.196C407.597,71.696,407.062,71.161,406.401,71.161z M402.809,74.753 c-0.661,0-1.196,0.536-1.196,1.196c0,0.66,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C404.005,75.288,403.47,74.753,402.809,74.753z M406.401,63.977c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196 c0.661,0,1.196-0.535,1.196-1.196C407.597,64.512,407.062,63.977,406.401,63.977z M402.809,67.569 c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C404.005,68.104,403.47,67.569,402.809,67.569z M405.205,57.989c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 c0-0.633-0.496-1.138-1.118-1.18h-0.156C405.701,56.851,405.205,57.356,405.205,57.989z M402.809,60.385 c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C404.005,60.921,403.47,60.385,402.809,60.385z M413.585,128.631c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C414.781,129.167,414.245,128.631,413.585,128.631z  M413.585,121.447c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C414.781,121.983,414.245,121.447,413.585,121.447z M409.993,125.039c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C411.189,125.575,410.654,125.039,409.993,125.039z  M413.585,114.263c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C414.781,114.799,414.245,114.263,413.585,114.263z M409.993,117.855c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C411.189,118.391,410.654,117.855,409.993,117.855z  M413.585,107.08c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C414.781,107.615,414.245,107.08,413.585,107.08z M409.993,110.672c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C411.189,111.207,410.654,110.672,409.993,110.672z  M413.585,99.896c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C414.781,100.431,414.245,99.896,413.585,99.896z M409.993,103.488c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C411.189,104.023,410.654,103.488,409.993,103.488z  M413.585,92.712c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C414.781,93.248,414.245,92.712,413.585,92.712z M409.993,96.304c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C411.189,96.84,410.654,96.304,409.993,96.304z M413.585,85.528 c-0.661,0-1.196,0.536-1.196,1.196c0,0.66,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C414.781,86.064,414.245,85.528,413.585,85.528z M409.993,89.12c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196 c0.661,0,1.196-0.535,1.196-1.196C411.189,89.656,410.654,89.12,409.993,89.12z M413.585,78.344c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C414.781,78.88,414.245,78.344,413.585,78.344z M409.993,81.936 c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C411.189,82.472,410.654,81.936,409.993,81.936z M413.585,71.161c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C414.781,71.696,414.245,71.161,413.585,71.161z M409.993,74.753 c-0.661,0-1.196,0.536-1.196,1.196c0,0.66,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C411.189,75.288,410.654,74.753,409.993,74.753z M413.585,63.977c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C414.781,64.512,414.245,63.977,413.585,63.977z M409.993,67.569 c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C411.189,68.104,410.654,67.569,409.993,67.569z M412.389,57.989c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 c0-0.633-0.496-1.138-1.118-1.18h-0.156C412.884,56.851,412.389,57.356,412.389,57.989z M409.993,60.385 c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C411.189,60.921,410.654,60.385,409.993,60.385z M420.768,135.815c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C421.965,136.35,421.429,135.815,420.768,135.815z  M420.768,128.631c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C421.965,129.167,421.429,128.631,420.768,128.631z M417.177,132.223c-0.661,0-1.196,0.536-1.196,1.196 c0,0.66,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C418.373,132.758,417.837,132.223,417.177,132.223z  M420.768,121.447c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C421.965,121.983,421.429,121.447,420.768,121.447z M417.177,125.039c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C418.373,125.575,417.837,125.039,417.177,125.039z  M420.768,114.263c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C421.965,114.799,421.429,114.263,420.768,114.263z M417.177,117.855c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C418.373,118.391,417.837,117.855,417.177,117.855z  M420.768,107.08c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C421.965,107.615,421.429,107.08,420.768,107.08z M417.177,110.672c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C418.373,111.207,417.837,110.672,417.177,110.672z  M420.768,99.896c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C421.965,100.431,421.429,99.896,420.768,99.896z M417.177,103.488c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C418.373,104.023,417.837,103.488,417.177,103.488z  M420.768,92.712c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C421.965,93.248,421.429,92.712,420.768,92.712z M417.177,96.304c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C418.373,96.84,417.837,96.304,417.177,96.304z M420.768,85.528 c-0.661,0-1.196,0.536-1.196,1.196c0,0.66,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C421.965,86.064,421.429,85.528,420.768,85.528z M417.177,89.12c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196 c0.661,0,1.196-0.535,1.196-1.196C418.373,89.656,417.837,89.12,417.177,89.12z M420.768,78.344c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C421.965,78.88,421.429,78.344,420.768,78.344z M417.177,81.936 c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C418.373,82.472,417.837,81.936,417.177,81.936z M420.768,71.161c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C421.965,71.696,421.429,71.161,420.768,71.161z M417.177,74.753 c-0.661,0-1.196,0.536-1.196,1.196c0,0.66,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C418.373,75.288,417.837,74.753,417.177,74.753z M420.768,63.977c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C421.965,64.512,421.429,63.977,420.768,63.977z M417.177,67.569 c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C418.373,68.104,417.837,67.569,417.177,67.569z M419.572,57.989c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 c0-0.633-0.496-1.138-1.118-1.18h-0.156C420.068,56.851,419.572,57.356,419.572,57.989z M417.177,60.385 c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C418.373,60.921,417.837,60.385,417.177,60.385z M429.148,144.195c0-0.661-0.535-1.196-1.196-1.196 c-0.661,0-1.196,0.536-1.196,1.196c0,0.31,0.125,0.587,0.319,0.8l0.19,0.153c0.197,0.142,0.426,0.243,0.687,0.243 C428.613,145.391,429.148,144.855,429.148,144.195z M427.952,135.815c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C429.148,136.35,428.613,135.815,427.952,135.815z  M424.36,139.407c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C425.557,139.942,425.021,139.407,424.36,139.407z M427.952,128.631c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C429.148,129.167,428.613,128.631,427.952,128.631z  M424.36,132.223c-0.661,0-1.196,0.536-1.196,1.196c0,0.66,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C425.557,132.758,425.021,132.223,424.36,132.223z M427.952,121.447c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C429.148,121.983,428.613,121.447,427.952,121.447z  M424.36,125.039c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C425.557,125.575,425.021,125.039,424.36,125.039z M427.952,114.263c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C429.148,114.799,428.613,114.263,427.952,114.263z  M424.36,117.855c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C425.557,118.391,425.021,117.855,424.36,117.855z M427.952,107.08c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C429.148,107.615,428.613,107.08,427.952,107.08z  M424.36,110.672c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C425.557,111.207,425.021,110.672,424.36,110.672z M427.952,99.896c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C429.148,100.431,428.613,99.896,427.952,99.896z  M424.36,103.488c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C425.557,104.023,425.021,103.488,424.36,103.488z M427.952,92.712c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C429.148,93.248,428.613,92.712,427.952,92.712z M424.36,96.304 c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C425.557,96.84,425.021,96.304,424.36,96.304z M427.952,85.528c-0.661,0-1.196,0.536-1.196,1.196c0,0.66,0.535,1.196,1.196,1.196 c0.661,0,1.196-0.536,1.196-1.196C429.148,86.064,428.613,85.528,427.952,85.528z M424.36,89.12c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C425.557,89.656,425.021,89.12,424.36,89.12z M427.952,78.344 c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C429.148,78.88,428.613,78.344,427.952,78.344z M424.36,81.936c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196 c0.661,0,1.196-0.535,1.196-1.196C425.557,82.472,425.021,81.936,424.36,81.936z M427.952,71.161c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C429.148,71.696,428.613,71.161,427.952,71.161z M424.36,74.753 c-0.661,0-1.196,0.536-1.196,1.196c0,0.66,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C425.557,75.288,425.021,74.753,424.36,74.753z M427.952,63.977c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196 c0.661,0,1.196-0.535,1.196-1.196C429.148,64.512,428.613,63.977,427.952,63.977z M424.36,67.569c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C425.557,68.104,425.021,67.569,424.36,67.569z M426.756,57.989 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196c0-0.633-0.496-1.138-1.118-1.18h-0.156 C427.252,56.851,426.756,57.356,426.756,57.989z M424.36,60.385c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196 c0.661,0,1.196-0.536,1.196-1.196C425.557,60.921,425.021,60.385,424.36,60.385z M435.136,150.182 c-0.408,0-0.751,0.217-0.966,0.529l1.835,1.479c0.2-0.214,0.328-0.496,0.328-0.812 C436.332,150.718,435.797,150.182,435.136,150.182z M432.74,147.787c0-0.661-0.536-1.196-1.196-1.196 c-0.613,0-1.1,0.468-1.169,1.063l1.553,1.252C432.398,148.744,432.74,148.311,432.74,147.787z M435.136,142.999 c-0.661,0-1.196,0.536-1.196,1.196c0,0.66,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C436.332,143.534,435.797,142.999,435.136,142.999z M435.136,135.815c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C436.332,136.35,435.797,135.815,435.136,135.815z  M431.544,139.407c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C432.74,139.942,432.205,139.407,431.544,139.407z M435.136,128.631c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C436.332,129.167,435.797,128.631,435.136,128.631z  M431.544,132.223c-0.661,0-1.196,0.536-1.196,1.196c0,0.66,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C432.74,132.758,432.205,132.223,431.544,132.223z M435.136,121.447c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C436.332,121.983,435.797,121.447,435.136,121.447z  M431.544,125.039c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C432.74,125.575,432.205,125.039,431.544,125.039z M435.136,114.263c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C436.332,114.799,435.797,114.263,435.136,114.263z  M431.544,117.855c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C432.74,118.391,432.205,117.855,431.544,117.855z M435.136,107.08c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C436.332,107.615,435.797,107.08,435.136,107.08z  M431.544,110.672c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C432.74,111.207,432.205,110.672,431.544,110.672z M435.136,99.896c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C436.332,100.431,435.797,99.896,435.136,99.896z  M431.544,103.488c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C432.74,104.023,432.205,103.488,431.544,103.488z M435.136,92.712c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C436.332,93.248,435.797,92.712,435.136,92.712z M431.544,96.304 c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C432.74,96.84,432.205,96.304,431.544,96.304z M435.136,85.528c-0.661,0-1.196,0.536-1.196,1.196c0,0.66,0.535,1.196,1.196,1.196 c0.661,0,1.196-0.536,1.196-1.196C436.332,86.064,435.797,85.528,435.136,85.528z M431.544,89.12c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C432.74,89.656,432.205,89.12,431.544,89.12z M435.136,78.344 c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C436.332,78.88,435.797,78.344,435.136,78.344z M431.544,81.936c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196 c0.661,0,1.196-0.535,1.196-1.196C432.74,82.472,432.205,81.936,431.544,81.936z M435.136,71.161c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C436.332,71.696,435.797,71.161,435.136,71.161z M431.544,74.753 c-0.661,0-1.196,0.536-1.196,1.196c0,0.66,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C432.74,75.288,432.205,74.753,431.544,74.753z M435.136,63.977c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196 c0.661,0,1.196-0.535,1.196-1.196C436.332,64.512,435.797,63.977,435.136,63.977z M431.544,67.569 c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C432.74,68.104,432.205,67.569,431.544,67.569z M433.94,57.989c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 c0-0.633-0.496-1.138-1.118-1.18h-0.156C434.436,56.851,433.94,57.356,433.94,57.989z M431.544,60.385 c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C432.74,60.921,432.205,60.385,431.544,60.385z M442.462,157.395l0.977,0.787C443.294,157.756,442.922,157.452,442.462,157.395z  M442.32,150.182c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.535,1.196-1.196 C443.516,150.718,442.98,150.182,442.32,150.182z M438.728,153.774c-0.207,0-0.392,0.066-0.561,0.159l1.692,1.363 c0.031-0.106,0.066-0.21,0.066-0.326C439.924,154.31,439.389,153.774,438.728,153.774z M442.32,142.999 c-0.661,0-1.196,0.536-1.196,1.196c0,0.66,0.536,1.196,1.196,1.196c0.66,0,1.196-0.536,1.196-1.196 C443.516,143.534,442.98,142.999,442.32,142.999z M438.728,146.591c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C439.924,147.126,439.389,146.591,438.728,146.591z  M442.32,135.815c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.535,1.196-1.196 C443.516,136.35,442.98,135.815,442.32,135.815z M438.728,139.407c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C439.924,139.942,439.389,139.407,438.728,139.407z  M442.32,128.631c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.536,1.196-1.196 C443.516,129.167,442.98,128.631,442.32,128.631z M438.728,132.223c-0.661,0-1.196,0.536-1.196,1.196 c0,0.66,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C439.924,132.758,439.389,132.223,438.728,132.223z  M442.32,121.447c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.535,1.196-1.196 C443.516,121.983,442.98,121.447,442.32,121.447z M438.728,125.039c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C439.924,125.575,439.389,125.039,438.728,125.039z  M442.32,114.263c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.535,1.196-1.196 C443.516,114.799,442.98,114.263,442.32,114.263z M438.728,117.855c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C439.924,118.391,439.389,117.855,438.728,117.855z  M442.32,107.08c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.535,1.196-1.196 C443.516,107.615,442.98,107.08,442.32,107.08z M438.728,110.672c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C439.924,111.207,439.389,110.672,438.728,110.672z  M442.32,99.896c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.535,1.196-1.196 C443.516,100.431,442.98,99.896,442.32,99.896z M438.728,103.488c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C439.924,104.023,439.389,103.488,438.728,103.488z  M442.32,92.712c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.535,1.196-1.196 C443.516,93.248,442.98,92.712,442.32,92.712z M438.728,96.304c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196 c0.661,0,1.196-0.535,1.196-1.196C439.924,96.84,439.389,96.304,438.728,96.304z M442.32,85.528c-0.661,0-1.196,0.536-1.196,1.196 c0,0.66,0.536,1.196,1.196,1.196c0.66,0,1.196-0.536,1.196-1.196C443.516,86.064,442.98,85.528,442.32,85.528z M438.728,89.12 c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C439.924,89.656,439.389,89.12,438.728,89.12z M442.32,78.344c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196 c0.66,0,1.196-0.535,1.196-1.196C443.516,78.88,442.98,78.344,442.32,78.344z M438.728,81.936c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C439.924,82.472,439.389,81.936,438.728,81.936z M442.32,71.161 c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.535,1.196-1.196 C443.516,71.696,442.98,71.161,442.32,71.161z M438.728,74.753c-0.661,0-1.196,0.536-1.196,1.196c0,0.66,0.535,1.196,1.196,1.196 c0.661,0,1.196-0.536,1.196-1.196C439.924,75.288,439.389,74.753,438.728,74.753z M442.32,63.977c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.535,1.196-1.196C443.516,64.512,442.98,63.977,442.32,63.977z M438.728,67.569 c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C439.924,68.104,439.389,67.569,438.728,67.569z M441.124,57.989c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.535,1.196-1.196 c0-0.633-0.496-1.138-1.118-1.18h-0.156C441.62,56.851,441.124,57.356,441.124,57.989z M438.728,60.385 c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C439.924,60.921,439.389,60.385,438.728,60.385z M449.504,157.366c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C450.7,157.902,450.164,157.366,449.504,157.366z  M449.504,150.182c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C450.7,150.718,450.164,150.182,449.504,150.182z M445.912,153.774c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C447.108,154.31,446.572,153.774,445.912,153.774z  M449.504,142.999c-0.661,0-1.196,0.536-1.196,1.196c0,0.66,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C450.7,143.534,450.164,142.999,449.504,142.999z M445.912,146.591c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C447.108,147.126,446.572,146.591,445.912,146.591z  M449.504,135.815c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C450.7,136.35,450.164,135.815,449.504,135.815z M445.912,139.407c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C447.108,139.942,446.572,139.407,445.912,139.407z  M449.504,128.631c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C450.7,129.167,450.164,128.631,449.504,128.631z M445.912,132.223c-0.661,0-1.196,0.536-1.196,1.196 c0,0.66,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C447.108,132.758,446.572,132.223,445.912,132.223z  M449.504,121.447c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C450.7,121.983,450.164,121.447,449.504,121.447z M445.912,125.039c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C447.108,125.575,446.572,125.039,445.912,125.039z  M449.504,114.263c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C450.7,114.799,450.164,114.263,449.504,114.263z M445.912,117.855c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C447.108,118.391,446.572,117.855,445.912,117.855z  M449.504,107.08c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C450.7,107.615,450.164,107.08,449.504,107.08z M445.912,110.672c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C447.108,111.207,446.572,110.672,445.912,110.672z  M449.504,99.896c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C450.7,100.431,450.164,99.896,449.504,99.896z M445.912,103.488c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C447.108,104.023,446.572,103.488,445.912,103.488z  M449.504,92.712c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C450.7,93.248,450.164,92.712,449.504,92.712z M445.912,96.304c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196 c0.661,0,1.196-0.535,1.196-1.196C447.108,96.84,446.572,96.304,445.912,96.304z M449.504,85.528c-0.661,0-1.196,0.536-1.196,1.196 c0,0.66,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C450.7,86.064,450.164,85.528,449.504,85.528z M445.912,89.12 c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C447.108,89.656,446.572,89.12,445.912,89.12z M449.504,78.344c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196 c0.661,0,1.196-0.535,1.196-1.196C450.7,78.88,450.164,78.344,449.504,78.344z M445.912,81.936c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C447.108,82.472,446.572,81.936,445.912,81.936z M449.504,71.161 c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C450.7,71.696,450.164,71.161,449.504,71.161z M445.912,74.753c-0.661,0-1.196,0.536-1.196,1.196c0,0.66,0.535,1.196,1.196,1.196 c0.661,0,1.196-0.536,1.196-1.196C447.108,75.288,446.572,74.753,445.912,74.753z M449.504,63.977 c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C450.7,64.512,450.164,63.977,449.504,63.977z M445.912,67.569c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196 c0.661,0,1.196-0.535,1.196-1.196C447.108,68.104,446.572,67.569,445.912,67.569z M448.308,57.989c0,0.661,0.535,1.196,1.196,1.196 c0.661,0,1.196-0.535,1.196-1.196c0-0.633-0.496-1.138-1.118-1.18h-0.156C448.803,56.851,448.308,57.356,448.308,57.989z  M445.912,60.385c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C447.108,60.921,446.572,60.385,445.912,60.385z M456.688,164.55c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C457.884,165.086,457.348,164.55,456.688,164.55z  M456.688,157.366c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C457.884,157.902,457.348,157.366,456.688,157.366z M453.096,160.958c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.535,1.196-1.196C454.292,161.494,453.756,160.958,453.096,160.958z  M456.688,150.182c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C457.884,150.718,457.348,150.182,456.688,150.182z M453.096,153.774c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.536,1.196-1.196C454.292,154.31,453.756,153.774,453.096,153.774z  M456.688,142.999c-0.661,0-1.196,0.536-1.196,1.196c0,0.66,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C457.884,143.534,457.348,142.999,456.688,142.999z M453.096,146.591c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.535,1.196-1.196C454.292,147.126,453.756,146.591,453.096,146.591z  M456.688,135.815c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C457.884,136.35,457.348,135.815,456.688,135.815z M453.096,139.407c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.536,1.196-1.196C454.292,139.942,453.756,139.407,453.096,139.407z  M456.688,128.631c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C457.884,129.167,457.348,128.631,456.688,128.631z M453.096,132.223c-0.661,0-1.196,0.536-1.196,1.196 c0,0.66,0.536,1.196,1.196,1.196c0.66,0,1.196-0.536,1.196-1.196C454.292,132.758,453.756,132.223,453.096,132.223z  M456.688,121.447c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C457.884,121.983,457.348,121.447,456.688,121.447z M453.096,125.039c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.535,1.196-1.196C454.292,125.575,453.756,125.039,453.096,125.039z  M456.688,114.263c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C457.884,114.799,457.348,114.263,456.688,114.263z M453.096,117.855c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.536,1.196-1.196C454.292,118.391,453.756,117.855,453.096,117.855z  M456.688,107.08c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C457.884,107.615,457.348,107.08,456.688,107.08z M453.096,110.672c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.536,1.196-1.196C454.292,111.207,453.756,110.672,453.096,110.672z  M456.688,99.896c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C457.884,100.431,457.348,99.896,456.688,99.896z M453.096,103.488c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.535,1.196-1.196C454.292,104.023,453.756,103.488,453.096,103.488z  M456.688,92.712c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C457.884,93.248,457.348,92.712,456.688,92.712z M453.096,96.304c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.535,1.196-1.196C454.292,96.84,453.756,96.304,453.096,96.304z M456.688,85.528 c-0.661,0-1.196,0.536-1.196,1.196c0,0.66,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C457.884,86.064,457.348,85.528,456.688,85.528z M453.096,89.12c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196 c0.66,0,1.196-0.535,1.196-1.196C454.292,89.656,453.756,89.12,453.096,89.12z M456.688,78.344c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C457.884,78.88,457.348,78.344,456.688,78.344z M453.096,81.936 c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.535,1.196-1.196 C454.292,82.472,453.756,81.936,453.096,81.936z M456.688,71.161c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C457.884,71.696,457.348,71.161,456.688,71.161z M453.096,74.753 c-0.661,0-1.196,0.536-1.196,1.196c0,0.66,0.536,1.196,1.196,1.196c0.66,0,1.196-0.536,1.196-1.196 C454.292,75.288,453.756,74.753,453.096,74.753z M456.688,63.977c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C457.884,64.512,457.348,63.977,456.688,63.977z M453.096,67.569 c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.535,1.196-1.196 C454.292,68.104,453.756,67.569,453.096,67.569z M455.491,57.989c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 c0-0.633-0.496-1.138-1.118-1.18h-0.156C455.987,56.851,455.491,57.356,455.491,57.989z M453.096,60.385 c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.536,1.196-1.196 C454.292,60.921,453.756,60.385,453.096,60.385z M463.871,171.734c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C465.067,172.269,464.532,171.734,463.871,171.734z  M463.871,164.55c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C465.067,165.086,464.532,164.55,463.871,164.55z M460.279,168.142c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C461.476,168.678,460.94,168.142,460.279,168.142z  M463.871,157.366c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C465.067,157.902,464.532,157.366,463.871,157.366z M460.279,160.958c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C461.476,161.494,460.94,160.958,460.279,160.958z  M463.871,150.182c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C465.067,150.718,464.532,150.182,463.871,150.182z M460.279,153.774c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C461.476,154.31,460.94,153.774,460.279,153.774z  M463.871,142.999c-0.661,0-1.196,0.536-1.196,1.196c0,0.66,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C465.067,143.534,464.532,142.999,463.871,142.999z M460.279,146.591c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C461.476,147.126,460.94,146.591,460.279,146.591z  M463.871,135.815c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C465.067,136.35,464.532,135.815,463.871,135.815z M460.279,139.407c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C461.476,139.942,460.94,139.407,460.279,139.407z  M463.871,128.631c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C465.067,129.167,464.532,128.631,463.871,128.631z M460.279,132.223c-0.661,0-1.196,0.536-1.196,1.196 c0,0.66,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C461.476,132.758,460.94,132.223,460.279,132.223z  M463.871,121.447c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C465.067,121.983,464.532,121.447,463.871,121.447z M460.279,125.039c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C461.476,125.575,460.94,125.039,460.279,125.039z  M463.871,114.263c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C465.067,114.799,464.532,114.263,463.871,114.263z M460.279,117.855c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C461.476,118.391,460.94,117.855,460.279,117.855z  M463.871,107.08c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C465.067,107.615,464.532,107.08,463.871,107.08z M460.279,110.672c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C461.476,111.207,460.94,110.672,460.279,110.672z  M463.871,99.896c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C465.067,100.431,464.532,99.896,463.871,99.896z M460.279,103.488c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C461.476,104.023,460.94,103.488,460.279,103.488z  M463.871,92.712c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C465.067,93.248,464.532,92.712,463.871,92.712z M460.279,96.304c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C461.476,96.84,460.94,96.304,460.279,96.304z M463.871,85.528 c-0.661,0-1.196,0.536-1.196,1.196c0,0.66,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C465.067,86.064,464.532,85.528,463.871,85.528z M460.279,89.12c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196 c0.661,0,1.196-0.535,1.196-1.196C461.476,89.656,460.94,89.12,460.279,89.12z M463.871,78.344c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C465.067,78.88,464.532,78.344,463.871,78.344z M460.279,81.936 c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C461.476,82.472,460.94,81.936,460.279,81.936z M463.871,71.161c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196 c0.661,0,1.196-0.535,1.196-1.196C465.067,71.696,464.532,71.161,463.871,71.161z M460.279,74.753 c-0.661,0-1.196,0.536-1.196,1.196c0,0.66,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C461.476,75.288,460.94,74.753,460.279,74.753z M463.871,63.977c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196 c0.661,0,1.196-0.535,1.196-1.196C465.067,64.512,464.532,63.977,463.871,63.977z M460.279,67.569 c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C461.476,68.104,460.94,67.569,460.279,67.569z M462.675,57.989c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 c0-0.633-0.496-1.138-1.118-1.18h-0.156C463.171,56.851,462.675,57.356,462.675,57.989z M460.279,60.385 c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C461.476,60.921,460.94,60.385,460.279,60.385z M472.251,180.114c0-0.661-0.535-1.196-1.196-1.196 c-0.468,0-0.862,0.275-1.059,0.667l1.797,1.448C472.066,180.813,472.251,180.491,472.251,180.114z M468.659,176.522 c0-0.661-0.535-1.196-1.196-1.196c-0.661,0-1.196,0.535-1.196,1.196c0,0.024,0.012,0.044,0.014,0.068l1.356,1.093 C468.212,177.596,468.659,177.121,468.659,176.522z M471.055,171.734c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C472.251,172.269,471.716,171.734,471.055,171.734z  M471.055,164.55c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C472.251,165.086,471.716,164.55,471.055,164.55z M467.463,168.142c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C468.659,168.678,468.124,168.142,467.463,168.142z  M471.055,157.366c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C472.251,157.902,471.716,157.366,471.055,157.366z M467.463,160.958c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C468.659,161.494,468.124,160.958,467.463,160.958z  M471.055,150.182c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C472.251,150.718,471.716,150.182,471.055,150.182z M467.463,153.774c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C468.659,154.31,468.124,153.774,467.463,153.774z  M471.055,142.999c-0.661,0-1.196,0.536-1.196,1.196c0,0.66,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C472.251,143.534,471.716,142.999,471.055,142.999z M467.463,146.591c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C468.659,147.126,468.124,146.591,467.463,146.591z  M471.055,135.815c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C472.251,136.35,471.716,135.815,471.055,135.815z M467.463,139.407c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C468.659,139.942,468.124,139.407,467.463,139.407z  M471.055,128.631c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C472.251,129.167,471.716,128.631,471.055,128.631z M467.463,132.223c-0.661,0-1.196,0.536-1.196,1.196 c0,0.66,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C468.659,132.758,468.124,132.223,467.463,132.223z  M471.055,121.447c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C472.251,121.983,471.716,121.447,471.055,121.447z M467.463,125.039c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C468.659,125.575,468.124,125.039,467.463,125.039z  M471.055,114.263c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C472.251,114.799,471.716,114.263,471.055,114.263z M467.463,117.855c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C468.659,118.391,468.124,117.855,467.463,117.855z  M471.055,107.08c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C472.251,107.615,471.716,107.08,471.055,107.08z M467.463,110.672c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C468.659,111.207,468.124,110.672,467.463,110.672z  M471.055,99.896c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C472.251,100.431,471.716,99.896,471.055,99.896z M467.463,103.488c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C468.659,104.023,468.124,103.488,467.463,103.488z  M471.055,92.712c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C472.251,93.248,471.716,92.712,471.055,92.712z M467.463,96.304c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C468.659,96.84,468.124,96.304,467.463,96.304z M471.055,85.528 c-0.661,0-1.196,0.536-1.196,1.196c0,0.66,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C472.251,86.064,471.716,85.528,471.055,85.528z M467.463,89.12c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196 c0.661,0,1.196-0.535,1.196-1.196C468.659,89.656,468.124,89.12,467.463,89.12z M471.055,78.344c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C472.251,78.88,471.716,78.344,471.055,78.344z M467.463,81.936 c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C468.659,82.472,468.124,81.936,467.463,81.936z M471.055,71.161c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C472.251,71.696,471.716,71.161,471.055,71.161z M467.463,74.753 c-0.661,0-1.196,0.536-1.196,1.196c0,0.66,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C468.659,75.288,468.124,74.753,467.463,74.753z M471.055,63.977c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C472.251,64.512,471.716,63.977,471.055,63.977z M467.463,67.569 c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C468.659,68.104,468.124,67.569,467.463,67.569z M469.859,57.989c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 c0-0.633-0.496-1.138-1.118-1.18h-0.156C470.355,56.851,469.859,57.356,469.859,57.989z M467.463,60.385 c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C468.659,60.921,468.124,60.385,467.463,60.385z M478.239,186.102c-0.044,0-0.082,0.02-0.125,0.025l1.295,1.044 C479.343,186.573,478.854,186.102,478.239,186.102z M478.239,178.918c-0.661,0-1.196,0.536-1.196,1.196 c0,0.66,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C479.435,179.453,478.9,178.918,478.239,178.918z M474.647,182.51 c-0.269,0-0.505,0.105-0.705,0.255l1.785,1.439c0.07-0.152,0.116-0.318,0.116-0.498C475.843,183.045,475.308,182.51,474.647,182.51 z M478.239,171.734c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C479.435,172.269,478.9,171.734,478.239,171.734z M474.647,175.326c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C475.843,175.861,475.308,175.326,474.647,175.326z  M478.239,164.55c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C479.435,165.086,478.9,164.55,478.239,164.55z M474.647,168.142c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C475.843,168.678,475.308,168.142,474.647,168.142z  M478.239,157.366c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C479.435,157.902,478.9,157.366,478.239,157.366z M474.647,160.958c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C475.843,161.494,475.308,160.958,474.647,160.958z  M478.239,150.182c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C479.435,150.718,478.9,150.182,478.239,150.182z M474.647,153.774c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C475.843,154.31,475.308,153.774,474.647,153.774z  M478.239,142.999c-0.661,0-1.196,0.536-1.196,1.196c0,0.66,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C479.435,143.534,478.9,142.999,478.239,142.999z M474.647,146.591c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C475.843,147.126,475.308,146.591,474.647,146.591z  M478.239,135.815c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C479.435,136.35,478.9,135.815,478.239,135.815z M474.647,139.407c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C475.843,139.942,475.308,139.407,474.647,139.407z  M478.239,128.631c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C479.435,129.167,478.9,128.631,478.239,128.631z M474.647,132.223c-0.661,0-1.196,0.536-1.196,1.196 c0,0.66,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C475.843,132.758,475.308,132.223,474.647,132.223z  M478.239,121.447c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C479.435,121.983,478.9,121.447,478.239,121.447z M474.647,125.039c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C475.843,125.575,475.308,125.039,474.647,125.039z  M478.239,114.263c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C479.435,114.799,478.9,114.263,478.239,114.263z M474.647,117.855c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C475.843,118.391,475.308,117.855,474.647,117.855z  M478.239,107.08c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C479.435,107.615,478.9,107.08,478.239,107.08z M474.647,110.672c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C475.843,111.207,475.308,110.672,474.647,110.672z  M478.239,99.896c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C479.435,100.431,478.9,99.896,478.239,99.896z M474.647,103.488c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C475.843,104.023,475.308,103.488,474.647,103.488z  M478.239,92.712c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C479.435,93.248,478.9,92.712,478.239,92.712z M474.647,96.304c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196 c0.661,0,1.196-0.535,1.196-1.196C475.843,96.84,475.308,96.304,474.647,96.304z M478.239,85.528c-0.661,0-1.196,0.536-1.196,1.196 c0,0.66,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C479.435,86.064,478.9,85.528,478.239,85.528z M474.647,89.12 c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C475.843,89.656,475.308,89.12,474.647,89.12z M478.239,78.344c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196 c0.661,0,1.196-0.535,1.196-1.196C479.435,78.88,478.9,78.344,478.239,78.344z M474.647,81.936c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C475.843,82.472,475.308,81.936,474.647,81.936z M478.239,71.161 c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C479.435,71.696,478.9,71.161,478.239,71.161z M474.647,74.753c-0.661,0-1.196,0.536-1.196,1.196c0,0.66,0.535,1.196,1.196,1.196 c0.661,0,1.196-0.536,1.196-1.196C475.843,75.288,475.308,74.753,474.647,74.753z M478.239,63.977 c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C479.435,64.512,478.9,63.977,478.239,63.977z M474.647,67.569c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196 c0.661,0,1.196-0.535,1.196-1.196C475.843,68.104,475.308,67.569,474.647,67.569z M477.043,57.989c0,0.661,0.536,1.196,1.196,1.196 c0.661,0,1.196-0.535,1.196-1.196c0-0.633-0.496-1.138-1.118-1.18h-0.156C477.539,56.851,477.043,57.356,477.043,57.989z  M474.647,60.385c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C475.843,60.921,475.308,60.385,474.647,60.385z M485.423,186.102c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C486.619,186.637,486.083,186.102,485.423,186.102z  M485.423,178.918c-0.661,0-1.196,0.536-1.196,1.196c0,0.66,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C486.619,179.453,486.083,178.918,485.423,178.918z M481.831,182.51c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C483.027,183.045,482.491,182.51,481.831,182.51z  M485.423,171.734c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C486.619,172.269,486.083,171.734,485.423,171.734z M481.831,175.326c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C483.027,175.861,482.491,175.326,481.831,175.326z  M485.423,164.55c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C486.619,165.086,486.083,164.55,485.423,164.55z M481.831,168.142c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C483.027,168.678,482.491,168.142,481.831,168.142z  M485.423,157.366c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C486.619,157.902,486.083,157.366,485.423,157.366z M481.831,160.958c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C483.027,161.494,482.491,160.958,481.831,160.958z  M485.423,150.182c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C486.619,150.718,486.083,150.182,485.423,150.182z M481.831,153.774c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C483.027,154.31,482.491,153.774,481.831,153.774z  M485.423,142.999c-0.661,0-1.196,0.536-1.196,1.196c0,0.66,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C486.619,143.534,486.083,142.999,485.423,142.999z M481.831,146.591c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C483.027,147.126,482.491,146.591,481.831,146.591z  M485.423,135.815c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C486.619,136.35,486.083,135.815,485.423,135.815z M481.831,139.407c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C483.027,139.942,482.491,139.407,481.831,139.407z  M485.423,128.631c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C486.619,129.167,486.083,128.631,485.423,128.631z M481.831,132.223c-0.661,0-1.196,0.536-1.196,1.196 c0,0.66,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C483.027,132.758,482.491,132.223,481.831,132.223z  M485.423,121.447c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C486.619,121.983,486.083,121.447,485.423,121.447z M481.831,125.039c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C483.027,125.575,482.491,125.039,481.831,125.039z  M485.423,114.263c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C486.619,114.799,486.083,114.263,485.423,114.263z M481.831,117.855c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C483.027,118.391,482.491,117.855,481.831,117.855z  M485.423,107.08c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C486.619,107.615,486.083,107.08,485.423,107.08z M481.831,110.672c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C483.027,111.207,482.491,110.672,481.831,110.672z  M485.423,99.896c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C486.619,100.431,486.083,99.896,485.423,99.896z M481.831,103.488c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C483.027,104.023,482.491,103.488,481.831,103.488z  M485.423,92.712c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C486.619,93.248,486.083,92.712,485.423,92.712z M481.831,96.304c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C483.027,96.84,482.491,96.304,481.831,96.304z M485.423,85.528 c-0.661,0-1.196,0.536-1.196,1.196c0,0.66,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C486.619,86.064,486.083,85.528,485.423,85.528z M481.831,89.12c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196 c0.661,0,1.196-0.535,1.196-1.196C483.027,89.656,482.491,89.12,481.831,89.12z M485.423,78.344c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C486.619,78.88,486.083,78.344,485.423,78.344z M481.831,81.936 c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C483.027,82.472,482.491,81.936,481.831,81.936z M485.423,71.161c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C486.619,71.696,486.083,71.161,485.423,71.161z M481.831,74.753 c-0.661,0-1.196,0.536-1.196,1.196c0,0.66,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C483.027,75.288,482.491,74.753,481.831,74.753z M485.423,63.977c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C486.619,64.512,486.083,63.977,485.423,63.977z M481.831,67.569 c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C483.027,68.104,482.491,67.569,481.831,67.569z M484.227,57.989c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 c0-0.633-0.496-1.138-1.118-1.18h-0.156C484.722,56.851,484.227,57.356,484.227,57.989z M481.831,60.385 c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C483.027,60.921,482.491,60.385,481.831,60.385z M492.606,193.285c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C493.803,193.821,493.267,193.285,492.606,193.285z  M492.606,186.102c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C493.803,186.637,493.267,186.102,492.606,186.102z M489.015,189.693c-0.661,0-1.196,0.536-1.196,1.196 c0,0.66,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C490.211,190.229,489.675,189.693,489.015,189.693z  M492.606,178.918c-0.661,0-1.196,0.536-1.196,1.196c0,0.66,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C493.803,179.453,493.267,178.918,492.606,178.918z M489.015,182.51c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C490.211,183.045,489.675,182.51,489.015,182.51z  M492.606,171.734c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C493.803,172.269,493.267,171.734,492.606,171.734z M489.015,175.326c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C490.211,175.861,489.675,175.326,489.015,175.326z  M492.606,164.55c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C493.803,165.086,493.267,164.55,492.606,164.55z M489.015,168.142c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C490.211,168.678,489.675,168.142,489.015,168.142z  M492.606,157.366c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C493.803,157.902,493.267,157.366,492.606,157.366z M489.015,160.958c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C490.211,161.494,489.675,160.958,489.015,160.958z  M492.606,150.182c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C493.803,150.718,493.267,150.182,492.606,150.182z M489.015,153.774c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C490.211,154.31,489.675,153.774,489.015,153.774z  M492.606,142.999c-0.661,0-1.196,0.536-1.196,1.196c0,0.66,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C493.803,143.534,493.267,142.999,492.606,142.999z M489.015,146.591c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C490.211,147.126,489.675,146.591,489.015,146.591z  M492.606,135.815c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C493.803,136.35,493.267,135.815,492.606,135.815z M489.015,139.407c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C490.211,139.942,489.675,139.407,489.015,139.407z  M492.606,128.631c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C493.803,129.167,493.267,128.631,492.606,128.631z M489.015,132.223c-0.661,0-1.196,0.536-1.196,1.196 c0,0.66,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C490.211,132.758,489.675,132.223,489.015,132.223z  M492.606,121.447c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C493.803,121.983,493.267,121.447,492.606,121.447z M489.015,125.039c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C490.211,125.575,489.675,125.039,489.015,125.039z  M492.606,114.263c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C493.803,114.799,493.267,114.263,492.606,114.263z M489.015,117.855c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C490.211,118.391,489.675,117.855,489.015,117.855z  M492.606,107.08c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C493.803,107.615,493.267,107.08,492.606,107.08z M489.015,110.672c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C490.211,111.207,489.675,110.672,489.015,110.672z  M492.606,99.896c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C493.803,100.431,493.267,99.896,492.606,99.896z M489.015,103.488c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C490.211,104.023,489.675,103.488,489.015,103.488z  M492.606,92.712c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C493.803,93.248,493.267,92.712,492.606,92.712z M489.015,96.304c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C490.211,96.84,489.675,96.304,489.015,96.304z M492.606,85.528 c-0.661,0-1.196,0.536-1.196,1.196c0,0.66,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C493.803,86.064,493.267,85.528,492.606,85.528z M489.015,89.12c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196 c0.661,0,1.196-0.535,1.196-1.196C490.211,89.656,489.675,89.12,489.015,89.12z M492.606,78.344c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C493.803,78.88,493.267,78.344,492.606,78.344z M489.015,81.936 c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C490.211,82.472,489.675,81.936,489.015,81.936z M492.606,71.161c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C493.803,71.696,493.267,71.161,492.606,71.161z M489.015,74.753 c-0.661,0-1.196,0.536-1.196,1.196c0,0.66,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C490.211,75.288,489.675,74.753,489.015,74.753z M492.606,63.977c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C493.803,64.512,493.267,63.977,492.606,63.977z M489.015,67.569 c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C490.211,68.104,489.675,67.569,489.015,67.569z M491.41,57.989c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 c0-0.633-0.496-1.138-1.118-1.18h-0.156C491.906,56.851,491.41,57.356,491.41,57.989z M489.015,60.385 c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C490.211,60.921,489.675,60.385,489.015,60.385z M499.79,200.469c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C500.986,201.005,500.451,200.469,499.79,200.469z  M499.79,193.285c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C500.986,193.821,500.451,193.285,499.79,193.285z M496.198,196.877c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C497.395,197.413,496.859,196.877,496.198,196.877z  M499.79,186.102c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C500.986,186.637,500.451,186.102,499.79,186.102z M496.198,189.693c-0.661,0-1.196,0.536-1.196,1.196 c0,0.66,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C497.395,190.229,496.859,189.693,496.198,189.693z  M499.79,178.918c-0.661,0-1.196,0.536-1.196,1.196c0,0.66,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C500.986,179.453,500.451,178.918,499.79,178.918z M496.198,182.51c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C497.395,183.045,496.859,182.51,496.198,182.51z  M499.79,171.734c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C500.986,172.269,500.451,171.734,499.79,171.734z M496.198,175.326c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C497.395,175.861,496.859,175.326,496.198,175.326z  M499.79,164.55c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C500.986,165.086,500.451,164.55,499.79,164.55z M496.198,168.142c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C497.395,168.678,496.859,168.142,496.198,168.142z  M499.79,157.366c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C500.986,157.902,500.451,157.366,499.79,157.366z M496.198,160.958c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C497.395,161.494,496.859,160.958,496.198,160.958z  M499.79,150.182c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C500.986,150.718,500.451,150.182,499.79,150.182z M496.198,153.774c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C497.395,154.31,496.859,153.774,496.198,153.774z  M499.79,142.999c-0.661,0-1.196,0.536-1.196,1.196c0,0.66,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C500.986,143.534,500.451,142.999,499.79,142.999z M496.198,146.591c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C497.395,147.126,496.859,146.591,496.198,146.591z  M499.79,135.815c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C500.986,136.35,500.451,135.815,499.79,135.815z M496.198,139.407c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C497.395,139.942,496.859,139.407,496.198,139.407z  M499.79,128.631c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C500.986,129.167,500.451,128.631,499.79,128.631z M496.198,132.223c-0.661,0-1.196,0.536-1.196,1.196 c0,0.66,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C497.395,132.758,496.859,132.223,496.198,132.223z  M499.79,121.447c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C500.986,121.983,500.451,121.447,499.79,121.447z M496.198,125.039c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C497.395,125.575,496.859,125.039,496.198,125.039z  M499.79,114.263c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C500.986,114.799,500.451,114.263,499.79,114.263z M496.198,117.855c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C497.395,118.391,496.859,117.855,496.198,117.855z  M499.79,107.08c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C500.986,107.615,500.451,107.08,499.79,107.08z M496.198,110.672c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C497.395,111.207,496.859,110.672,496.198,110.672z  M499.79,99.896c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C500.986,100.431,500.451,99.896,499.79,99.896z M496.198,103.488c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C497.395,104.023,496.859,103.488,496.198,103.488z  M499.79,92.712c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C500.986,93.248,500.451,92.712,499.79,92.712z M496.198,96.304c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196 c0.661,0,1.196-0.535,1.196-1.196C497.395,96.84,496.859,96.304,496.198,96.304z M499.79,85.528c-0.661,0-1.196,0.536-1.196,1.196 c0,0.66,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C500.986,86.064,500.451,85.528,499.79,85.528z M496.198,89.12 c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C497.395,89.656,496.859,89.12,496.198,89.12z M499.79,78.344c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196 c0.661,0,1.196-0.535,1.196-1.196C500.986,78.88,500.451,78.344,499.79,78.344z M496.198,81.936c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C497.395,82.472,496.859,81.936,496.198,81.936z M499.79,71.161 c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C500.986,71.696,500.451,71.161,499.79,71.161z M496.198,74.753c-0.661,0-1.196,0.536-1.196,1.196c0,0.66,0.535,1.196,1.196,1.196 c0.661,0,1.196-0.536,1.196-1.196C497.395,75.288,496.859,74.753,496.198,74.753z M499.79,63.977c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C500.986,64.512,500.451,63.977,499.79,63.977z M496.198,67.569 c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C497.395,68.104,496.859,67.569,496.198,67.569z M498.594,57.989c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 c0-0.633-0.496-1.138-1.118-1.18h-0.156C499.09,56.851,498.594,57.356,498.594,57.989z M496.198,60.385 c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C497.395,60.921,496.859,60.385,496.198,60.385z M508.17,208.849c0-0.661-0.535-1.196-1.196-1.196c-0.53,0-0.965,0.35-1.122,0.828 l1.717,1.383C507.922,209.656,508.17,209.288,508.17,208.849z M504.578,205.257c0-0.661-0.536-1.196-1.196-1.196 c-0.661,0-1.196,0.536-1.196,1.196c0,0.114,0.035,0.217,0.065,0.321l1.07,0.863c0.021,0.001,0.039,0.012,0.061,0.012 C504.043,206.453,504.578,205.918,504.578,205.257z M506.974,200.469c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C508.17,201.005,507.635,200.469,506.974,200.469z  M506.974,193.285c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C508.17,193.821,507.635,193.285,506.974,193.285z M503.382,196.877c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C504.578,197.413,504.043,196.877,503.382,196.877z  M506.974,186.102c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C508.17,186.637,507.635,186.102,506.974,186.102z M503.382,189.693c-0.661,0-1.196,0.536-1.196,1.196 c0,0.66,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C504.578,190.229,504.043,189.693,503.382,189.693z  M506.974,178.918c-0.661,0-1.196,0.536-1.196,1.196c0,0.66,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C508.17,179.453,507.635,178.918,506.974,178.918z M503.382,182.51c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C504.578,183.045,504.043,182.51,503.382,182.51z  M506.974,171.734c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C508.17,172.269,507.635,171.734,506.974,171.734z M503.382,175.326c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C504.578,175.861,504.043,175.326,503.382,175.326z  M506.974,164.55c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C508.17,165.086,507.635,164.55,506.974,164.55z M503.382,168.142c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C504.578,168.678,504.043,168.142,503.382,168.142z  M506.974,157.366c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C508.17,157.902,507.635,157.366,506.974,157.366z M503.382,160.958c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C504.578,161.494,504.043,160.958,503.382,160.958z  M506.974,150.182c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C508.17,150.718,507.635,150.182,506.974,150.182z M503.382,153.774c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C504.578,154.31,504.043,153.774,503.382,153.774z  M506.974,142.999c-0.661,0-1.196,0.536-1.196,1.196c0,0.66,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C508.17,143.534,507.635,142.999,506.974,142.999z M503.382,146.591c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C504.578,147.126,504.043,146.591,503.382,146.591z  M506.974,135.815c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C508.17,136.35,507.635,135.815,506.974,135.815z M503.382,139.407c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C504.578,139.942,504.043,139.407,503.382,139.407z  M506.974,128.631c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C508.17,129.167,507.635,128.631,506.974,128.631z M503.382,132.223c-0.661,0-1.196,0.536-1.196,1.196 c0,0.66,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C504.578,132.758,504.043,132.223,503.382,132.223z  M506.974,121.447c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C508.17,121.983,507.635,121.447,506.974,121.447z M503.382,125.039c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C504.578,125.575,504.043,125.039,503.382,125.039z  M506.974,114.263c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C508.17,114.799,507.635,114.263,506.974,114.263z M503.382,117.855c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C504.578,118.391,504.043,117.855,503.382,117.855z  M506.974,107.08c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C508.17,107.615,507.635,107.08,506.974,107.08z M503.382,110.672c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C504.578,111.207,504.043,110.672,503.382,110.672z  M506.974,99.896c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C508.17,100.431,507.635,99.896,506.974,99.896z M503.382,103.488c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C504.578,104.023,504.043,103.488,503.382,103.488z  M506.974,92.712c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C508.17,93.248,507.635,92.712,506.974,92.712z M503.382,96.304c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196 c0.661,0,1.196-0.535,1.196-1.196C504.578,96.84,504.043,96.304,503.382,96.304z M506.974,85.528c-0.661,0-1.196,0.536-1.196,1.196 c0,0.66,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C508.17,86.064,507.635,85.528,506.974,85.528z M503.382,89.12 c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C504.578,89.656,504.043,89.12,503.382,89.12z M506.974,78.344c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196 c0.661,0,1.196-0.535,1.196-1.196C508.17,78.88,507.635,78.344,506.974,78.344z M503.382,81.936c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C504.578,82.472,504.043,81.936,503.382,81.936z M506.974,71.161 c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C508.17,71.696,507.635,71.161,506.974,71.161z M503.382,74.753c-0.661,0-1.196,0.536-1.196,1.196c0,0.66,0.536,1.196,1.196,1.196 c0.661,0,1.196-0.536,1.196-1.196C504.578,75.288,504.043,74.753,503.382,74.753z M506.974,63.977 c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C508.17,64.512,507.635,63.977,506.974,63.977z M503.382,67.569c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196 c0.661,0,1.196-0.535,1.196-1.196C504.578,68.104,504.043,67.569,503.382,67.569z M505.778,57.989c0,0.661,0.535,1.196,1.196,1.196 c0.661,0,1.196-0.535,1.196-1.196c0-0.633-0.496-1.138-1.118-1.18h-0.156C506.274,56.851,505.778,57.356,505.778,57.989z  M503.382,60.385c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C504.578,60.921,504.043,60.385,503.382,60.385z M514.158,214.837c-0.119,0-0.227,0.035-0.335,0.068l1.513,1.219 c0.002-0.031,0.018-0.058,0.018-0.091C515.354,215.372,514.819,214.837,514.158,214.837z M514.158,207.653 c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C515.354,208.188,514.819,207.653,514.158,207.653z M510.566,211.245c-0.331,0-0.63,0.135-0.847,0.352l1.835,1.479 c0.12-0.187,0.208-0.396,0.208-0.635C511.762,211.78,511.227,211.245,510.566,211.245z M514.158,200.469 c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C515.354,201.005,514.819,200.469,514.158,200.469z M510.566,204.061c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C511.762,204.596,511.227,204.061,510.566,204.061z  M514.158,193.285c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C515.354,193.821,514.819,193.285,514.158,193.285z M510.566,196.877c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C511.762,197.413,511.227,196.877,510.566,196.877z  M514.158,186.102c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C515.354,186.637,514.819,186.102,514.158,186.102z M510.566,189.693c-0.661,0-1.196,0.536-1.196,1.196 c0,0.66,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C511.762,190.229,511.227,189.693,510.566,189.693z  M514.158,178.918c-0.661,0-1.196,0.536-1.196,1.196c0,0.66,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C515.354,179.453,514.819,178.918,514.158,178.918z M510.566,182.51c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C511.762,183.045,511.227,182.51,510.566,182.51z  M514.158,171.734c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C515.354,172.269,514.819,171.734,514.158,171.734z M510.566,175.326c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C511.762,175.861,511.227,175.326,510.566,175.326z  M514.158,164.55c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C515.354,165.086,514.819,164.55,514.158,164.55z M510.566,168.142c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C511.762,168.678,511.227,168.142,510.566,168.142z  M514.158,157.366c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C515.354,157.902,514.819,157.366,514.158,157.366z M510.566,160.958c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C511.762,161.494,511.227,160.958,510.566,160.958z  M514.158,150.182c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C515.354,150.718,514.819,150.182,514.158,150.182z M510.566,153.774c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C511.762,154.31,511.227,153.774,510.566,153.774z  M514.158,142.999c-0.661,0-1.196,0.536-1.196,1.196c0,0.66,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C515.354,143.534,514.819,142.999,514.158,142.999z M510.566,146.591c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C511.762,147.126,511.227,146.591,510.566,146.591z  M514.158,135.815c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C515.354,136.35,514.819,135.815,514.158,135.815z M510.566,139.407c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C511.762,139.942,511.227,139.407,510.566,139.407z  M514.158,128.631c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C515.354,129.167,514.819,128.631,514.158,128.631z M510.566,132.223c-0.661,0-1.196,0.536-1.196,1.196 c0,0.66,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C511.762,132.758,511.227,132.223,510.566,132.223z  M514.158,121.447c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C515.354,121.983,514.819,121.447,514.158,121.447z M510.566,125.039c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C511.762,125.575,511.227,125.039,510.566,125.039z  M514.158,114.263c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C515.354,114.799,514.819,114.263,514.158,114.263z M510.566,117.855c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C511.762,118.391,511.227,117.855,510.566,117.855z  M514.158,107.08c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C515.354,107.615,514.819,107.08,514.158,107.08z M510.566,110.672c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C511.762,111.207,511.227,110.672,510.566,110.672z  M514.158,99.896c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C515.354,100.431,514.819,99.896,514.158,99.896z M510.566,103.488c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C511.762,104.023,511.227,103.488,510.566,103.488z  M514.158,92.712c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C515.354,93.248,514.819,92.712,514.158,92.712z M510.566,96.304c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C511.762,96.84,511.227,96.304,510.566,96.304z M514.158,85.528 c-0.661,0-1.196,0.536-1.196,1.196c0,0.66,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C515.354,86.064,514.819,85.528,514.158,85.528z M510.566,89.12c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196 c0.661,0,1.196-0.535,1.196-1.196C511.762,89.656,511.227,89.12,510.566,89.12z M514.158,78.344c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C515.354,78.88,514.819,78.344,514.158,78.344z M510.566,81.936 c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C511.762,82.472,511.227,81.936,510.566,81.936z M514.158,71.161c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C515.354,71.696,514.819,71.161,514.158,71.161z M510.566,74.753 c-0.661,0-1.196,0.536-1.196,1.196c0,0.66,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C511.762,75.288,511.227,74.753,510.566,74.753z M514.158,63.977c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C515.354,64.512,514.819,63.977,514.158,63.977z M510.566,67.569 c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C511.762,68.104,511.227,67.569,510.566,67.569z M512.962,57.989c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 c0-0.633-0.496-1.138-1.118-1.18h-0.156C513.458,56.851,512.962,57.356,512.962,57.989z M510.566,60.385 c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C511.762,60.921,511.227,60.385,510.566,60.385z M521.342,214.837c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C522.538,215.372,522.002,214.837,521.342,214.837z  M521.342,207.653c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C522.538,208.188,522.002,207.653,521.342,207.653z M517.75,211.245c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196s1.196-0.536,1.196-1.196C518.946,211.78,518.41,211.245,517.75,211.245z M521.342,200.469 c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C522.538,201.005,522.002,200.469,521.342,200.469z M517.75,204.061c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196s1.196-0.535,1.196-1.196C518.946,204.596,518.41,204.061,517.75,204.061z M521.342,193.285 c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C522.538,193.821,522.002,193.285,521.342,193.285z M517.75,196.877c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196s1.196-0.536,1.196-1.196C518.946,197.413,518.41,196.877,517.75,196.877z M521.342,186.102 c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C522.538,186.637,522.002,186.102,521.342,186.102z M517.75,189.693c-0.661,0-1.196,0.536-1.196,1.196 c0,0.66,0.535,1.196,1.196,1.196s1.196-0.536,1.196-1.196C518.946,190.229,518.41,189.693,517.75,189.693z M521.342,178.918 c-0.661,0-1.196,0.536-1.196,1.196c0,0.66,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C522.538,179.453,522.002,178.918,521.342,178.918z M517.75,182.51c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196s1.196-0.536,1.196-1.196C518.946,183.045,518.41,182.51,517.75,182.51z M521.342,171.734 c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C522.538,172.269,522.002,171.734,521.342,171.734z M517.75,175.326c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196s1.196-0.535,1.196-1.196C518.946,175.861,518.41,175.326,517.75,175.326z M521.342,164.55 c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C522.538,165.086,522.002,164.55,521.342,164.55z M517.75,168.142c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196s1.196-0.536,1.196-1.196C518.946,168.678,518.41,168.142,517.75,168.142z M521.342,157.366 c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C522.538,157.902,522.002,157.366,521.342,157.366z M517.75,160.958c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196s1.196-0.535,1.196-1.196C518.946,161.494,518.41,160.958,517.75,160.958z M521.342,150.182 c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C522.538,150.718,522.002,150.182,521.342,150.182z M517.75,153.774c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196s1.196-0.536,1.196-1.196C518.946,154.31,518.41,153.774,517.75,153.774z M521.342,142.999 c-0.661,0-1.196,0.536-1.196,1.196c0,0.66,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C522.538,143.534,522.002,142.999,521.342,142.999z M517.75,146.591c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196s1.196-0.535,1.196-1.196C518.946,147.126,518.41,146.591,517.75,146.591z M521.342,135.815 c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C522.538,136.35,522.002,135.815,521.342,135.815z M517.75,139.407c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196s1.196-0.536,1.196-1.196C518.946,139.942,518.41,139.407,517.75,139.407z M521.342,128.631 c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C522.538,129.167,522.002,128.631,521.342,128.631z M517.75,132.223c-0.661,0-1.196,0.536-1.196,1.196 c0,0.66,0.535,1.196,1.196,1.196s1.196-0.536,1.196-1.196C518.946,132.758,518.41,132.223,517.75,132.223z M521.342,121.447 c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C522.538,121.983,522.002,121.447,521.342,121.447z M517.75,125.039c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196s1.196-0.535,1.196-1.196C518.946,125.575,518.41,125.039,517.75,125.039z M521.342,114.263 c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C522.538,114.799,522.002,114.263,521.342,114.263z M517.75,117.855c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196s1.196-0.536,1.196-1.196C518.946,118.391,518.41,117.855,517.75,117.855z M521.342,107.08 c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C522.538,107.615,522.002,107.08,521.342,107.08z M517.75,110.672c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196s1.196-0.536,1.196-1.196C518.946,111.207,518.41,110.672,517.75,110.672z M521.342,99.896 c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C522.538,100.431,522.002,99.896,521.342,99.896z M517.75,103.488c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196s1.196-0.535,1.196-1.196C518.946,104.023,518.41,103.488,517.75,103.488z M521.342,92.712 c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C522.538,93.248,522.002,92.712,521.342,92.712z M517.75,96.304c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196 s1.196-0.535,1.196-1.196C518.946,96.84,518.41,96.304,517.75,96.304z M521.342,85.528c-0.661,0-1.196,0.536-1.196,1.196 c0,0.66,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C522.538,86.064,522.002,85.528,521.342,85.528z M517.75,89.12 c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196s1.196-0.535,1.196-1.196 C518.946,89.656,518.41,89.12,517.75,89.12z M521.342,78.344c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196 c0.661,0,1.196-0.535,1.196-1.196C522.538,78.88,522.002,78.344,521.342,78.344z M517.75,81.936c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196s1.196-0.535,1.196-1.196C518.946,82.472,518.41,81.936,517.75,81.936z M521.342,71.161 c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C522.538,71.696,522.002,71.161,521.342,71.161z M517.75,74.753c-0.661,0-1.196,0.536-1.196,1.196c0,0.66,0.535,1.196,1.196,1.196 s1.196-0.536,1.196-1.196C518.946,75.288,518.41,74.753,517.75,74.753z M521.342,63.977c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C522.538,64.512,522.002,63.977,521.342,63.977z M517.75,67.569 c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196s1.196-0.535,1.196-1.196 C518.946,68.104,518.41,67.569,517.75,67.569z M520.146,57.989c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 c0-0.633-0.496-1.138-1.118-1.18h-0.156C520.642,56.851,520.146,57.356,520.146,57.989z M517.75,60.385 c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196s1.196-0.536,1.196-1.196 C518.946,60.921,518.41,60.385,517.75,60.385z M528.526,222.02c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196 s1.196-0.535,1.196-1.196C529.722,222.556,529.186,222.02,528.526,222.02z M528.526,214.837c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196s1.196-0.536,1.196-1.196C529.722,215.372,529.186,214.837,528.526,214.837z M524.934,218.429 c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C526.13,218.964,525.594,218.429,524.934,218.429z M528.526,207.653c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196s1.196-0.535,1.196-1.196C529.722,208.188,529.186,207.653,528.526,207.653z M524.934,211.245 c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C526.13,211.78,525.594,211.245,524.934,211.245z M528.526,200.469c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196s1.196-0.536,1.196-1.196C529.722,201.005,529.186,200.469,528.526,200.469z M524.934,204.061 c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C526.13,204.596,525.594,204.061,524.934,204.061z M528.526,193.285c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196s1.196-0.535,1.196-1.196C529.722,193.821,529.186,193.285,528.526,193.285z M524.934,196.877 c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C526.13,197.413,525.594,196.877,524.934,196.877z M528.526,186.102c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196s1.196-0.536,1.196-1.196C529.722,186.637,529.186,186.102,528.526,186.102z M524.934,189.693 c-0.661,0-1.196,0.536-1.196,1.196c0,0.66,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C526.13,190.229,525.594,189.693,524.934,189.693z M528.526,178.918c-0.661,0-1.196,0.536-1.196,1.196 c0,0.66,0.535,1.196,1.196,1.196s1.196-0.536,1.196-1.196C529.722,179.453,529.186,178.918,528.526,178.918z M524.934,182.51 c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C526.13,183.045,525.594,182.51,524.934,182.51z M528.526,171.734c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196s1.196-0.536,1.196-1.196C529.722,172.269,529.186,171.734,528.526,171.734z M524.934,175.326 c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C526.13,175.861,525.594,175.326,524.934,175.326z M528.526,164.55c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196s1.196-0.535,1.196-1.196C529.722,165.086,529.186,164.55,528.526,164.55z M524.934,168.142 c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C526.13,168.678,525.594,168.142,524.934,168.142z M528.526,157.366c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196s1.196-0.536,1.196-1.196C529.722,157.902,529.186,157.366,528.526,157.366z M524.934,160.958 c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C526.13,161.494,525.594,160.958,524.934,160.958z M528.526,150.182c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196s1.196-0.535,1.196-1.196C529.722,150.718,529.186,150.182,528.526,150.182z M524.934,153.774 c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C526.13,154.31,525.594,153.774,524.934,153.774z M528.526,142.999c-0.661,0-1.196,0.536-1.196,1.196 c0,0.66,0.535,1.196,1.196,1.196s1.196-0.536,1.196-1.196C529.722,143.534,529.186,142.999,528.526,142.999z M524.934,146.591 c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C526.13,147.126,525.594,146.591,524.934,146.591z M528.526,135.815c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196s1.196-0.535,1.196-1.196C529.722,136.35,529.186,135.815,528.526,135.815z M524.934,139.407 c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C526.13,139.942,525.594,139.407,524.934,139.407z M528.526,128.631c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196s1.196-0.536,1.196-1.196C529.722,129.167,529.186,128.631,528.526,128.631z M524.934,132.223 c-0.661,0-1.196,0.536-1.196,1.196c0,0.66,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C526.13,132.758,525.594,132.223,524.934,132.223z M528.526,121.447c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196s1.196-0.535,1.196-1.196C529.722,121.983,529.186,121.447,528.526,121.447z M524.934,125.039 c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C526.13,125.575,525.594,125.039,524.934,125.039z M528.526,114.263c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196s1.196-0.535,1.196-1.196C529.722,114.799,529.186,114.263,528.526,114.263z M524.934,117.855 c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C526.13,118.391,525.594,117.855,524.934,117.855z M528.526,107.08c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196s1.196-0.535,1.196-1.196C529.722,107.615,529.186,107.08,528.526,107.08z M524.934,110.672 c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C526.13,111.207,525.594,110.672,524.934,110.672z M528.526,99.896c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196s1.196-0.535,1.196-1.196C529.722,100.431,529.186,99.896,528.526,99.896z M524.934,103.488 c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C526.13,104.023,525.594,103.488,524.934,103.488z M528.526,92.712c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196s1.196-0.535,1.196-1.196C529.722,93.248,529.186,92.712,528.526,92.712z M524.934,96.304 c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C526.13,96.84,525.594,96.304,524.934,96.304z M528.526,85.528c-0.661,0-1.196,0.536-1.196,1.196c0,0.66,0.535,1.196,1.196,1.196 s1.196-0.536,1.196-1.196C529.722,86.064,529.186,85.528,528.526,85.528z M524.934,89.12c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C526.13,89.656,525.594,89.12,524.934,89.12z M528.526,78.344 c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196s1.196-0.535,1.196-1.196 C529.722,78.88,529.186,78.344,528.526,78.344z M524.934,81.936c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196 c0.661,0,1.196-0.535,1.196-1.196C526.13,82.472,525.594,81.936,524.934,81.936z M528.526,71.161c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196s1.196-0.535,1.196-1.196C529.722,71.696,529.186,71.161,528.526,71.161z M524.934,74.753 c-0.661,0-1.196,0.536-1.196,1.196c0,0.66,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C526.13,75.288,525.594,74.753,524.934,74.753z M528.526,63.977c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196 s1.196-0.535,1.196-1.196C529.722,64.512,529.186,63.977,528.526,63.977z M524.934,67.569c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C526.13,68.104,525.594,67.569,524.934,67.569z M527.329,57.989 c0,0.661,0.535,1.196,1.196,1.196s1.196-0.535,1.196-1.196c0-0.633-0.496-1.138-1.118-1.18h-0.156 C527.825,56.851,527.329,57.356,527.329,57.989z M524.934,60.385c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C526.13,60.921,525.594,60.385,524.934,60.385z M535.709,229.204 c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.536,1.196-1.196 C536.905,229.74,536.37,229.204,535.709,229.204z M535.709,222.02c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.535,1.196-1.196C536.905,222.556,536.37,222.02,535.709,222.02z M532.117,225.612 c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C533.314,226.148,532.778,225.612,532.117,225.612z M535.709,214.837c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.536,1.196-1.196C536.905,215.372,536.37,214.837,535.709,214.837z  M532.117,218.429c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C533.314,218.964,532.778,218.429,532.117,218.429z M535.709,207.653c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.535,1.196-1.196C536.905,208.188,536.37,207.653,535.709,207.653z  M532.117,211.245c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C533.314,211.78,532.778,211.245,532.117,211.245z M535.709,200.469c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.536,1.196-1.196C536.905,201.005,536.37,200.469,535.709,200.469z  M532.117,204.061c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C533.314,204.596,532.778,204.061,532.117,204.061z M535.709,193.285c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.535,1.196-1.196C536.905,193.821,536.37,193.285,535.709,193.285z  M532.117,196.877c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C533.314,197.413,532.778,196.877,532.117,196.877z M535.709,186.102c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.536,1.196-1.196C536.905,186.637,536.37,186.102,535.709,186.102z  M532.117,189.693c-0.661,0-1.196,0.536-1.196,1.196c0,0.66,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C533.314,190.229,532.778,189.693,532.117,189.693z M535.709,178.918c-0.661,0-1.196,0.536-1.196,1.196 c0,0.66,0.536,1.196,1.196,1.196c0.66,0,1.196-0.536,1.196-1.196C536.905,179.453,536.37,178.918,535.709,178.918z M532.117,182.51 c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C533.314,183.045,532.778,182.51,532.117,182.51z M535.709,171.734c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.536,1.196-1.196C536.905,172.269,536.37,171.734,535.709,171.734z  M532.117,175.326c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C533.314,175.861,532.778,175.326,532.117,175.326z M535.709,164.55c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.535,1.196-1.196C536.905,165.086,536.37,164.55,535.709,164.55z M532.117,168.142 c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C533.314,168.678,532.778,168.142,532.117,168.142z M535.709,157.366c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.536,1.196-1.196C536.905,157.902,536.37,157.366,535.709,157.366z  M532.117,160.958c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C533.314,161.494,532.778,160.958,532.117,160.958z M535.709,150.182c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.535,1.196-1.196C536.905,150.718,536.37,150.182,535.709,150.182z  M532.117,153.774c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C533.314,154.31,532.778,153.774,532.117,153.774z M535.709,142.999c-0.661,0-1.196,0.536-1.196,1.196 c0,0.66,0.536,1.196,1.196,1.196c0.66,0,1.196-0.536,1.196-1.196C536.905,143.534,536.37,142.999,535.709,142.999z  M532.117,146.591c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C533.314,147.126,532.778,146.591,532.117,146.591z M535.709,135.815c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.535,1.196-1.196C536.905,136.35,536.37,135.815,535.709,135.815z  M532.117,139.407c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C533.314,139.942,532.778,139.407,532.117,139.407z M535.709,128.631c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.536,1.196-1.196C536.905,129.167,536.37,128.631,535.709,128.631z  M532.117,132.223c-0.661,0-1.196,0.536-1.196,1.196c0,0.66,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C533.314,132.758,532.778,132.223,532.117,132.223z M535.709,121.447c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.535,1.196-1.196C536.905,121.983,536.37,121.447,535.709,121.447z  M532.117,125.039c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C533.314,125.575,532.778,125.039,532.117,125.039z M535.709,114.263c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.535,1.196-1.196C536.905,114.799,536.37,114.263,535.709,114.263z  M532.117,117.855c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C533.314,118.391,532.778,117.855,532.117,117.855z M535.709,107.08c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.535,1.196-1.196C536.905,107.615,536.37,107.08,535.709,107.08z M532.117,110.672 c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C533.314,111.207,532.778,110.672,532.117,110.672z M535.709,99.896c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.535,1.196-1.196C536.905,100.431,536.37,99.896,535.709,99.896z M532.117,103.488 c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C533.314,104.023,532.778,103.488,532.117,103.488z M535.709,92.712c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.535,1.196-1.196C536.905,93.248,536.37,92.712,535.709,92.712z M532.117,96.304 c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C533.314,96.84,532.778,96.304,532.117,96.304z M535.709,85.528c-0.661,0-1.196,0.536-1.196,1.196c0,0.66,0.536,1.196,1.196,1.196 c0.66,0,1.196-0.536,1.196-1.196C536.905,86.064,536.37,85.528,535.709,85.528z M532.117,89.12c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C533.314,89.656,532.778,89.12,532.117,89.12z M535.709,78.344 c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.535,1.196-1.196 C536.905,78.88,536.37,78.344,535.709,78.344z M532.117,81.936c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196 c0.661,0,1.196-0.535,1.196-1.196C533.314,82.472,532.778,81.936,532.117,81.936z M535.709,71.161 c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.535,1.196-1.196 C536.905,71.696,536.37,71.161,535.709,71.161z M532.117,74.753c-0.661,0-1.196,0.536-1.196,1.196c0,0.66,0.536,1.196,1.196,1.196 c0.661,0,1.196-0.536,1.196-1.196C533.314,75.288,532.778,74.753,532.117,74.753z M535.709,63.977 c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.535,1.196-1.196 C536.905,64.512,536.37,63.977,535.709,63.977z M532.117,67.569c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196 c0.661,0,1.196-0.535,1.196-1.196C533.314,68.104,532.778,67.569,532.117,67.569z M534.513,57.989c0,0.661,0.536,1.196,1.196,1.196 c0.66,0,1.196-0.535,1.196-1.196c0-0.633-0.496-1.138-1.118-1.18h-0.156C535.009,56.851,534.513,57.356,534.513,57.989z  M532.117,60.385c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C533.314,60.921,532.778,60.385,532.117,60.385z M544.089,237.584c0-0.661-0.536-1.196-1.196-1.196 c-0.595,0-1.066,0.442-1.159,1.01l1.604,1.293C543.778,238.514,544.089,238.087,544.089,237.584z M540.497,233.992 c0-0.661-0.535-1.196-1.196-1.196c-0.661,0-1.196,0.535-1.196,1.196c0,0.252,0.095,0.472,0.228,0.665l0.557,0.448 c0.129,0.048,0.266,0.083,0.411,0.083C539.962,235.189,540.497,234.653,540.497,233.992z M542.893,229.204 c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C544.089,229.74,543.554,229.204,542.893,229.204z M542.893,222.02c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C544.089,222.556,543.554,222.02,542.893,222.02z  M539.301,225.612c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C540.497,226.148,539.962,225.612,539.301,225.612z M542.893,214.837c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C544.089,215.372,543.554,214.837,542.893,214.837z  M539.301,218.429c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C540.497,218.964,539.962,218.429,539.301,218.429z M542.893,207.653c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C544.089,208.188,543.554,207.653,542.893,207.653z  M539.301,211.245c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C540.497,211.78,539.962,211.245,539.301,211.245z M542.893,200.469c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C544.089,201.005,543.554,200.469,542.893,200.469z  M539.301,204.061c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C540.497,204.596,539.962,204.061,539.301,204.061z M542.893,193.285c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C544.089,193.821,543.554,193.285,542.893,193.285z  M539.301,196.877c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C540.497,197.413,539.962,196.877,539.301,196.877z M542.893,186.102c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C544.089,186.637,543.554,186.102,542.893,186.102z  M539.301,189.693c-0.661,0-1.196,0.536-1.196,1.196c0,0.66,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C540.497,190.229,539.962,189.693,539.301,189.693z M542.893,178.918c-0.661,0-1.196,0.536-1.196,1.196 c0,0.66,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C544.089,179.453,543.554,178.918,542.893,178.918z  M539.301,182.51c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C540.497,183.045,539.962,182.51,539.301,182.51z M542.893,171.734c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C544.089,172.269,543.554,171.734,542.893,171.734z  M539.301,175.326c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C540.497,175.861,539.962,175.326,539.301,175.326z M542.893,164.55c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C544.089,165.086,543.554,164.55,542.893,164.55z  M539.301,168.142c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C540.497,168.678,539.962,168.142,539.301,168.142z M542.893,157.366c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C544.089,157.902,543.554,157.366,542.893,157.366z  M539.301,160.958c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C540.497,161.494,539.962,160.958,539.301,160.958z M542.893,150.182c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C544.089,150.718,543.554,150.182,542.893,150.182z  M539.301,153.774c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C540.497,154.31,539.962,153.774,539.301,153.774z M542.893,142.999c-0.661,0-1.196,0.536-1.196,1.196 c0,0.66,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C544.089,143.534,543.554,142.999,542.893,142.999z  M539.301,146.591c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C540.497,147.126,539.962,146.591,539.301,146.591z M542.893,135.815c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C544.089,136.35,543.554,135.815,542.893,135.815z  M539.301,139.407c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C540.497,139.942,539.962,139.407,539.301,139.407z M542.893,128.631c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C544.089,129.167,543.554,128.631,542.893,128.631z  M539.301,132.223c-0.661,0-1.196,0.536-1.196,1.196c0,0.66,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C540.497,132.758,539.962,132.223,539.301,132.223z M542.893,121.447c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C544.089,121.983,543.554,121.447,542.893,121.447z  M539.301,125.039c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C540.497,125.575,539.962,125.039,539.301,125.039z M542.893,114.263c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C544.089,114.799,543.554,114.263,542.893,114.263z  M539.301,117.855c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C540.497,118.391,539.962,117.855,539.301,117.855z M542.893,107.08c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C544.089,107.615,543.554,107.08,542.893,107.08z  M539.301,110.672c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C540.497,111.207,539.962,110.672,539.301,110.672z M542.893,99.896c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C544.089,100.431,543.554,99.896,542.893,99.896z  M539.301,103.488c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C540.497,104.023,539.962,103.488,539.301,103.488z M542.893,92.712c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C544.089,93.248,543.554,92.712,542.893,92.712z M539.301,96.304 c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C540.497,96.84,539.962,96.304,539.301,96.304z M542.893,85.528c-0.661,0-1.196,0.536-1.196,1.196c0,0.66,0.535,1.196,1.196,1.196 c0.661,0,1.196-0.536,1.196-1.196C544.089,86.064,543.554,85.528,542.893,85.528z M539.301,89.12c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C540.497,89.656,539.962,89.12,539.301,89.12z M542.893,78.344 c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C544.089,78.88,543.554,78.344,542.893,78.344z M539.301,81.936c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196 c0.661,0,1.196-0.535,1.196-1.196C540.497,82.472,539.962,81.936,539.301,81.936z M542.893,71.161 c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C544.089,71.696,543.554,71.161,542.893,71.161z M539.301,74.753c-0.661,0-1.196,0.536-1.196,1.196c0,0.66,0.535,1.196,1.196,1.196 c0.661,0,1.196-0.536,1.196-1.196C540.497,75.288,539.962,74.753,539.301,74.753z M542.893,63.977 c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C544.089,64.512,543.554,63.977,542.893,63.977z M539.301,67.569c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C540.497,68.104,539.962,67.569,539.301,67.569z M541.697,57.989 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196c0-0.633-0.496-1.138-1.118-1.18h-0.156 C542.193,56.851,541.697,57.356,541.697,57.989z M539.301,60.385c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C540.497,60.921,539.962,60.385,539.301,60.385z  M550.077,243.572c-0.189,0-0.361,0.053-0.52,0.13l1.661,1.339c0.022-0.09,0.055-0.176,0.055-0.273 C551.273,244.107,550.738,243.572,550.077,243.572z M550.077,236.388c-0.661,0-1.196,0.536-1.196,1.196 c0,0.66,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C551.273,236.924,550.738,236.388,550.077,236.388z  M546.485,239.98c-0.391,0-0.721,0.2-0.94,0.489l1.835,1.479c0.181-0.21,0.301-0.474,0.301-0.772 C547.681,240.516,547.146,239.98,546.485,239.98z M550.077,229.204c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C551.273,229.74,550.738,229.204,550.077,229.204z  M546.485,232.796c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.536,1.196-1.196 C547.681,233.332,547.146,232.796,546.485,232.796z M550.077,222.02c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C551.273,222.556,550.738,222.02,550.077,222.02z  M546.485,225.612c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.536,1.196-1.196 C547.681,226.148,547.146,225.612,546.485,225.612z M550.077,214.837c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C551.273,215.372,550.738,214.837,550.077,214.837z  M546.485,218.429c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.536,1.196-1.196 C547.681,218.964,547.146,218.429,546.485,218.429z M550.077,207.653c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C551.273,208.188,550.738,207.653,550.077,207.653z  M546.485,211.245c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.536,1.196-1.196 C547.681,211.78,547.146,211.245,546.485,211.245z M550.077,200.469c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C551.273,201.005,550.738,200.469,550.077,200.469z  M546.485,204.061c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.535,1.196-1.196 C547.681,204.596,547.146,204.061,546.485,204.061z M550.077,193.285c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C551.273,193.821,550.738,193.285,550.077,193.285z  M546.485,196.877c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.536,1.196-1.196 C547.681,197.413,547.146,196.877,546.485,196.877z M550.077,186.102c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C551.273,186.637,550.738,186.102,550.077,186.102z  M546.485,189.693c-0.661,0-1.196,0.536-1.196,1.196c0,0.66,0.536,1.196,1.196,1.196c0.66,0,1.196-0.536,1.196-1.196 C547.681,190.229,547.146,189.693,546.485,189.693z M550.077,178.918c-0.661,0-1.196,0.536-1.196,1.196 c0,0.66,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C551.273,179.453,550.738,178.918,550.077,178.918z  M546.485,182.51c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.536,1.196-1.196 C547.681,183.045,547.146,182.51,546.485,182.51z M550.077,171.734c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C551.273,172.269,550.738,171.734,550.077,171.734z  M546.485,175.326c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.535,1.196-1.196 C547.681,175.861,547.146,175.326,546.485,175.326z M550.077,164.55c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C551.273,165.086,550.738,164.55,550.077,164.55z  M546.485,168.142c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.536,1.196-1.196 C547.681,168.678,547.146,168.142,546.485,168.142z M550.077,157.366c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C551.273,157.902,550.738,157.366,550.077,157.366z  M546.485,160.958c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.535,1.196-1.196 C547.681,161.494,547.146,160.958,546.485,160.958z M550.077,150.182c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C551.273,150.718,550.738,150.182,550.077,150.182z  M546.485,153.774c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.536,1.196-1.196 C547.681,154.31,547.146,153.774,546.485,153.774z M550.077,142.999c-0.661,0-1.196,0.536-1.196,1.196 c0,0.66,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C551.273,143.534,550.738,142.999,550.077,142.999z  M546.485,146.591c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.535,1.196-1.196 C547.681,147.126,547.146,146.591,546.485,146.591z M550.077,135.815c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C551.273,136.35,550.738,135.815,550.077,135.815z  M546.485,139.407c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.536,1.196-1.196 C547.681,139.942,547.146,139.407,546.485,139.407z M550.077,128.631c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C551.273,129.167,550.738,128.631,550.077,128.631z  M546.485,132.223c-0.661,0-1.196,0.536-1.196,1.196c0,0.66,0.536,1.196,1.196,1.196c0.66,0,1.196-0.536,1.196-1.196 C547.681,132.758,547.146,132.223,546.485,132.223z M550.077,121.447c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C551.273,121.983,550.738,121.447,550.077,121.447z  M546.485,125.039c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.535,1.196-1.196 C547.681,125.575,547.146,125.039,546.485,125.039z M550.077,114.263c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C551.273,114.799,550.738,114.263,550.077,114.263z  M546.485,117.855c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.536,1.196-1.196 C547.681,118.391,547.146,117.855,546.485,117.855z M550.077,107.08c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C551.273,107.615,550.738,107.08,550.077,107.08z  M546.485,110.672c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.536,1.196-1.196 C547.681,111.207,547.146,110.672,546.485,110.672z M550.077,99.896c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C551.273,100.431,550.738,99.896,550.077,99.896z  M546.485,103.488c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.535,1.196-1.196 C547.681,104.023,547.146,103.488,546.485,103.488z M550.077,92.712c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C551.273,93.248,550.738,92.712,550.077,92.712z M546.485,96.304 c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.535,1.196-1.196 C547.681,96.84,547.146,96.304,546.485,96.304z M550.077,85.528c-0.661,0-1.196,0.536-1.196,1.196c0,0.66,0.535,1.196,1.196,1.196 c0.661,0,1.196-0.536,1.196-1.196C551.273,86.064,550.738,85.528,550.077,85.528z M546.485,89.12c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.535,1.196-1.196C547.681,89.656,547.146,89.12,546.485,89.12z M550.077,78.344 c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C551.273,78.88,550.738,78.344,550.077,78.344z M546.485,81.936c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196 c0.66,0,1.196-0.535,1.196-1.196C547.681,82.472,547.146,81.936,546.485,81.936z M550.077,71.161c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C551.273,71.696,550.738,71.161,550.077,71.161z M546.485,74.753 c-0.661,0-1.196,0.536-1.196,1.196c0,0.66,0.536,1.196,1.196,1.196c0.66,0,1.196-0.536,1.196-1.196 C547.681,75.288,547.146,74.753,546.485,74.753z M550.077,63.977c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C551.273,64.512,550.738,63.977,550.077,63.977z M546.485,67.569 c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.535,1.196-1.196 C547.681,68.104,547.146,67.569,546.485,67.569z M548.881,57.989c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 c0-0.633-0.496-1.138-1.118-1.18h-0.156C549.377,56.851,548.881,57.356,548.881,57.989z M546.485,60.385 c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.536,1.196-1.196 C547.681,60.921,547.146,60.385,546.485,60.385z M557.261,243.572c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.536,1.196-1.196C558.457,244.107,557.921,243.572,557.261,243.572z  M553.914,247.213l0.86,0.693C554.625,247.546,554.301,247.297,553.914,247.213z M557.261,236.388 c-0.661,0-1.196,0.536-1.196,1.196c0,0.66,0.536,1.196,1.196,1.196c0.66,0,1.196-0.536,1.196-1.196 C558.457,236.924,557.921,236.388,557.261,236.388z M553.669,239.98c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C554.865,240.516,554.329,239.98,553.669,239.98z  M557.261,229.204c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.536,1.196-1.196 C558.457,229.74,557.921,229.204,557.261,229.204z M553.669,232.796c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C554.865,233.332,554.329,232.796,553.669,232.796z  M557.261,222.02c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.535,1.196-1.196 C558.457,222.556,557.921,222.02,557.261,222.02z M553.669,225.612c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C554.865,226.148,554.329,225.612,553.669,225.612z  M557.261,214.837c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.536,1.196-1.196 C558.457,215.372,557.921,214.837,557.261,214.837z M553.669,218.429c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C554.865,218.964,554.329,218.429,553.669,218.429z  M557.261,207.653c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.535,1.196-1.196 C558.457,208.188,557.921,207.653,557.261,207.653z M553.669,211.245c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C554.865,211.78,554.329,211.245,553.669,211.245z  M557.261,200.469c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.536,1.196-1.196 C558.457,201.005,557.921,200.469,557.261,200.469z M553.669,204.061c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C554.865,204.596,554.329,204.061,553.669,204.061z  M557.261,193.285c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.535,1.196-1.196 C558.457,193.821,557.921,193.285,557.261,193.285z M553.669,196.877c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C554.865,197.413,554.329,196.877,553.669,196.877z  M557.261,186.102c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.536,1.196-1.196 C558.457,186.637,557.921,186.102,557.261,186.102z M553.669,189.693c-0.661,0-1.196,0.536-1.196,1.196 c0,0.66,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C554.865,190.229,554.329,189.693,553.669,189.693z  M557.261,178.918c-0.661,0-1.196,0.536-1.196,1.196c0,0.66,0.536,1.196,1.196,1.196c0.66,0,1.196-0.536,1.196-1.196 C558.457,179.453,557.921,178.918,557.261,178.918z M553.669,182.51c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C554.865,183.045,554.329,182.51,553.669,182.51z  M557.261,171.734c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.536,1.196-1.196 C558.457,172.269,557.921,171.734,557.261,171.734z M553.669,175.326c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C554.865,175.861,554.329,175.326,553.669,175.326z  M557.261,164.55c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.535,1.196-1.196 C558.457,165.086,557.921,164.55,557.261,164.55z M553.669,168.142c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C554.865,168.678,554.329,168.142,553.669,168.142z  M557.261,157.366c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.536,1.196-1.196 C558.457,157.902,557.921,157.366,557.261,157.366z M553.669,160.958c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C554.865,161.494,554.329,160.958,553.669,160.958z  M557.261,150.182c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.535,1.196-1.196 C558.457,150.718,557.921,150.182,557.261,150.182z M553.669,153.774c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C554.865,154.31,554.329,153.774,553.669,153.774z  M557.261,142.999c-0.661,0-1.196,0.536-1.196,1.196c0,0.66,0.536,1.196,1.196,1.196c0.66,0,1.196-0.536,1.196-1.196 C558.457,143.534,557.921,142.999,557.261,142.999z M553.669,146.591c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C554.865,147.126,554.329,146.591,553.669,146.591z  M557.261,135.815c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.535,1.196-1.196 C558.457,136.35,557.921,135.815,557.261,135.815z M553.669,139.407c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C554.865,139.942,554.329,139.407,553.669,139.407z  M557.261,128.631c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.536,1.196-1.196 C558.457,129.167,557.921,128.631,557.261,128.631z M553.669,132.223c-0.661,0-1.196,0.536-1.196,1.196 c0,0.66,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C554.865,132.758,554.329,132.223,553.669,132.223z  M557.261,121.447c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.535,1.196-1.196 C558.457,121.983,557.921,121.447,557.261,121.447z M553.669,125.039c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C554.865,125.575,554.329,125.039,553.669,125.039z  M557.261,114.263c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.535,1.196-1.196 C558.457,114.799,557.921,114.263,557.261,114.263z M553.669,117.855c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C554.865,118.391,554.329,117.855,553.669,117.855z  M557.261,107.08c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.535,1.196-1.196 C558.457,107.615,557.921,107.08,557.261,107.08z M553.669,110.672c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C554.865,111.207,554.329,110.672,553.669,110.672z  M557.261,99.896c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.535,1.196-1.196 C558.457,100.431,557.921,99.896,557.261,99.896z M553.669,103.488c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C554.865,104.023,554.329,103.488,553.669,103.488z  M557.261,92.712c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.535,1.196-1.196 C558.457,93.248,557.921,92.712,557.261,92.712z M553.669,96.304c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C554.865,96.84,554.329,96.304,553.669,96.304z M557.261,85.528 c-0.661,0-1.196,0.536-1.196,1.196c0,0.66,0.536,1.196,1.196,1.196c0.66,0,1.196-0.536,1.196-1.196 C558.457,86.064,557.921,85.528,557.261,85.528z M553.669,89.12c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196 c0.661,0,1.196-0.535,1.196-1.196C554.865,89.656,554.329,89.12,553.669,89.12z M557.261,78.344c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.535,1.196-1.196C558.457,78.88,557.921,78.344,557.261,78.344z M553.669,81.936 c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C554.865,82.472,554.329,81.936,553.669,81.936z M557.261,71.161c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.535,1.196-1.196C558.457,71.696,557.921,71.161,557.261,71.161z M553.669,74.753 c-0.661,0-1.196,0.536-1.196,1.196c0,0.66,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C554.865,75.288,554.329,74.753,553.669,74.753z M557.261,63.977c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.535,1.196-1.196C558.457,64.512,557.921,63.977,557.261,63.977z M553.669,67.569 c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C554.865,68.104,554.329,67.569,553.669,67.569z M556.065,57.989c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.535,1.196-1.196 c0-0.633-0.496-1.138-1.118-1.18h-0.156C556.56,56.851,556.065,57.356,556.065,57.989z M553.669,60.385 c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C554.865,60.921,554.329,60.385,553.669,60.385z M564.444,250.756c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C565.641,251.291,565.105,250.756,564.444,250.756z  M564.444,243.572c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C565.641,244.107,565.105,243.572,564.444,243.572z M560.853,247.164c-0.661,0-1.196,0.536-1.196,1.196 c0,0.66,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C562.049,247.699,561.513,247.164,560.853,247.164z  M564.444,236.388c-0.661,0-1.196,0.536-1.196,1.196c0,0.66,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C565.641,236.924,565.105,236.388,564.444,236.388z M560.853,239.98c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C562.049,240.516,561.513,239.98,560.853,239.98z  M564.444,229.204c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C565.641,229.74,565.105,229.204,564.444,229.204z M560.853,232.796c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C562.049,233.332,561.513,232.796,560.853,232.796z  M564.444,222.02c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C565.641,222.556,565.105,222.02,564.444,222.02z M560.853,225.612c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C562.049,226.148,561.513,225.612,560.853,225.612z  M564.444,214.837c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C565.641,215.372,565.105,214.837,564.444,214.837z M560.853,218.429c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C562.049,218.964,561.513,218.429,560.853,218.429z  M564.444,207.653c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C565.641,208.188,565.105,207.653,564.444,207.653z M560.853,211.245c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C562.049,211.78,561.513,211.245,560.853,211.245z  M564.444,200.469c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C565.641,201.005,565.105,200.469,564.444,200.469z M560.853,204.061c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C562.049,204.596,561.513,204.061,560.853,204.061z  M564.444,193.285c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C565.641,193.821,565.105,193.285,564.444,193.285z M560.853,196.877c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C562.049,197.413,561.513,196.877,560.853,196.877z  M564.444,186.102c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C565.641,186.637,565.105,186.102,564.444,186.102z M560.853,189.693c-0.661,0-1.196,0.536-1.196,1.196 c0,0.66,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C562.049,190.229,561.513,189.693,560.853,189.693z  M564.444,178.918c-0.661,0-1.196,0.536-1.196,1.196c0,0.66,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C565.641,179.453,565.105,178.918,564.444,178.918z M560.853,182.51c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C562.049,183.045,561.513,182.51,560.853,182.51z  M564.444,171.734c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C565.641,172.269,565.105,171.734,564.444,171.734z M560.853,175.326c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C562.049,175.861,561.513,175.326,560.853,175.326z  M564.444,164.55c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C565.641,165.086,565.105,164.55,564.444,164.55z M560.853,168.142c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C562.049,168.678,561.513,168.142,560.853,168.142z  M564.444,157.366c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C565.641,157.902,565.105,157.366,564.444,157.366z M560.853,160.958c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C562.049,161.494,561.513,160.958,560.853,160.958z  M564.444,150.182c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C565.641,150.718,565.105,150.182,564.444,150.182z M560.853,153.774c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C562.049,154.31,561.513,153.774,560.853,153.774z  M564.444,142.999c-0.661,0-1.196,0.536-1.196,1.196c0,0.66,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C565.641,143.534,565.105,142.999,564.444,142.999z M560.853,146.591c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C562.049,147.126,561.513,146.591,560.853,146.591z  M564.444,135.815c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C565.641,136.35,565.105,135.815,564.444,135.815z M560.853,139.407c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C562.049,139.942,561.513,139.407,560.853,139.407z  M564.444,128.631c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C565.641,129.167,565.105,128.631,564.444,128.631z M560.853,132.223c-0.661,0-1.196,0.536-1.196,1.196 c0,0.66,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C562.049,132.758,561.513,132.223,560.853,132.223z  M564.444,121.447c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C565.641,121.983,565.105,121.447,564.444,121.447z M560.853,125.039c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C562.049,125.575,561.513,125.039,560.853,125.039z  M564.444,114.263c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C565.641,114.799,565.105,114.263,564.444,114.263z M560.853,117.855c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C562.049,118.391,561.513,117.855,560.853,117.855z  M564.444,107.08c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C565.641,107.615,565.105,107.08,564.444,107.08z M560.853,110.672c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C562.049,111.207,561.513,110.672,560.853,110.672z  M564.444,99.896c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C565.641,100.431,565.105,99.896,564.444,99.896z M560.853,103.488c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C562.049,104.023,561.513,103.488,560.853,103.488z  M564.444,92.712c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C565.641,93.248,565.105,92.712,564.444,92.712z M560.853,96.304c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C562.049,96.84,561.513,96.304,560.853,96.304z M564.444,85.528 c-0.661,0-1.196,0.536-1.196,1.196c0,0.66,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C565.641,86.064,565.105,85.528,564.444,85.528z M560.853,89.12c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196 c0.661,0,1.196-0.535,1.196-1.196C562.049,89.656,561.513,89.12,560.853,89.12z M564.444,78.344c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C565.641,78.88,565.105,78.344,564.444,78.344z M560.853,81.936 c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C562.049,82.472,561.513,81.936,560.853,81.936z M564.444,71.161c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C565.641,71.696,565.105,71.161,564.444,71.161z M560.853,74.753 c-0.661,0-1.196,0.536-1.196,1.196c0,0.66,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C562.049,75.288,561.513,74.753,560.853,74.753z M564.444,63.977c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C565.641,64.512,565.105,63.977,564.444,63.977z M560.853,67.569 c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C562.049,68.104,561.513,67.569,560.853,67.569z M563.248,57.989c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 c0-0.633-0.496-1.138-1.118-1.18h-0.156C563.744,56.851,563.248,57.356,563.248,57.989z M560.853,60.385 c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C562.049,60.921,561.513,60.385,560.853,60.385z M571.628,257.94c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C572.824,258.475,572.289,257.94,571.628,257.94z  M571.628,250.756c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C572.824,251.291,572.289,250.756,571.628,250.756z M568.036,254.348c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C569.233,254.883,568.697,254.348,568.036,254.348z  M571.628,243.572c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C572.824,244.107,572.289,243.572,571.628,243.572z M568.036,247.164c-0.661,0-1.196,0.536-1.196,1.196 c0,0.66,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C569.233,247.699,568.697,247.164,568.036,247.164z  M571.628,236.388c-0.661,0-1.196,0.536-1.196,1.196c0,0.66,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C572.824,236.924,572.289,236.388,571.628,236.388z M568.036,239.98c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C569.233,240.516,568.697,239.98,568.036,239.98z  M571.628,229.204c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C572.824,229.74,572.289,229.204,571.628,229.204z M568.036,232.796c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C569.233,233.332,568.697,232.796,568.036,232.796z  M571.628,222.02c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C572.824,222.556,572.289,222.02,571.628,222.02z M568.036,225.612c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C569.233,226.148,568.697,225.612,568.036,225.612z  M571.628,214.837c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C572.824,215.372,572.289,214.837,571.628,214.837z M568.036,218.429c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C569.233,218.964,568.697,218.429,568.036,218.429z  M571.628,207.653c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C572.824,208.188,572.289,207.653,571.628,207.653z M568.036,211.245c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C569.233,211.78,568.697,211.245,568.036,211.245z  M571.628,200.469c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C572.824,201.005,572.289,200.469,571.628,200.469z M568.036,204.061c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C569.233,204.596,568.697,204.061,568.036,204.061z  M571.628,193.285c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C572.824,193.821,572.289,193.285,571.628,193.285z M568.036,196.877c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C569.233,197.413,568.697,196.877,568.036,196.877z  M571.628,186.102c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C572.824,186.637,572.289,186.102,571.628,186.102z M568.036,189.693c-0.661,0-1.196,0.536-1.196,1.196 c0,0.66,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C569.233,190.229,568.697,189.693,568.036,189.693z  M571.628,178.918c-0.661,0-1.196,0.536-1.196,1.196c0,0.66,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C572.824,179.453,572.289,178.918,571.628,178.918z M568.036,182.51c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C569.233,183.045,568.697,182.51,568.036,182.51z  M571.628,171.734c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C572.824,172.269,572.289,171.734,571.628,171.734z M568.036,175.326c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C569.233,175.861,568.697,175.326,568.036,175.326z  M571.628,164.55c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C572.824,165.086,572.289,164.55,571.628,164.55z M568.036,168.142c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C569.233,168.678,568.697,168.142,568.036,168.142z  M571.628,157.366c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C572.824,157.902,572.289,157.366,571.628,157.366z M568.036,160.958c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C569.233,161.494,568.697,160.958,568.036,160.958z  M571.628,150.182c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C572.824,150.718,572.289,150.182,571.628,150.182z M568.036,153.774c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C569.233,154.31,568.697,153.774,568.036,153.774z  M571.628,142.999c-0.661,0-1.196,0.536-1.196,1.196c0,0.66,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C572.824,143.534,572.289,142.999,571.628,142.999z M568.036,146.591c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C569.233,147.126,568.697,146.591,568.036,146.591z  M571.628,135.815c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C572.824,136.35,572.289,135.815,571.628,135.815z M568.036,139.407c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C569.233,139.942,568.697,139.407,568.036,139.407z  M571.628,128.631c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C572.824,129.167,572.289,128.631,571.628,128.631z M568.036,132.223c-0.661,0-1.196,0.536-1.196,1.196 c0,0.66,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C569.233,132.758,568.697,132.223,568.036,132.223z  M571.628,121.447c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C572.824,121.983,572.289,121.447,571.628,121.447z M568.036,125.039c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C569.233,125.575,568.697,125.039,568.036,125.039z  M571.628,114.263c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C572.824,114.799,572.289,114.263,571.628,114.263z M568.036,117.855c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C569.233,118.391,568.697,117.855,568.036,117.855z  M571.628,107.08c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C572.824,107.615,572.289,107.08,571.628,107.08z M568.036,110.672c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C569.233,111.207,568.697,110.672,568.036,110.672z  M571.628,99.896c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C572.824,100.431,572.289,99.896,571.628,99.896z M568.036,103.488c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C569.233,104.023,568.697,103.488,568.036,103.488z  M571.628,92.712c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C572.824,93.248,572.289,92.712,571.628,92.712z M568.036,96.304c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C569.233,96.84,568.697,96.304,568.036,96.304z M571.628,85.528 c-0.661,0-1.196,0.536-1.196,1.196c0,0.66,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C572.824,86.064,572.289,85.528,571.628,85.528z M568.036,89.12c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196 c0.661,0,1.196-0.535,1.196-1.196C569.233,89.656,568.697,89.12,568.036,89.12z M571.628,78.344c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C572.824,78.88,572.289,78.344,571.628,78.344z M568.036,81.936 c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C569.233,82.472,568.697,81.936,568.036,81.936z M571.628,71.161c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C572.824,71.696,572.289,71.161,571.628,71.161z M568.036,74.753 c-0.661,0-1.196,0.536-1.196,1.196c0,0.66,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C569.233,75.288,568.697,74.753,568.036,74.753z M571.628,63.977c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C572.824,64.512,572.289,63.977,571.628,63.977z M568.036,67.569 c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C569.233,68.104,568.697,67.569,568.036,67.569z M570.432,57.989c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 c0-0.633-0.496-1.138-1.118-1.18h-0.156C570.928,56.851,570.432,57.356,570.432,57.989z M568.036,60.385 c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C569.233,60.921,568.697,60.385,568.036,60.385z M580.008,266.319c0-0.661-0.536-1.196-1.196-1.196 c-0.659,0-1.193,0.533-1.195,1.192l1.43,1.153C579.591,267.356,580.008,266.897,580.008,266.319z M578.812,257.94 c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C580.008,258.475,579.473,257.94,578.812,257.94z M575.22,261.531c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196s1.196-0.535,1.196-1.196C576.416,262.067,575.881,261.531,575.22,261.531z M578.812,250.756 c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C580.008,251.291,579.473,250.756,578.812,250.756z M575.22,254.348c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196s1.196-0.535,1.196-1.196C576.416,254.883,575.881,254.348,575.22,254.348z M578.812,243.572 c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C580.008,244.107,579.473,243.572,578.812,243.572z M575.22,247.164c-0.661,0-1.196,0.536-1.196,1.196 c0,0.66,0.535,1.196,1.196,1.196s1.196-0.536,1.196-1.196C576.416,247.699,575.881,247.164,575.22,247.164z M578.812,236.388 c-0.661,0-1.196,0.536-1.196,1.196c0,0.66,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C580.008,236.924,579.473,236.388,578.812,236.388z M575.22,239.98c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196s1.196-0.535,1.196-1.196C576.416,240.516,575.881,239.98,575.22,239.98z M578.812,229.204 c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C580.008,229.74,579.473,229.204,578.812,229.204z M575.22,232.796c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196s1.196-0.536,1.196-1.196C576.416,233.332,575.881,232.796,575.22,232.796z M578.812,222.02 c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C580.008,222.556,579.473,222.02,578.812,222.02z M575.22,225.612c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196s1.196-0.536,1.196-1.196C576.416,226.148,575.881,225.612,575.22,225.612z M578.812,214.837 c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C580.008,215.372,579.473,214.837,578.812,214.837z M575.22,218.429c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196s1.196-0.536,1.196-1.196C576.416,218.964,575.881,218.429,575.22,218.429z M578.812,207.653 c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C580.008,208.188,579.473,207.653,578.812,207.653z M575.22,211.245c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196s1.196-0.536,1.196-1.196C576.416,211.78,575.881,211.245,575.22,211.245z M578.812,200.469 c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C580.008,201.005,579.473,200.469,578.812,200.469z M575.22,204.061c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196s1.196-0.535,1.196-1.196C576.416,204.596,575.881,204.061,575.22,204.061z M578.812,193.285 c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C580.008,193.821,579.473,193.285,578.812,193.285z M575.22,196.877c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196s1.196-0.536,1.196-1.196C576.416,197.413,575.881,196.877,575.22,196.877z M578.812,186.102 c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C580.008,186.637,579.473,186.102,578.812,186.102z M575.22,189.693c-0.661,0-1.196,0.536-1.196,1.196 c0,0.66,0.535,1.196,1.196,1.196s1.196-0.536,1.196-1.196C576.416,190.229,575.881,189.693,575.22,189.693z M578.812,178.918 c-0.661,0-1.196,0.536-1.196,1.196c0,0.66,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C580.008,179.453,579.473,178.918,578.812,178.918z M575.22,182.51c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196s1.196-0.536,1.196-1.196C576.416,183.045,575.881,182.51,575.22,182.51z M578.812,171.734 c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C580.008,172.269,579.473,171.734,578.812,171.734z M575.22,175.326c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196s1.196-0.535,1.196-1.196C576.416,175.861,575.881,175.326,575.22,175.326z M578.812,164.55 c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C580.008,165.086,579.473,164.55,578.812,164.55z M575.22,168.142c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196s1.196-0.536,1.196-1.196C576.416,168.678,575.881,168.142,575.22,168.142z M578.812,157.366 c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C580.008,157.902,579.473,157.366,578.812,157.366z M575.22,160.958c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196s1.196-0.535,1.196-1.196C576.416,161.494,575.881,160.958,575.22,160.958z M578.812,150.182 c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C580.008,150.718,579.473,150.182,578.812,150.182z M575.22,153.774c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196s1.196-0.536,1.196-1.196C576.416,154.31,575.881,153.774,575.22,153.774z M578.812,142.999 c-0.661,0-1.196,0.536-1.196,1.196c0,0.66,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C580.008,143.534,579.473,142.999,578.812,142.999z M575.22,146.591c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196s1.196-0.535,1.196-1.196C576.416,147.126,575.881,146.591,575.22,146.591z M578.812,135.815 c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C580.008,136.35,579.473,135.815,578.812,135.815z M575.22,139.407c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196s1.196-0.536,1.196-1.196C576.416,139.942,575.881,139.407,575.22,139.407z M578.812,128.631 c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C580.008,129.167,579.473,128.631,578.812,128.631z M575.22,132.223c-0.661,0-1.196,0.536-1.196,1.196 c0,0.66,0.535,1.196,1.196,1.196s1.196-0.536,1.196-1.196C576.416,132.758,575.881,132.223,575.22,132.223z M578.812,121.447 c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C580.008,121.983,579.473,121.447,578.812,121.447z M575.22,125.039c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196s1.196-0.535,1.196-1.196C576.416,125.575,575.881,125.039,575.22,125.039z M578.812,114.263 c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C580.008,114.799,579.473,114.263,578.812,114.263z M575.22,117.855c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196s1.196-0.536,1.196-1.196C576.416,118.391,575.881,117.855,575.22,117.855z M578.812,107.08 c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C580.008,107.615,579.473,107.08,578.812,107.08z M575.22,110.672c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196s1.196-0.536,1.196-1.196C576.416,111.207,575.881,110.672,575.22,110.672z M578.812,99.896 c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C580.008,100.431,579.473,99.896,578.812,99.896z M575.22,103.488c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196s1.196-0.535,1.196-1.196C576.416,104.023,575.881,103.488,575.22,103.488z M578.812,92.712 c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C580.008,93.248,579.473,92.712,578.812,92.712z M575.22,96.304c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196 s1.196-0.535,1.196-1.196C576.416,96.84,575.881,96.304,575.22,96.304z M578.812,85.528c-0.661,0-1.196,0.536-1.196,1.196 c0,0.66,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C580.008,86.064,579.473,85.528,578.812,85.528z M575.22,89.12 c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196s1.196-0.535,1.196-1.196 C576.416,89.656,575.881,89.12,575.22,89.12z M578.812,78.344c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196 c0.661,0,1.196-0.535,1.196-1.196C580.008,78.88,579.473,78.344,578.812,78.344z M575.22,81.936c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196s1.196-0.535,1.196-1.196C576.416,82.472,575.881,81.936,575.22,81.936z M578.812,71.161 c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C580.008,71.696,579.473,71.161,578.812,71.161z M575.22,74.753c-0.661,0-1.196,0.536-1.196,1.196c0,0.66,0.535,1.196,1.196,1.196 s1.196-0.536,1.196-1.196C576.416,75.288,575.881,74.753,575.22,74.753z M578.812,63.977c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C580.008,64.512,579.473,63.977,578.812,63.977z M575.22,67.569 c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196s1.196-0.535,1.196-1.196 C576.416,68.104,575.881,67.569,575.22,67.569z M577.616,57.989c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 c0-0.633-0.496-1.138-1.118-1.18h-0.156C578.112,56.851,577.616,57.356,577.616,57.989z M575.22,60.385 c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196s1.196-0.536,1.196-1.196 C576.416,60.921,575.881,60.385,575.22,60.385z M585.996,272.307c-0.251,0-0.471,0.095-0.663,0.227l1.767,1.424 c0.058-0.14,0.092-0.293,0.092-0.455C587.192,272.843,586.657,272.307,585.996,272.307z M583.6,269.911 c0-0.661-0.535-1.196-1.196-1.196c-0.45,0-0.828,0.259-1.032,0.626l1.812,1.46C583.434,270.582,583.6,270.27,583.6,269.911z  M585.996,265.123c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196s1.196-0.535,1.196-1.196 C587.192,265.659,586.657,265.123,585.996,265.123z M585.996,257.94c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196s1.196-0.535,1.196-1.196C587.192,258.475,586.657,257.94,585.996,257.94z M582.404,261.531 c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C583.6,262.067,583.065,261.531,582.404,261.531z M585.996,250.756c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196s1.196-0.535,1.196-1.196C587.192,251.291,586.657,250.756,585.996,250.756z M582.404,254.348 c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C583.6,254.883,583.065,254.348,582.404,254.348z M585.996,243.572c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196s1.196-0.536,1.196-1.196C587.192,244.107,586.657,243.572,585.996,243.572z M582.404,247.164 c-0.661,0-1.196,0.536-1.196,1.196c0,0.66,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C583.6,247.699,583.065,247.164,582.404,247.164z M585.996,236.388c-0.661,0-1.196,0.536-1.196,1.196 c0,0.66,0.535,1.196,1.196,1.196s1.196-0.536,1.196-1.196C587.192,236.924,586.657,236.388,585.996,236.388z M582.404,239.98 c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C583.6,240.516,583.065,239.98,582.404,239.98z M585.996,229.204c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196s1.196-0.536,1.196-1.196C587.192,229.74,586.657,229.204,585.996,229.204z M582.404,232.796 c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C583.6,233.332,583.065,232.796,582.404,232.796z M585.996,222.02c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196s1.196-0.535,1.196-1.196C587.192,222.556,586.657,222.02,585.996,222.02z M582.404,225.612 c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C583.6,226.148,583.065,225.612,582.404,225.612z M585.996,214.837c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196s1.196-0.536,1.196-1.196C587.192,215.372,586.657,214.837,585.996,214.837z M582.404,218.429 c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C583.6,218.964,583.065,218.429,582.404,218.429z M585.996,207.653c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196s1.196-0.535,1.196-1.196C587.192,208.188,586.657,207.653,585.996,207.653z M582.404,211.245 c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C583.6,211.78,583.065,211.245,582.404,211.245z M585.996,200.469c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196s1.196-0.536,1.196-1.196C587.192,201.005,586.657,200.469,585.996,200.469z M582.404,204.061 c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C583.6,204.596,583.065,204.061,582.404,204.061z M585.996,193.285c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196s1.196-0.535,1.196-1.196C587.192,193.821,586.657,193.285,585.996,193.285z M582.404,196.877 c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C583.6,197.413,583.065,196.877,582.404,196.877z M585.996,186.102c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196s1.196-0.536,1.196-1.196C587.192,186.637,586.657,186.102,585.996,186.102z M582.404,189.693 c-0.661,0-1.196,0.536-1.196,1.196c0,0.66,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C583.6,190.229,583.065,189.693,582.404,189.693z M585.996,178.918c-0.661,0-1.196,0.536-1.196,1.196 c0,0.66,0.535,1.196,1.196,1.196s1.196-0.536,1.196-1.196C587.192,179.453,586.657,178.918,585.996,178.918z M582.404,182.51 c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C583.6,183.045,583.065,182.51,582.404,182.51z M585.996,171.734c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196s1.196-0.536,1.196-1.196C587.192,172.269,586.657,171.734,585.996,171.734z M582.404,175.326 c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C583.6,175.861,583.065,175.326,582.404,175.326z M585.996,164.55c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196s1.196-0.535,1.196-1.196C587.192,165.086,586.657,164.55,585.996,164.55z M582.404,168.142 c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C583.6,168.678,583.065,168.142,582.404,168.142z M585.996,157.366c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196s1.196-0.536,1.196-1.196C587.192,157.902,586.657,157.366,585.996,157.366z M582.404,160.958 c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C583.6,161.494,583.065,160.958,582.404,160.958z M585.996,150.182c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196s1.196-0.535,1.196-1.196C587.192,150.718,586.657,150.182,585.996,150.182z M582.404,153.774 c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C583.6,154.31,583.065,153.774,582.404,153.774z M585.996,142.999c-0.661,0-1.196,0.536-1.196,1.196 c0,0.66,0.535,1.196,1.196,1.196s1.196-0.536,1.196-1.196C587.192,143.534,586.657,142.999,585.996,142.999z M582.404,146.591 c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C583.6,147.126,583.065,146.591,582.404,146.591z M585.996,135.815c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196s1.196-0.535,1.196-1.196C587.192,136.35,586.657,135.815,585.996,135.815z M582.404,139.407 c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C583.6,139.942,583.065,139.407,582.404,139.407z M585.996,128.631c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196s1.196-0.536,1.196-1.196C587.192,129.167,586.657,128.631,585.996,128.631z M582.404,132.223 c-0.661,0-1.196,0.536-1.196,1.196c0,0.66,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C583.6,132.758,583.065,132.223,582.404,132.223z M585.996,121.447c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196s1.196-0.535,1.196-1.196C587.192,121.983,586.657,121.447,585.996,121.447z M582.404,125.039 c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C583.6,125.575,583.065,125.039,582.404,125.039z M585.996,114.263c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196s1.196-0.535,1.196-1.196C587.192,114.799,586.657,114.263,585.996,114.263z M582.404,117.855 c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C583.6,118.391,583.065,117.855,582.404,117.855z M585.996,107.08c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196s1.196-0.535,1.196-1.196C587.192,107.615,586.657,107.08,585.996,107.08z M582.404,110.672 c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C583.6,111.207,583.065,110.672,582.404,110.672z M585.996,99.896c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196s1.196-0.535,1.196-1.196C587.192,100.431,586.657,99.896,585.996,99.896z M582.404,103.488 c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C583.6,104.023,583.065,103.488,582.404,103.488z M585.996,92.712c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196s1.196-0.535,1.196-1.196C587.192,93.248,586.657,92.712,585.996,92.712z M582.404,96.304 c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C583.6,96.84,583.065,96.304,582.404,96.304z M585.996,85.528c-0.661,0-1.196,0.536-1.196,1.196c0,0.66,0.535,1.196,1.196,1.196 s1.196-0.536,1.196-1.196C587.192,86.064,586.657,85.528,585.996,85.528z M582.404,89.12c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C583.6,89.656,583.065,89.12,582.404,89.12z M585.996,78.344 c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196s1.196-0.535,1.196-1.196 C587.192,78.88,586.657,78.344,585.996,78.344z M582.404,81.936c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196 c0.661,0,1.196-0.535,1.196-1.196C583.6,82.472,583.065,81.936,582.404,81.936z M585.996,71.161c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196s1.196-0.535,1.196-1.196C587.192,71.696,586.657,71.161,585.996,71.161z M582.404,74.753 c-0.661,0-1.196,0.536-1.196,1.196c0,0.66,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C583.6,75.288,583.065,74.753,582.404,74.753z M585.996,63.977c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196 s1.196-0.535,1.196-1.196C587.192,64.512,586.657,63.977,585.996,63.977z M582.404,67.569c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C583.6,68.104,583.065,67.569,582.404,67.569z M584.8,57.989 c0,0.661,0.535,1.196,1.196,1.196s1.196-0.535,1.196-1.196c0-0.633-0.496-1.138-1.118-1.18h-0.156 C585.296,56.851,584.8,57.356,584.8,57.989z M582.404,60.385c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196 c0.661,0,1.196-0.536,1.196-1.196C583.6,60.921,583.065,60.385,582.404,60.385z M593.18,272.307c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.535,1.196-1.196C594.376,272.843,593.84,272.307,593.18,272.307z  M589.588,275.899c-0.022,0-0.041,0.012-0.063,0.013l1.219,0.982C590.644,276.333,590.177,275.899,589.588,275.899z  M593.18,265.123c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.535,1.196-1.196 C594.376,265.659,593.84,265.123,593.18,265.123z M589.588,268.715c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C590.784,269.251,590.248,268.715,589.588,268.715z  M593.18,257.94c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.535,1.196-1.196 C594.376,258.475,593.84,257.94,593.18,257.94z M589.588,261.531c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C590.784,262.067,590.248,261.531,589.588,261.531z  M593.18,250.756c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.535,1.196-1.196 C594.376,251.291,593.84,250.756,593.18,250.756z M589.588,254.348c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C590.784,254.883,590.248,254.348,589.588,254.348z  M593.18,243.572c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.536,1.196-1.196 C594.376,244.107,593.84,243.572,593.18,243.572z M589.588,247.164c-0.661,0-1.196,0.536-1.196,1.196 c0,0.66,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C590.784,247.699,590.248,247.164,589.588,247.164z  M593.18,236.388c-0.661,0-1.196,0.536-1.196,1.196c0,0.66,0.536,1.196,1.196,1.196c0.66,0,1.196-0.536,1.196-1.196 C594.376,236.924,593.84,236.388,593.18,236.388z M589.588,239.98c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C590.784,240.516,590.248,239.98,589.588,239.98z  M593.18,229.204c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.536,1.196-1.196 C594.376,229.74,593.84,229.204,593.18,229.204z M589.588,232.796c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C590.784,233.332,590.248,232.796,589.588,232.796z  M593.18,222.02c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.535,1.196-1.196 C594.376,222.556,593.84,222.02,593.18,222.02z M589.588,225.612c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C590.784,226.148,590.248,225.612,589.588,225.612z  M593.18,214.837c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.536,1.196-1.196 C594.376,215.372,593.84,214.837,593.18,214.837z M589.588,218.429c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C590.784,218.964,590.248,218.429,589.588,218.429z  M593.18,207.653c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.535,1.196-1.196 C594.376,208.188,593.84,207.653,593.18,207.653z M589.588,211.245c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C590.784,211.78,590.248,211.245,589.588,211.245z  M593.18,200.469c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.536,1.196-1.196 C594.376,201.005,593.84,200.469,593.18,200.469z M589.588,204.061c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C590.784,204.596,590.248,204.061,589.588,204.061z  M593.18,193.285c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.535,1.196-1.196 C594.376,193.821,593.84,193.285,593.18,193.285z M589.588,196.877c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C590.784,197.413,590.248,196.877,589.588,196.877z  M593.18,186.102c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.536,1.196-1.196 C594.376,186.637,593.84,186.102,593.18,186.102z M589.588,189.693c-0.661,0-1.196,0.536-1.196,1.196 c0,0.66,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C590.784,190.229,590.248,189.693,589.588,189.693z  M593.18,178.918c-0.661,0-1.196,0.536-1.196,1.196c0,0.66,0.536,1.196,1.196,1.196c0.66,0,1.196-0.536,1.196-1.196 C594.376,179.453,593.84,178.918,593.18,178.918z M589.588,182.51c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C590.784,183.045,590.248,182.51,589.588,182.51z  M593.18,171.734c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.536,1.196-1.196 C594.376,172.269,593.84,171.734,593.18,171.734z M589.588,175.326c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C590.784,175.861,590.248,175.326,589.588,175.326z  M593.18,164.55c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.535,1.196-1.196 C594.376,165.086,593.84,164.55,593.18,164.55z M589.588,168.142c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C590.784,168.678,590.248,168.142,589.588,168.142z  M593.18,157.366c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.536,1.196-1.196 C594.376,157.902,593.84,157.366,593.18,157.366z M589.588,160.958c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C590.784,161.494,590.248,160.958,589.588,160.958z  M593.18,150.182c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.535,1.196-1.196 C594.376,150.718,593.84,150.182,593.18,150.182z M589.588,153.774c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C590.784,154.31,590.248,153.774,589.588,153.774z  M593.18,142.999c-0.661,0-1.196,0.536-1.196,1.196c0,0.66,0.536,1.196,1.196,1.196c0.66,0,1.196-0.536,1.196-1.196 C594.376,143.534,593.84,142.999,593.18,142.999z M589.588,146.591c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C590.784,147.126,590.248,146.591,589.588,146.591z  M593.18,135.815c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.535,1.196-1.196 C594.376,136.35,593.84,135.815,593.18,135.815z M589.588,139.407c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C590.784,139.942,590.248,139.407,589.588,139.407z  M593.18,128.631c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.536,1.196-1.196 C594.376,129.167,593.84,128.631,593.18,128.631z M589.588,132.223c-0.661,0-1.196,0.536-1.196,1.196 c0,0.66,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C590.784,132.758,590.248,132.223,589.588,132.223z  M593.18,121.447c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.535,1.196-1.196 C594.376,121.983,593.84,121.447,593.18,121.447z M589.588,125.039c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C590.784,125.575,590.248,125.039,589.588,125.039z  M593.18,114.263c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.535,1.196-1.196 C594.376,114.799,593.84,114.263,593.18,114.263z M589.588,117.855c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C590.784,118.391,590.248,117.855,589.588,117.855z  M593.18,107.08c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.535,1.196-1.196 C594.376,107.615,593.84,107.08,593.18,107.08z M589.588,110.672c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C590.784,111.207,590.248,110.672,589.588,110.672z  M593.18,99.896c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.535,1.196-1.196 C594.376,100.431,593.84,99.896,593.18,99.896z M589.588,103.488c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C590.784,104.023,590.248,103.488,589.588,103.488z  M593.18,92.712c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.535,1.196-1.196 C594.376,93.248,593.84,92.712,593.18,92.712z M589.588,96.304c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196 c0.661,0,1.196-0.535,1.196-1.196C590.784,96.84,590.248,96.304,589.588,96.304z M593.18,85.528c-0.661,0-1.196,0.536-1.196,1.196 c0,0.66,0.536,1.196,1.196,1.196c0.66,0,1.196-0.536,1.196-1.196C594.376,86.064,593.84,85.528,593.18,85.528z M589.588,89.12 c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C590.784,89.656,590.248,89.12,589.588,89.12z M593.18,78.344c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196 c0.66,0,1.196-0.535,1.196-1.196C594.376,78.88,593.84,78.344,593.18,78.344z M589.588,81.936c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C590.784,82.472,590.248,81.936,589.588,81.936z M593.18,71.161 c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.535,1.196-1.196 C594.376,71.696,593.84,71.161,593.18,71.161z M589.588,74.753c-0.661,0-1.196,0.536-1.196,1.196c0,0.66,0.536,1.196,1.196,1.196 c0.661,0,1.196-0.536,1.196-1.196C590.784,75.288,590.248,74.753,589.588,74.753z M593.18,63.977c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.535,1.196-1.196C594.376,64.512,593.84,63.977,593.18,63.977z M589.588,67.569 c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C590.784,68.104,590.248,67.569,589.588,67.569z M591.983,57.989c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.535,1.196-1.196 c0-0.633-0.496-1.138-1.118-1.18h-0.156C592.479,56.851,591.983,57.356,591.983,57.989z M589.588,60.385 c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C590.784,60.921,590.248,60.385,589.588,60.385z M600.363,279.491c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C601.56,280.026,601.024,279.491,600.363,279.491z  M600.363,272.307c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C601.56,272.843,601.024,272.307,600.363,272.307z M596.772,275.899c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C597.968,276.435,597.432,275.899,596.772,275.899z  M600.363,265.123c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C601.56,265.659,601.024,265.123,600.363,265.123z M596.772,268.715c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C597.968,269.251,597.432,268.715,596.772,268.715z  M600.363,257.94c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C601.56,258.475,601.024,257.94,600.363,257.94z M596.772,261.531c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C597.968,262.067,597.432,261.531,596.772,261.531z  M600.363,250.756c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C601.56,251.291,601.024,250.756,600.363,250.756z M596.772,254.348c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C597.968,254.883,597.432,254.348,596.772,254.348z  M600.363,243.572c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C601.56,244.107,601.024,243.572,600.363,243.572z M596.772,247.164c-0.661,0-1.196,0.536-1.196,1.196 c0,0.66,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C597.968,247.699,597.432,247.164,596.772,247.164z  M600.363,236.388c-0.661,0-1.196,0.536-1.196,1.196c0,0.66,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C601.56,236.924,601.024,236.388,600.363,236.388z M596.772,239.98c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C597.968,240.516,597.432,239.98,596.772,239.98z  M600.363,229.204c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C601.56,229.74,601.024,229.204,600.363,229.204z M596.772,232.796c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C597.968,233.332,597.432,232.796,596.772,232.796z  M600.363,222.02c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C601.56,222.556,601.024,222.02,600.363,222.02z M596.772,225.612c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C597.968,226.148,597.432,225.612,596.772,225.612z  M600.363,214.837c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C601.56,215.372,601.024,214.837,600.363,214.837z M596.772,218.429c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C597.968,218.964,597.432,218.429,596.772,218.429z  M600.363,207.653c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C601.56,208.188,601.024,207.653,600.363,207.653z M596.772,211.245c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C597.968,211.78,597.432,211.245,596.772,211.245z  M600.363,200.469c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C601.56,201.005,601.024,200.469,600.363,200.469z M596.772,204.061c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C597.968,204.596,597.432,204.061,596.772,204.061z  M600.363,193.285c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C601.56,193.821,601.024,193.285,600.363,193.285z M596.772,196.877c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C597.968,197.413,597.432,196.877,596.772,196.877z  M600.363,186.102c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C601.56,186.637,601.024,186.102,600.363,186.102z M596.772,189.693c-0.661,0-1.196,0.536-1.196,1.196 c0,0.66,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C597.968,190.229,597.432,189.693,596.772,189.693z  M600.363,178.918c-0.661,0-1.196,0.536-1.196,1.196c0,0.66,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C601.56,179.453,601.024,178.918,600.363,178.918z M596.772,182.51c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C597.968,183.045,597.432,182.51,596.772,182.51z  M600.363,171.734c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C601.56,172.269,601.024,171.734,600.363,171.734z M596.772,175.326c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C597.968,175.861,597.432,175.326,596.772,175.326z  M600.363,164.55c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C601.56,165.086,601.024,164.55,600.363,164.55z M596.772,168.142c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C597.968,168.678,597.432,168.142,596.772,168.142z  M600.363,157.366c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C601.56,157.902,601.024,157.366,600.363,157.366z M596.772,160.958c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C597.968,161.494,597.432,160.958,596.772,160.958z  M600.363,150.182c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C601.56,150.718,601.024,150.182,600.363,150.182z M596.772,153.774c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C597.968,154.31,597.432,153.774,596.772,153.774z  M600.363,142.999c-0.661,0-1.196,0.536-1.196,1.196c0,0.66,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C601.56,143.534,601.024,142.999,600.363,142.999z M596.772,146.591c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C597.968,147.126,597.432,146.591,596.772,146.591z  M600.363,135.815c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C601.56,136.35,601.024,135.815,600.363,135.815z M596.772,139.407c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C597.968,139.942,597.432,139.407,596.772,139.407z  M600.363,128.631c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C601.56,129.167,601.024,128.631,600.363,128.631z M596.772,132.223c-0.661,0-1.196,0.536-1.196,1.196 c0,0.66,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C597.968,132.758,597.432,132.223,596.772,132.223z  M600.363,121.447c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C601.56,121.983,601.024,121.447,600.363,121.447z M596.772,125.039c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C597.968,125.575,597.432,125.039,596.772,125.039z  M600.363,114.263c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C601.56,114.799,601.024,114.263,600.363,114.263z M596.772,117.855c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C597.968,118.391,597.432,117.855,596.772,117.855z  M600.363,107.08c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C601.56,107.615,601.024,107.08,600.363,107.08z M596.772,110.672c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C597.968,111.207,597.432,110.672,596.772,110.672z  M600.363,99.896c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C601.56,100.431,601.024,99.896,600.363,99.896z M596.772,103.488c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C597.968,104.023,597.432,103.488,596.772,103.488z  M600.363,92.712c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C601.56,93.248,601.024,92.712,600.363,92.712z M596.772,96.304c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196 c0.661,0,1.196-0.535,1.196-1.196C597.968,96.84,597.432,96.304,596.772,96.304z M600.363,85.528c-0.661,0-1.196,0.536-1.196,1.196 c0,0.66,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C601.56,86.064,601.024,85.528,600.363,85.528z M596.772,89.12 c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C597.968,89.656,597.432,89.12,596.772,89.12z M600.363,78.344c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196 c0.661,0,1.196-0.535,1.196-1.196C601.56,78.88,601.024,78.344,600.363,78.344z M596.772,81.936c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C597.968,82.472,597.432,81.936,596.772,81.936z M600.363,71.161 c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C601.56,71.696,601.024,71.161,600.363,71.161z M596.772,74.753c-0.661,0-1.196,0.536-1.196,1.196c0,0.66,0.536,1.196,1.196,1.196 c0.661,0,1.196-0.536,1.196-1.196C597.968,75.288,597.432,74.753,596.772,74.753z M600.363,63.977 c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C601.56,64.512,601.024,63.977,600.363,63.977z M596.772,67.569c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196 c0.661,0,1.196-0.535,1.196-1.196C597.968,68.104,597.432,67.569,596.772,67.569z M599.167,57.989c0,0.661,0.536,1.196,1.196,1.196 c0.661,0,1.196-0.535,1.196-1.196c0-0.633-0.496-1.138-1.118-1.18h-0.156C599.663,56.851,599.167,57.356,599.167,57.989z  M596.772,60.385c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C597.968,60.921,597.432,60.385,596.772,60.385z M607.547,286.675c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C608.743,287.21,608.208,286.675,607.547,286.675z  M607.547,279.491c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C608.743,280.026,608.208,279.491,607.547,279.491z M603.956,283.083c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C605.152,283.618,604.616,283.083,603.956,283.083z  M607.547,272.307c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C608.743,272.843,608.208,272.307,607.547,272.307z M603.956,275.899c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C605.152,276.435,604.616,275.899,603.956,275.899z  M607.547,265.123c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C608.743,265.659,608.208,265.123,607.547,265.123z M603.956,268.715c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C605.152,269.251,604.616,268.715,603.956,268.715z  M607.547,257.94c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C608.743,258.475,608.208,257.94,607.547,257.94z M603.956,261.531c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C605.152,262.067,604.616,261.531,603.956,261.531z  M607.547,250.756c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C608.743,251.291,608.208,250.756,607.547,250.756z M603.956,254.348c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C605.152,254.883,604.616,254.348,603.956,254.348z  M607.547,243.572c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C608.743,244.107,608.208,243.572,607.547,243.572z M603.956,247.164c-0.661,0-1.196,0.536-1.196,1.196 c0,0.66,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C605.152,247.699,604.616,247.164,603.956,247.164z  M607.547,236.388c-0.661,0-1.196,0.536-1.196,1.196c0,0.66,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C608.743,236.924,608.208,236.388,607.547,236.388z M603.956,239.98c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C605.152,240.516,604.616,239.98,603.956,239.98z  M607.547,229.204c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C608.743,229.74,608.208,229.204,607.547,229.204z M603.956,232.796c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C605.152,233.332,604.616,232.796,603.956,232.796z  M607.547,222.02c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C608.743,222.556,608.208,222.02,607.547,222.02z M603.956,225.612c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C605.152,226.148,604.616,225.612,603.956,225.612z  M607.547,214.837c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C608.743,215.372,608.208,214.837,607.547,214.837z M603.956,218.429c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C605.152,218.964,604.616,218.429,603.956,218.429z  M607.547,207.653c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C608.743,208.188,608.208,207.653,607.547,207.653z M603.956,211.245c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C605.152,211.78,604.616,211.245,603.956,211.245z  M607.547,200.469c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C608.743,201.005,608.208,200.469,607.547,200.469z M603.956,204.061c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C605.152,204.596,604.616,204.061,603.956,204.061z  M607.547,193.285c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C608.743,193.821,608.208,193.285,607.547,193.285z M603.956,196.877c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C605.152,197.413,604.616,196.877,603.956,196.877z  M607.547,186.102c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C608.743,186.637,608.208,186.102,607.547,186.102z M603.956,189.693c-0.661,0-1.196,0.536-1.196,1.196 c0,0.66,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C605.152,190.229,604.616,189.693,603.956,189.693z  M607.547,178.918c-0.661,0-1.196,0.536-1.196,1.196c0,0.66,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C608.743,179.453,608.208,178.918,607.547,178.918z M603.956,182.51c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C605.152,183.045,604.616,182.51,603.956,182.51z  M607.547,171.734c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C608.743,172.269,608.208,171.734,607.547,171.734z M603.956,175.326c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C605.152,175.861,604.616,175.326,603.956,175.326z  M607.547,164.55c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C608.743,165.086,608.208,164.55,607.547,164.55z M603.956,168.142c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C605.152,168.678,604.616,168.142,603.956,168.142z  M607.547,157.366c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C608.743,157.902,608.208,157.366,607.547,157.366z M603.956,160.958c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C605.152,161.494,604.616,160.958,603.956,160.958z  M607.547,150.182c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C608.743,150.718,608.208,150.182,607.547,150.182z M603.956,153.774c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C605.152,154.31,604.616,153.774,603.956,153.774z  M607.547,142.999c-0.661,0-1.196,0.536-1.196,1.196c0,0.66,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C608.743,143.534,608.208,142.999,607.547,142.999z M603.956,146.591c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C605.152,147.126,604.616,146.591,603.956,146.591z  M607.547,135.815c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C608.743,136.35,608.208,135.815,607.547,135.815z M603.956,139.407c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C605.152,139.942,604.616,139.407,603.956,139.407z  M607.547,128.631c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C608.743,129.167,608.208,128.631,607.547,128.631z M603.956,132.223c-0.661,0-1.196,0.536-1.196,1.196 c0,0.66,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C605.152,132.758,604.616,132.223,603.956,132.223z  M607.547,121.447c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C608.743,121.983,608.208,121.447,607.547,121.447z M603.956,125.039c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C605.152,125.575,604.616,125.039,603.956,125.039z  M607.547,114.263c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C608.743,114.799,608.208,114.263,607.547,114.263z M603.956,117.855c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C605.152,118.391,604.616,117.855,603.956,117.855z  M607.547,107.08c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C608.743,107.615,608.208,107.08,607.547,107.08z M603.956,110.672c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C605.152,111.207,604.616,110.672,603.956,110.672z  M607.547,99.896c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C608.743,100.431,608.208,99.896,607.547,99.896z M603.956,103.488c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C605.152,104.023,604.616,103.488,603.956,103.488z  M607.547,92.712c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C608.743,93.248,608.208,92.712,607.547,92.712z M603.956,96.304c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C605.152,96.84,604.616,96.304,603.956,96.304z M607.547,85.528 c-0.661,0-1.196,0.536-1.196,1.196c0,0.66,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C608.743,86.064,608.208,85.528,607.547,85.528z M603.956,89.12c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196 c0.661,0,1.196-0.535,1.196-1.196C605.152,89.656,604.616,89.12,603.956,89.12z M607.547,78.344c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C608.743,78.88,608.208,78.344,607.547,78.344z M603.956,81.936 c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C605.152,82.472,604.616,81.936,603.956,81.936z M607.547,71.161c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C608.743,71.696,608.208,71.161,607.547,71.161z M603.956,74.753 c-0.661,0-1.196,0.536-1.196,1.196c0,0.66,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C605.152,75.288,604.616,74.753,603.956,74.753z M607.547,63.977c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C608.743,64.512,608.208,63.977,607.547,63.977z M603.956,67.569 c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C605.152,68.104,604.616,67.569,603.956,67.569z M606.351,57.989c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 c0-0.633-0.496-1.138-1.118-1.18h-0.156C606.847,56.851,606.351,57.356,606.351,57.989z M603.956,60.385 c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C605.152,60.921,604.616,60.385,603.956,60.385z M615.927,295.055c0-0.661-0.536-1.196-1.196-1.196 c-0.661,0-1.196,0.536-1.196,1.196c0,0.088,0.032,0.165,0.05,0.247l1.171,0.944C615.404,296.232,615.927,295.706,615.927,295.055z  M614.731,286.675c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C615.927,287.21,615.392,286.675,614.731,286.675z M611.139,290.267c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C612.335,290.802,611.8,290.267,611.139,290.267z  M614.731,279.491c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C615.927,280.026,615.392,279.491,614.731,279.491z M611.139,283.083c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C612.335,283.618,611.8,283.083,611.139,283.083z  M614.731,272.307c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C615.927,272.843,615.392,272.307,614.731,272.307z M611.139,275.899c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C612.335,276.435,611.8,275.899,611.139,275.899z  M614.731,265.123c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C615.927,265.659,615.392,265.123,614.731,265.123z M611.139,268.715c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C612.335,269.251,611.8,268.715,611.139,268.715z  M614.731,257.94c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C615.927,258.475,615.392,257.94,614.731,257.94z M611.139,261.531c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C612.335,262.067,611.8,261.531,611.139,261.531z  M614.731,250.756c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C615.927,251.291,615.392,250.756,614.731,250.756z M611.139,254.348c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C612.335,254.883,611.8,254.348,611.139,254.348z  M614.731,243.572c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C615.927,244.107,615.392,243.572,614.731,243.572z M611.139,247.164c-0.661,0-1.196,0.536-1.196,1.196 c0,0.66,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C612.335,247.699,611.8,247.164,611.139,247.164z  M614.731,236.388c-0.661,0-1.196,0.536-1.196,1.196c0,0.66,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C615.927,236.924,615.392,236.388,614.731,236.388z M611.139,239.98c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C612.335,240.516,611.8,239.98,611.139,239.98z M614.731,229.204 c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C615.927,229.74,615.392,229.204,614.731,229.204z M611.139,232.796c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C612.335,233.332,611.8,232.796,611.139,232.796z  M614.731,222.02c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C615.927,222.556,615.392,222.02,614.731,222.02z M611.139,225.612c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C612.335,226.148,611.8,225.612,611.139,225.612z  M614.731,214.837c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C615.927,215.372,615.392,214.837,614.731,214.837z M611.139,218.429c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C612.335,218.964,611.8,218.429,611.139,218.429z  M614.731,207.653c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C615.927,208.188,615.392,207.653,614.731,207.653z M611.139,211.245c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C612.335,211.78,611.8,211.245,611.139,211.245z  M614.731,200.469c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C615.927,201.005,615.392,200.469,614.731,200.469z M611.139,204.061c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C612.335,204.596,611.8,204.061,611.139,204.061z  M614.731,193.285c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C615.927,193.821,615.392,193.285,614.731,193.285z M611.139,196.877c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C612.335,197.413,611.8,196.877,611.139,196.877z  M614.731,186.102c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C615.927,186.637,615.392,186.102,614.731,186.102z M611.139,189.693c-0.661,0-1.196,0.536-1.196,1.196 c0,0.66,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C612.335,190.229,611.8,189.693,611.139,189.693z  M614.731,178.918c-0.661,0-1.196,0.536-1.196,1.196c0,0.66,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C615.927,179.453,615.392,178.918,614.731,178.918z M611.139,182.51c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C612.335,183.045,611.8,182.51,611.139,182.51z M614.731,171.734 c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C615.927,172.269,615.392,171.734,614.731,171.734z M611.139,175.326c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C612.335,175.861,611.8,175.326,611.139,175.326z  M614.731,164.55c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C615.927,165.086,615.392,164.55,614.731,164.55z M611.139,168.142c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C612.335,168.678,611.8,168.142,611.139,168.142z  M614.731,157.366c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C615.927,157.902,615.392,157.366,614.731,157.366z M611.139,160.958c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C612.335,161.494,611.8,160.958,611.139,160.958z  M614.731,150.182c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C615.927,150.718,615.392,150.182,614.731,150.182z M611.139,153.774c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C612.335,154.31,611.8,153.774,611.139,153.774z  M614.731,142.999c-0.661,0-1.196,0.536-1.196,1.196c0,0.66,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C615.927,143.534,615.392,142.999,614.731,142.999z M611.139,146.591c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C612.335,147.126,611.8,146.591,611.139,146.591z  M614.731,135.815c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C615.927,136.35,615.392,135.815,614.731,135.815z M611.139,139.407c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C612.335,139.942,611.8,139.407,611.139,139.407z  M614.731,128.631c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C615.927,129.167,615.392,128.631,614.731,128.631z M611.139,132.223c-0.661,0-1.196,0.536-1.196,1.196 c0,0.66,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C612.335,132.758,611.8,132.223,611.139,132.223z  M614.731,121.447c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C615.927,121.983,615.392,121.447,614.731,121.447z M611.139,125.039c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C612.335,125.575,611.8,125.039,611.139,125.039z  M614.731,114.263c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C615.927,114.799,615.392,114.263,614.731,114.263z M611.139,117.855c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C612.335,118.391,611.8,117.855,611.139,117.855z  M614.731,107.08c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C615.927,107.615,615.392,107.08,614.731,107.08z M611.139,110.672c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C612.335,111.207,611.8,110.672,611.139,110.672z  M614.731,99.896c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C615.927,100.431,615.392,99.896,614.731,99.896z M611.139,103.488c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C612.335,104.023,611.8,103.488,611.139,103.488z  M614.731,92.712c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C615.927,93.248,615.392,92.712,614.731,92.712z M611.139,96.304c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C612.335,96.84,611.8,96.304,611.139,96.304z M614.731,85.528 c-0.661,0-1.196,0.536-1.196,1.196c0,0.66,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C615.927,86.064,615.392,85.528,614.731,85.528z M611.139,89.12c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196 c0.661,0,1.196-0.535,1.196-1.196C612.335,89.656,611.8,89.12,611.139,89.12z M614.731,78.344c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C615.927,78.88,615.392,78.344,614.731,78.344z M611.139,81.936 c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C612.335,82.472,611.8,81.936,611.139,81.936z M614.731,71.161c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196 c0.661,0,1.196-0.535,1.196-1.196C615.927,71.696,615.392,71.161,614.731,71.161z M611.139,74.753 c-0.661,0-1.196,0.536-1.196,1.196c0,0.66,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C612.335,75.288,611.8,74.753,611.139,74.753z M614.731,63.977c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196 c0.661,0,1.196-0.535,1.196-1.196C615.927,64.512,615.392,63.977,614.731,63.977z M611.139,67.569 c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C612.335,68.104,611.8,67.569,611.139,67.569z M613.535,57.989c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 c0-0.633-0.496-1.138-1.118-1.18h-0.156C614.031,56.851,613.535,57.356,613.535,57.989z M611.139,60.385 c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C612.335,60.921,611.8,60.385,611.139,60.385z M621.915,301.042c-0.313,0-0.593,0.127-0.806,0.323l1.821,1.468 c0.105-0.178,0.181-0.374,0.181-0.595C623.111,301.578,622.576,301.042,621.915,301.042z M619.519,298.647 c0-0.661-0.535-1.196-1.196-1.196c-0.511,0-0.94,0.324-1.111,0.775l1.748,1.409C619.289,299.42,619.519,299.068,619.519,298.647z  M621.915,293.858c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C623.111,294.394,622.576,293.858,621.915,293.858z M621.915,286.675c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C623.111,287.21,622.576,286.675,621.915,286.675z  M618.323,290.267c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C619.519,290.802,618.984,290.267,618.323,290.267z M621.915,279.491c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C623.111,280.026,622.576,279.491,621.915,279.491z  M618.323,283.083c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C619.519,283.618,618.984,283.083,618.323,283.083z M621.915,272.307c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C623.111,272.843,622.576,272.307,621.915,272.307z  M618.323,275.899c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C619.519,276.435,618.984,275.899,618.323,275.899z M621.915,265.123c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C623.111,265.659,622.576,265.123,621.915,265.123z  M618.323,268.715c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C619.519,269.251,618.984,268.715,618.323,268.715z M621.915,257.94c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C623.111,258.475,622.576,257.94,621.915,257.94z  M618.323,261.531c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C619.519,262.067,618.984,261.531,618.323,261.531z M621.915,250.756c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C623.111,251.291,622.576,250.756,621.915,250.756z  M618.323,254.348c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C619.519,254.883,618.984,254.348,618.323,254.348z M621.915,243.572c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C623.111,244.107,622.576,243.572,621.915,243.572z  M618.323,247.164c-0.661,0-1.196,0.536-1.196,1.196c0,0.66,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C619.519,247.699,618.984,247.164,618.323,247.164z M621.915,236.388c-0.661,0-1.196,0.536-1.196,1.196 c0,0.66,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C623.111,236.924,622.576,236.388,621.915,236.388z  M618.323,239.98c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C619.519,240.516,618.984,239.98,618.323,239.98z M621.915,229.204c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C623.111,229.74,622.576,229.204,621.915,229.204z  M618.323,232.796c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C619.519,233.332,618.984,232.796,618.323,232.796z M621.915,222.02c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C623.111,222.556,622.576,222.02,621.915,222.02z  M618.323,225.612c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C619.519,226.148,618.984,225.612,618.323,225.612z M621.915,214.837c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C623.111,215.372,622.576,214.837,621.915,214.837z  M618.323,218.429c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C619.519,218.964,618.984,218.429,618.323,218.429z M621.915,207.653c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C623.111,208.188,622.576,207.653,621.915,207.653z  M618.323,211.245c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C619.519,211.78,618.984,211.245,618.323,211.245z M621.915,200.469c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C623.111,201.005,622.576,200.469,621.915,200.469z  M618.323,204.061c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C619.519,204.596,618.984,204.061,618.323,204.061z M621.915,193.285c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C623.111,193.821,622.576,193.285,621.915,193.285z  M618.323,196.877c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C619.519,197.413,618.984,196.877,618.323,196.877z M621.915,186.102c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C623.111,186.637,622.576,186.102,621.915,186.102z  M618.323,189.693c-0.661,0-1.196,0.536-1.196,1.196c0,0.66,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C619.519,190.229,618.984,189.693,618.323,189.693z M621.915,178.918c-0.661,0-1.196,0.536-1.196,1.196 c0,0.66,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C623.111,179.453,622.576,178.918,621.915,178.918z  M618.323,182.51c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C619.519,183.045,618.984,182.51,618.323,182.51z M621.915,171.734c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C623.111,172.269,622.576,171.734,621.915,171.734z  M618.323,175.326c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C619.519,175.861,618.984,175.326,618.323,175.326z M621.915,164.55c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C623.111,165.086,622.576,164.55,621.915,164.55z  M618.323,168.142c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C619.519,168.678,618.984,168.142,618.323,168.142z M621.915,157.366c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C623.111,157.902,622.576,157.366,621.915,157.366z  M618.323,160.958c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C619.519,161.494,618.984,160.958,618.323,160.958z M621.915,150.182c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C623.111,150.718,622.576,150.182,621.915,150.182z  M618.323,153.774c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C619.519,154.31,618.984,153.774,618.323,153.774z M621.915,142.999c-0.661,0-1.196,0.536-1.196,1.196 c0,0.66,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C623.111,143.534,622.576,142.999,621.915,142.999z  M618.323,146.591c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C619.519,147.126,618.984,146.591,618.323,146.591z M621.915,135.815c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C623.111,136.35,622.576,135.815,621.915,135.815z  M618.323,139.407c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C619.519,139.942,618.984,139.407,618.323,139.407z M621.915,128.631c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C623.111,129.167,622.576,128.631,621.915,128.631z  M618.323,132.223c-0.661,0-1.196,0.536-1.196,1.196c0,0.66,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C619.519,132.758,618.984,132.223,618.323,132.223z M621.915,121.447c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C623.111,121.983,622.576,121.447,621.915,121.447z  M618.323,125.039c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C619.519,125.575,618.984,125.039,618.323,125.039z M621.915,114.263c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C623.111,114.799,622.576,114.263,621.915,114.263z  M618.323,117.855c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C619.519,118.391,618.984,117.855,618.323,117.855z M621.915,107.08c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C623.111,107.615,622.576,107.08,621.915,107.08z  M618.323,110.672c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C619.519,111.207,618.984,110.672,618.323,110.672z M621.915,99.896c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C623.111,100.431,622.576,99.896,621.915,99.896z  M618.323,103.488c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C619.519,104.023,618.984,103.488,618.323,103.488z M621.915,92.712c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C623.111,93.248,622.576,92.712,621.915,92.712z M618.323,96.304 c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C619.519,96.84,618.984,96.304,618.323,96.304z M621.915,85.528c-0.661,0-1.196,0.536-1.196,1.196c0,0.66,0.535,1.196,1.196,1.196 c0.661,0,1.196-0.536,1.196-1.196C623.111,86.064,622.576,85.528,621.915,85.528z M618.323,89.12c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C619.519,89.656,618.984,89.12,618.323,89.12z M621.915,78.344 c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C623.111,78.88,622.576,78.344,621.915,78.344z M618.323,81.936c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196 c0.661,0,1.196-0.535,1.196-1.196C619.519,82.472,618.984,81.936,618.323,81.936z M621.915,71.161 c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C623.111,71.696,622.576,71.161,621.915,71.161z M618.323,74.753c-0.661,0-1.196,0.536-1.196,1.196c0,0.66,0.536,1.196,1.196,1.196 c0.661,0,1.196-0.536,1.196-1.196C619.519,75.288,618.984,74.753,618.323,74.753z M621.915,63.977 c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C623.111,64.512,622.576,63.977,621.915,63.977z M618.323,67.569c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C619.519,68.104,618.984,67.569,618.323,67.569z M620.719,57.989 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196c0-0.633-0.496-1.138-1.118-1.18h-0.156 C621.215,56.851,620.719,57.356,620.719,57.989z M618.323,60.385c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C619.519,60.921,618.984,60.385,618.323,60.385z  M629.099,301.042c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C630.295,301.578,629.759,301.042,629.099,301.042z M631.782,305.077c-0.172,0.207-0.288,0.463-0.288,0.753 c0,0.089,0.032,0.167,0.05,0.25L631.782,305.077z M625.507,304.634c-0.097,0-0.183,0.033-0.273,0.055l1.462,1.178 c0-0.013,0.008-0.024,0.008-0.037C626.703,305.17,626.167,304.634,625.507,304.634z M629.099,293.858 c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C630.295,294.394,629.759,293.858,629.099,293.858z M631.495,298.647c0,0.661,0.536,1.196,1.196,1.196 c0.123,0,0.235-0.036,0.347-0.07l0.471-1.991c-0.214-0.203-0.5-0.331-0.818-0.331C632.03,297.45,631.495,297.986,631.495,298.647z  M625.507,297.45c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C626.703,297.986,626.167,297.45,625.507,297.45z M629.099,286.675c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C630.295,287.21,629.759,286.675,629.099,286.675z  M625.507,290.267c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C626.703,290.802,626.167,290.267,625.507,290.267z M629.099,279.491c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C630.295,280.026,629.759,279.491,629.099,279.491z  M625.507,283.083c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C626.703,283.618,626.167,283.083,625.507,283.083z M629.099,272.307c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C630.295,272.843,629.759,272.307,629.099,272.307z  M625.507,275.899c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C626.703,276.435,626.167,275.899,625.507,275.899z M629.099,265.123c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C630.295,265.659,629.759,265.123,629.099,265.123z  M625.507,268.715c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C626.703,269.251,626.167,268.715,625.507,268.715z M629.099,257.94c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C630.295,258.475,629.759,257.94,629.099,257.94z  M625.507,261.531c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C626.703,262.067,626.167,261.531,625.507,261.531z M629.099,250.756c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C630.295,251.291,629.759,250.756,629.099,250.756z  M625.507,254.348c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C626.703,254.883,626.167,254.348,625.507,254.348z M629.099,243.572c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C630.295,244.107,629.759,243.572,629.099,243.572z  M625.507,247.164c-0.661,0-1.196,0.536-1.196,1.196c0,0.66,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C626.703,247.699,626.167,247.164,625.507,247.164z M629.099,236.388c-0.661,0-1.196,0.536-1.196,1.196 c0,0.66,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C630.295,236.924,629.759,236.388,629.099,236.388z  M625.507,239.98c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C626.703,240.516,626.167,239.98,625.507,239.98z M629.099,229.204c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C630.295,229.74,629.759,229.204,629.099,229.204z  M625.507,232.796c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C626.703,233.332,626.167,232.796,625.507,232.796z M629.099,222.02c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C630.295,222.556,629.759,222.02,629.099,222.02z  M625.507,225.612c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C626.703,226.148,626.167,225.612,625.507,225.612z M629.099,214.837c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C630.295,215.372,629.759,214.837,629.099,214.837z  M625.507,218.429c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C626.703,218.964,626.167,218.429,625.507,218.429z M629.099,207.653c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C630.295,208.188,629.759,207.653,629.099,207.653z  M625.507,211.245c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C626.703,211.78,626.167,211.245,625.507,211.245z M629.099,200.469c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C630.295,201.005,629.759,200.469,629.099,200.469z  M625.507,204.061c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C626.703,204.596,626.167,204.061,625.507,204.061z M629.099,193.285c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C630.295,193.821,629.759,193.285,629.099,193.285z  M625.507,196.877c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C626.703,197.413,626.167,196.877,625.507,196.877z M629.099,186.102c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C630.295,186.637,629.759,186.102,629.099,186.102z  M625.507,189.693c-0.661,0-1.196,0.536-1.196,1.196c0,0.66,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C626.703,190.229,626.167,189.693,625.507,189.693z M629.099,178.918c-0.661,0-1.196,0.536-1.196,1.196 c0,0.66,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C630.295,179.453,629.759,178.918,629.099,178.918z  M625.507,182.51c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C626.703,183.045,626.167,182.51,625.507,182.51z M629.099,171.734c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C630.295,172.269,629.759,171.734,629.099,171.734z  M625.507,175.326c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C626.703,175.861,626.167,175.326,625.507,175.326z M629.099,164.55c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C630.295,165.086,629.759,164.55,629.099,164.55z  M625.507,168.142c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C626.703,168.678,626.167,168.142,625.507,168.142z M629.099,157.366c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C630.295,157.902,629.759,157.366,629.099,157.366z  M625.507,160.958c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C626.703,161.494,626.167,160.958,625.507,160.958z M629.099,150.182c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C630.295,150.718,629.759,150.182,629.099,150.182z  M625.507,153.774c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C626.703,154.31,626.167,153.774,625.507,153.774z M629.099,142.999c-0.661,0-1.196,0.536-1.196,1.196 c0,0.66,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C630.295,143.534,629.759,142.999,629.099,142.999z  M625.507,146.591c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C626.703,147.126,626.167,146.591,625.507,146.591z M629.099,135.815c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C630.295,136.35,629.759,135.815,629.099,135.815z  M625.507,139.407c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C626.703,139.942,626.167,139.407,625.507,139.407z M629.099,128.631c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C630.295,129.167,629.759,128.631,629.099,128.631z  M625.507,132.223c-0.661,0-1.196,0.536-1.196,1.196c0,0.66,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C626.703,132.758,626.167,132.223,625.507,132.223z M629.099,121.447c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C630.295,121.983,629.759,121.447,629.099,121.447z  M625.507,125.039c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C626.703,125.575,626.167,125.039,625.507,125.039z M629.099,114.263c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C630.295,114.799,629.759,114.263,629.099,114.263z  M625.507,117.855c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C626.703,118.391,626.167,117.855,625.507,117.855z M629.099,107.08c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C630.295,107.615,629.759,107.08,629.099,107.08z  M625.507,110.672c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C626.703,111.207,626.167,110.672,625.507,110.672z M629.099,99.896c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C630.295,100.431,629.759,99.896,629.099,99.896z  M625.507,103.488c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C626.703,104.023,626.167,103.488,625.507,103.488z M629.099,92.712c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C630.295,93.248,629.759,92.712,629.099,92.712z M625.507,96.304 c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C626.703,96.84,626.167,96.304,625.507,96.304z M629.099,85.528c-0.661,0-1.196,0.536-1.196,1.196c0,0.66,0.536,1.196,1.196,1.196 c0.661,0,1.196-0.536,1.196-1.196C630.295,86.064,629.759,85.528,629.099,85.528z M625.507,89.12c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C626.703,89.656,626.167,89.12,625.507,89.12z M629.099,78.344 c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C630.295,78.88,629.759,78.344,629.099,78.344z M625.507,81.936c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196 c0.661,0,1.196-0.535,1.196-1.196C626.703,82.472,626.167,81.936,625.507,81.936z M629.099,71.161 c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C630.295,71.696,629.759,71.161,629.099,71.161z M625.507,74.753c-0.661,0-1.196,0.536-1.196,1.196c0,0.66,0.536,1.196,1.196,1.196 c0.661,0,1.196-0.536,1.196-1.196C626.703,75.288,626.167,74.753,625.507,74.753z M629.099,63.977 c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C630.295,64.512,629.759,63.977,629.099,63.977z M625.507,67.569c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C626.703,68.104,626.167,67.569,625.507,67.569z M627.902,57.989 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196c0-0.633-0.496-1.138-1.118-1.18h-0.156 C628.398,56.851,627.902,57.356,627.902,57.989z M625.507,60.385c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C626.703,60.921,626.167,60.385,625.507,60.385z  M635.086,287.871c0,0.411,0.221,0.756,0.537,0.972l0.506-2.137C635.544,286.784,635.086,287.265,635.086,287.871z  M632.691,290.267c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C633.887,290.802,633.351,290.267,632.691,290.267z M636.282,279.491c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C637.479,280.026,636.943,279.491,636.282,279.491z  M632.691,283.083c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C633.887,283.618,633.351,283.083,632.691,283.083z M636.282,272.307c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C637.479,272.843,636.943,272.307,636.282,272.307z  M632.691,275.899c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C633.887,276.435,633.351,275.899,632.691,275.899z M636.282,265.123c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C637.479,265.659,636.943,265.123,636.282,265.123z  M638.678,269.911c0,0.642,0.509,1.156,1.143,1.185l0.538-2.274c-0.149-0.067-0.312-0.107-0.485-0.107 C639.214,268.715,638.678,269.251,638.678,269.911z M632.691,268.715c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C633.887,269.251,633.351,268.715,632.691,268.715z  M636.282,257.94c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C637.479,258.475,636.943,257.94,636.282,257.94z M632.691,261.531c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C633.887,262.067,633.351,261.531,632.691,261.531z  M636.282,250.756c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C637.479,251.291,636.943,250.756,636.282,250.756z M632.691,254.348c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C633.887,254.883,633.351,254.348,632.691,254.348z  M636.282,243.572c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C637.479,244.107,636.943,243.572,636.282,243.572z M632.691,247.164c-0.661,0-1.196,0.536-1.196,1.196 c0,0.66,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C633.887,247.699,633.351,247.164,632.691,247.164z  M636.282,236.388c-0.661,0-1.196,0.536-1.196,1.196c0,0.66,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C637.479,236.924,636.943,236.388,636.282,236.388z M632.691,239.98c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C633.887,240.516,633.351,239.98,632.691,239.98z  M636.282,229.204c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C637.479,229.74,636.943,229.204,636.282,229.204z M632.691,232.796c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C633.887,233.332,633.351,232.796,632.691,232.796z  M636.282,222.02c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C637.479,222.556,636.943,222.02,636.282,222.02z M632.691,225.612c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C633.887,226.148,633.351,225.612,632.691,225.612z  M636.282,214.837c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C637.479,215.372,636.943,214.837,636.282,214.837z M632.691,218.429c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C633.887,218.964,633.351,218.429,632.691,218.429z  M636.282,207.653c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C637.479,208.188,636.943,207.653,636.282,207.653z M632.691,211.245c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C633.887,211.78,633.351,211.245,632.691,211.245z  M636.282,200.469c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C637.479,201.005,636.943,200.469,636.282,200.469z M632.691,204.061c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C633.887,204.596,633.351,204.061,632.691,204.061z  M636.282,193.285c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C637.479,193.821,636.943,193.285,636.282,193.285z M632.691,196.877c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C633.887,197.413,633.351,196.877,632.691,196.877z  M636.282,186.102c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C637.479,186.637,636.943,186.102,636.282,186.102z M632.691,189.693c-0.661,0-1.196,0.536-1.196,1.196 c0,0.66,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C633.887,190.229,633.351,189.693,632.691,189.693z  M636.282,178.918c-0.661,0-1.196,0.536-1.196,1.196c0,0.66,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C637.479,179.453,636.943,178.918,636.282,178.918z M632.691,182.51c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C633.887,183.045,633.351,182.51,632.691,182.51z  M636.282,171.734c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C637.479,172.269,636.943,171.734,636.282,171.734z M632.691,175.326c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C633.887,175.861,633.351,175.326,632.691,175.326z  M636.282,164.55c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C637.479,165.086,636.943,164.55,636.282,164.55z M632.691,168.142c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C633.887,168.678,633.351,168.142,632.691,168.142z  M636.282,157.366c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C637.479,157.902,636.943,157.366,636.282,157.366z M632.691,160.958c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C633.887,161.494,633.351,160.958,632.691,160.958z  M636.282,150.182c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C637.479,150.718,636.943,150.182,636.282,150.182z M632.691,153.774c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C633.887,154.31,633.351,153.774,632.691,153.774z  M636.282,142.999c-0.661,0-1.196,0.536-1.196,1.196c0,0.66,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C637.479,143.534,636.943,142.999,636.282,142.999z M632.691,146.591c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C633.887,147.126,633.351,146.591,632.691,146.591z  M636.282,135.815c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C637.479,136.35,636.943,135.815,636.282,135.815z M632.691,139.407c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C633.887,139.942,633.351,139.407,632.691,139.407z  M636.282,128.631c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C637.479,129.167,636.943,128.631,636.282,128.631z M632.691,132.223c-0.661,0-1.196,0.536-1.196,1.196 c0,0.66,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C633.887,132.758,633.351,132.223,632.691,132.223z  M636.282,121.447c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C637.479,121.983,636.943,121.447,636.282,121.447z M632.691,125.039c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C633.887,125.575,633.351,125.039,632.691,125.039z  M636.282,114.263c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C637.479,114.799,636.943,114.263,636.282,114.263z M632.691,117.855c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C633.887,118.391,633.351,117.855,632.691,117.855z  M636.282,107.08c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C637.479,107.615,636.943,107.08,636.282,107.08z M632.691,110.672c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C633.887,111.207,633.351,110.672,632.691,110.672z  M636.282,99.896c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C637.479,100.431,636.943,99.896,636.282,99.896z M632.691,103.488c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C633.887,104.023,633.351,103.488,632.691,103.488z  M636.282,92.712c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C637.479,93.248,636.943,92.712,636.282,92.712z M632.691,96.304c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C633.887,96.84,633.351,96.304,632.691,96.304z M636.282,85.528 c-0.661,0-1.196,0.536-1.196,1.196c0,0.66,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C637.479,86.064,636.943,85.528,636.282,85.528z M632.691,89.12c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196 c0.661,0,1.196-0.535,1.196-1.196C633.887,89.656,633.351,89.12,632.691,89.12z M636.282,78.344c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C637.479,78.88,636.943,78.344,636.282,78.344z M632.691,81.936 c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C633.887,82.472,633.351,81.936,632.691,81.936z M636.282,71.161c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C637.479,71.696,636.943,71.161,636.282,71.161z M632.691,74.753 c-0.661,0-1.196,0.536-1.196,1.196c0,0.66,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C633.887,75.288,633.351,74.753,632.691,74.753z M636.282,63.977c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C637.479,64.512,636.943,63.977,636.282,63.977z M632.691,67.569 c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C633.887,68.104,633.351,67.569,632.691,67.569z M635.086,57.989c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 c0-0.633-0.496-1.138-1.118-1.18h-0.156C635.582,56.851,635.086,57.356,635.086,57.989z M632.691,60.385 c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C633.887,60.921,633.351,60.385,632.691,60.385z M642.27,259.136c0,0.25,0.094,0.468,0.225,0.66l0.4-1.692 C642.529,258.309,642.27,258.686,642.27,259.136z M639.875,261.531c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.535,1.196-1.196C641.071,262.067,640.535,261.531,639.875,261.531z  M643.466,250.756c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.247,0,0.464-0.093,0.654-0.221l0.369-1.558 C644.283,251.009,643.911,250.756,643.466,250.756z M639.875,254.348c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.535,1.196-1.196C641.071,254.883,640.535,254.348,639.875,254.348z  M643.466,243.572c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C644.662,244.107,644.127,243.572,643.466,243.572z M639.875,247.164c-0.661,0-1.196,0.536-1.196,1.196 c0,0.66,0.536,1.196,1.196,1.196c0.66,0,1.196-0.536,1.196-1.196C641.071,247.699,640.535,247.164,639.875,247.164z  M643.466,236.388c-0.661,0-1.196,0.536-1.196,1.196c0,0.66,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C644.662,236.924,644.127,236.388,643.466,236.388z M645.862,241.176c0,0.512,0.324,0.94,0.776,1.111l0.54-2.283 c-0.041-0.004-0.077-0.024-0.12-0.024C646.398,239.98,645.862,240.516,645.862,241.176z M639.875,239.98 c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.535,1.196-1.196 C641.071,240.516,640.535,239.98,639.875,239.98z M643.466,229.204c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C644.662,229.74,644.127,229.204,643.466,229.204z  M639.875,232.796c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.536,1.196-1.196 C641.071,233.332,640.535,232.796,639.875,232.796z M643.466,222.02c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C644.662,222.556,644.127,222.02,643.466,222.02z  M639.875,225.612c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.536,1.196-1.196 C641.071,226.148,640.535,225.612,639.875,225.612z M643.466,214.837c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C644.662,215.372,644.127,214.837,643.466,214.837z  M639.875,218.429c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.536,1.196-1.196 C641.071,218.964,640.535,218.429,639.875,218.429z M643.466,207.653c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C644.662,208.188,644.127,207.653,643.466,207.653z  M639.875,211.245c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.536,1.196-1.196 C641.071,211.78,640.535,211.245,639.875,211.245z M643.466,200.469c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C644.662,201.005,644.127,200.469,643.466,200.469z  M639.875,204.061c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.535,1.196-1.196 C641.071,204.596,640.535,204.061,639.875,204.061z M643.466,193.285c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C644.662,193.821,644.127,193.285,643.466,193.285z  M639.875,196.877c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.536,1.196-1.196 C641.071,197.413,640.535,196.877,639.875,196.877z M643.466,186.102c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C644.662,186.637,644.127,186.102,643.466,186.102z  M639.875,189.693c-0.661,0-1.196,0.536-1.196,1.196c0,0.66,0.536,1.196,1.196,1.196c0.66,0,1.196-0.536,1.196-1.196 C641.071,190.229,640.535,189.693,639.875,189.693z M643.466,178.918c-0.661,0-1.196,0.536-1.196,1.196 c0,0.66,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C644.662,179.453,644.127,178.918,643.466,178.918z  M639.875,182.51c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.536,1.196-1.196 C641.071,183.045,640.535,182.51,639.875,182.51z M643.466,171.734c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C644.662,172.269,644.127,171.734,643.466,171.734z  M639.875,175.326c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.535,1.196-1.196 C641.071,175.861,640.535,175.326,639.875,175.326z M643.466,164.55c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C644.662,165.086,644.127,164.55,643.466,164.55z  M639.875,168.142c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.536,1.196-1.196 C641.071,168.678,640.535,168.142,639.875,168.142z M643.466,157.366c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C644.662,157.902,644.127,157.366,643.466,157.366z  M639.875,160.958c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.535,1.196-1.196 C641.071,161.494,640.535,160.958,639.875,160.958z M643.466,150.182c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C644.662,150.718,644.127,150.182,643.466,150.182z  M639.875,153.774c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.536,1.196-1.196 C641.071,154.31,640.535,153.774,639.875,153.774z M643.466,142.999c-0.661,0-1.196,0.536-1.196,1.196 c0,0.66,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C644.662,143.534,644.127,142.999,643.466,142.999z  M639.875,146.591c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.535,1.196-1.196 C641.071,147.126,640.535,146.591,639.875,146.591z M643.466,135.815c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C644.662,136.35,644.127,135.815,643.466,135.815z  M639.875,139.407c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.536,1.196-1.196 C641.071,139.942,640.535,139.407,639.875,139.407z M643.466,128.631c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C644.662,129.167,644.127,128.631,643.466,128.631z  M639.875,132.223c-0.661,0-1.196,0.536-1.196,1.196c0,0.66,0.536,1.196,1.196,1.196c0.66,0,1.196-0.536,1.196-1.196 C641.071,132.758,640.535,132.223,639.875,132.223z M643.466,121.447c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C644.662,121.983,644.127,121.447,643.466,121.447z  M639.875,125.039c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.535,1.196-1.196 C641.071,125.575,640.535,125.039,639.875,125.039z M643.466,114.263c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C644.662,114.799,644.127,114.263,643.466,114.263z  M639.875,117.855c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.536,1.196-1.196 C641.071,118.391,640.535,117.855,639.875,117.855z M643.466,107.08c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C644.662,107.615,644.127,107.08,643.466,107.08z  M639.875,110.672c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.536,1.196-1.196 C641.071,111.207,640.535,110.672,639.875,110.672z M643.466,99.896c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C644.662,100.431,644.127,99.896,643.466,99.896z  M639.875,103.488c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.535,1.196-1.196 C641.071,104.023,640.535,103.488,639.875,103.488z M643.466,92.712c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C644.662,93.248,644.127,92.712,643.466,92.712z M639.875,96.304 c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.535,1.196-1.196 C641.071,96.84,640.535,96.304,639.875,96.304z M643.466,85.528c-0.661,0-1.196,0.536-1.196,1.196c0,0.66,0.535,1.196,1.196,1.196 c0.661,0,1.196-0.536,1.196-1.196C644.662,86.064,644.127,85.528,643.466,85.528z M639.875,89.12c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.535,1.196-1.196C641.071,89.656,640.535,89.12,639.875,89.12z M643.466,78.344 c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C644.662,78.88,644.127,78.344,643.466,78.344z M639.875,81.936c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196 c0.66,0,1.196-0.535,1.196-1.196C641.071,82.472,640.535,81.936,639.875,81.936z M643.466,71.161c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C644.662,71.696,644.127,71.161,643.466,71.161z M639.875,74.753 c-0.661,0-1.196,0.536-1.196,1.196c0,0.66,0.536,1.196,1.196,1.196c0.66,0,1.196-0.536,1.196-1.196 C641.071,75.288,640.535,74.753,639.875,74.753z M643.466,63.977c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C644.662,64.512,644.127,63.977,643.466,63.977z M639.875,67.569 c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.535,1.196-1.196 C641.071,68.104,640.535,67.569,639.875,67.569z M642.27,57.989c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 c0-0.633-0.496-1.138-1.118-1.18h-0.156C642.766,56.851,642.27,57.356,642.27,57.989z M639.875,60.385 c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.536,1.196-1.196 C641.071,60.921,640.535,60.385,639.875,60.385z M649.567,229.906c-0.054,0.119-0.078,0.25-0.091,0.386L649.567,229.906z  M647.058,232.796c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C648.254,233.332,647.719,232.796,647.058,232.796z M649.454,223.217c0,0.661,0.536,1.196,1.196,1.196 c0.081,0,0.151-0.031,0.227-0.046l0.492-2.081c-0.202-0.157-0.444-0.265-0.72-0.265C649.99,222.02,649.454,222.556,649.454,223.217 z M647.058,225.612c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C648.254,226.148,647.719,225.612,647.058,225.612z M650.65,214.837c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.536,1.196-1.196C651.846,215.372,651.311,214.837,650.65,214.837z  M647.058,218.429c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C648.254,218.964,647.719,218.429,647.058,218.429z M650.65,207.653c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.535,1.196-1.196C651.846,208.188,651.311,207.653,650.65,207.653z  M653.046,212.441c0,0.369,0.177,0.686,0.439,0.906l0.484-2.047C653.444,211.426,653.046,211.877,653.046,212.441z  M647.058,211.245c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C648.254,211.78,647.719,211.245,647.058,211.245z M650.65,200.469c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.536,1.196-1.196C651.846,201.005,651.311,200.469,650.65,200.469z  M647.058,204.061c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C648.254,204.596,647.719,204.061,647.058,204.061z M650.65,193.285c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.535,1.196-1.196C651.846,193.821,651.311,193.285,650.65,193.285z  M647.058,196.877c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C648.254,197.413,647.719,196.877,647.058,196.877z M650.65,186.102c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.536,1.196-1.196C651.846,186.637,651.311,186.102,650.65,186.102z  M647.058,189.693c-0.661,0-1.196,0.536-1.196,1.196c0,0.66,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C648.254,190.229,647.719,189.693,647.058,189.693z M650.65,178.918c-0.661,0-1.196,0.536-1.196,1.196 c0,0.66,0.536,1.196,1.196,1.196c0.66,0,1.196-0.536,1.196-1.196C651.846,179.453,651.311,178.918,650.65,178.918z M647.058,182.51 c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C648.254,183.045,647.719,182.51,647.058,182.51z M650.65,171.734c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.536,1.196-1.196C651.846,172.269,651.311,171.734,650.65,171.734z  M647.058,175.326c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C648.254,175.861,647.719,175.326,647.058,175.326z M650.65,164.55c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.535,1.196-1.196C651.846,165.086,651.311,164.55,650.65,164.55z M647.058,168.142 c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C648.254,168.678,647.719,168.142,647.058,168.142z M650.65,157.366c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.536,1.196-1.196C651.846,157.902,651.311,157.366,650.65,157.366z  M647.058,160.958c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C648.254,161.494,647.719,160.958,647.058,160.958z M650.65,150.182c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.535,1.196-1.196C651.846,150.718,651.311,150.182,650.65,150.182z  M647.058,153.774c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C648.254,154.31,647.719,153.774,647.058,153.774z M650.65,142.999c-0.661,0-1.196,0.536-1.196,1.196 c0,0.66,0.536,1.196,1.196,1.196c0.66,0,1.196-0.536,1.196-1.196C651.846,143.534,651.311,142.999,650.65,142.999z  M647.058,146.591c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C648.254,147.126,647.719,146.591,647.058,146.591z M650.65,135.815c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.535,1.196-1.196C651.846,136.35,651.311,135.815,650.65,135.815z  M647.058,139.407c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C648.254,139.942,647.719,139.407,647.058,139.407z M650.65,128.631c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.536,1.196-1.196C651.846,129.167,651.311,128.631,650.65,128.631z  M647.058,132.223c-0.661,0-1.196,0.536-1.196,1.196c0,0.66,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C648.254,132.758,647.719,132.223,647.058,132.223z M650.65,121.447c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.535,1.196-1.196C651.846,121.983,651.311,121.447,650.65,121.447z  M647.058,125.039c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C648.254,125.575,647.719,125.039,647.058,125.039z M650.65,114.263c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.535,1.196-1.196C651.846,114.799,651.311,114.263,650.65,114.263z  M647.058,117.855c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C648.254,118.391,647.719,117.855,647.058,117.855z M650.65,107.08c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.535,1.196-1.196C651.846,107.615,651.311,107.08,650.65,107.08z M647.058,110.672 c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C648.254,111.207,647.719,110.672,647.058,110.672z M650.65,99.896c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.535,1.196-1.196C651.846,100.431,651.311,99.896,650.65,99.896z M647.058,103.488 c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C648.254,104.023,647.719,103.488,647.058,103.488z M650.65,92.712c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.535,1.196-1.196C651.846,93.248,651.311,92.712,650.65,92.712z M647.058,96.304 c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C648.254,96.84,647.719,96.304,647.058,96.304z M650.65,85.528c-0.661,0-1.196,0.536-1.196,1.196c0,0.66,0.536,1.196,1.196,1.196 c0.66,0,1.196-0.536,1.196-1.196C651.846,86.064,651.311,85.528,650.65,85.528z M647.058,89.12c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C648.254,89.656,647.719,89.12,647.058,89.12z M650.65,78.344 c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.535,1.196-1.196 C651.846,78.88,651.311,78.344,650.65,78.344z M647.058,81.936c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196 c0.661,0,1.196-0.535,1.196-1.196C648.254,82.472,647.719,81.936,647.058,81.936z M650.65,71.161c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.535,1.196-1.196C651.846,71.696,651.311,71.161,650.65,71.161z M647.058,74.753 c-0.661,0-1.196,0.536-1.196,1.196c0,0.66,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C648.254,75.288,647.719,74.753,647.058,74.753z M650.65,63.977c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196 c0.66,0,1.196-0.535,1.196-1.196C651.846,64.512,651.311,63.977,650.65,63.977z M647.058,67.569c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C648.254,68.104,647.719,67.569,647.058,67.569z M649.454,57.989 c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.535,1.196-1.196c0-0.633-0.496-1.138-1.118-1.18h-0.156 C649.95,56.851,649.454,57.356,649.454,57.989z M647.058,60.385c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196 c0.661,0,1.196-0.536,1.196-1.196C648.254,60.921,647.719,60.385,647.058,60.385z M655.42,205.167 c-0.048-0.616-0.549-1.107-1.178-1.107c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196 c0.44,0,0.809-0.249,1.017-0.604L655.42,205.167z M656.638,194.481c0,0.604,0.454,1.082,1.035,1.164l0.54-2.283 c-0.121-0.041-0.245-0.077-0.379-0.077C657.173,193.285,656.638,193.821,656.638,194.481z M654.242,196.877 c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C655.438,197.413,654.903,196.877,654.242,196.877z M657.834,186.102c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C659.03,186.637,658.495,186.102,657.834,186.102z  M654.242,189.693c-0.661,0-1.196,0.536-1.196,1.196c0,0.66,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C655.438,190.229,654.903,189.693,654.242,189.693z M657.834,178.918c-0.661,0-1.196,0.536-1.196,1.196 c0,0.66,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C659.03,179.453,658.495,178.918,657.834,178.918z  M660.72,182.765c-0.29,0.218-0.491,0.549-0.491,0.94c0,0.196,0.058,0.373,0.141,0.536L660.72,182.765z M654.242,182.51 c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C655.438,183.045,654.903,182.51,654.242,182.51z M657.834,171.734c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C659.03,172.269,658.495,171.734,657.834,171.734z  M654.242,175.326c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C655.438,175.861,654.903,175.326,654.242,175.326z M657.834,164.55c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C659.03,165.086,658.495,164.55,657.834,164.55z  M654.242,168.142c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C655.438,168.678,654.903,168.142,654.242,168.142z M657.834,157.366c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C659.03,157.902,658.495,157.366,657.834,157.366z  M654.242,160.958c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C655.438,161.494,654.903,160.958,654.242,160.958z M657.834,150.182c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C659.03,150.718,658.495,150.182,657.834,150.182z  M654.242,153.774c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C655.438,154.31,654.903,153.774,654.242,153.774z M657.834,142.999c-0.661,0-1.196,0.536-1.196,1.196 c0,0.66,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C659.03,143.534,658.495,142.999,657.834,142.999z  M654.242,146.591c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C655.438,147.126,654.903,146.591,654.242,146.591z M657.834,135.815c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C659.03,136.35,658.495,135.815,657.834,135.815z  M654.242,139.407c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C655.438,139.942,654.903,139.407,654.242,139.407z M657.834,128.631c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C659.03,129.167,658.495,128.631,657.834,128.631z  M654.242,132.223c-0.661,0-1.196,0.536-1.196,1.196c0,0.66,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C655.438,132.758,654.903,132.223,654.242,132.223z M657.834,121.447c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C659.03,121.983,658.495,121.447,657.834,121.447z  M654.242,125.039c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C655.438,125.575,654.903,125.039,654.242,125.039z M657.834,114.263c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C659.03,114.799,658.495,114.263,657.834,114.263z  M654.242,117.855c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C655.438,118.391,654.903,117.855,654.242,117.855z M657.834,107.08c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C659.03,107.615,658.495,107.08,657.834,107.08z  M654.242,110.672c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C655.438,111.207,654.903,110.672,654.242,110.672z M657.834,99.896c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C659.03,100.431,658.495,99.896,657.834,99.896z  M654.242,103.488c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C655.438,104.023,654.903,103.488,654.242,103.488z M657.834,92.712c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C659.03,93.248,658.495,92.712,657.834,92.712z M654.242,96.304 c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C655.438,96.84,654.903,96.304,654.242,96.304z M657.834,85.528c-0.661,0-1.196,0.536-1.196,1.196c0,0.66,0.536,1.196,1.196,1.196 c0.661,0,1.196-0.536,1.196-1.196C659.03,86.064,658.495,85.528,657.834,85.528z M654.242,89.12c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C655.438,89.656,654.903,89.12,654.242,89.12z M657.834,78.344 c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C659.03,78.88,658.495,78.344,657.834,78.344z M654.242,81.936c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196 c0.661,0,1.196-0.535,1.196-1.196C655.438,82.472,654.903,81.936,654.242,81.936z M657.834,71.161 c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C659.03,71.696,658.495,71.161,657.834,71.161z M654.242,74.753c-0.661,0-1.196,0.536-1.196,1.196c0,0.66,0.535,1.196,1.196,1.196 c0.661,0,1.196-0.536,1.196-1.196C655.438,75.288,654.903,74.753,654.242,74.753z M657.834,63.977 c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C659.03,64.512,658.495,63.977,657.834,63.977z M654.242,67.569c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196 c0.661,0,1.196-0.535,1.196-1.196C655.438,68.104,654.903,67.569,654.242,67.569z M656.638,57.989c0,0.661,0.536,1.196,1.196,1.196 c0.661,0,1.196-0.535,1.196-1.196c0-0.633-0.496-1.138-1.118-1.18h-0.156C657.134,56.851,656.638,57.356,656.638,57.989z  M654.242,60.385c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C655.438,60.921,654.903,60.385,654.242,60.385z M661.426,175.326c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.188,0,0.361-0.052,0.519-0.13l0.42-1.774C662.146,175.525,661.816,175.326,661.426,175.326z  M663.821,165.746c0,0.471,0.278,0.868,0.674,1.064l0.534-2.258c-0.004,0-0.008-0.002-0.012-0.002 C664.357,164.55,663.821,165.086,663.821,165.746z M661.426,168.142c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.536,1.196-1.196C662.622,168.678,662.086,168.142,661.426,168.142z  M665.018,157.366c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C666.214,157.902,665.678,157.366,665.018,157.366z M661.426,160.958c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.535,1.196-1.196C662.622,161.494,662.086,160.958,661.426,160.958z  M665.018,150.182c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C666.214,150.718,665.678,150.182,665.018,150.182z M661.426,153.774c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.536,1.196-1.196C662.622,154.31,662.086,153.774,661.426,153.774z  M665.018,142.999c-0.661,0-1.196,0.536-1.196,1.196c0,0.66,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C666.214,143.534,665.678,142.999,665.018,142.999z M667.414,147.787c0,0.661,0.535,1.196,1.196,1.196 c0.039,0,0.071-0.018,0.109-0.022l0.514-2.171c-0.184-0.115-0.389-0.199-0.622-0.199 C667.949,146.591,667.414,147.126,667.414,147.787z M661.426,146.591c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.535,1.196-1.196C662.622,147.126,662.086,146.591,661.426,146.591z  M665.018,135.815c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C666.214,136.35,665.678,135.815,665.018,135.815z M661.426,139.407c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.536,1.196-1.196C662.622,139.942,662.086,139.407,661.426,139.407z  M665.018,128.631c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C666.214,129.167,665.678,128.631,665.018,128.631z M661.426,132.223c-0.661,0-1.196,0.536-1.196,1.196 c0,0.66,0.536,1.196,1.196,1.196c0.66,0,1.196-0.536,1.196-1.196C662.622,132.758,662.086,132.223,661.426,132.223z  M665.018,121.447c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C666.214,121.983,665.678,121.447,665.018,121.447z M661.426,125.039c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.535,1.196-1.196C662.622,125.575,662.086,125.039,661.426,125.039z  M665.018,114.263c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C666.214,114.799,665.678,114.263,665.018,114.263z M661.426,117.855c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.536,1.196-1.196C662.622,118.391,662.086,117.855,661.426,117.855z  M665.018,107.08c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C666.214,107.615,665.678,107.08,665.018,107.08z M661.426,110.672c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.536,1.196-1.196C662.622,111.207,662.086,110.672,661.426,110.672z  M665.018,99.896c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C666.214,100.431,665.678,99.896,665.018,99.896z M661.426,103.488c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.535,1.196-1.196C662.622,104.023,662.086,103.488,661.426,103.488z  M665.018,92.712c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C666.214,93.248,665.678,92.712,665.018,92.712z M661.426,96.304c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.535,1.196-1.196C662.622,96.84,662.086,96.304,661.426,96.304z M665.018,85.528 c-0.661,0-1.196,0.536-1.196,1.196c0,0.66,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C666.214,86.064,665.678,85.528,665.018,85.528z M661.426,89.12c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196 c0.66,0,1.196-0.535,1.196-1.196C662.622,89.656,662.086,89.12,661.426,89.12z M665.018,78.344c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C666.214,78.88,665.678,78.344,665.018,78.344z M661.426,81.936 c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.535,1.196-1.196 C662.622,82.472,662.086,81.936,661.426,81.936z M665.018,71.161c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C666.214,71.696,665.678,71.161,665.018,71.161z M661.426,74.753 c-0.661,0-1.196,0.536-1.196,1.196c0,0.66,0.536,1.196,1.196,1.196c0.66,0,1.196-0.536,1.196-1.196 C662.622,75.288,662.086,74.753,661.426,74.753z M665.018,63.977c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C666.214,64.512,665.678,63.977,665.018,63.977z M661.426,67.569 c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.535,1.196-1.196 C662.622,68.104,662.086,67.569,661.426,67.569z M663.821,57.989c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 c0-0.633-0.496-1.138-1.118-1.18h-0.156C664.318,56.851,663.821,57.356,663.821,57.989z M661.426,60.385 c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.536,1.196-1.196 C662.622,60.921,662.086,60.385,661.426,60.385z M671.005,137.011c0,0.325,0.132,0.619,0.343,0.834l0.462-1.951 C671.344,136.058,671.005,136.489,671.005,137.011z M668.61,139.407c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C669.806,139.942,669.27,139.407,668.61,139.407z  M672.202,128.631c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.329,0,0.627-0.133,0.843-0.348l0.283-1.196 C673.176,128.992,672.739,128.631,672.202,128.631z M668.61,132.223c-0.661,0-1.196,0.536-1.196,1.196 c0,0.66,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C669.806,132.758,669.27,132.223,668.61,132.223z  M672.202,121.447c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C673.398,121.983,672.862,121.447,672.202,121.447z M668.61,125.039c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C669.806,125.575,669.27,125.039,668.61,125.039z  M672.202,114.263c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C673.398,114.799,672.862,114.263,672.202,114.263z M674.597,119.051c0,0.565,0.4,1.017,0.927,1.142l0.54-2.283 c-0.09-0.021-0.175-0.055-0.271-0.055C675.133,117.855,674.597,118.391,674.597,119.051z M668.61,117.855 c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C669.806,118.391,669.27,117.855,668.61,117.855z M672.202,107.08c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C673.398,107.615,672.862,107.08,672.202,107.08z  M668.61,110.672c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C669.806,111.207,669.27,110.672,668.61,110.672z M672.202,99.896c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C673.398,100.431,672.862,99.896,672.202,99.896z  M668.61,103.488c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C669.806,104.023,669.27,103.488,668.61,103.488z M672.202,92.712c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C673.398,93.248,672.862,92.712,672.202,92.712z M668.61,96.304 c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C669.806,96.84,669.27,96.304,668.61,96.304z M672.202,85.528c-0.661,0-1.196,0.536-1.196,1.196c0,0.66,0.536,1.196,1.196,1.196 c0.661,0,1.196-0.536,1.196-1.196C673.398,86.064,672.862,85.528,672.202,85.528z M668.61,89.12c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C669.806,89.656,669.27,89.12,668.61,89.12z M672.202,78.344 c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C673.398,78.88,672.862,78.344,672.202,78.344z M668.61,81.936c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196 c0.661,0,1.196-0.535,1.196-1.196C669.806,82.472,669.27,81.936,668.61,81.936z M672.202,71.161c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C673.398,71.696,672.862,71.161,672.202,71.161z M668.61,74.753 c-0.661,0-1.196,0.536-1.196,1.196c0,0.66,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C669.806,75.288,669.27,74.753,668.61,74.753z M672.202,63.977c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196 c0.661,0,1.196-0.535,1.196-1.196C673.398,64.512,672.862,63.977,672.202,63.977z M668.61,67.569c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C669.806,68.104,669.27,67.569,668.61,67.569z M671.005,57.989 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196c0-0.633-0.496-1.138-1.118-1.18h-0.156 C671.501,56.851,671.005,57.356,671.005,57.989z M668.61,60.385c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196 c0.661,0,1.196-0.536,1.196-1.196C669.806,60.921,669.27,60.385,668.61,60.385z M678.189,108.276c0,0.125,0.035,0.24,0.071,0.353 l0.284-1.202C678.326,107.643,678.189,107.943,678.189,108.276z M675.793,110.672c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C676.99,111.207,676.454,110.672,675.793,110.672z  M679.385,99.896c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.14,0,0.269-0.035,0.394-0.079l0.461-1.949 C680.023,100.036,679.722,99.896,679.385,99.896z M675.793,103.488c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C676.99,104.023,676.454,103.488,675.793,103.488z  M679.385,92.712c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C680.581,93.248,680.046,92.712,679.385,92.712z M675.793,96.304c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C676.99,96.84,676.454,96.304,675.793,96.304z M679.385,85.528 c-0.661,0-1.196,0.536-1.196,1.196c0,0.66,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C680.581,86.064,680.046,85.528,679.385,85.528z M681.781,90.316c0,0.428,0.237,0.787,0.576,0.998l0.514-2.173 C682.263,89.198,681.781,89.693,681.781,90.316z M675.793,89.12c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196 c0.661,0,1.196-0.535,1.196-1.196C676.99,89.656,676.454,89.12,675.793,89.12z M679.385,78.344c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C680.581,78.88,680.046,78.344,679.385,78.344z M675.793,81.936 c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C676.99,82.472,676.454,81.936,675.793,81.936z M679.385,71.161c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196 c0.661,0,1.196-0.535,1.196-1.196C680.581,71.696,680.046,71.161,679.385,71.161z M675.793,74.753 c-0.661,0-1.196,0.536-1.196,1.196c0,0.66,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C676.99,75.288,676.454,74.753,675.793,74.753z M679.385,63.977c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196 c0.661,0,1.196-0.535,1.196-1.196C680.581,64.512,680.046,63.977,679.385,63.977z M675.793,67.569 c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C676.99,68.104,676.454,67.569,675.793,67.569z M678.189,57.989c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 c0-0.633-0.496-1.138-1.118-1.18h-0.156C678.685,56.851,678.189,57.356,678.189,57.989z M675.793,60.385 c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C676.99,60.921,676.454,60.385,675.793,60.385z M682.977,81.936c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196 c0.661,0,1.196-0.535,1.196-1.196C684.173,82.472,683.638,81.936,682.977,81.936z M685.373,72.357c0,0.657,0.531,1.189,1.187,1.194 l0.534-2.257c-0.16-0.079-0.334-0.134-0.524-0.134C685.909,71.161,685.373,71.696,685.373,72.357z M682.977,74.753 c-0.661,0-1.196,0.536-1.196,1.196c0,0.66,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C684.173,75.288,683.638,74.753,682.977,74.753z M686.569,63.977c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196s1.196-0.535,1.196-1.196C687.765,64.512,687.23,63.977,686.569,63.977z M682.977,67.569 c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C684.173,68.104,683.638,67.569,682.977,67.569z M685.373,57.989c0,0.661,0.536,1.196,1.196,1.196s1.196-0.535,1.196-1.196 c0-0.633-0.496-1.138-1.118-1.18h-0.156C685.869,56.851,685.373,57.356,685.373,57.989z M689.644,60.514 c-0.399,0.194-0.679,0.594-0.679,1.068c0,0.271,0.107,0.509,0.259,0.71L689.644,60.514z M682.977,60.385 c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C684.173,60.921,683.638,60.385,682.977,60.385z M64.144,77.372c0.193,0.135,0.416,0.231,0.669,0.231 c0.66,0,1.196-0.535,1.196-1.196c0-0.661-0.536-1.196-1.196-1.196c-0.487,0-0.902,0.293-1.088,0.71L64.144,77.372z M62.418,65.632 c0-0.661-0.536-1.196-1.196-1.196c-0.282,0-0.531,0.112-0.735,0.276l0.604,2.09c0.045,0.005,0.085,0.026,0.131,0.026 C61.882,66.828,62.418,66.292,62.418,65.632z M61.418,59.604l-1.062-0.34c0.218,0.231,0.523,0.38,0.866,0.38 C61.291,59.644,61.352,59.616,61.418,59.604z M68.728,93.236l0.557,1.928c0.192-0.212,0.317-0.488,0.317-0.797 C69.602,93.82,69.228,93.379,68.728,93.236z M68.405,85.987c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196 c0.661,0,1.196-0.535,1.196-1.196C69.602,86.522,69.066,85.987,68.405,85.987z M68.405,78.803c-0.661,0-1.196,0.536-1.196,1.196 c0,0.66,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C69.602,79.339,69.066,78.803,68.405,78.803z M65.725,82.842 l0.257,0.889c0.006-0.048,0.028-0.09,0.028-0.14C66.01,83.303,65.895,83.049,65.725,82.842z M68.405,71.619 c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C69.602,72.155,69.066,71.619,68.405,71.619z M68.405,64.435c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196 c0.661,0,1.196-0.535,1.196-1.196C69.602,64.971,69.066,64.435,68.405,64.435z M71.997,63.236c0.166,0,0.324-0.034,0.468-0.096 l-1.457-0.466C71.222,63.004,71.575,63.236,71.997,63.236z M64.813,68.027c-0.661,0-1.196,0.536-1.196,1.196 c0,0.66,0.536,1.196,1.196,1.196c0.66,0,1.196-0.536,1.196-1.196C66.01,68.563,65.474,68.027,64.813,68.027z M64.813,60.843 c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.536,1.196-1.196 C66.01,61.379,65.474,60.843,64.813,60.843z M76.785,115.918c0-0.661-0.536-1.196-1.196-1.196c-0.224,0-0.421,0.078-0.601,0.185 l0.636,2.2C76.268,117.087,76.785,116.566,76.785,115.918z M75.589,107.538c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.535,1.196-1.196C76.785,108.074,76.25,107.538,75.589,107.538z M73.193,105.142 c0-0.661-0.535-1.196-1.196-1.196c-0.059,0-0.109,0.025-0.165,0.034l0.651,2.252C72.9,106.045,73.193,105.63,73.193,105.142z  M75.589,100.354c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.535,1.196-1.196 C76.785,100.89,76.25,100.354,75.589,100.354z M75.589,93.171c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196 c0.66,0,1.196-0.535,1.196-1.196C76.785,93.706,76.25,93.171,75.589,93.171z M71.997,96.762c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C73.193,97.298,72.658,96.762,71.997,96.762z M75.589,85.987 c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.535,1.196-1.196 C76.785,86.522,76.25,85.987,75.589,85.987z M71.997,89.579c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196 c0.661,0,1.196-0.535,1.196-1.196C73.193,90.114,72.658,89.579,71.997,89.579z M75.589,78.803c-0.661,0-1.196,0.536-1.196,1.196 c0,0.66,0.536,1.196,1.196,1.196c0.66,0,1.196-0.536,1.196-1.196C76.785,79.339,76.25,78.803,75.589,78.803z M71.997,82.395 c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C73.193,82.93,72.658,82.395,71.997,82.395z M75.589,71.619c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196 c0.66,0,1.196-0.535,1.196-1.196C76.785,72.155,76.25,71.619,75.589,71.619z M71.997,75.211c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C73.193,75.747,72.658,75.211,71.997,75.211z M75.589,64.435 c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.535,1.196-1.196 C76.785,64.971,76.25,64.435,75.589,64.435z M71.997,68.027c-0.661,0-1.196,0.536-1.196,1.196c0,0.66,0.535,1.196,1.196,1.196 c0.661,0,1.196-0.536,1.196-1.196C73.193,68.563,72.658,68.027,71.997,68.027z M83.271,143.573l0.494,1.71 c0.118-0.185,0.204-0.393,0.204-0.629C83.969,144.172,83.681,143.763,83.271,143.573z M82.773,136.273 c-0.661,0-1.196,0.536-1.196,1.196c0,0.66,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C83.969,136.809,83.434,136.273,82.773,136.273z M82.773,129.09c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196 c0.661,0,1.196-0.536,1.196-1.196C83.969,129.625,83.434,129.09,82.773,129.09z M80.377,126.694c0-0.661-0.535-1.196-1.196-1.196 c-0.414,0-0.761,0.223-0.976,0.543l0.507,1.753c0.144,0.062,0.302,0.096,0.469,0.096C79.842,127.89,80.377,127.354,80.377,126.694z  M82.773,121.906c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C83.969,122.441,83.434,121.906,82.773,121.906z M82.773,114.722c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C83.969,115.257,83.434,114.722,82.773,114.722z M79.181,118.314 c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C80.377,118.849,79.842,118.314,79.181,118.314z M82.773,107.538c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C83.969,108.074,83.434,107.538,82.773,107.538z M79.181,111.13 c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C80.377,111.666,79.842,111.13,79.181,111.13z M82.773,100.354c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196 c0.661,0,1.196-0.535,1.196-1.196C83.969,100.89,83.434,100.354,82.773,100.354z M79.181,103.946c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C80.377,104.482,79.842,103.946,79.181,103.946z M82.773,93.171 c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C83.969,93.706,83.434,93.171,82.773,93.171z M79.181,96.762c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196 c0.661,0,1.196-0.535,1.196-1.196C80.377,97.298,79.842,96.762,79.181,96.762z M82.773,85.987c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C83.969,86.522,83.434,85.987,82.773,85.987z M79.181,89.579 c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C80.377,90.114,79.842,89.579,79.181,89.579z M82.773,78.803c-0.661,0-1.196,0.536-1.196,1.196c0,0.66,0.535,1.196,1.196,1.196 c0.661,0,1.196-0.536,1.196-1.196C83.969,79.339,83.434,78.803,82.773,78.803z M79.181,82.395c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C80.377,82.93,79.842,82.395,79.181,82.395z M82.773,71.619 c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C83.969,72.155,83.434,71.619,82.773,71.619z M79.181,75.211c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196 c0.661,0,1.196-0.535,1.196-1.196C80.377,75.747,79.842,75.211,79.181,75.211z M82.773,66.828c0.229,0,0.43-0.081,0.612-0.192 l-1.716-0.549C81.848,66.521,82.273,66.828,82.773,66.828z M79.181,68.027c-0.661,0-1.196,0.536-1.196,1.196 c0,0.66,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C80.377,68.563,79.842,68.027,79.181,68.027z M91.153,166.205 c0-0.661-0.535-1.196-1.196-1.196c-0.165,0-0.323,0.033-0.466,0.094l0.653,2.26C90.712,167.27,91.153,166.799,91.153,166.205z  M89.957,157.825c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C91.153,158.36,90.617,157.825,89.957,157.825z M87.561,155.429c0-0.661-0.535-1.196-1.196-1.196c-0.005,0-0.009,0.003-0.013,0.003 l0.633,2.192C87.323,156.216,87.561,155.858,87.561,155.429z M89.957,150.641c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C91.153,151.176,90.617,150.641,89.957,150.641z M89.957,143.457 c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C91.153,143.993,90.617,143.457,89.957,143.457z M86.365,147.049c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C87.561,147.585,87.025,147.049,86.365,147.049z M89.957,136.273 c-0.661,0-1.196,0.536-1.196,1.196c0,0.66,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C91.153,136.809,90.617,136.273,89.957,136.273z M86.365,139.865c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C87.561,140.401,87.025,139.865,86.365,139.865z M89.957,129.09 c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C91.153,129.625,90.617,129.09,89.957,129.09z M86.365,132.682c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196 c0.661,0,1.196-0.536,1.196-1.196C87.561,133.217,87.025,132.682,86.365,132.682z M89.957,121.906 c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C91.153,122.441,90.617,121.906,89.957,121.906z M86.365,125.498c-0.661,0-1.196,0.536-1.196,1.196c0,0.66,0.535,1.196,1.196,1.196 c0.661,0,1.196-0.536,1.196-1.196C87.561,126.033,87.025,125.498,86.365,125.498z M89.957,114.722 c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C91.153,115.257,90.617,114.722,89.957,114.722z M86.365,118.314c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C87.561,118.849,87.025,118.314,86.365,118.314z M89.957,107.538 c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C91.153,108.074,90.617,107.538,89.957,107.538z M86.365,111.13c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196 c0.661,0,1.196-0.535,1.196-1.196C87.561,111.666,87.025,111.13,86.365,111.13z M89.957,100.354c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C91.153,100.89,90.617,100.354,89.957,100.354z M86.365,103.946 c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C87.561,104.482,87.025,103.946,86.365,103.946z M89.957,93.171c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196 c0.661,0,1.196-0.535,1.196-1.196C91.153,93.706,90.617,93.171,89.957,93.171z M86.365,96.762c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C87.561,97.298,87.025,96.762,86.365,96.762z M89.957,85.987 c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C91.153,86.522,90.617,85.987,89.957,85.987z M86.365,89.579c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196 c0.661,0,1.196-0.535,1.196-1.196C87.561,90.114,87.025,89.579,86.365,89.579z M89.957,78.803c-0.661,0-1.196,0.536-1.196,1.196 c0,0.66,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C91.153,79.339,90.617,78.803,89.957,78.803z M86.365,82.395 c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C87.561,82.93,87.025,82.395,86.365,82.395z M89.957,71.619c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196 c0.661,0,1.196-0.535,1.196-1.196C91.153,72.155,90.617,71.619,89.957,71.619z M93.549,70.42c0.291,0,0.548-0.117,0.755-0.289 l-1.891-0.605C92.55,70.036,92.995,70.42,93.549,70.42z M86.365,75.211c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C87.561,75.747,87.025,75.211,86.365,75.211z M86.365,68.027 c-0.661,0-1.196,0.536-1.196,1.196c0,0.66,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C87.561,68.563,87.025,68.027,86.365,68.027z M97.838,193.994l0.406,1.404c0.059-0.141,0.093-0.296,0.093-0.459 C98.337,194.545,98.133,194.212,97.838,193.994z M97.141,188.952c0.661,0,1.196-0.536,1.196-1.196c0-0.661-0.535-1.196-1.196-1.196 c-0.594,0-1.066,0.441-1.158,1.009l0.288,0.995C96.488,188.8,96.794,188.952,97.141,188.952z M97.141,179.376 c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C98.337,179.912,97.801,179.376,97.141,179.376z M94.745,176.98c0-0.661-0.535-1.196-1.196-1.196c-0.341,0-0.645,0.146-0.863,0.376 l0.565,1.957c0.098,0.026,0.192,0.06,0.298,0.06C94.209,178.177,94.745,177.641,94.745,176.98z M97.141,172.192 c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C98.337,172.728,97.801,172.192,97.141,172.192z M97.141,165.009c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C98.337,165.544,97.801,165.009,97.141,165.009z M93.549,168.6 c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C94.745,169.136,94.209,168.6,93.549,168.6z M97.141,157.825c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196 c0.661,0,1.196-0.536,1.196-1.196C98.337,158.36,97.801,157.825,97.141,157.825z M93.549,161.417c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C94.745,161.952,94.209,161.417,93.549,161.417z M97.141,150.641 c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C98.337,151.176,97.801,150.641,97.141,150.641z M93.549,154.233c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C94.745,154.768,94.209,154.233,93.549,154.233z M97.141,143.457 c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C98.337,143.993,97.801,143.457,97.141,143.457z M93.549,147.049c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C94.745,147.585,94.209,147.049,93.549,147.049z M97.141,136.273 c-0.661,0-1.196,0.536-1.196,1.196c0,0.66,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C98.337,136.809,97.801,136.273,97.141,136.273z M93.549,139.865c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C94.745,140.401,94.209,139.865,93.549,139.865z M97.141,129.09 c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C98.337,129.625,97.801,129.09,97.141,129.09z M93.549,132.682c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196 c0.661,0,1.196-0.536,1.196-1.196C94.745,133.217,94.209,132.682,93.549,132.682z M97.141,121.906 c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C98.337,122.441,97.801,121.906,97.141,121.906z M93.549,125.498c-0.661,0-1.196,0.536-1.196,1.196c0,0.66,0.535,1.196,1.196,1.196 c0.661,0,1.196-0.536,1.196-1.196C94.745,126.033,94.209,125.498,93.549,125.498z M97.141,114.722 c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C98.337,115.257,97.801,114.722,97.141,114.722z M93.549,118.314c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C94.745,118.849,94.209,118.314,93.549,118.314z M97.141,107.538 c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C98.337,108.074,97.801,107.538,97.141,107.538z M93.549,111.13c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196 c0.661,0,1.196-0.535,1.196-1.196C94.745,111.666,94.209,111.13,93.549,111.13z M97.141,100.354c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C98.337,100.89,97.801,100.354,97.141,100.354z M93.549,103.946 c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C94.745,104.482,94.209,103.946,93.549,103.946z M97.141,93.171c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196 c0.661,0,1.196-0.535,1.196-1.196C98.337,93.706,97.801,93.171,97.141,93.171z M93.549,96.762c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C94.745,97.298,94.209,96.762,93.549,96.762z M97.141,85.987 c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C98.337,86.522,97.801,85.987,97.141,85.987z M93.549,89.579c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196 c0.661,0,1.196-0.535,1.196-1.196C94.745,90.114,94.209,89.579,93.549,89.579z M97.141,78.803c-0.661,0-1.196,0.536-1.196,1.196 c0,0.66,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C98.337,79.339,97.801,78.803,97.141,78.803z M93.549,82.395 c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C94.745,82.93,94.209,82.395,93.549,82.395z M97.141,71.619c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196 c0.661,0,1.196-0.535,1.196-1.196C98.337,72.155,97.801,71.619,97.141,71.619z M93.549,75.211c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C94.745,75.747,94.209,75.211,93.549,75.211z M105.521,216.491 c0-0.661-0.535-1.196-1.196-1.196c-0.111,0-0.211,0.035-0.313,0.063l0.653,2.26C105.156,217.471,105.521,217.032,105.521,216.491z  M104.324,208.111c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C105.521,208.647,104.985,208.111,104.324,208.111z M101.929,205.716c0-0.605-0.457-1.085-1.04-1.165l0.599,2.072 C101.751,206.404,101.929,206.086,101.929,205.716z M104.324,200.928c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C105.521,201.463,104.985,200.928,104.324,200.928z  M104.324,193.744c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C105.521,194.279,104.985,193.744,104.324,193.744z M100.732,197.336c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C101.929,197.871,101.393,197.336,100.732,197.336z  M104.324,186.56c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C105.521,187.096,104.985,186.56,104.324,186.56z M100.732,190.152c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C101.929,190.687,101.393,190.152,100.732,190.152z  M104.324,179.376c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C105.521,179.912,104.985,179.376,104.324,179.376z M100.732,182.968c-0.661,0-1.196,0.536-1.196,1.196 c0,0.66,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C101.929,183.504,101.393,182.968,100.732,182.968z  M104.324,172.192c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C105.521,172.728,104.985,172.192,104.324,172.192z M100.732,175.784c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C101.929,176.32,101.393,175.784,100.732,175.784z  M104.324,165.009c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C105.521,165.544,104.985,165.009,104.324,165.009z M100.732,168.6c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C101.929,169.136,101.393,168.6,100.732,168.6z M104.324,157.825 c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C105.521,158.36,104.985,157.825,104.324,157.825z M100.732,161.417c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C101.929,161.952,101.393,161.417,100.732,161.417z  M104.324,150.641c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C105.521,151.176,104.985,150.641,104.324,150.641z M100.732,154.233c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C101.929,154.768,101.393,154.233,100.732,154.233z  M104.324,143.457c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C105.521,143.993,104.985,143.457,104.324,143.457z M100.732,147.049c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C101.929,147.585,101.393,147.049,100.732,147.049z  M104.324,136.273c-0.661,0-1.196,0.536-1.196,1.196c0,0.66,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C105.521,136.809,104.985,136.273,104.324,136.273z M100.732,139.865c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C101.929,140.401,101.393,139.865,100.732,139.865z  M104.324,129.09c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C105.521,129.625,104.985,129.09,104.324,129.09z M100.732,132.682c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C101.929,133.217,101.393,132.682,100.732,132.682z  M104.324,121.906c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C105.521,122.441,104.985,121.906,104.324,121.906z M100.732,125.498c-0.661,0-1.196,0.536-1.196,1.196 c0,0.66,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C101.929,126.033,101.393,125.498,100.732,125.498z  M104.324,114.722c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C105.521,115.257,104.985,114.722,104.324,114.722z M100.732,118.314c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C101.929,118.849,101.393,118.314,100.732,118.314z  M104.324,107.538c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C105.521,108.074,104.985,107.538,104.324,107.538z M100.732,111.13c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C101.929,111.666,101.393,111.13,100.732,111.13z  M104.324,100.354c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C105.521,100.89,104.985,100.354,104.324,100.354z M100.732,103.946c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C101.929,104.482,101.393,103.946,100.732,103.946z  M104.324,93.171c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C105.521,93.706,104.985,93.171,104.324,93.171z M100.732,96.762c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C101.929,97.298,101.393,96.762,100.732,96.762z M104.324,85.987 c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C105.521,86.522,104.985,85.987,104.324,85.987z M100.732,89.579c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C101.929,90.114,101.393,89.579,100.732,89.579z M104.324,78.803 c-0.661,0-1.196,0.536-1.196,1.196c0,0.66,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C105.521,79.339,104.985,78.803,104.324,78.803z M100.732,82.395c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C101.929,82.93,101.393,82.395,100.732,82.395z M104.324,74.011 c0.349,0,0.657-0.155,0.875-0.394l-2.041-0.653C103.235,73.551,103.716,74.011,104.324,74.011z M100.732,75.211 c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C101.929,75.747,101.393,75.211,100.732,75.211z M111.508,222.479c-0.661,0-1.196,0.535-1.196,1.196 c0,0.254,0.097,0.476,0.232,0.67l1.811-1.514C112.138,222.613,111.839,222.479,111.508,222.479z M108.37,226.163 c-0.14-0.058-0.293-0.092-0.454-0.092c-0.281,0-0.527,0.111-0.731,0.273l0.188,0.652L108.37,226.163z M111.508,215.295 c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.536,1.196-1.196 C112.704,215.831,112.169,215.295,111.508,215.295z M107.916,218.887c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C109.112,219.423,108.577,218.887,107.916,218.887z  M111.508,208.111c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.535,1.196-1.196 C112.704,208.647,112.169,208.111,111.508,208.111z M107.916,211.703c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C109.112,212.239,108.577,211.703,107.916,211.703z  M111.508,200.928c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.536,1.196-1.196 C112.704,201.463,112.169,200.928,111.508,200.928z M107.916,204.52c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C109.112,205.055,108.577,204.52,107.916,204.52z  M111.508,193.744c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.535,1.196-1.196 C112.704,194.279,112.169,193.744,111.508,193.744z M107.916,197.336c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C109.112,197.871,108.577,197.336,107.916,197.336z  M111.508,186.56c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.536,1.196-1.196 C112.704,187.096,112.169,186.56,111.508,186.56z M107.916,190.152c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C109.112,190.687,108.577,190.152,107.916,190.152z  M111.508,179.376c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.535,1.196-1.196 C112.704,179.912,112.169,179.376,111.508,179.376z M107.916,182.968c-0.661,0-1.196,0.536-1.196,1.196 c0,0.66,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C109.112,183.504,108.577,182.968,107.916,182.968z  M111.508,172.192c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.536,1.196-1.196 C112.704,172.728,112.169,172.192,111.508,172.192z M107.916,175.784c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C109.112,176.32,108.577,175.784,107.916,175.784z  M111.508,165.009c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.535,1.196-1.196 C112.704,165.544,112.169,165.009,111.508,165.009z M107.916,168.6c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C109.112,169.136,108.577,168.6,107.916,168.6z M111.508,157.825 c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.536,1.196-1.196 C112.704,158.36,112.169,157.825,111.508,157.825z M107.916,161.417c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C109.112,161.952,108.577,161.417,107.916,161.417z  M111.508,150.641c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.535,1.196-1.196 C112.704,151.176,112.169,150.641,111.508,150.641z M107.916,154.233c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C109.112,154.768,108.577,154.233,107.916,154.233z  M111.508,143.457c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.536,1.196-1.196 C112.704,143.993,112.169,143.457,111.508,143.457z M107.916,147.049c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C109.112,147.585,108.577,147.049,107.916,147.049z  M111.508,136.273c-0.661,0-1.196,0.536-1.196,1.196c0,0.66,0.536,1.196,1.196,1.196c0.66,0,1.196-0.536,1.196-1.196 C112.704,136.809,112.169,136.273,111.508,136.273z M107.916,139.865c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C109.112,140.401,108.577,139.865,107.916,139.865z  M111.508,129.09c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.536,1.196-1.196 C112.704,129.625,112.169,129.09,111.508,129.09z M107.916,132.682c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C109.112,133.217,108.577,132.682,107.916,132.682z  M111.508,121.906c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.535,1.196-1.196 C112.704,122.441,112.169,121.906,111.508,121.906z M107.916,125.498c-0.661,0-1.196,0.536-1.196,1.196 c0,0.66,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C109.112,126.033,108.577,125.498,107.916,125.498z  M111.508,114.722c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.536,1.196-1.196 C112.704,115.257,112.169,114.722,111.508,114.722z M107.916,118.314c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C109.112,118.849,108.577,118.314,107.916,118.314z  M111.508,107.538c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.535,1.196-1.196 C112.704,108.074,112.169,107.538,111.508,107.538z M107.916,111.13c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C109.112,111.666,108.577,111.13,107.916,111.13z  M111.508,100.354c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.535,1.196-1.196 C112.704,100.89,112.169,100.354,111.508,100.354z M107.916,103.946c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C109.112,104.482,108.577,103.946,107.916,103.946z  M111.508,93.171c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.535,1.196-1.196 C112.704,93.706,112.169,93.171,111.508,93.171z M107.916,96.762c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C109.112,97.298,108.577,96.762,107.916,96.762z M111.508,85.987 c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.535,1.196-1.196 C112.704,86.522,112.169,85.987,111.508,85.987z M107.916,89.579c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C109.112,90.114,108.577,89.579,107.916,89.579z M111.508,78.803 c-0.661,0-1.196,0.536-1.196,1.196c0,0.66,0.536,1.196,1.196,1.196c0.66,0,1.196-0.536,1.196-1.196 C112.704,79.339,112.169,78.803,111.508,78.803z M115.1,77.603c0.4,0,0.737-0.21,0.954-0.511l-2.15-0.688 c0,0.001-0.001,0.002-0.001,0.003C113.904,77.068,114.439,77.603,115.1,77.603z M107.916,82.395c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C109.112,82.93,108.577,82.395,107.916,82.395z M107.916,75.211 c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C109.112,75.747,108.577,75.211,107.916,75.211z M118.692,215.295c-0.661,0-1.196,0.536-1.196,1.196 c0,0.607,0.459,1.089,1.046,1.166l1.337-1.118c0.001-0.017,0.01-0.031,0.01-0.048C119.888,215.831,119.353,215.295,118.692,215.295 z M115.1,218.887c-0.661,0-1.196,0.536-1.196,1.196c0,0.42,0.23,0.772,0.558,0.986l1.739-1.454 C116.018,219.187,115.594,218.887,115.1,218.887z M118.692,208.111c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C119.888,208.647,119.353,208.111,118.692,208.111z  M115.1,211.703c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C116.296,212.239,115.761,211.703,115.1,211.703z M118.692,200.928c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C119.888,201.463,119.353,200.928,118.692,200.928z  M115.1,204.52c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C116.296,205.055,115.761,204.52,115.1,204.52z M118.692,193.744c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C119.888,194.279,119.353,193.744,118.692,193.744z  M115.1,197.336c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C116.296,197.871,115.761,197.336,115.1,197.336z M118.692,186.56c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C119.888,187.096,119.353,186.56,118.692,186.56z M115.1,190.152 c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C116.296,190.687,115.761,190.152,115.1,190.152z M118.692,179.376c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C119.888,179.912,119.353,179.376,118.692,179.376z  M115.1,182.968c-0.661,0-1.196,0.536-1.196,1.196c0,0.66,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C116.296,183.504,115.761,182.968,115.1,182.968z M118.692,172.192c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C119.888,172.728,119.353,172.192,118.692,172.192z  M115.1,175.784c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C116.296,176.32,115.761,175.784,115.1,175.784z M118.692,165.009c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C119.888,165.544,119.353,165.009,118.692,165.009z M115.1,168.6 c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C116.296,169.136,115.761,168.6,115.1,168.6z M118.692,157.825c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196 c0.661,0,1.196-0.536,1.196-1.196C119.888,158.36,119.353,157.825,118.692,157.825z M115.1,161.417 c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C116.296,161.952,115.761,161.417,115.1,161.417z M118.692,150.641c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C119.888,151.176,119.353,150.641,118.692,150.641z  M115.1,154.233c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C116.296,154.768,115.761,154.233,115.1,154.233z M118.692,143.457c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C119.888,143.993,119.353,143.457,118.692,143.457z  M115.1,147.049c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C116.296,147.585,115.761,147.049,115.1,147.049z M118.692,136.273c-0.661,0-1.196,0.536-1.196,1.196 c0,0.66,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C119.888,136.809,119.353,136.273,118.692,136.273z  M115.1,139.865c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C116.296,140.401,115.761,139.865,115.1,139.865z M118.692,129.09c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C119.888,129.625,119.353,129.09,118.692,129.09z M115.1,132.682 c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C116.296,133.217,115.761,132.682,115.1,132.682z M118.692,121.906c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C119.888,122.441,119.353,121.906,118.692,121.906z  M115.1,125.498c-0.661,0-1.196,0.536-1.196,1.196c0,0.66,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C116.296,126.033,115.761,125.498,115.1,125.498z M118.692,114.722c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C119.888,115.257,119.353,114.722,118.692,114.722z  M115.1,118.314c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C116.296,118.849,115.761,118.314,115.1,118.314z M118.692,107.538c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C119.888,108.074,119.353,107.538,118.692,107.538z  M115.1,111.13c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C116.296,111.666,115.761,111.13,115.1,111.13z M118.692,100.354c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C119.888,100.89,119.353,100.354,118.692,100.354z  M115.1,103.946c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C116.296,104.482,115.761,103.946,115.1,103.946z M118.692,93.171c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C119.888,93.706,119.353,93.171,118.692,93.171z M115.1,96.762 c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C116.296,97.298,115.761,96.762,115.1,96.762z M118.692,85.987c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196 c0.661,0,1.196-0.535,1.196-1.196C119.888,86.522,119.353,85.987,118.692,85.987z M115.1,89.579c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C116.296,90.114,115.761,89.579,115.1,89.579z M118.692,78.803 c-0.661,0-1.196,0.536-1.196,1.196c0,0.66,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C119.888,79.339,119.353,78.803,118.692,78.803z M115.1,82.395c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196 c0.661,0,1.196-0.535,1.196-1.196C116.296,82.93,115.761,82.395,115.1,82.395z M125.876,208.111c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C127.072,208.647,126.536,208.111,125.876,208.111z  M122.284,211.703c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.535,1.196-1.196 C123.48,212.239,122.944,211.703,122.284,211.703z M125.876,200.928c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C127.072,201.463,126.536,200.928,125.876,200.928z  M122.284,204.52c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.536,1.196-1.196 C123.48,205.055,122.944,204.52,122.284,204.52z M125.876,193.744c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C127.072,194.279,126.536,193.744,125.876,193.744z  M122.284,197.336c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.535,1.196-1.196 C123.48,197.871,122.944,197.336,122.284,197.336z M125.876,186.56c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C127.072,187.096,126.536,186.56,125.876,186.56z  M122.284,190.152c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.536,1.196-1.196 C123.48,190.687,122.944,190.152,122.284,190.152z M125.876,179.376c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C127.072,179.912,126.536,179.376,125.876,179.376z  M122.284,182.968c-0.661,0-1.196,0.536-1.196,1.196c0,0.66,0.536,1.196,1.196,1.196c0.66,0,1.196-0.536,1.196-1.196 C123.48,183.504,122.944,182.968,122.284,182.968z M125.876,172.192c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C127.072,172.728,126.536,172.192,125.876,172.192z  M122.284,175.784c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.536,1.196-1.196 C123.48,176.32,122.944,175.784,122.284,175.784z M125.876,165.009c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C127.072,165.544,126.536,165.009,125.876,165.009z  M122.284,168.6c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.535,1.196-1.196 C123.48,169.136,122.944,168.6,122.284,168.6z M125.876,157.825c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196 c0.661,0,1.196-0.536,1.196-1.196C127.072,158.36,126.536,157.825,125.876,157.825z M122.284,161.417 c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.536,1.196-1.196 C123.48,161.952,122.944,161.417,122.284,161.417z M125.876,150.641c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C127.072,151.176,126.536,150.641,125.876,150.641z  M122.284,154.233c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.535,1.196-1.196 C123.48,154.768,122.944,154.233,122.284,154.233z M125.876,143.457c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C127.072,143.993,126.536,143.457,125.876,143.457z  M122.284,147.049c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.536,1.196-1.196 C123.48,147.585,122.944,147.049,122.284,147.049z M125.876,136.273c-0.661,0-1.196,0.536-1.196,1.196 c0,0.66,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C127.072,136.809,126.536,136.273,125.876,136.273z  M122.284,139.865c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.535,1.196-1.196 C123.48,140.401,122.944,139.865,122.284,139.865z M125.876,129.09c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C127.072,129.625,126.536,129.09,125.876,129.09z  M122.284,132.682c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.536,1.196-1.196 C123.48,133.217,122.944,132.682,122.284,132.682z M125.876,121.906c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C127.072,122.441,126.536,121.906,125.876,121.906z  M122.284,125.498c-0.661,0-1.196,0.536-1.196,1.196c0,0.66,0.536,1.196,1.196,1.196c0.66,0,1.196-0.536,1.196-1.196 C123.48,126.033,122.944,125.498,122.284,125.498z M125.876,114.722c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C127.072,115.257,126.536,114.722,125.876,114.722z  M122.284,118.314c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.535,1.196-1.196 C123.48,118.849,122.944,118.314,122.284,118.314z M125.876,107.538c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C127.072,108.074,126.536,107.538,125.876,107.538z  M122.284,111.13c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.535,1.196-1.196 C123.48,111.666,122.944,111.13,122.284,111.13z M125.876,100.354c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C127.072,100.89,126.536,100.354,125.876,100.354z  M122.284,103.946c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.535,1.196-1.196 C123.48,104.482,122.944,103.946,122.284,103.946z M125.876,93.171c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C127.072,93.706,126.536,93.171,125.876,93.171z M122.284,96.762 c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.535,1.196-1.196 C123.48,97.298,122.944,96.762,122.284,96.762z M125.876,85.987c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196 c0.661,0,1.196-0.535,1.196-1.196C127.072,86.522,126.536,85.987,125.876,85.987z M122.284,89.579 c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.535,1.196-1.196 C123.48,90.114,122.944,89.579,122.284,89.579z M125.876,81.195c0.451,0,0.83-0.26,1.034-0.629l-2.202-0.705 c-0.006,0.047-0.028,0.089-0.028,0.137C124.68,80.66,125.215,81.195,125.876,81.195z M122.284,82.395 c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.535,1.196-1.196 C123.48,82.93,122.944,82.395,122.284,82.395z M133.06,200.928c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196 c0.66,0,1.196-0.536,1.196-1.196C134.256,201.463,133.72,200.928,133.06,200.928z M129.468,204.52 c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C130.664,205.055,130.128,204.52,129.468,204.52z M133.06,193.744c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.535,1.196-1.196C134.256,194.279,133.72,193.744,133.06,193.744z  M129.468,197.336c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C130.664,197.871,130.128,197.336,129.468,197.336z M133.06,186.56c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.536,1.196-1.196C134.256,187.096,133.72,186.56,133.06,186.56z M129.468,190.152 c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C130.664,190.687,130.128,190.152,129.468,190.152z M133.06,179.376c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.535,1.196-1.196C134.256,179.912,133.72,179.376,133.06,179.376z  M129.468,182.968c-0.661,0-1.196,0.536-1.196,1.196c0,0.66,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C130.664,183.504,130.128,182.968,129.468,182.968z M133.06,172.192c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.536,1.196-1.196C134.256,172.728,133.72,172.192,133.06,172.192z  M129.468,175.784c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C130.664,176.32,130.128,175.784,129.468,175.784z M133.06,165.009c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.535,1.196-1.196C134.256,165.544,133.72,165.009,133.06,165.009z M129.468,168.6 c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C130.664,169.136,130.128,168.6,129.468,168.6z M133.06,157.825c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196 c0.66,0,1.196-0.536,1.196-1.196C134.256,158.36,133.72,157.825,133.06,157.825z M129.468,161.417 c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C130.664,161.952,130.128,161.417,129.468,161.417z M133.06,150.641c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.535,1.196-1.196C134.256,151.176,133.72,150.641,133.06,150.641z  M129.468,154.233c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C130.664,154.768,130.128,154.233,129.468,154.233z M133.06,143.457c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.536,1.196-1.196C134.256,143.993,133.72,143.457,133.06,143.457z  M129.468,147.049c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C130.664,147.585,130.128,147.049,129.468,147.049z M133.06,136.273c-0.661,0-1.196,0.536-1.196,1.196 c0,0.66,0.536,1.196,1.196,1.196c0.66,0,1.196-0.536,1.196-1.196C134.256,136.809,133.72,136.273,133.06,136.273z M129.468,139.865 c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C130.664,140.401,130.128,139.865,129.468,139.865z M133.06,129.09c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.536,1.196-1.196C134.256,129.625,133.72,129.09,133.06,129.09z M129.468,132.682 c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C130.664,133.217,130.128,132.682,129.468,132.682z M133.06,121.906c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.535,1.196-1.196C134.256,122.441,133.72,121.906,133.06,121.906z  M129.468,125.498c-0.661,0-1.196,0.536-1.196,1.196c0,0.66,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C130.664,126.033,130.128,125.498,129.468,125.498z M133.06,114.722c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.536,1.196-1.196C134.256,115.257,133.72,114.722,133.06,114.722z  M129.468,118.314c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C130.664,118.849,130.128,118.314,129.468,118.314z M133.06,107.538c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.535,1.196-1.196C134.256,108.074,133.72,107.538,133.06,107.538z M129.468,111.13 c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C130.664,111.666,130.128,111.13,129.468,111.13z M133.06,100.354c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.535,1.196-1.196C134.256,100.89,133.72,100.354,133.06,100.354z M129.468,103.946 c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C130.664,104.482,130.128,103.946,129.468,103.946z M133.06,93.171c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.535,1.196-1.196C134.256,93.706,133.72,93.171,133.06,93.171z M129.468,96.762 c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C130.664,97.298,130.128,96.762,129.468,96.762z M133.06,85.987c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196 c0.66,0,1.196-0.535,1.196-1.196C134.256,86.522,133.72,85.987,133.06,85.987z M136.651,84.787c0.502,0,0.928-0.31,1.106-0.748 l-2.247-0.719c-0.021,0.09-0.055,0.175-0.055,0.271C135.455,84.252,135.991,84.787,136.651,84.787z M129.468,89.579 c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C130.664,90.114,130.128,89.579,129.468,89.579z M129.468,82.395c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C130.664,82.93,130.128,82.395,129.468,82.395z M140.243,193.744 c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C141.439,194.279,140.904,193.744,140.243,193.744z M136.651,197.336c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C137.848,197.871,137.312,197.336,136.651,197.336z  M140.243,186.56c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C141.439,187.096,140.904,186.56,140.243,186.56z M136.651,190.152c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C137.848,190.687,137.312,190.152,136.651,190.152z  M140.243,179.376c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C141.439,179.912,140.904,179.376,140.243,179.376z M136.651,182.968c-0.661,0-1.196,0.536-1.196,1.196 c0,0.66,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C137.848,183.504,137.312,182.968,136.651,182.968z  M140.243,172.192c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C141.439,172.728,140.904,172.192,140.243,172.192z M136.651,175.784c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C137.848,176.32,137.312,175.784,136.651,175.784z  M140.243,165.009c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C141.439,165.544,140.904,165.009,140.243,165.009z M136.651,168.6c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C137.848,169.136,137.312,168.6,136.651,168.6z M140.243,157.825 c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C141.439,158.36,140.904,157.825,140.243,157.825z M136.651,161.417c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C137.848,161.952,137.312,161.417,136.651,161.417z  M140.243,150.641c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C141.439,151.176,140.904,150.641,140.243,150.641z M136.651,154.233c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C137.848,154.768,137.312,154.233,136.651,154.233z  M140.243,143.457c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C141.439,143.993,140.904,143.457,140.243,143.457z M136.651,147.049c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C137.848,147.585,137.312,147.049,136.651,147.049z  M140.243,136.273c-0.661,0-1.196,0.536-1.196,1.196c0,0.66,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C141.439,136.809,140.904,136.273,140.243,136.273z M136.651,139.865c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C137.848,140.401,137.312,139.865,136.651,139.865z  M140.243,129.09c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C141.439,129.625,140.904,129.09,140.243,129.09z M136.651,132.682c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C137.848,133.217,137.312,132.682,136.651,132.682z  M140.243,121.906c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C141.439,122.441,140.904,121.906,140.243,121.906z M136.651,125.498c-0.661,0-1.196,0.536-1.196,1.196 c0,0.66,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C137.848,126.033,137.312,125.498,136.651,125.498z  M140.243,114.722c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C141.439,115.257,140.904,114.722,140.243,114.722z M136.651,118.314c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C137.848,118.849,137.312,118.314,136.651,118.314z  M140.243,107.538c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C141.439,108.074,140.904,107.538,140.243,107.538z M136.651,111.13c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C137.848,111.666,137.312,111.13,136.651,111.13z  M140.243,100.354c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C141.439,100.89,140.904,100.354,140.243,100.354z M136.651,103.946c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C137.848,104.482,137.312,103.946,136.651,103.946z  M140.243,93.171c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C141.439,93.706,140.904,93.171,140.243,93.171z M136.651,96.762c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C137.848,97.298,137.312,96.762,136.651,96.762z M140.243,85.987 c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C141.439,86.522,140.904,85.987,140.243,85.987z M136.651,89.579c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C137.848,90.114,137.312,89.579,136.651,89.579z  M146.403,194.359l0.643-0.538C146.768,193.915,146.546,194.107,146.403,194.359z M147.427,186.56 c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C148.623,187.096,148.088,186.56,147.427,186.56z M149.823,191.348c0,0.046,0.021,0.085,0.026,0.129l1.504-1.258 c-0.108-0.032-0.216-0.067-0.334-0.067C150.358,190.152,149.823,190.687,149.823,191.348z M143.835,190.152 c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C145.031,190.687,144.496,190.152,143.835,190.152z M147.427,179.376c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C148.623,179.912,148.088,179.376,147.427,179.376z  M143.835,182.968c-0.661,0-1.196,0.536-1.196,1.196c0,0.66,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C145.031,183.504,144.496,182.968,143.835,182.968z M147.427,172.192c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C148.623,172.728,148.088,172.192,147.427,172.192z  M143.835,175.784c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C145.031,176.32,144.496,175.784,143.835,175.784z M147.427,165.009c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C148.623,165.544,148.088,165.009,147.427,165.009z  M143.835,168.6c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C145.031,169.136,144.496,168.6,143.835,168.6z M147.427,157.825c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C148.623,158.36,148.088,157.825,147.427,157.825z  M143.835,161.417c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C145.031,161.952,144.496,161.417,143.835,161.417z M147.427,150.641c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C148.623,151.176,148.088,150.641,147.427,150.641z  M143.835,154.233c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C145.031,154.768,144.496,154.233,143.835,154.233z M147.427,143.457c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C148.623,143.993,148.088,143.457,147.427,143.457z  M143.835,147.049c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C145.031,147.585,144.496,147.049,143.835,147.049z M147.427,136.273c-0.661,0-1.196,0.536-1.196,1.196 c0,0.66,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C148.623,136.809,148.088,136.273,147.427,136.273z  M143.835,139.865c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C145.031,140.401,144.496,139.865,143.835,139.865z M147.427,129.09c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C148.623,129.625,148.088,129.09,147.427,129.09z  M143.835,132.682c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C145.031,133.217,144.496,132.682,143.835,132.682z M147.427,121.906c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C148.623,122.441,148.088,121.906,147.427,121.906z  M143.835,125.498c-0.661,0-1.196,0.536-1.196,1.196c0,0.66,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C145.031,126.033,144.496,125.498,143.835,125.498z M147.427,114.722c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C148.623,115.257,148.088,114.722,147.427,114.722z  M143.835,118.314c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C145.031,118.849,144.496,118.314,143.835,118.314z M147.427,107.538c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C148.623,108.074,148.088,107.538,147.427,107.538z  M143.835,111.13c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C145.031,111.666,144.496,111.13,143.835,111.13z M147.427,100.354c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C148.623,100.89,148.088,100.354,147.427,100.354z  M143.835,103.946c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C145.031,104.482,144.496,103.946,143.835,103.946z M147.427,93.171c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C148.623,93.706,148.088,93.171,147.427,93.171z M143.835,96.762 c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C145.031,97.298,144.496,96.762,143.835,96.762z M147.427,88.379c0.549,0,0.993-0.378,1.133-0.883l-2.247-0.719 c-0.047,0.128-0.082,0.262-0.082,0.406C146.231,87.844,146.766,88.379,147.427,88.379z M143.835,89.579 c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C145.031,90.114,144.496,89.579,143.835,89.579z M153.415,187.756c0,0.219,0.075,0.413,0.178,0.59l1.783-1.491 c-0.209-0.177-0.47-0.296-0.765-0.296C153.95,186.56,153.415,187.096,153.415,187.756z M154.611,179.376 c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C155.807,179.912,155.272,179.376,154.611,179.376z M151.019,182.968c-0.661,0-1.196,0.536-1.196,1.196 c0,0.66,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C152.215,183.504,151.68,182.968,151.019,182.968z  M154.611,172.192c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C155.807,172.728,155.272,172.192,154.611,172.192z M151.019,175.784c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C152.215,176.32,151.68,175.784,151.019,175.784z  M154.611,165.009c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C155.807,165.544,155.272,165.009,154.611,165.009z M151.019,168.6c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C152.215,169.136,151.68,168.6,151.019,168.6z M154.611,157.825 c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C155.807,158.36,155.272,157.825,154.611,157.825z M151.019,161.417c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C152.215,161.952,151.68,161.417,151.019,161.417z  M154.611,150.641c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C155.807,151.176,155.272,150.641,154.611,150.641z M151.019,154.233c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C152.215,154.768,151.68,154.233,151.019,154.233z  M154.611,143.457c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C155.807,143.993,155.272,143.457,154.611,143.457z M151.019,147.049c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C152.215,147.585,151.68,147.049,151.019,147.049z  M154.611,136.273c-0.661,0-1.196,0.536-1.196,1.196c0,0.66,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C155.807,136.809,155.272,136.273,154.611,136.273z M151.019,139.865c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C152.215,140.401,151.68,139.865,151.019,139.865z  M154.611,129.09c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C155.807,129.625,155.272,129.09,154.611,129.09z M151.019,132.682c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C152.215,133.217,151.68,132.682,151.019,132.682z  M154.611,121.906c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C155.807,122.441,155.272,121.906,154.611,121.906z M151.019,125.498c-0.661,0-1.196,0.536-1.196,1.196 c0,0.66,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C152.215,126.033,151.68,125.498,151.019,125.498z  M154.611,114.722c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C155.807,115.257,155.272,114.722,154.611,114.722z M151.019,118.314c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C152.215,118.849,151.68,118.314,151.019,118.314z  M154.611,107.538c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C155.807,108.074,155.272,107.538,154.611,107.538z M151.019,111.13c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C152.215,111.666,151.68,111.13,151.019,111.13z  M154.611,100.354c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C155.807,100.89,155.272,100.354,154.611,100.354z M151.019,103.946c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C152.215,104.482,151.68,103.946,151.019,103.946z  M154.611,93.171c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C155.807,93.706,155.272,93.171,154.611,93.171z M158.203,91.971c0.597,0,1.07-0.445,1.16-1.017l-2.218-0.71 c-0.081,0.162-0.138,0.337-0.138,0.531C157.007,91.436,157.542,91.971,158.203,91.971z M151.019,96.762 c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C152.215,97.298,151.68,96.762,151.019,96.762z M151.019,89.579c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196 c0.661,0,1.196-0.535,1.196-1.196C152.215,90.114,151.68,89.579,151.019,89.579z M161.795,179.376 c-0.661,0-1.196,0.535-1.196,1.196c0,0.565,0.399,1.016,0.926,1.142l1.452-1.214C162.937,179.875,162.43,179.376,161.795,179.376z  M158.203,182.968c-0.661,0-1.196,0.536-1.196,1.196c0,0.384,0.193,0.711,0.475,0.93l1.767-1.478 C159.049,183.236,158.662,182.968,158.203,182.968z M161.795,172.192c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C162.991,172.728,162.455,172.192,161.795,172.192z  M158.203,175.784c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C159.399,176.32,158.863,175.784,158.203,175.784z M161.795,165.009c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C162.991,165.544,162.455,165.009,161.795,165.009z  M158.203,168.6c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C159.399,169.136,158.863,168.6,158.203,168.6z M161.795,157.825c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C162.991,158.36,162.455,157.825,161.795,157.825z  M158.203,161.417c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C159.399,161.952,158.863,161.417,158.203,161.417z M161.795,150.641c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C162.991,151.176,162.455,150.641,161.795,150.641z  M158.203,154.233c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C159.399,154.768,158.863,154.233,158.203,154.233z M161.795,143.457c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C162.991,143.993,162.455,143.457,161.795,143.457z  M158.203,147.049c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C159.399,147.585,158.863,147.049,158.203,147.049z M161.795,136.273c-0.661,0-1.196,0.536-1.196,1.196 c0,0.66,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C162.991,136.809,162.455,136.273,161.795,136.273z  M158.203,139.865c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C159.399,140.401,158.863,139.865,158.203,139.865z M161.795,129.09c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C162.991,129.625,162.455,129.09,161.795,129.09z  M158.203,132.682c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C159.399,133.217,158.863,132.682,158.203,132.682z M161.795,121.906c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C162.991,122.441,162.455,121.906,161.795,121.906z  M158.203,125.498c-0.661,0-1.196,0.536-1.196,1.196c0,0.66,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C159.399,126.033,158.863,125.498,158.203,125.498z M161.795,114.722c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C162.991,115.257,162.455,114.722,161.795,114.722z  M158.203,118.314c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C159.399,118.849,158.863,118.314,158.203,118.314z M161.795,107.538c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C162.991,108.074,162.455,107.538,161.795,107.538z  M158.203,111.13c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C159.399,111.666,158.863,111.13,158.203,111.13z M161.795,100.354c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C162.991,100.89,162.455,100.354,161.795,100.354z  M158.203,103.946c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C159.399,104.482,158.863,103.946,158.203,103.946z M161.795,93.171c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C162.991,93.706,162.455,93.171,161.795,93.171z M158.203,96.762 c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C159.399,97.298,158.863,96.762,158.203,96.762z M168.979,172.192c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C170.175,172.728,169.639,172.192,168.979,172.192z  M165.387,175.784c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.198,0,0.376-0.06,0.541-0.145l0.382-0.319 c0.162-0.204,0.274-0.451,0.274-0.733C166.583,176.32,166.047,175.784,165.387,175.784z M168.979,165.009 c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C170.175,165.544,169.639,165.009,168.979,165.009z M165.387,168.6c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C166.583,169.136,166.047,168.6,165.387,168.6z M168.979,157.825 c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C170.175,158.36,169.639,157.825,168.979,157.825z M165.387,161.417c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C166.583,161.952,166.047,161.417,165.387,161.417z  M168.979,150.641c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C170.175,151.176,169.639,150.641,168.979,150.641z M165.387,154.233c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C166.583,154.768,166.047,154.233,165.387,154.233z  M168.979,143.457c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C170.175,143.993,169.639,143.457,168.979,143.457z M165.387,147.049c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C166.583,147.585,166.047,147.049,165.387,147.049z  M168.979,136.273c-0.661,0-1.196,0.536-1.196,1.196c0,0.66,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C170.175,136.809,169.639,136.273,168.979,136.273z M165.387,139.865c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C166.583,140.401,166.047,139.865,165.387,139.865z  M168.979,129.09c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C170.175,129.625,169.639,129.09,168.979,129.09z M165.387,132.682c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C166.583,133.217,166.047,132.682,165.387,132.682z  M168.979,121.906c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C170.175,122.441,169.639,121.906,168.979,121.906z M165.387,125.498c-0.661,0-1.196,0.536-1.196,1.196 c0,0.66,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C166.583,126.033,166.047,125.498,165.387,125.498z  M168.979,114.722c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C170.175,115.257,169.639,114.722,168.979,114.722z M165.387,118.314c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C166.583,118.849,166.047,118.314,165.387,118.314z  M168.979,107.538c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C170.175,108.074,169.639,107.538,168.979,107.538z M165.387,111.13c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C166.583,111.666,166.047,111.13,165.387,111.13z  M168.979,100.354c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C170.175,100.89,169.639,100.354,168.979,100.354z M165.387,103.946c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C166.583,104.482,166.047,103.946,165.387,103.946z  M168.979,95.563c0.644,0,1.162-0.512,1.187-1.151l-2.166-0.693c-0.126,0.189-0.217,0.404-0.217,0.648 C167.782,95.027,168.318,95.563,168.979,95.563z M165.387,96.762c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C166.583,97.298,166.047,96.762,165.387,96.762z  M176.162,165.009c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C177.358,165.544,176.823,165.009,176.162,165.009z M172.57,168.6c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C173.767,169.136,173.231,168.6,172.57,168.6z M176.162,157.825 c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C177.358,158.36,176.823,157.825,176.162,157.825z M172.57,161.417c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C173.767,161.952,173.231,161.417,172.57,161.417z  M176.162,150.641c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C177.358,151.176,176.823,150.641,176.162,150.641z M172.57,154.233c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C173.767,154.768,173.231,154.233,172.57,154.233z  M176.162,143.457c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C177.358,143.993,176.823,143.457,176.162,143.457z M172.57,147.049c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C173.767,147.585,173.231,147.049,172.57,147.049z  M176.162,136.273c-0.661,0-1.196,0.536-1.196,1.196c0,0.66,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C177.358,136.809,176.823,136.273,176.162,136.273z M172.57,139.865c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C173.767,140.401,173.231,139.865,172.57,139.865z  M176.162,129.09c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C177.358,129.625,176.823,129.09,176.162,129.09z M172.57,132.682c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C173.767,133.217,173.231,132.682,172.57,132.682z  M176.162,121.906c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C177.358,122.441,176.823,121.906,176.162,121.906z M172.57,125.498c-0.661,0-1.196,0.536-1.196,1.196 c0,0.66,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C173.767,126.033,173.231,125.498,172.57,125.498z  M176.162,114.722c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C177.358,115.257,176.823,114.722,176.162,114.722z M172.57,118.314c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C173.767,118.849,173.231,118.314,172.57,118.314z  M176.162,107.538c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C177.358,108.074,176.823,107.538,176.162,107.538z M172.57,111.13c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C173.767,111.666,173.231,111.13,172.57,111.13z  M176.162,100.354c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C177.358,100.89,176.823,100.354,176.162,100.354z M179.754,99.155c0.66,0,1.196-0.535,1.196-1.196c0-0.036-0.017-0.066-0.02-0.101 l-2.076-0.664c-0.178,0.209-0.296,0.47-0.296,0.766C178.558,98.619,179.094,99.155,179.754,99.155z M172.57,103.946 c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C173.767,104.482,173.231,103.946,172.57,103.946z M172.57,96.762c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C173.767,97.298,173.231,96.762,172.57,96.762z M183.346,157.825 c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C184.542,158.36,184.007,157.825,183.346,157.825z M179.754,161.417c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.536,1.196-1.196C180.95,161.952,180.415,161.417,179.754,161.417z  M183.346,150.641c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C184.542,151.176,184.007,150.641,183.346,150.641z M179.754,154.233c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.535,1.196-1.196C180.95,154.768,180.415,154.233,179.754,154.233z  M183.346,143.457c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C184.542,143.993,184.007,143.457,183.346,143.457z M179.754,147.049c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.536,1.196-1.196C180.95,147.585,180.415,147.049,179.754,147.049z  M183.346,136.273c-0.661,0-1.196,0.536-1.196,1.196c0,0.66,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C184.542,136.809,184.007,136.273,183.346,136.273z M179.754,139.865c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.535,1.196-1.196C180.95,140.401,180.415,139.865,179.754,139.865z  M183.346,129.09c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C184.542,129.625,184.007,129.09,183.346,129.09z M179.754,132.682c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.536,1.196-1.196C180.95,133.217,180.415,132.682,179.754,132.682z  M183.346,121.906c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C184.542,122.441,184.007,121.906,183.346,121.906z M179.754,125.498c-0.661,0-1.196,0.536-1.196,1.196 c0,0.66,0.536,1.196,1.196,1.196c0.66,0,1.196-0.536,1.196-1.196C180.95,126.033,180.415,125.498,179.754,125.498z  M183.346,114.722c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C184.542,115.257,184.007,114.722,183.346,114.722z M179.754,118.314c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.535,1.196-1.196C180.95,118.849,180.415,118.314,179.754,118.314z  M183.346,107.538c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C184.542,108.074,184.007,107.538,183.346,107.538z M179.754,111.13c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.535,1.196-1.196C180.95,111.666,180.415,111.13,179.754,111.13z M183.346,100.354 c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C184.542,100.89,184.007,100.354,183.346,100.354z M179.754,103.946c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.535,1.196-1.196C180.95,104.482,180.415,103.946,179.754,103.946z  M190.53,150.641c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C191.726,151.176,191.191,150.641,190.53,150.641z M192.926,155.429c0,0.008,0.004,0.015,0.005,0.023l1.406-1.176 c-0.072-0.014-0.138-0.043-0.214-0.043C193.461,154.233,192.926,154.768,192.926,155.429z M186.938,154.233 c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C188.134,154.768,187.599,154.233,186.938,154.233z M190.53,143.457c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C191.726,143.993,191.191,143.457,190.53,143.457z  M186.938,147.049c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C188.134,147.585,187.599,147.049,186.938,147.049z M190.53,136.273c-0.661,0-1.196,0.536-1.196,1.196 c0,0.66,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C191.726,136.809,191.191,136.273,190.53,136.273z  M186.938,139.865c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C188.134,140.401,187.599,139.865,186.938,139.865z M190.53,129.09c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C191.726,129.625,191.191,129.09,190.53,129.09z  M186.938,132.682c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C188.134,133.217,187.599,132.682,186.938,132.682z M190.53,121.906c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C191.726,122.441,191.191,121.906,190.53,121.906z  M186.938,125.498c-0.661,0-1.196,0.536-1.196,1.196c0,0.66,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C188.134,126.033,187.599,125.498,186.938,125.498z M190.53,114.722c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C191.726,115.257,191.191,114.722,190.53,114.722z  M186.938,118.314c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C188.134,118.849,187.599,118.314,186.938,118.314z M190.53,107.538c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C191.726,108.074,191.191,107.538,190.53,107.538z  M186.938,111.13c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C188.134,111.666,187.599,111.13,186.938,111.13z M189.334,101.551c0,0.661,0.535,1.196,1.196,1.196 c0.661,0,1.196-0.535,1.196-1.196c0-0.09-0.032-0.169-0.051-0.254l-1.945-0.623C189.49,100.893,189.334,101.201,189.334,101.551z  M186.938,103.946c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C188.134,104.482,187.599,103.946,186.938,103.946z M196.518,151.837c0,0.185,0.049,0.355,0.124,0.511l1.754-1.467 c-0.196-0.14-0.423-0.24-0.682-0.24C197.053,150.641,196.518,151.176,196.518,151.837z M197.714,143.457 c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C198.91,143.993,198.374,143.457,197.714,143.457z M194.122,147.049c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C195.318,147.585,194.783,147.049,194.122,147.049z  M197.714,136.273c-0.661,0-1.196,0.536-1.196,1.196c0,0.66,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C198.91,136.809,198.374,136.273,197.714,136.273z M194.122,139.865c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C195.318,140.401,194.783,139.865,194.122,139.865z  M197.714,129.09c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C198.91,129.625,198.374,129.09,197.714,129.09z M194.122,132.682c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C195.318,133.217,194.783,132.682,194.122,132.682z  M197.714,121.906c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C198.91,122.441,198.374,121.906,197.714,121.906z M194.122,125.498c-0.661,0-1.196,0.536-1.196,1.196 c0,0.66,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C195.318,126.033,194.783,125.498,194.122,125.498z  M197.714,114.722c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C198.91,115.257,198.374,114.722,197.714,114.722z M194.122,118.314c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C195.318,118.849,194.783,118.314,194.122,118.314z  M197.714,107.538c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C198.91,108.074,198.374,107.538,197.714,107.538z M194.122,111.13c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C195.318,111.666,194.783,111.13,194.122,111.13z  M200.109,105.142c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196c0-0.144-0.035-0.278-0.082-0.406l-1.771-0.567 C200.331,104.384,200.109,104.73,200.109,105.142z M194.122,103.946c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C195.318,104.482,194.783,103.946,194.122,103.946z  M204.897,143.457c-0.661,0-1.196,0.536-1.196,1.196c0,0.522,0.339,0.954,0.806,1.117l1.551-1.297 C205.968,143.902,205.495,143.457,204.897,143.457z M201.306,147.049c-0.661,0-1.196,0.535-1.196,1.196 c0,0.349,0.155,0.656,0.393,0.874l1.796-1.502C202.086,147.283,201.731,147.049,201.306,147.049z M204.897,136.273 c-0.661,0-1.196,0.536-1.196,1.196c0,0.66,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C206.094,136.809,205.558,136.273,204.897,136.273z M201.306,139.865c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C202.502,140.401,201.966,139.865,201.306,139.865z  M204.897,129.09c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C206.094,129.625,205.558,129.09,204.897,129.09z M201.306,132.682c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C202.502,133.217,201.966,132.682,201.306,132.682z  M204.897,121.906c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C206.094,122.441,205.558,121.906,204.897,121.906z M201.306,125.498c-0.661,0-1.196,0.536-1.196,1.196 c0,0.66,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C202.502,126.033,201.966,125.498,201.306,125.498z  M204.897,114.722c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C206.094,115.257,205.558,114.722,204.897,114.722z M201.306,118.314c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C202.502,118.849,201.966,118.314,201.306,118.314z  M204.897,107.538c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C206.094,108.074,205.558,107.538,204.897,107.538z M201.306,111.13c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C202.502,111.666,201.966,111.13,201.306,111.13z  M212.081,136.273c-0.661,0-1.196,0.536-1.196,1.196c0,0.66,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C213.277,136.809,212.742,136.273,212.081,136.273z M208.489,139.865c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.102,0,0.194-0.034,0.288-0.058l0.816-0.682c0.058-0.141,0.092-0.294,0.092-0.456 C209.686,140.401,209.15,139.865,208.489,139.865z M212.081,129.09c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C213.277,129.625,212.742,129.09,212.081,129.09z  M208.489,132.682c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C209.686,133.217,209.15,132.682,208.489,132.682z M212.081,121.906c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C213.277,122.441,212.742,121.906,212.081,121.906z  M208.489,125.498c-0.661,0-1.196,0.536-1.196,1.196c0,0.66,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C209.686,126.033,209.15,125.498,208.489,125.498z M212.081,114.722c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C213.277,115.257,212.742,114.722,212.081,114.722z  M208.489,118.314c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C209.686,118.849,209.15,118.314,208.489,118.314z M210.885,108.734c0,0.661,0.536,1.196,1.196,1.196 c0.661,0,1.196-0.535,1.196-1.196c0-0.214-0.071-0.403-0.169-0.577l-1.54-0.493C211.167,107.857,210.885,108.259,210.885,108.734z  M208.489,111.13c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C209.686,111.666,209.15,111.13,208.489,111.13z M219.265,129.09c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C220.461,129.625,219.926,129.09,219.265,129.09z  M215.673,132.682c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C216.869,133.217,216.334,132.682,215.673,132.682z M219.265,121.906c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196C220.461,122.441,219.926,121.906,219.265,121.906z  M215.673,125.498c-0.661,0-1.196,0.536-1.196,1.196c0,0.66,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C216.869,126.033,216.334,125.498,215.673,125.498z M219.265,114.722c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196C220.461,115.257,219.926,114.722,219.265,114.722z  M215.673,118.314c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C216.869,118.849,216.334,118.314,215.673,118.314z M221.661,112.326c0,0.661,0.536,1.196,1.196,1.196 c0.661,0,1.196-0.535,1.196-1.196c0-0.293-0.117-0.551-0.292-0.759l-1.187-0.38C222.054,111.317,221.661,111.766,221.661,112.326z  M215.673,111.13c-0.661,0-1.196,0.536-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C216.869,111.666,216.334,111.13,215.673,111.13z M226.449,121.906c-0.661,0-1.196,0.535-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.535,1.196-1.196C227.645,122.441,227.109,121.906,226.449,121.906z  M222.857,125.498c-0.661,0-1.196,0.536-1.196,1.196c0,0.66,0.536,1.196,1.196,1.196c0.661,0,1.196-0.536,1.196-1.196 C224.053,126.033,223.518,125.498,222.857,125.498z M226.449,114.722c-0.661,0-1.196,0.536-1.196,1.196 c0,0.661,0.536,1.196,1.196,1.196c0.66,0,1.196-0.536,1.196-1.196C227.645,115.257,227.109,114.722,226.449,114.722z  M228.845,119.51c0,0.661,0.535,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196c0-0.661-0.536-1.196-1.196-1.196 C229.38,118.314,228.845,118.849,228.845,119.51z M229.574,113.427c0.002,0.001,0.004,0.001,0.006,0.002L229.574,113.427z  M222.857,118.314c-0.661,0-1.196,0.535-1.196,1.196c0,0.661,0.536,1.196,1.196,1.196c0.661,0,1.196-0.535,1.196-1.196 C224.053,118.849,223.518,118.314,222.857,118.314z M232.437,115.918c0,0.661,0.535,1.196,1.196,1.196 c0.661,0,1.196-0.536,1.196-1.196c0-0.422-0.231-0.776-0.562-0.988l-0.643-0.206C232.967,114.729,232.437,115.261,232.437,115.918z  M236.052,119.392l1.267-1.059c-0.033-0.003-0.061-0.019-0.094-0.019C236.606,118.314,236.114,118.79,236.052,119.392z\"})),/*#__PURE__*/React.createElement(\"g\",{id:\"Sun\"},/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"ellipse\",{transform:\"matrix(0.0992 -0.9951 0.9951 0.0992 206.5183 670.5502)\",style:{opacity:0.2,fill:\"#FFC727\"},cx:473.615,cy:221.212,rx:33.279,ry:33.279}),/*#__PURE__*/React.createElement(\"ellipse\",{transform:\"matrix(0.2325 -0.9726 0.9726 0.2325 148.3585 630.4231)\",style:{opacity:0.2,fill:\"#FFC727\"},cx:473.615,cy:221.212,rx:27.424,ry:27.424}),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"ellipse\",{transform:\"matrix(0.1554 -0.9878 0.9878 0.1554 181.4791 654.6888)\",style:{fill:\"#FFC727\"},cx:473.615,cy:221.212,rx:24.095,ry:24.095}),/*#__PURE__*/React.createElement(\"ellipse\",{transform:\"matrix(0.1554 -0.9878 0.9878 0.1554 181.4791 654.6888)\",style:{opacity:0.4,fill:\"#FFFFFF\"},cx:473.615,cy:221.212,rx:24.095,ry:24.095})))),/*#__PURE__*/React.createElement(\"g\",{id:\"Pyramids_of_Giza\"},/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"polygon\",{style:{fill:\"#FFC727\"},points:\"690.986,383.41 447.426,383.41 569.247,238.957  \"})),/*#__PURE__*/React.createElement(\"polygon\",{style:{opacity:0.1},points:\"515.225,383.41 447.426,383.41 569.247,238.957  \"}),/*#__PURE__*/React.createElement(\"polygon\",{style:{opacity:0.1,fill:\"#FFFFFF\"},points:\"515.225,383.41 569.247,238.957 690.986,383.41  \"}),/*#__PURE__*/React.createElement(\"g\",{style:{opacity:0.1}},_polygon||(_polygon=/*#__PURE__*/React.createElement(\"polygon\",{points:\"683.657,374.734 629.896,372.366 629.896,371.483 680.935,371.483  \"})),_polygon2||(_polygon2=/*#__PURE__*/React.createElement(\"polygon\",{points:\"671.188,359.918 467.233,359.918 467.982,359.035 670.439,359.035  \"})),_polygon3||(_polygon3=/*#__PURE__*/React.createElement(\"polygon\",{points:\"660.692,347.461 610.374,347.461 610.374,346.577 659.943,346.577  \"})),_rect||(_rect=/*#__PURE__*/React.createElement(\"rect\",{x:481.061,y:371.464,width:114.426,height:0.883})),_polygon4||(_polygon4=/*#__PURE__*/React.createElement(\"polygon\",{points:\"650.462,334.12 650.462,335.004 488.244,335.004 488.993,334.12  \"})),_polygon5||(_polygon5=/*#__PURE__*/React.createElement(\"polygon\",{points:\"639.691,322.547 511.909,322.547 511.909,321.663 638.942,321.663  \"})),_polygon6||(_polygon6=/*#__PURE__*/React.createElement(\"polygon\",{points:\"629.195,310.098 509.255,310.098 512.185,306.598 628.455,309.215  \"})),_polygon7||(_polygon7=/*#__PURE__*/React.createElement(\"polygon\",{points:\"618.699,297.641 555.922,297.641 555.922,296.758 617.959,296.758  \"})),_polygon8||(_polygon8=/*#__PURE__*/React.createElement(\"polygon\",{points:\"577.853,346.622 577.853,347.505 475.036,350.699 478.449,346.622  \"})),_polygon9||(_polygon9=/*#__PURE__*/React.createElement(\"polygon\",{points:\"608.203,285.184 530.266,285.184 531.005,284.301 607.454,284.301  \"})),_polygon10||(_polygon10=/*#__PURE__*/React.createElement(\"polygon\",{points:\"587.211,260.279 551.267,260.279 552.006,259.395 586.462,259.395  \"})),_polygon11||(_polygon11=/*#__PURE__*/React.createElement(\"polygon\",{points:\"597.697,272.727 578.422,272.727 578.422,271.843 595.485,270.084  \"})),_polygon12||(_polygon12=/*#__PURE__*/React.createElement(\"polygon\",{points:\"576.715,247.821 561.772,247.821 562.512,246.938 575.966,246.938  \"}))),/*#__PURE__*/React.createElement(\"path\",{style:{opacity:0.05},d:\"M578.891,250.598c0,0,86.808,99.877,52.654,116.344c-34.154,16.467-116.32,16.467-116.32,16.467 h175.76L578.891,250.598z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"polygon\",{style:{fill:\"#FFC727\"},points:\"541.563,383.41 160.978,383.41 351.337,157.706  \"})),/*#__PURE__*/React.createElement(\"polygon\",{style:{opacity:0.1},points:\"351.331,157.704 160.978,383.41 267.597,383.41  \"}),/*#__PURE__*/React.createElement(\"polygon\",{style:{opacity:0.1,fill:\"#FFFFFF\"},points:\"267.597,383.41 351.331,157.704 541.563,383.41  \"})),/*#__PURE__*/React.createElement(\"g\",{style:{opacity:0.1}},_polygon13||(_polygon13=/*#__PURE__*/React.createElement(\"polygon\",{points:\"414.597,371.483 414.597,372.366 170.289,372.366 171.038,371.483  \"})),_polygon14||(_polygon14=/*#__PURE__*/React.createElement(\"polygon\",{points:\"322.456,359.035 322.456,359.918 180.794,359.918 181.534,359.035  \"})),_polygon15||(_polygon15=/*#__PURE__*/React.createElement(\"polygon\",{points:\"521.766,359.918 349.042,359.918 349.042,359.035 521.017,359.035  \"})),_rect2||(_rect2=/*#__PURE__*/React.createElement(\"rect\",{x:319.693,y:346.576,width:114.426,height:0.883})),_polygon16||(_polygon16=/*#__PURE__*/React.createElement(\"polygon\",{points:\"532.243,372.349 449.005,372.349 449.005,371.465 528.943,368.444  \"})),_polygon17||(_polygon17=/*#__PURE__*/React.createElement(\"polygon\",{points:\"500.764,335.004 394.022,335.004 394.022,334.12 500.025,334.12  \"})),_polygon18||(_polygon18=/*#__PURE__*/React.createElement(\"polygon\",{points:\"360.335,334.12 360.335,335.004 201.805,335.004 202.545,334.12  \"})),_polygon19||(_polygon19=/*#__PURE__*/React.createElement(\"polygon\",{points:\"253.782,321.663 253.782,322.547 212.311,322.547 213.809,320.771  \"})),_polygon20||(_polygon20=/*#__PURE__*/React.createElement(\"polygon\",{points:\"490.268,322.547 289.091,322.547 289.091,321.663 489.519,321.663  \"})),_polygon21||(_polygon21=/*#__PURE__*/React.createElement(\"polygon\",{points:\"479.772,310.098 407.856,310.098 407.856,309.215 479.033,309.215  \"})),_rect3||(_rect3=/*#__PURE__*/React.createElement(\"rect\",{x:263.09,y:309.211,width:92.585,height:0.883})),_rect4||(_rect4=/*#__PURE__*/React.createElement(\"rect\",{x:251.678,y:296.756,width:198.962,height:0.883})),_polygon22||(_polygon22=/*#__PURE__*/React.createElement(\"polygon\",{points:\"511.298,347.505 466.641,347.505 466.641,346.622 510.559,346.622  \"})),_polygon23||(_polygon23=/*#__PURE__*/React.createElement(\"polygon\",{points:\"348.654,284.301 348.654,285.184 243.817,285.184 248.987,279.086  \"})),_polygon24||(_polygon24=/*#__PURE__*/React.createElement(\"polygon\",{points:\"458.78,285.184 375.315,285.184 375.315,284.301 458.031,284.301  \"})),_rect5||(_rect5=/*#__PURE__*/React.createElement(\"rect\",{x:283.264,y:271.847,width:121.291,height:0.883})),_polygon25||(_polygon25=/*#__PURE__*/React.createElement(\"polygon\",{points:\"295.482,259.395 295.482,260.279 264.828,260.279 265.568,259.395  \"})),_polygon26||(_polygon26=/*#__PURE__*/React.createElement(\"polygon\",{points:\"437.789,260.279 376.908,260.279 376.908,259.395 434.704,256.64  \"})),_polygon27||(_polygon27=/*#__PURE__*/React.createElement(\"polygon\",{points:\"355.675,260.276 316.5,260.276 316.5,259.392 341.508,259.392 355.675,259.392  \"})),_polygon28||(_polygon28=/*#__PURE__*/React.createElement(\"polygon\",{points:\"448.275,272.727 426.894,272.727 426.894,271.843 446.976,271.181  \"})),_rect6||(_rect6=/*#__PURE__*/React.createElement(\"rect\",{x:251.678,y:346.576,width:39.174,height:0.883})),_polygon29||(_polygon29=/*#__PURE__*/React.createElement(\"polygon\",{points:\"427.283,247.821 325.974,247.821 325.974,246.938 426.544,246.938  \"})),_rect7||(_rect7=/*#__PURE__*/React.createElement(\"rect\",{x:305.311,y:234.482,width:106.505,height:0.883})),_polygon30||(_polygon30=/*#__PURE__*/React.createElement(\"polygon\",{points:\"371.987,222.024 371.987,222.907 296.344,222.907 297.767,221.228  \"})),_polygon31||(_polygon31=/*#__PURE__*/React.createElement(\"polygon\",{points:\"406.291,222.907 400.176,222.907 400.176,222.024 405.542,222.024  \"})),_rect8||(_rect8=/*#__PURE__*/React.createElement(\"rect\",{x:346.437,y:209.573,width:47.59,height:0.883})),_polygon32||(_polygon32=/*#__PURE__*/React.createElement(\"polygon\",{points:\"332.677,197.118 332.677,198.002 317.355,198.002 318.095,197.118  \"})),_polygon33||(_polygon33=/*#__PURE__*/React.createElement(\"polygon\",{points:\"385.299,198.002 360.335,198.002 360.335,197.118 383.669,196.058  \"})),_polygon34||(_polygon34=/*#__PURE__*/React.createElement(\"polygon\",{points:\"371.987,184.661 371.987,185.544 327.861,185.544 328.6,184.661  \"})),_polygon35||(_polygon35=/*#__PURE__*/React.createElement(\"polygon\",{points:\"364.307,173.096 338.357,173.096 339.106,172.213 363.568,172.213  \"}))),/*#__PURE__*/React.createElement(\"path\",{style:{opacity:0.05},d:\"M401.024,216.897c0,0,108.836,125.222,66.015,145.868 c-42.821,20.646-145.837,20.646-145.837,20.646h220.361L401.024,216.897z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"polygon\",{style:{fill:\"#FFC727\"},points:\"302.574,383.41 59.014,383.41 180.835,238.957  \"})),/*#__PURE__*/React.createElement(\"polygon\",{style:{opacity:0.1},points:\"126.814,383.41 59.014,383.41 180.835,238.957  \"}),/*#__PURE__*/React.createElement(\"polygon\",{style:{opacity:0.1,fill:\"#FFFFFF\"},points:\"126.814,383.41 180.835,238.957 302.574,383.41  \"}),/*#__PURE__*/React.createElement(\"path\",{style:{opacity:0.1,fill:\"#030402\"},d:\"M188.303,247.821h-14.943l0.74-0.883h13.454L188.303,247.821z M198.05,259.395 h-34.456l-0.74,0.884h35.944L198.05,259.395z M208.546,271.843h-55.447l-0.74,0.883h56.927L208.546,271.843z M217.782,282.814 l-11.843,1.487v0.883h13.852L217.782,282.814z M184.919,284.302h-39.174v0.884h39.174V284.302z M79.57,359.035l-0.749,0.883 h21.03v-0.883H79.57z M229.548,296.758h-97.46l-0.74,0.883h98.939L229.548,296.758z M123.137,307.357l-2.294,2.741h75.264v-0.883 L123.137,307.357z M261.074,334.173h-85.817v0.883h86.566L261.074,334.173z M240.044,309.215h-13.141v0.883h13.881 L240.044,309.215z M250.53,321.663H129.433v0.884h121.846L250.53,321.663z M154.983,334.12h-47.59v0.884h47.59V334.12z  M271.532,346.577H168.743v0.884l104.501,1.137L271.532,346.577z M90.076,346.577l-0.749,0.884h51.759v-0.884H90.076z  M282.028,359.035H129.433v0.883h153.343L282.028,359.035z M292.523,371.483l-221.815-1.928l-2.383,2.811h224.938 L292.523,371.483z\"}),/*#__PURE__*/React.createElement(\"path\",{style:{opacity:0.05},d:\"M190.48,250.598c0,0,86.808,99.877,52.654,116.344c-34.154,16.467-116.32,16.467-116.32,16.467 h175.76L190.48,250.598z\"})))),/*#__PURE__*/React.createElement(\"g\",{id:\"Floor\"},/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{fill:\"#FFFFFF\"},d:\"M475.502,383.41c-12.491,0-69.571-4.898-81.626-4.898c-12.055,0-32.233,2.24-44.558,2.24 c-12.325,0-60.025-0.91-68.59-0.91c-8.566,0-20.03,3.991-34.701,3.568c-17.176-0.495-33.089-7.478-53.803-7.478 c-20.714,0-40,5.905-50.037,5.905c-10.038,0-43.376-3.215-51.761-3.215s-27.977,4.92-39.314,4.92\"}),/*#__PURE__*/React.createElement(\"path\",{style:{fill:\"#263238\"},d:\"M475.502,383.41c-25.483-0.691-54.335-3.607-79.789-4.572c-17.754-0.111-35.449,2.844-53.22,2.196 c-13.311-0.155-39.987-0.468-53.287-0.623c0,0-6.661-0.078-6.661-0.078c-6.687-0.226-13.13,1.483-19.734,2.401 c-8.805,1.374-17.858,1.645-26.675,0.215c-13.19-2.048-25.993-5.947-39.359-6.499c-13.317-0.645-26.527,1.509-39.614,3.822 c-6.546,1.16-13.237,2.284-19.918,1.719c-11.091-0.593-22.157-1.577-33.228-2.385c-4.426-0.324-8.858-0.687-13.285-0.794 c-4.418,0.02-8.819,0.795-13.201,1.452c-8.767,1.339-17.527,3.144-26.422,3.279c8.894-0.217,17.627-2.1,26.382-3.52 c4.383-0.698,8.768-1.515,13.243-1.578c4.455,0.066,8.884,0.389,13.317,0.673c11.077,0.758,22.136,1.718,33.222,2.272 c6.675,0.538,13.214-0.592,19.775-1.773c13.094-2.358,26.393-4.565,39.766-3.957c13.373,0.504,26.337,4.386,39.455,6.382 c8.76,1.391,17.651,1.084,26.394-0.294c6.559-0.893,13.195-2.604,19.881-2.349l6.661,0.099c13.252,0.197,40.03,0.593,53.286,0.79 c17.786,0.702,35.452-2.198,53.233-2.029C421.223,379.245,449.999,382.494,475.502,383.41L475.502,383.41z\"})),/*#__PURE__*/React.createElement(\"polyline\",{style:{fill:\"#FFFFFF\"},points:\"51.111,383.543 51.111,392.617 475.502,392.617 475.502,383.41  \"}),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{fill:\"#FFFFFF\"},d:\"M428.511,385.213c20.776-2.75,46.658-11.109,59.069-11.109c31.618,0,56.974,9.307,72.295,9.307 c15.321,0,66.207-2.872,79.006-2.872c12.799,0,42.704,3.005,60.008,3.005\"}),/*#__PURE__*/React.createElement(\"path\",{style:{fill:\"#263238\"},d:\"M428.511,385.213c11.202-1.84,22.218-4.534,33.262-7.148c11.025-2.711,22.303-5.17,33.738-4.145 c11.366,0.536,22.634,2.243,33.78,4.386c11.12,1.954,22.2,5.128,33.565,4.77c25.515-0.512,51.012-2.368,76.545-2.711 c8.516,0.139,17.006,0.857,25.499,1.419c11.319,0.767,22.64,1.646,33.99,1.76c-11.35-0.045-22.68-0.856-34.003-1.555 c-8.49-0.51-16.982-1.177-25.487-1.264c-25.526,0.526-51.002,2.402-76.534,2.962c-5.696,0.263-11.399-0.535-16.978-1.521 c-16.706-3.11-33.39-6.81-50.413-7.488c-11.389-1.204-22.425,1.926-33.516,4.2C450.884,381.295,439.813,383.996,428.511,385.213 L428.511,385.213z\"})))),/*#__PURE__*/React.createElement(\"g\",{id:\"Camels\"},/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{fill:\"#FFC727\"},d:\"M147.315,383.686c-0.46,0.473-2.487,3.073-2.584,3.512c-0.097,0.439-0.206,3.115-0.261,3.333 c-0.055,0.219-2.247,4.115-2.247,4.115s-1.47,1.96-1.692,2.293c-0.771,1.16-0.741,3.702-0.741,3.702l0.57-1.971 c0,0-0.501,2.101-0.482,2.647c0.018,0.546,0.052,1.813,0.052,1.813l0.885-2.858l-0.824,3.514c0,0,1.173-1.476,1.383-1.858 c0.211-0.382,0.848-2.349,0.848-2.349s-0.42,1.511-0.466,1.631c-0.046,0.12-0.437,1.136-0.437,1.136s1.435-2.221,1.883-3.259 c0.447-1.038,0.083-3.696,0.083-3.696s2.263-3.714,2.424-4.206c0.161-0.492,0.183-3.004,0.218-3.332 c0.034-0.328,1.386-2.112,1.386-2.112V383.686z\"}),/*#__PURE__*/React.createElement(\"path\",{style:{opacity:0.7},d:\"M147.315,383.686c-0.46,0.473-2.487,3.073-2.584,3.512c-0.097,0.439-0.206,3.115-0.261,3.333 c-0.055,0.219-2.247,4.115-2.247,4.115s-1.47,1.96-1.692,2.293c-0.771,1.16-0.741,3.702-0.741,3.702l0.57-1.971 c0,0-0.501,2.101-0.482,2.647c0.018,0.546,0.052,1.813,0.052,1.813l0.885-2.858l-0.824,3.514c0,0,1.173-1.476,1.383-1.858 c0.211-0.382,0.848-2.349,0.848-2.349s-0.42,1.511-0.466,1.631c-0.046,0.12-0.437,1.136-0.437,1.136s1.435-2.221,1.883-3.259 c0.447-1.038,0.083-3.696,0.083-3.696s2.263-3.714,2.424-4.206c0.161-0.492,0.183-3.004,0.218-3.332 c0.034-0.328,1.386-2.112,1.386-2.112V383.686z\"}),/*#__PURE__*/React.createElement(\"path\",{style:{opacity:0.2},d:\"M147.315,383.685v2.059c0,0-0.67,0.885-1.08,1.522l-0.298-1.875 C146.498,384.651,147.091,383.915,147.315,383.685z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{fill:\"#FFC727\"},d:\"M154.902,397.303c0,0,2.632,8.149,2.699,9.099c0.068,0.95-0.563,8.087-0.466,8.378 c0.097,0.291,1.913,1.359,1.913,1.359s4.004,4.952,4.59,6.117c0.585,1.165,3.11,5.583,3.498,5.971 c0.388,0.388,1.565,0.777,1.565,0.777s-0.73,0.922-0.978,1.359c-0.248,0.437-0.383,1.699-0.383,1.699h7.563 c0,0-0.218-0.898-0.558-1.311c-0.34-0.413-3.059-1.432-3.059-1.432s-0.413-0.413-0.413-0.85c0-0.437-5.318-7.962-6.057-9.224 c-0.739-1.262-2.536-3.69-2.633-4.078c-0.097-0.388,0.437-11.271,0.583-11.923c0.146-0.652,2.978-5.943,2.978-5.943H154.902z\"}),/*#__PURE__*/React.createElement(\"path\",{style:{opacity:0.8},d:\"M154.902,397.303c0,0,2.632,8.149,2.699,9.099c0.068,0.95-0.563,8.087-0.466,8.378 c0.097,0.291,1.913,1.359,1.913,1.359s4.004,4.952,4.59,6.117c0.585,1.165,3.11,5.583,3.498,5.971 c0.388,0.388,1.565,0.777,1.565,0.777s-0.73,0.922-0.978,1.359c-0.248,0.437-0.383,1.699-0.383,1.699h7.563 c0,0-0.218-0.898-0.558-1.311c-0.34-0.413-3.059-1.432-3.059-1.432s-0.413-0.413-0.413-0.85c0-0.437-5.318-7.962-6.057-9.224 c-0.739-1.262-2.536-3.69-2.633-4.078c-0.097-0.388,0.437-11.271,0.583-11.923c0.146-0.652,2.978-5.943,2.978-5.943H154.902z\"}),/*#__PURE__*/React.createElement(\"path\",{style:{opacity:0.2},d:\"M165.745,397.302c0,0-1.15,2.15-2.021,3.878l-7.345,0.806c-0.714-2.326-1.476-4.684-1.476-4.684 H165.745z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{fill:\"#FFC727\"},d:\"M185.779,396.809c0,0,8.365,7.715,9.096,8.519c0.73,0.804,3.142,3.844,3.142,4.397 c0,0.553-2.789,6.835-3.442,7.689c-0.653,0.854-3.367,4.523-3.568,5.076c-0.201,0.553-0.057,1.765-0.057,1.765 s-0.496,0.085-0.915,0.523c-0.419,0.438-0.598,0.928-0.598,0.928l5.591,5.391c0,0,0.201-0.968,0.201-1.722 c0-0.754-2.337-4.046-2.337-4.046s0.974-0.358,1.225-0.66c0.251-0.302,2.117-5.698,2.368-6.452 c0.251-0.754,3.643-5.981,3.643-5.981s1.383-1.508,1.534-2.412c0.151-0.905-1.256-2.161-1.256-2.161s-2.113-4.229-3.367-6.274 c-0.824-1.343-3.518-8.708-3.518-8.708L185.779,396.809z\"}),/*#__PURE__*/React.createElement(\"path\",{style:{opacity:0.8},d:\"M185.779,396.809c0,0,8.365,7.715,9.096,8.519c0.73,0.804,3.142,3.844,3.142,4.397 c0,0.553-2.789,6.835-3.442,7.689c-0.653,0.854-3.367,4.523-3.568,5.076c-0.201,0.553-0.057,1.765-0.057,1.765 s-0.496,0.085-0.915,0.523c-0.419,0.438-0.598,0.928-0.598,0.928l5.591,5.391c0,0,0.201-0.968,0.201-1.722 c0-0.754-2.337-4.046-2.337-4.046s0.974-0.358,1.225-0.66c0.251-0.302,2.117-5.698,2.368-6.452 c0.251-0.754,3.643-5.981,3.643-5.981s1.383-1.508,1.534-2.412c0.151-0.905-1.256-2.161-1.256-2.161s-2.113-4.229-3.367-6.274 c-0.824-1.343-3.518-8.708-3.518-8.708L185.779,396.809z\"}),/*#__PURE__*/React.createElement(\"path\",{style:{opacity:0.2},d:\"M195.953,399.012l-5.238,2.37c-2.4-2.236-4.934-4.573-4.934-4.573l7.739-4.126 C193.52,392.683,194.873,396.382,195.953,399.012z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{fill:\"#FFC727\"},d:\"M222.026,372.23c-0.197,0.572-1.143,2.902-1.802,3.101c-0.661,0.197-1.98-0.331-2.507-0.265 c-0.528,0.066-3.697,0.462-4.025,0.727c-0.331,0.263-5.676,3.563-5.873,4.156c-0.197,0.594-3.138,13.803-5.416,15.082 c-3.184,1.787-7.428,3.103-11.493,4.049l-4.279,12.119c0,0,0.412,1.857,0.158,2.768c-0.256,0.911-1.13,2.039-1.165,2.221 c-0.037,0.182-0.53,7.575-0.401,8.011c0.127,0.438,0.933,4.235,0.898,4.478c-0.037,0.243-0.366,0.62-0.366,0.62 s3.39,0.97,3.874,1.213c0.486,0.243,1.397,1.555,1.397,1.555h-7.917c0,0,0-0.802,0.037-1.13 c0.035-0.326,0.655-0.929,0.655-0.929s-1.056-0.874-1.183-1.22c-0.127-0.346,0.436-4.697,0.456-5.118 c0.02-0.42,0.107-7.991,0.107-7.991s-0.583-1.673-0.653-2.33c-0.07-0.655,0.909-2.549,0.909-2.731 c0-0.125-0.567-6.313-0.512-10.13c-3.408,0.528-5.127,0.738-5.127,0.738c-4.146,1.115-17.832-1.386-20.357-1.864 c-0.261,0.495-0.545,0.937-0.83,1.196c-0.964,0.874-11.952,11.166-12.097,11.893c-0.085,0.418-1.095,5.234-1.36,9.274 c-0.197,2.994,0.346,6.151,0.243,6.482c-0.243,0.777-0.39,1.165-0.39,1.165s2.453,0.777,3.138,1.178 c0.686,0.401,0.966,1.515,0.966,1.515h-6.627c0,0,0-0.729,0-0.874c0-0.147,0.631-1.299,0.631-1.299s-0.534-0.935-0.799-1.325 c-0.265-0.388,0.022-5.291,0.022-6.651s-0.048-11.65,0-11.942c0.048-0.291,1.36-1.167,1.651-1.312 c0.291-0.147,3.156-3.981,3.622-5.076c0.464-1.095,1.914-6.625,2.251-7.717c-0.615-3.167-2.68-8.576-0.304-12.71 c2.374-4.135,7.214-10.864,10.38-11.876c3.821-1.222,8.859,2.306,11.364,2.306c3.806,0,8.562-3.187,11.291-1.472 c2.727,1.717,7.441,12.688,8.276,14.316c0.837,1.627,5.096,1.969,6.504,1.132c1.408-0.836,6-17.283,6.572-17.944 c0.574-0.659,5.72-3.418,6.754-3.462c1.034-0.046,4.728,2.439,5.037,2.595c0.307,0.153,3.607-0.44,4.244-0.44 S222.223,371.656,222.026,372.23z\"}),/*#__PURE__*/React.createElement(\"path\",{style:{opacity:0.7},d:\"M222.026,372.23c-0.197,0.572-1.143,2.902-1.802,3.101c-0.661,0.197-1.98-0.331-2.507-0.265 c-0.528,0.066-3.697,0.462-4.025,0.727c-0.331,0.263-5.676,3.563-5.873,4.156c-0.197,0.594-3.138,13.803-5.416,15.082 c-3.184,1.787-7.428,3.103-11.493,4.049l-4.279,12.119c0,0,0.412,1.857,0.158,2.768c-0.256,0.911-1.13,2.039-1.165,2.221 c-0.037,0.182-0.53,7.575-0.401,8.011c0.127,0.438,0.933,4.235,0.898,4.478c-0.037,0.243-0.366,0.62-0.366,0.62 s3.39,0.97,3.874,1.213c0.486,0.243,1.397,1.555,1.397,1.555h-7.917c0,0,0-0.802,0.037-1.13 c0.035-0.326,0.655-0.929,0.655-0.929s-1.056-0.874-1.183-1.22c-0.127-0.346,0.436-4.697,0.456-5.118 c0.02-0.42,0.107-7.991,0.107-7.991s-0.583-1.673-0.653-2.33c-0.07-0.655,0.909-2.549,0.909-2.731 c0-0.125-0.567-6.313-0.512-10.13c-3.408,0.528-5.127,0.738-5.127,0.738c-4.146,1.115-17.832-1.386-20.357-1.864 c-0.261,0.495-0.545,0.937-0.83,1.196c-0.964,0.874-11.952,11.166-12.097,11.893c-0.085,0.418-1.095,5.234-1.36,9.274 c-0.197,2.994,0.346,6.151,0.243,6.482c-0.243,0.777-0.39,1.165-0.39,1.165s2.453,0.777,3.138,1.178 c0.686,0.401,0.966,1.515,0.966,1.515h-6.627c0,0,0-0.729,0-0.874c0-0.147,0.631-1.299,0.631-1.299s-0.534-0.935-0.799-1.325 c-0.265-0.388,0.022-5.291,0.022-6.651s-0.048-11.65,0-11.942c0.048-0.291,1.36-1.167,1.651-1.312 c0.291-0.147,3.156-3.981,3.622-5.076c0.464-1.095,1.914-6.625,2.251-7.717c-0.615-3.167-2.68-8.576-0.304-12.71 c2.374-4.135,7.214-10.864,10.38-11.876c3.821-1.222,8.859,2.306,11.364,2.306c3.806,0,8.562-3.187,11.291-1.472 c2.727,1.717,7.441,12.688,8.276,14.316c0.837,1.627,5.096,1.969,6.504,1.132c1.408-0.836,6-17.283,6.572-17.944 c0.574-0.659,5.72-3.418,6.754-3.462c1.034-0.046,4.728,2.439,5.037,2.595c0.307,0.153,3.607-0.44,4.244-0.44 S222.223,371.656,222.026,372.23z\"}),/*#__PURE__*/React.createElement(\"g\",{style:{opacity:0.2}},_path||(_path=/*#__PURE__*/React.createElement(\"path\",{d:\"M157.441,399.36c0.82-1.841,2.045-4.44,2.412-6.352c-0.025-0.486-0.114-1.791-0.148-2.293 c-0.067-1.025-0.134-2.051-0.151-3.083c0.362,1.917,0.781,3.845,0.77,5.8C159.642,395.529,158.743,397.579,157.441,399.36 L157.441,399.36z\"})),_path2||(_path2=/*#__PURE__*/React.createElement(\"path\",{d:\"M182.925,400.486c-0.757-1.726-2.209-3.454-1.88-5.453c0.217-1.093,0.456-2.283,0.775-3.351 c0.105,1.512-0.417,2.995-0.294,4.486C181.812,397.602,182.58,398.983,182.925,400.486L182.925,400.486z\"})))),_g||(_g=/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{d:\"M219.037,370.205c0,0-1.881-0.099-1.584-0.739C217.87,368.568,219.037,370.205,219.037,370.205z\"}),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{d:\"M211.249,371.144l-3.666,0.92c0,0,0.806-0.955,1.709-1.106S211.249,371.144,211.249,371.144z\"}),/*#__PURE__*/React.createElement(\"path\",{d:\"M208.558,371.71c0,0,0.37,0.507,0.955,0.394c0.584-0.113,0.642-0.803,0.642-0.803L208.558,371.71z\"})),/*#__PURE__*/React.createElement(\"path\",{d:\"M217.858,375.06c-0.535-0.09-1.099-0.102-1.64-0.104c-0.563-0.002-1.126,0.019-1.688,0.062 c-0.552,0.042-1.104,0.104-1.651,0.187c-0.541,0.082-1.102,0.224-1.652,0.212c-0.322-0.007-0.558-0.161-0.814-0.339 c-0.257-0.179-0.516-0.354-0.782-0.521c-0.016-0.01-0.035,0.015-0.02,0.027c0.211,0.181,0.427,0.357,0.647,0.528 c0.185,0.144,0.369,0.311,0.589,0.399c0.239,0.096,0.506,0.084,0.758,0.057c0.284-0.031,0.567-0.076,0.849-0.122 c1.143-0.186,2.287-0.318,3.445-0.35c0.322-0.009,0.643-0.014,0.965-0.015c0.33,0,0.661,0.019,0.99,0.009 C217.872,375.091,217.877,375.063,217.858,375.06z\"}),/*#__PURE__*/React.createElement(\"path\",{d:\"M212.024,376.269c-0.535,0.182-1.12,0.403-1.694,0.297c-0.257-0.047-0.505-0.159-0.732-0.285 c-0.259-0.144-0.506-0.305-0.72-0.511c-0.016-0.016-0.037,0.008-0.024,0.025c0.188,0.231,0.41,0.433,0.65,0.609 c0.243,0.178,0.497,0.327,0.798,0.378c0.622,0.105,1.207-0.19,1.731-0.492C212.044,376.283,212.036,376.265,212.024,376.269z\"}))),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{fill:\"#FFC727\"},d:\"M203.635,369.421c0,0-1.617-1.518-3.134-1.65c-1.518-0.132-3.332,0.264-3.233,0.429 c0.099,0.165,1.82,1.913,2.606,2.21c0.787,0.297,2.672,0.231,2.672,0.231L203.635,369.421z\"}),/*#__PURE__*/React.createElement(\"path\",{style:{opacity:0.7},d:\"M203.635,369.421c0,0-1.617-1.518-3.134-1.65c-1.518-0.132-3.332,0.264-3.233,0.429 c0.099,0.165,1.82,1.913,2.606,2.21c0.787,0.297,2.672,0.231,2.672,0.231L203.635,369.421z\"}),/*#__PURE__*/React.createElement(\"path\",{style:{opacity:0.2},d:\"M203.231,369.874c0,0-1.696-1.3-2.427-1.364c-0.731-0.064-1.605,0.127-1.558,0.207 c0.048,0.079,0.876,0.922,1.256,1.065c0.379,0.143,2.216,0.668,2.216,0.668L203.231,369.874z\"})),/*#__PURE__*/React.createElement(\"g\",{style:{opacity:0.2}},_path3||(_path3=/*#__PURE__*/React.createElement(\"path\",{d:\"M203.403,389.321c-0.008-0.223-0.014-0.445-0.068-0.662c-0.004-0.016-0.031-0.016-0.033,0.001 c-0.031,0.216-0.029,0.434-0.042,0.651c-0.007,0.112-0.016,0.224-0.023,0.336c-0.007,0.112-0.005,0.222-0.003,0.335 c0.001,0.073,0.116,0.089,0.13,0.014c0.02-0.109,0.038-0.216,0.042-0.327C203.408,389.553,203.407,389.438,203.403,389.321z\"})),_path4||(_path4=/*#__PURE__*/React.createElement(\"path\",{d:\"M202.821,389.927c-0.001-0.022-0.034-0.021-0.034,0.001c-0.003,0.228-0.054,0.461-0.11,0.68 c-0.057,0.221-0.12,0.438-0.208,0.649c-0.034,0.081,0.083,0.149,0.121,0.067c0.1-0.216,0.182-0.447,0.217-0.684 C202.843,390.401,202.833,390.167,202.821,389.927z\"})),_path5||(_path5=/*#__PURE__*/React.createElement(\"path\",{d:\"M143.492,414.837c-0.008-0.222-0.014-0.445-0.068-0.662c-0.004-0.016-0.031-0.016-0.033,0.001 c-0.031,0.216-0.029,0.434-0.042,0.651c-0.007,0.112-0.016,0.224-0.023,0.336c-0.007,0.112-0.005,0.222-0.003,0.335 c0.001,0.073,0.116,0.089,0.13,0.014c0.02-0.109,0.038-0.216,0.042-0.327C143.497,415.069,143.496,414.953,143.492,414.837z\"})),_path6||(_path6=/*#__PURE__*/React.createElement(\"path\",{d:\"M142.91,415.442c-0.001-0.022-0.034-0.021-0.034,0.001c-0.003,0.228-0.054,0.461-0.11,0.68 c-0.057,0.221-0.12,0.438-0.208,0.649c-0.034,0.081,0.083,0.149,0.121,0.067c0.1-0.216,0.182-0.447,0.218-0.684 C142.932,415.916,142.921,415.682,142.91,415.442z\"})),_path7||(_path7=/*#__PURE__*/React.createElement(\"path\",{d:\"M149.298,395.903c-0.133,0.225-0.273,0.447-0.369,0.691c-0.047,0.121-0.08,0.246-0.098,0.374 c-0.019,0.135,0.002,0.265,0.019,0.399c0.005,0.04,0.066,0.054,0.076,0.008c0.027-0.126,0.073-0.246,0.097-0.373 c0.022-0.119,0.045-0.238,0.068-0.357c0.048-0.251,0.11-0.503,0.238-0.726C149.339,395.901,149.309,395.884,149.298,395.903z\"})),_path8||(_path8=/*#__PURE__*/React.createElement(\"path\",{d:\"M149.538,397.809c-0.001-0.045-0.001-0.09,0-0.135c0.002-0.057-0.001-0.119,0.006-0.175 c0.003-0.021-0.029-0.03-0.033-0.008c-0.01,0.051-0.029,0.102-0.04,0.153c-0.011,0.051-0.023,0.102-0.034,0.154 c-0.02,0.095-0.031,0.189-0.038,0.286c-0.007,0.098-0.013,0.197-0.008,0.295c0.005,0.103,0.028,0.204,0.056,0.304 c0.013,0.046,0.073,0.029,0.077-0.012c0.009-0.098,0.02-0.196,0.02-0.295c0-0.094-0.005-0.189-0.005-0.283 C149.539,397.997,149.539,397.903,149.538,397.809z\"})),_path9||(_path9=/*#__PURE__*/React.createElement(\"path\",{d:\"M149.674,384.272c-0.199,0.176-0.344,0.391-0.436,0.639c-0.045,0.121-0.073,0.246-0.089,0.373 c-0.014,0.109-0.047,0.258,0.005,0.361c0.006,0.011,0.024,0.01,0.029-0.001c0.024-0.051,0.026-0.113,0.033-0.168 c0.008-0.056,0.014-0.113,0.028-0.168c0.029-0.119,0.072-0.235,0.125-0.346c0.102-0.217,0.243-0.42,0.414-0.588 C149.851,384.307,149.745,384.21,149.674,384.272z\"})),_path10||(_path10=/*#__PURE__*/React.createElement(\"path\",{d:\"M147.614,406.233c-0.199,0.176-0.344,0.391-0.437,0.64c-0.045,0.121-0.073,0.246-0.089,0.373 c-0.014,0.109-0.047,0.258,0.005,0.361c0.006,0.011,0.024,0.01,0.03-0.001c0.024-0.051,0.026-0.113,0.033-0.168 c0.008-0.056,0.014-0.113,0.028-0.168c0.029-0.119,0.072-0.235,0.125-0.346c0.102-0.217,0.243-0.42,0.414-0.588 C147.791,406.267,147.684,406.17,147.614,406.233z\"})),_path11||(_path11=/*#__PURE__*/React.createElement(\"path\",{d:\"M174.355,397.552c-0.167-0.087-0.328-0.184-0.49-0.28c-0.077-0.046-0.15-0.094-0.216-0.156 c-0.034-0.032-0.065-0.067-0.097-0.101c-0.015-0.016-0.032-0.031-0.047-0.046c-0.011-0.011-0.02-0.023-0.03-0.034 c-0.008-0.008-0.019-0.013-0.026-0.021c-0.012-0.013-0.033,0.001-0.028,0.017c0.003,0.01,0,0.018,0.002,0.027 c0.003,0.012,0.011,0.025,0.015,0.036c0.008,0.022,0.016,0.044,0.026,0.066c0.021,0.047,0.051,0.09,0.08,0.132 c0.059,0.084,0.124,0.166,0.194,0.241c0.147,0.157,0.37,0.246,0.58,0.264C174.397,397.703,174.419,397.586,174.355,397.552z\"})),_path12||(_path12=/*#__PURE__*/React.createElement(\"path\",{d:\"M188.474,398.947c0.01-0.05,0.014-0.1,0.02-0.15c0.006-0.05,0.013-0.099,0.016-0.149c0.003-0.05,0-0.099-0.005-0.149 c-0.002-0.024-0.004-0.049-0.009-0.073c-0.003-0.013-0.008-0.018-0.016-0.028c-0.009-0.012-0.011-0.017-0.013-0.034 c-0.002-0.019-0.035-0.016-0.034,0.004c0.001,0.01,0.001,0.021,0.001,0.031c-0.028,0.027-0.023,0.072-0.027,0.11 c-0.005,0.045-0.011,0.091-0.017,0.136c-0.012,0.094-0.04,0.177-0.071,0.265c-0.061,0.172-0.132,0.343-0.23,0.497 c-0.035,0.055,0.046,0.121,0.091,0.071C188.32,399.327,188.431,399.149,188.474,398.947z\"})),_path13||(_path13=/*#__PURE__*/React.createElement(\"path\",{d:\"M188.251,400.699c0.121-0.157,0.197-0.336,0.247-0.527c0.025-0.095,0.041-0.189,0.044-0.287 c0.001-0.046,0.002-0.092,0.002-0.138c0-0.052-0.01-0.1-0.014-0.152c-0.002-0.021-0.034-0.023-0.034-0.001 c-0.002,0.047-0.012,0.092-0.017,0.138c-0.005,0.047-0.013,0.093-0.024,0.139c-0.023,0.089-0.047,0.179-0.076,0.266 c-0.058,0.172-0.15,0.337-0.246,0.491c-0.02,0.032-0.008,0.076,0.024,0.095C188.191,400.744,188.228,400.729,188.251,400.699z\"})),_path14||(_path14=/*#__PURE__*/React.createElement(\"path\",{d:\"M201.11,375.665c-0.063,0.079-0.102,0.176-0.15,0.264c-0.05,0.093-0.097,0.186-0.156,0.274 c-0.057,0.085-0.116,0.169-0.168,0.257c-0.055,0.091-0.102,0.185-0.167,0.27c-0.065,0.085,0.044,0.195,0.123,0.117 c0.076-0.076,0.157-0.149,0.226-0.231c0.074-0.087,0.133-0.191,0.18-0.295c0.045-0.101,0.09-0.203,0.125-0.308 c0.032-0.099,0.066-0.212,0.058-0.317C201.18,375.664,201.136,375.633,201.11,375.665z\"})),_path15||(_path15=/*#__PURE__*/React.createElement(\"path\",{d:\"M201.235,377.014c-0.003-0.005-0.009-0.008-0.015-0.008c-0.043,0.002-0.061,0.035-0.081,0.069 c-0.03,0.052-0.06,0.103-0.091,0.154c-0.058,0.097-0.091,0.217-0.124,0.324c-0.066,0.218-0.093,0.476-0.014,0.694 c0.022,0.059,0.124,0.07,0.135-0.003c0.034-0.213,0.031-0.431,0.061-0.645c0.014-0.106,0.045-0.205,0.069-0.309 c0.013-0.058,0.026-0.113,0.048-0.168C201.239,377.085,201.257,377.051,201.235,377.014z\"})),_path16||(_path16=/*#__PURE__*/React.createElement(\"path\",{d:\"M184.338,411.533c-0.063,0.079-0.102,0.176-0.15,0.264c-0.05,0.092-0.097,0.186-0.156,0.274 c-0.057,0.085-0.116,0.169-0.168,0.256c-0.055,0.091-0.102,0.185-0.167,0.271c-0.065,0.085,0.044,0.195,0.123,0.117 c0.076-0.076,0.157-0.149,0.226-0.231c0.074-0.087,0.134-0.191,0.18-0.295c0.045-0.101,0.09-0.203,0.125-0.308 c0.032-0.099,0.066-0.212,0.058-0.317C184.408,411.532,184.363,411.501,184.338,411.533z\"})),_path17||(_path17=/*#__PURE__*/React.createElement(\"path\",{d:\"M184.463,412.882c-0.003-0.005-0.009-0.008-0.015-0.008c-0.042,0.002-0.061,0.035-0.081,0.069 c-0.03,0.052-0.06,0.103-0.091,0.154c-0.058,0.097-0.091,0.216-0.124,0.324c-0.066,0.218-0.093,0.476-0.014,0.694 c0.022,0.06,0.124,0.07,0.135-0.003c0.034-0.213,0.031-0.431,0.06-0.645c0.014-0.106,0.045-0.205,0.069-0.309 c0.013-0.058,0.026-0.113,0.048-0.168C184.466,412.953,184.485,412.919,184.463,412.882z\"})),_path18||(_path18=/*#__PURE__*/React.createElement(\"path\",{d:\"M184.514,380.366c-0.204-0.396-0.492-0.784-0.866-1.032c-0.017-0.011-0.032,0.014-0.02,0.027 c0.146,0.163,0.291,0.328,0.415,0.509c0.123,0.179,0.225,0.369,0.304,0.571C184.395,380.565,184.576,380.487,184.514,380.366z\"})),_path19||(_path19=/*#__PURE__*/React.createElement(\"path\",{d:\"M184.209,381.417c-0.031-0.101-0.074-0.199-0.123-0.292c-0.047-0.09-0.1-0.178-0.158-0.261 c-0.03-0.043-0.06-0.087-0.092-0.129c-0.033-0.044-0.075-0.072-0.113-0.109c-0.014-0.014-0.036,0.005-0.026,0.021 c0.024,0.043,0.039,0.091,0.065,0.134c0.026,0.043,0.051,0.085,0.073,0.129c0.045,0.089,0.083,0.181,0.116,0.275 c0.033,0.093,0.06,0.188,0.086,0.283c0.026,0.095,0.056,0.189,0.083,0.284c0.022,0.077,0.145,0.059,0.141-0.023 C184.255,381.622,184.241,381.521,184.209,381.417z\"})),_path20||(_path20=/*#__PURE__*/React.createElement(\"path\",{d:\"M182.843,381.203c-0.047-0.127-0.09-0.26-0.153-0.379c-0.021-0.041-0.041-0.085-0.085-0.105 c-0.021-0.01-0.055-0.014-0.07,0.008c-0.023,0.034,0.029,0.091,0.052,0.055c0.001,0.007,0.003,0.013,0.004,0.018 c0.008,0.039,0.011,0.077,0.02,0.116c0.02,0.083,0.041,0.165,0.064,0.246c0.047,0.161,0.099,0.318,0.167,0.472 c0.031,0.07,0.134,0.043,0.116-0.035C182.929,381.464,182.891,381.332,182.843,381.203z\"})),_path21||(_path21=/*#__PURE__*/React.createElement(\"path\",{d:\"M187.039,387.244c-0.093-0.186-0.181-0.378-0.259-0.571c-0.038-0.095-0.081-0.188-0.119-0.283 c-0.04-0.099-0.066-0.198-0.087-0.303c-0.004-0.022-0.037-0.012-0.033,0.01c0.04,0.209,0.063,0.428,0.132,0.629 c0.07,0.204,0.161,0.39,0.278,0.571C186.988,387.354,187.068,387.302,187.039,387.244z\"}))),_path22||(_path22=/*#__PURE__*/React.createElement(\"path\",{d:\"M142.796,424.693c-0.093-0.186-0.181-0.378-0.259-0.571c-0.038-0.095-0.081-0.188-0.119-0.283 c-0.04-0.099-0.066-0.198-0.086-0.303c-0.004-0.022-0.037-0.012-0.033,0.01c0.04,0.209,0.063,0.428,0.133,0.629 c0.07,0.204,0.161,0.39,0.278,0.571C142.745,424.804,142.826,424.752,142.796,424.693z\"}))),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{fill:\"#263238\"},d:\"M156.43,372.085c0.056-0.186-2.22-2.099-2.27-2.561c-0.049-0.462,0.61-1.056,0.94-0.957 c0.33,0.099,2.111,2.364,2.474,2.54c0.363,0.176,3.761-0.165,4.883,0c1.122,0.165,4.629,2.307,5.737,2.395 c1.107,0.088,10.363-2.329,10.924-2.395c0.561-0.066,1.715-2.804,2.441-3.002c0.726-0.198,1.363,0,1.275,0.462 c-0.087,0.462-2.199,2.837-1.968,2.903c0.231,0.066,0.957,0.693,1.32,1.089s2.414,4.535,2.375,4.85 c-0.039,0.315-0.264,0.346-0.462,0.231c-0.198-0.116-2.639-4.421-3.052-4.685c-0.412-0.264-0.874-0.215-1.056,0.132 c-0.181,0.346-0.906,3.249-1.039,3.711c-0.247,0.858-0.198,2.507-0.528,2.623c-0.33,0.116-1.022,0.085-1.064-0.263 c-0.042-0.348,0.206-3.036,0.338-3.63c0.132-0.594,0.99-3.101,0.99-3.101s-10.088,2.395-10.924,2.263 C166.93,374.558,156.43,372.085,156.43,372.085z\"}),/*#__PURE__*/React.createElement(\"path\",{style:{fill:\"#263238\"},d:\"M179.25,370.783c0.141,0.095,0.283,0.172,0.43,0.233c0.147,0.059,0.296,0.107,0.45,0.125 c0.153,0.02,0.309,0.03,0.468,0.012c0.08-0.001,0.158-0.022,0.24-0.029c0.081-0.012,0.161-0.034,0.247-0.043 c-0.068,0.05-0.141,0.096-0.217,0.136c-0.079,0.031-0.157,0.073-0.243,0.089c-0.168,0.052-0.348,0.052-0.524,0.032 c-0.176-0.025-0.345-0.09-0.493-0.185C179.46,371.058,179.331,370.934,179.25,370.783z\"}),/*#__PURE__*/React.createElement(\"path\",{style:{fill:\"#263238\"},d:\"M179.336,370.87c0.122,0.109,0.246,0.201,0.377,0.274c0.132,0.07,0.268,0.129,0.412,0.153 c0.143,0.027,0.291,0.038,0.442,0.024c0.076-0.001,0.151-0.02,0.23-0.026c0.077-0.013,0.154-0.031,0.237-0.04 c-0.065,0.049-0.135,0.093-0.208,0.133c-0.076,0.03-0.152,0.07-0.234,0.086c-0.162,0.048-0.338,0.046-0.507,0.017 C179.747,371.423,179.448,371.181,179.336,370.87z\"}),/*#__PURE__*/React.createElement(\"path\",{style:{fill:\"#263238\"},d:\"M179.25,370.857c0.253,0.236,0.519,0.429,0.821,0.519c0.149,0.047,0.306,0.07,0.467,0.064 c0.162,0.001,0.324-0.034,0.498-0.06c-0.14,0.102-0.302,0.184-0.481,0.214c-0.177,0.04-0.367,0.024-0.542-0.028 c-0.175-0.055-0.337-0.149-0.467-0.273C179.416,371.169,179.309,371.022,179.25,370.857z\"}),/*#__PURE__*/React.createElement(\"path\",{style:{fill:\"#263238\"},d:\"M157.157,371.626c-0.457,0.078-5.21,10.664-5.464,11.324c-0.254,0.66-1.475,8.248-1.442,8.446 c0.033,0.198,12.009,2.045,13.955,1.914c1.947-0.132,14.699-1.848,15.128-2.046c0.429-0.198-2.031-10.524-2.064-11.217 c-0.033-0.693,1.221-7.786,1.848-8.941c0,0-9.01,2.593-10.924,2.395C166.281,373.304,158.949,371.321,157.157,371.626z\"}),/*#__PURE__*/React.createElement(\"path\",{style:{fill:\"#263238\"},d:\"M157.575,371.107c-0.865,0.186-4.883,12.473-5.147,13.907s-1.056,7.834-0.594,7.966 c0.462,0.132,9.303,1.353,12.438,1.353s13.592-1.353,13.856-1.716c0.264-0.363-1.518-10.689-1.65-12.141 c-0.132-1.452,1.749-7.951,2.639-9.369c0,0-0.231-0.198-2.408,0c-2.177,0.198-7.724,2.065-8.812,1.966 C166.809,372.974,162.326,370.084,157.575,371.107z\"}),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{fill:\"#263238\"},d:\"M178.036,391.085c-3.585,0.5-12.863,1.786-14.026,1.786c-0.002,0-0.002,0-0.002,0 c-0.752-0.002-8.865-1.024-12.296-1.46c0.008-0.186,0.02-0.387,0.034-0.595c4.625,0.587,11.617,1.458,12.262,1.46h0.002 c1.111,0,10.395-1.284,13.953-1.782C177.991,390.702,178.017,390.9,178.036,391.085z\"}),/*#__PURE__*/React.createElement(\"path\",{style:{fill:\"#263238\"},d:\"M177.606,387.97c-3.845,0.538-12.479,1.728-13.596,1.728c-0.002,0-0.002,0-0.002,0 c-0.732-0.002-8.451-0.972-12.02-1.425c0.02-0.2,0.044-0.397,0.068-0.591c4.621,0.587,11.322,1.419,11.953,1.421h0.002 c1.067,0,9.677-1.186,13.506-1.72C177.546,387.579,177.576,387.775,177.606,387.97z\"}),/*#__PURE__*/React.createElement(\"path\",{style:{fill:\"#263238\"},d:\"M177.864,389.755c-3.732,0.522-12.699,1.76-13.854,1.76c-0.002,0-0.002,0-0.002,0 c-0.766-0.002-8.627-0.992-12.203-1.447c0.034-0.385,0.071-0.786,0.113-1.187c5.036,0.643,11.502,1.441,12.09,1.443 c0.002,0,0.002,0,0.002,0c0.988,0,9.125-1.109,13.685-1.748C177.755,388.988,177.812,389.382,177.864,389.755z\"}),/*#__PURE__*/React.createElement(\"path\",{style:{fill:\"#263238\"},d:\"M177.116,384.775c-3.859,0.325-11.33,0.937-12.715,0.937c-0.038,0-0.072-0.002-0.099-0.002 c-0.701-0.024-7.826-0.917-11.695-1.407c0.087-0.315,0.202-0.706,0.339-1.157c4.367,0.552,10.798,1.353,11.393,1.373 c0.915,0.028,7.689-0.512,12.592-0.923C176.991,383.974,177.052,384.368,177.116,384.775z\"}),/*#__PURE__*/React.createElement(\"path\",{style:{fill:\"#263238\"},d:\"M176.755,378.392c-0.097,0.45-0.173,0.863-0.222,1.212c-3.915,0.333-10.592,0.881-12.209,0.881 c0,0-0.002,0-0.004,0c-0.625-0.002-6.133-0.69-10.125-1.2c0.129-0.379,0.26-0.766,0.393-1.151 c4.544,0.581,9.242,1.161,9.734,1.161c0,0,0.002,0,0.004,0C165.921,379.295,172.911,378.719,176.755,378.392z\"}),/*#__PURE__*/React.createElement(\"path\",{style:{fill:\"#263238\"},d:\"M176.806,382.781c-3.947,0.331-11.014,0.905-12.357,0.905h-0.099 c-0.667-0.022-7.197-0.839-11.153-1.339c0.113-0.363,0.236-0.75,0.369-1.155c4.336,0.548,10.254,1.286,10.824,1.304 c0.893,0.028,7.371-0.486,12.238-0.893C176.677,381.946,176.739,382.342,176.806,382.781z\"}),/*#__PURE__*/React.createElement(\"path\",{style:{fill:\"#263238\"},d:\"M176.544,381.023c-3.986,0.333-10.756,0.883-12.052,0.883c-0.038,0-0.069-0.002-0.097-0.002 c-0.633-0.02-6.669-0.774-10.647-1.276c0.062-0.19,0.125-0.383,0.191-0.577c3.966,0.5,9.877,1.238,10.475,1.258 c0.964,0.028,7.974-0.538,12.064-0.877c0,0.016,0,0.03,0.002,0.044C176.491,380.598,176.513,380.785,176.544,381.023z\"}),/*#__PURE__*/React.createElement(\"circle\",{style:{fill:\"#263238\"},cx:153.366,cy:386.173,r:0.506}),/*#__PURE__*/React.createElement(\"path\",{style:{fill:\"#263238\"},d:\"M156.522,386.558c0,0.279-0.226,0.506-0.506,0.506c-0.279,0-0.506-0.227-0.506-0.506 c0-0.279,0.227-0.506,0.506-0.506C156.296,386.052,156.522,386.278,156.522,386.558z\"}),/*#__PURE__*/React.createElement(\"path\",{style:{fill:\"#263238\"},d:\"M159.554,386.997c0,0.279-0.226,0.506-0.506,0.506s-0.506-0.226-0.506-0.506 s0.227-0.506,0.506-0.506S159.554,386.718,159.554,386.997z\"}),/*#__PURE__*/React.createElement(\"path\",{style:{fill:\"#263238\"},d:\"M162.648,387.324c0,0.279-0.226,0.506-0.506,0.506c-0.279,0-0.506-0.226-0.506-0.506 s0.227-0.506,0.506-0.506C162.421,386.819,162.648,387.045,162.648,387.324z\"}),/*#__PURE__*/React.createElement(\"path\",{style:{fill:\"#263238\"},d:\"M165.556,387.445c0,0.279-0.227,0.506-0.506,0.506c-0.279,0-0.506-0.227-0.506-0.506 c0-0.279,0.227-0.506,0.506-0.506C165.329,386.94,165.556,387.166,165.556,387.445z\"}),/*#__PURE__*/React.createElement(\"path\",{style:{fill:\"#263238\"},d:\"M168.514,387.203c0,0.279-0.227,0.506-0.506,0.506c-0.279,0-0.506-0.227-0.506-0.506 s0.227-0.506,0.506-0.506C168.288,386.698,168.514,386.924,168.514,387.203z\"}),/*#__PURE__*/React.createElement(\"path\",{style:{fill:\"#263238\"},d:\"M171.318,386.94c0,0.279-0.227,0.506-0.506,0.506c-0.279,0-0.506-0.226-0.506-0.506 c0-0.279,0.227-0.506,0.506-0.506C171.092,386.434,171.318,386.66,171.318,386.94z\"}),/*#__PURE__*/React.createElement(\"path\",{style:{fill:\"#263238\"},d:\"M174.103,386.618c0,0.279-0.227,0.506-0.506,0.506c-0.279,0-0.506-0.227-0.506-0.506 c0-0.279,0.227-0.506,0.506-0.506C173.876,386.112,174.103,386.338,174.103,386.618z\"}),/*#__PURE__*/React.createElement(\"path\",{style:{fill:\"#263238\"},d:\"M176.734,386.294c0,0.279-0.227,0.506-0.506,0.506c-0.279,0-0.506-0.227-0.506-0.506 c0-0.279,0.227-0.506,0.506-0.506C176.507,385.788,176.734,386.014,176.734,386.294z\"}))),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{fill:\"#263238\"},d:\"M209.635,375.892c-0.018,0-0.035-0.001-0.053-0.002c-5.312-0.474-8.755-3.445-8.899-3.571 c-0.247-0.217-0.272-0.593-0.055-0.84c0.217-0.247,0.593-0.271,0.84-0.055c0.037,0.033,3.133,2.689,7.813,3.239 c0.593-1.191,2.522-4.78,5.035-6.488c0.272-0.185,0.642-0.114,0.827,0.157c0.185,0.272,0.115,0.642-0.157,0.827 c-2.697,1.834-4.788,6.342-4.808,6.387C210.078,375.758,209.866,375.892,209.635,375.892z\"}),/*#__PURE__*/React.createElement(\"path\",{style:{fill:\"#263238\"},d:\"M207.805,381.962c-0.016,0-0.032-0.001-0.048-0.002c-6.831-0.544-9.026-3.554-9.116-3.682 c-0.189-0.269-0.125-0.64,0.144-0.829c0.268-0.189,0.637-0.125,0.827,0.141c0.014,0.019,0.511,0.682,1.749,1.397 c1.163,0.672,3.233,1.527,6.49,1.786c0.328,0.026,0.572,0.313,0.546,0.641C208.373,381.726,208.112,381.962,207.805,381.962z\"}),/*#__PURE__*/React.createElement(\"path\",{style:{fill:\"#263238\"},d:\"M211.039,378.314c-0.152,0-0.305-0.058-0.421-0.174c-1.381-1.381-1.567-2.711-1.574-2.767 c-0.042-0.326,0.188-0.625,0.514-0.667c0.324-0.041,0.621,0.186,0.666,0.509c0.004,0.028,0.17,1.016,1.235,2.082 c0.233,0.232,0.233,0.609,0,0.842C211.344,378.255,211.192,378.314,211.039,378.314z\"})),/*#__PURE__*/React.createElement(\"path\",{style:{fill:\"#263238\"},d:\"M199.574,379.366c0,0.541-0.439,0.98-0.98,0.98c-0.541,0-0.98-0.439-0.98-0.98 c0-0.541,0.439-0.98,0.98-0.98C199.135,378.386,199.574,378.824,199.574,379.366z\"}),/*#__PURE__*/React.createElement(\"circle\",{style:{fill:\"#263238\"},cx:200.722,cy:373.526,r:0.98}),/*#__PURE__*/React.createElement(\"circle\",{style:{fill:\"#263238\"},cx:202.949,cy:374.912,r:0.98}),/*#__PURE__*/React.createElement(\"circle\",{style:{fill:\"#263238\"},cx:205.435,cy:376.007,r:0.98}),/*#__PURE__*/React.createElement(\"circle\",{style:{fill:\"#263238\"},cx:208.074,cy:376.667,r:0.98}),/*#__PURE__*/React.createElement(\"path\",{style:{fill:\"#263238\"},d:\"M210.765,378.672c0,0.541-0.439,0.98-0.98,0.98c-0.541,0-0.98-0.439-0.98-0.98 c0-0.541,0.439-0.98,0.98-0.98C210.327,377.692,210.765,378.131,210.765,378.672z\"}),/*#__PURE__*/React.createElement(\"path\",{style:{fill:\"#263238\"},d:\"M201.27,380.834c0,0.541-0.439,0.98-0.98,0.98c-0.541,0-0.98-0.439-0.98-0.98 c0-0.541,0.439-0.98,0.98-0.98C200.831,379.854,201.27,380.293,201.27,380.834z\"}),/*#__PURE__*/React.createElement(\"path\",{style:{fill:\"#263238\"},d:\"M203.381,381.814c0,0.541-0.439,0.98-0.98,0.98c-0.541,0-0.98-0.439-0.98-0.98 c0-0.541,0.439-0.98,0.98-0.98C202.942,380.834,203.381,381.272,203.381,381.814z\"}),/*#__PURE__*/React.createElement(\"path\",{style:{fill:\"#263238\"},d:\"M205.674,382.49c0,0.541-0.439,0.98-0.98,0.98c-0.541,0-0.98-0.439-0.98-0.98 c0-0.541,0.439-0.98,0.98-0.98C205.235,381.51,205.674,381.949,205.674,382.49z\"}),/*#__PURE__*/React.createElement(\"path\",{style:{fill:\"#263238\"},d:\"M208.181,382.886c0,0.541-0.439,0.98-0.98,0.98c-0.541,0-0.98-0.439-0.98-0.98 c0-0.541,0.439-0.98,0.98-0.98C207.743,381.906,208.181,382.345,208.181,382.886z\"}))),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{fill:\"#FFC727\"},d:\"M351.044,383.686c-0.46,0.473-2.487,3.073-2.584,3.512c-0.097,0.439-0.206,3.115-0.261,3.333 c-0.055,0.219-2.246,4.115-2.246,4.115s-1.471,1.96-1.692,2.293c-0.771,1.16-0.741,3.702-0.741,3.702l0.57-1.971 c0,0-0.501,2.101-0.483,2.647c0.018,0.546,0.052,1.813,0.052,1.813l0.885-2.858l-0.824,3.514c0,0,1.172-1.476,1.383-1.858 c0.211-0.382,0.849-2.349,0.849-2.349s-0.42,1.511-0.466,1.631c-0.046,0.12-0.437,1.136-0.437,1.136s1.435-2.221,1.883-3.259 c0.447-1.038,0.083-3.696,0.083-3.696s2.263-3.714,2.424-4.206c0.161-0.492,0.184-3.004,0.218-3.332s1.386-2.112,1.386-2.112 V383.686z\"}),/*#__PURE__*/React.createElement(\"path\",{style:{opacity:0.7},d:\"M351.044,383.686c-0.46,0.473-2.487,3.073-2.584,3.512c-0.097,0.439-0.206,3.115-0.261,3.333 c-0.055,0.219-2.246,4.115-2.246,4.115s-1.471,1.96-1.692,2.293c-0.771,1.16-0.741,3.702-0.741,3.702l0.57-1.971 c0,0-0.501,2.101-0.483,2.647c0.018,0.546,0.052,1.813,0.052,1.813l0.885-2.858l-0.824,3.514c0,0,1.172-1.476,1.383-1.858 c0.211-0.382,0.849-2.349,0.849-2.349s-0.42,1.511-0.466,1.631c-0.046,0.12-0.437,1.136-0.437,1.136s1.435-2.221,1.883-3.259 c0.447-1.038,0.083-3.696,0.083-3.696s2.263-3.714,2.424-4.206c0.161-0.492,0.184-3.004,0.218-3.332s1.386-2.112,1.386-2.112 V383.686z\"}),/*#__PURE__*/React.createElement(\"path\",{style:{opacity:0.2},d:\"M351.044,383.685v2.059c0,0-0.67,0.885-1.08,1.522l-0.298-1.875 C350.227,384.651,350.82,383.915,351.044,383.685z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{fill:\"#FFC727\"},d:\"M387.424,397.303c0,0,2.632,8.149,2.699,9.099c0.068,0.95-0.563,8.087-0.466,8.378 c0.097,0.291,1.913,1.359,1.913,1.359s4.004,4.952,4.59,6.117c0.585,1.165,3.11,5.583,3.498,5.971 c0.388,0.388,1.565,0.777,1.565,0.777s-0.73,0.922-0.978,1.359c-0.248,0.437-0.383,1.699-0.383,1.699h7.563 c0,0-0.218-0.898-0.558-1.311c-0.34-0.413-3.059-1.432-3.059-1.432s-0.413-0.413-0.413-0.85c0-0.437-5.318-7.962-6.057-9.224 c-0.739-1.262-2.536-3.69-2.633-4.078c-0.097-0.388,0.437-11.271,0.583-11.923c0.146-0.652,2.978-5.943,2.978-5.943H387.424z\"}),/*#__PURE__*/React.createElement(\"path\",{style:{opacity:0.8},d:\"M387.424,397.303c0,0,2.632,8.149,2.699,9.099c0.068,0.95-0.563,8.087-0.466,8.378 c0.097,0.291,1.913,1.359,1.913,1.359s4.004,4.952,4.59,6.117c0.585,1.165,3.11,5.583,3.498,5.971 c0.388,0.388,1.565,0.777,1.565,0.777s-0.73,0.922-0.978,1.359c-0.248,0.437-0.383,1.699-0.383,1.699h7.563 c0,0-0.218-0.898-0.558-1.311c-0.34-0.413-3.059-1.432-3.059-1.432s-0.413-0.413-0.413-0.85c0-0.437-5.318-7.962-6.057-9.224 c-0.739-1.262-2.536-3.69-2.633-4.078c-0.097-0.388,0.437-11.271,0.583-11.923c0.146-0.652,2.978-5.943,2.978-5.943H387.424z\"}),/*#__PURE__*/React.createElement(\"path\",{style:{opacity:0.2},d:\"M398.267,397.302c0,0-1.15,2.15-2.021,3.878l-7.345,0.806c-0.714-2.326-1.476-4.684-1.476-4.684 H398.267z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{fill:\"#FFC727\"},d:\"M357.925,396.809c0,0,8.365,7.715,9.096,8.519c0.73,0.804,3.142,3.844,3.142,4.397 c0,0.553-2.789,6.835-3.442,7.689c-0.653,0.854-3.367,4.523-3.568,5.076s-0.056,1.765-0.056,1.765s-0.496,0.085-0.915,0.523 c-0.419,0.438-0.598,0.928-0.598,0.928l5.591,5.391c0,0,0.201-0.968,0.201-1.722c0-0.754-2.337-4.046-2.337-4.046 s0.974-0.358,1.225-0.66c0.251-0.302,2.117-5.698,2.368-6.452c0.251-0.754,3.643-5.981,3.643-5.981s1.383-1.508,1.534-2.412 c0.151-0.905-1.257-2.161-1.257-2.161s-2.112-4.229-3.367-6.274c-0.824-1.343-3.518-8.708-3.518-8.708L357.925,396.809z\"}),/*#__PURE__*/React.createElement(\"path\",{style:{opacity:0.8},d:\"M357.925,396.809c0,0,8.365,7.715,9.096,8.519c0.73,0.804,3.142,3.844,3.142,4.397 c0,0.553-2.789,6.835-3.442,7.689c-0.653,0.854-3.367,4.523-3.568,5.076s-0.056,1.765-0.056,1.765s-0.496,0.085-0.915,0.523 c-0.419,0.438-0.598,0.928-0.598,0.928l5.591,5.391c0,0,0.201-0.968,0.201-1.722c0-0.754-2.337-4.046-2.337-4.046 s0.974-0.358,1.225-0.66c0.251-0.302,2.117-5.698,2.368-6.452c0.251-0.754,3.643-5.981,3.643-5.981s1.383-1.508,1.534-2.412 c0.151-0.905-1.257-2.161-1.257-2.161s-2.112-4.229-3.367-6.274c-0.824-1.343-3.518-8.708-3.518-8.708L357.925,396.809z\"}),/*#__PURE__*/React.createElement(\"path\",{style:{opacity:0.2},d:\"M368.098,399.012l-5.238,2.37c-2.4-2.236-4.934-4.573-4.934-4.573l7.739-4.126 C365.665,392.683,367.018,396.382,368.098,399.012z\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{fill:\"#FFC727\"},d:\"M425.755,372.23c-0.197,0.572-1.143,2.902-1.802,3.101c-0.661,0.197-1.98-0.331-2.507-0.265 c-0.528,0.066-3.697,0.462-4.025,0.727c-0.331,0.263-5.676,3.563-5.873,4.156c-0.197,0.594-3.138,13.803-5.416,15.082 c-3.184,1.787-7.428,3.103-11.493,4.049l-4.279,12.119c0,0,0.412,1.857,0.158,2.768c-0.256,0.911-1.13,2.039-1.165,2.221 c-0.037,0.182-0.53,7.575-0.401,8.011c0.127,0.438,0.933,4.235,0.898,4.478c-0.037,0.243-0.366,0.62-0.366,0.62 s3.39,0.97,3.874,1.213c0.486,0.243,1.397,1.555,1.397,1.555h-7.917c0,0,0-0.802,0.037-1.13 c0.035-0.326,0.655-0.929,0.655-0.929s-1.056-0.874-1.183-1.22c-0.127-0.346,0.436-4.697,0.456-5.118 c0.02-0.42,0.107-7.991,0.107-7.991s-0.582-1.673-0.653-2.33c-0.07-0.655,0.909-2.549,0.909-2.731 c0-0.125-0.567-6.313-0.512-10.13c-3.408,0.528-5.127,0.738-5.127,0.738c-4.146,1.115-17.832-1.386-20.357-1.864 c-0.261,0.495-0.545,0.937-0.83,1.196c-0.964,0.874-11.953,11.166-12.097,11.893c-0.086,0.418-1.095,5.234-1.36,9.274 c-0.197,2.994,0.346,6.151,0.243,6.482c-0.243,0.777-0.39,1.165-0.39,1.165s2.453,0.777,3.138,1.178 c0.686,0.401,0.966,1.515,0.966,1.515h-6.627c0,0,0-0.729,0-0.874c0-0.147,0.631-1.299,0.631-1.299s-0.534-0.935-0.799-1.325 c-0.265-0.388,0.022-5.291,0.022-6.651s-0.048-11.65,0-11.942c0.048-0.291,1.36-1.167,1.651-1.312 c0.291-0.147,3.156-3.981,3.622-5.076c0.464-1.095,1.914-6.625,2.251-7.717c-0.615-3.167-2.68-8.576-0.304-12.71 c2.374-4.135,7.214-10.864,10.38-11.876c3.821-1.222,8.859,2.306,11.364,2.306c3.806,0,8.562-3.187,11.291-1.472 c2.727,1.717,7.441,12.688,8.276,14.316c0.837,1.627,5.096,1.969,6.504,1.132c1.408-0.836,6-17.283,6.572-17.944 c0.574-0.659,5.72-3.418,6.754-3.462c1.034-0.046,4.728,2.439,5.037,2.595c0.307,0.153,3.607-0.44,4.244-0.44 S425.952,371.656,425.755,372.23z\"}),/*#__PURE__*/React.createElement(\"path\",{style:{opacity:0.7},d:\"M425.755,372.23c-0.197,0.572-1.143,2.902-1.802,3.101c-0.661,0.197-1.98-0.331-2.507-0.265 c-0.528,0.066-3.697,0.462-4.025,0.727c-0.331,0.263-5.676,3.563-5.873,4.156c-0.197,0.594-3.138,13.803-5.416,15.082 c-3.184,1.787-7.428,3.103-11.493,4.049l-4.279,12.119c0,0,0.412,1.857,0.158,2.768c-0.256,0.911-1.13,2.039-1.165,2.221 c-0.037,0.182-0.53,7.575-0.401,8.011c0.127,0.438,0.933,4.235,0.898,4.478c-0.037,0.243-0.366,0.62-0.366,0.62 s3.39,0.97,3.874,1.213c0.486,0.243,1.397,1.555,1.397,1.555h-7.917c0,0,0-0.802,0.037-1.13 c0.035-0.326,0.655-0.929,0.655-0.929s-1.056-0.874-1.183-1.22c-0.127-0.346,0.436-4.697,0.456-5.118 c0.02-0.42,0.107-7.991,0.107-7.991s-0.582-1.673-0.653-2.33c-0.07-0.655,0.909-2.549,0.909-2.731 c0-0.125-0.567-6.313-0.512-10.13c-3.408,0.528-5.127,0.738-5.127,0.738c-4.146,1.115-17.832-1.386-20.357-1.864 c-0.261,0.495-0.545,0.937-0.83,1.196c-0.964,0.874-11.953,11.166-12.097,11.893c-0.086,0.418-1.095,5.234-1.36,9.274 c-0.197,2.994,0.346,6.151,0.243,6.482c-0.243,0.777-0.39,1.165-0.39,1.165s2.453,0.777,3.138,1.178 c0.686,0.401,0.966,1.515,0.966,1.515h-6.627c0,0,0-0.729,0-0.874c0-0.147,0.631-1.299,0.631-1.299s-0.534-0.935-0.799-1.325 c-0.265-0.388,0.022-5.291,0.022-6.651s-0.048-11.65,0-11.942c0.048-0.291,1.36-1.167,1.651-1.312 c0.291-0.147,3.156-3.981,3.622-5.076c0.464-1.095,1.914-6.625,2.251-7.717c-0.615-3.167-2.68-8.576-0.304-12.71 c2.374-4.135,7.214-10.864,10.38-11.876c3.821-1.222,8.859,2.306,11.364,2.306c3.806,0,8.562-3.187,11.291-1.472 c2.727,1.717,7.441,12.688,8.276,14.316c0.837,1.627,5.096,1.969,6.504,1.132c1.408-0.836,6-17.283,6.572-17.944 c0.574-0.659,5.72-3.418,6.754-3.462c1.034-0.046,4.728,2.439,5.037,2.595c0.307,0.153,3.607-0.44,4.244-0.44 S425.952,371.656,425.755,372.23z\"}),/*#__PURE__*/React.createElement(\"g\",{style:{opacity:0.2}},_path23||(_path23=/*#__PURE__*/React.createElement(\"path\",{d:\"M361.17,399.36c0.82-1.841,2.045-4.441,2.412-6.352c-0.025-0.486-0.114-1.791-0.148-2.293 c-0.066-1.025-0.133-2.051-0.15-3.083c0.362,1.917,0.781,3.845,0.77,5.8C363.371,395.529,362.472,397.579,361.17,399.36 L361.17,399.36z\"})),_path24||(_path24=/*#__PURE__*/React.createElement(\"path\",{d:\"M386.654,400.486c-0.757-1.726-2.209-3.454-1.88-5.453c0.217-1.093,0.456-2.283,0.775-3.351 c0.105,1.512-0.417,2.995-0.294,4.486C385.541,397.602,386.309,398.983,386.654,400.486L386.654,400.486z\"})))),_g2||(_g2=/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{d:\"M422.767,370.205c0,0-1.881-0.099-1.584-0.739C421.599,368.568,422.767,370.205,422.767,370.205z\"}),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{d:\"M414.979,371.144l-3.666,0.92c0,0,0.806-0.955,1.709-1.106S414.979,371.144,414.979,371.144z\"}),/*#__PURE__*/React.createElement(\"path\",{d:\"M412.287,371.71c0,0,0.371,0.507,0.955,0.394c0.584-0.113,0.642-0.803,0.642-0.803L412.287,371.71z\"})),/*#__PURE__*/React.createElement(\"path\",{d:\"M421.587,375.06c-0.535-0.09-1.099-0.102-1.64-0.104c-0.563-0.002-1.126,0.019-1.688,0.062 c-0.552,0.042-1.103,0.104-1.651,0.187c-0.541,0.082-1.102,0.224-1.652,0.212c-0.322-0.007-0.558-0.161-0.814-0.339 c-0.257-0.179-0.517-0.354-0.782-0.521c-0.016-0.01-0.035,0.015-0.02,0.027c0.211,0.181,0.427,0.357,0.647,0.528 c0.185,0.144,0.369,0.311,0.589,0.399c0.239,0.096,0.506,0.084,0.758,0.057c0.284-0.031,0.567-0.076,0.849-0.122 c1.143-0.186,2.287-0.318,3.445-0.35c0.322-0.009,0.643-0.014,0.965-0.015c0.33,0,0.661,0.019,0.99,0.009 C421.602,375.091,421.606,375.063,421.587,375.06z\"}),/*#__PURE__*/React.createElement(\"path\",{d:\"M415.753,376.269c-0.535,0.182-1.12,0.403-1.694,0.297c-0.257-0.047-0.505-0.159-0.732-0.285 c-0.259-0.144-0.506-0.305-0.72-0.511c-0.016-0.016-0.037,0.008-0.024,0.025c0.188,0.231,0.41,0.433,0.65,0.609 c0.243,0.178,0.497,0.327,0.798,0.378c0.622,0.105,1.207-0.19,1.731-0.492C415.773,376.283,415.765,376.265,415.753,376.269z\"}))),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{fill:\"#FFC727\"},d:\"M407.364,369.421c0,0-1.617-1.518-3.134-1.65c-1.518-0.132-3.332,0.264-3.233,0.429 c0.099,0.165,1.82,1.913,2.606,2.21c0.787,0.297,2.672,0.231,2.672,0.231L407.364,369.421z\"}),/*#__PURE__*/React.createElement(\"path\",{style:{opacity:0.7},d:\"M407.364,369.421c0,0-1.617-1.518-3.134-1.65c-1.518-0.132-3.332,0.264-3.233,0.429 c0.099,0.165,1.82,1.913,2.606,2.21c0.787,0.297,2.672,0.231,2.672,0.231L407.364,369.421z\"}),/*#__PURE__*/React.createElement(\"path\",{style:{opacity:0.2},d:\"M406.96,369.874c0,0-1.696-1.3-2.427-1.364c-0.731-0.064-1.605,0.127-1.557,0.207 c0.048,0.079,0.876,0.922,1.255,1.065c0.379,0.143,2.216,0.668,2.216,0.668L406.96,369.874z\"})),/*#__PURE__*/React.createElement(\"g\",{style:{opacity:0.2}},_path25||(_path25=/*#__PURE__*/React.createElement(\"path\",{d:\"M407.132,389.321c-0.008-0.223-0.014-0.445-0.068-0.662c-0.004-0.016-0.031-0.016-0.033,0.001 c-0.031,0.216-0.029,0.434-0.042,0.651c-0.007,0.112-0.016,0.224-0.023,0.336c-0.007,0.112-0.005,0.222-0.003,0.335 c0.001,0.073,0.116,0.089,0.13,0.014c0.02-0.109,0.038-0.216,0.042-0.327C407.138,389.553,407.136,389.438,407.132,389.321z\"})),_path26||(_path26=/*#__PURE__*/React.createElement(\"path\",{d:\"M406.55,389.927c-0.001-0.022-0.034-0.021-0.034,0.001c-0.003,0.228-0.054,0.461-0.11,0.68 c-0.057,0.221-0.12,0.438-0.208,0.649c-0.034,0.081,0.083,0.149,0.121,0.067c0.1-0.216,0.182-0.447,0.217-0.684 C406.572,390.401,406.562,390.167,406.55,389.927z\"})),_path27||(_path27=/*#__PURE__*/React.createElement(\"path\",{d:\"M347.221,414.837c-0.008-0.222-0.014-0.445-0.068-0.662c-0.004-0.016-0.031-0.016-0.033,0.001 c-0.031,0.216-0.029,0.434-0.042,0.651c-0.007,0.112-0.016,0.224-0.023,0.336c-0.007,0.112-0.005,0.222-0.003,0.335 c0.001,0.073,0.116,0.089,0.13,0.014c0.02-0.109,0.038-0.216,0.042-0.327C347.226,415.069,347.225,414.953,347.221,414.837z\"})),_path28||(_path28=/*#__PURE__*/React.createElement(\"path\",{d:\"M346.639,415.442c-0.001-0.022-0.034-0.021-0.034,0.001c-0.003,0.228-0.054,0.461-0.11,0.68 c-0.057,0.221-0.12,0.438-0.208,0.649c-0.034,0.081,0.083,0.149,0.121,0.067c0.1-0.216,0.182-0.447,0.218-0.684 C346.661,415.916,346.65,415.682,346.639,415.442z\"})),_path29||(_path29=/*#__PURE__*/React.createElement(\"path\",{d:\"M353.027,395.903c-0.133,0.225-0.273,0.447-0.369,0.691c-0.047,0.121-0.08,0.246-0.098,0.374 c-0.019,0.135,0.002,0.265,0.019,0.399c0.005,0.04,0.066,0.054,0.076,0.008c0.027-0.126,0.073-0.246,0.097-0.373 c0.022-0.119,0.045-0.238,0.068-0.357c0.048-0.251,0.11-0.503,0.238-0.726C353.068,395.901,353.038,395.884,353.027,395.903z\"})),_path30||(_path30=/*#__PURE__*/React.createElement(\"path\",{d:\"M353.267,397.809c0-0.045-0.001-0.09,0-0.135c0.002-0.057-0.001-0.119,0.006-0.175c0.003-0.021-0.029-0.03-0.033-0.008 c-0.01,0.051-0.029,0.102-0.04,0.153c-0.011,0.051-0.023,0.102-0.034,0.154c-0.02,0.095-0.031,0.189-0.038,0.286 c-0.007,0.098-0.013,0.197-0.008,0.295c0.005,0.103,0.028,0.204,0.056,0.304c0.013,0.046,0.073,0.029,0.077-0.012 c0.009-0.098,0.02-0.196,0.02-0.295c0-0.094-0.005-0.189-0.005-0.283C353.268,397.997,353.268,397.903,353.267,397.809z\"})),_path31||(_path31=/*#__PURE__*/React.createElement(\"path\",{d:\"M353.403,384.272c-0.199,0.176-0.344,0.391-0.436,0.639c-0.045,0.121-0.073,0.246-0.089,0.373 c-0.014,0.109-0.047,0.258,0.005,0.361c0.006,0.011,0.024,0.01,0.029-0.001c0.024-0.051,0.026-0.113,0.033-0.168 c0.008-0.056,0.014-0.113,0.028-0.168c0.029-0.119,0.072-0.235,0.125-0.346c0.102-0.217,0.243-0.42,0.414-0.588 C353.58,384.307,353.474,384.21,353.403,384.272z\"})),_path32||(_path32=/*#__PURE__*/React.createElement(\"path\",{d:\"M351.343,406.233c-0.198,0.176-0.344,0.391-0.436,0.64c-0.045,0.121-0.073,0.246-0.089,0.373 c-0.014,0.109-0.047,0.258,0.005,0.361c0.006,0.011,0.024,0.01,0.03-0.001c0.024-0.051,0.026-0.113,0.033-0.168 c0.008-0.056,0.014-0.113,0.028-0.168c0.029-0.119,0.072-0.235,0.125-0.346c0.102-0.217,0.243-0.42,0.414-0.588 C351.52,406.267,351.414,406.17,351.343,406.233z\"})),_path33||(_path33=/*#__PURE__*/React.createElement(\"path\",{d:\"M378.084,397.552c-0.167-0.087-0.328-0.184-0.49-0.28c-0.078-0.046-0.15-0.094-0.216-0.156 c-0.034-0.032-0.065-0.067-0.097-0.101c-0.015-0.016-0.032-0.031-0.047-0.046c-0.011-0.011-0.02-0.023-0.03-0.034 c-0.008-0.008-0.019-0.013-0.026-0.021c-0.012-0.013-0.033,0.001-0.028,0.017c0.003,0.01,0,0.018,0.002,0.027 c0.003,0.012,0.011,0.025,0.015,0.036c0.008,0.022,0.016,0.044,0.026,0.066c0.021,0.047,0.051,0.09,0.08,0.132 c0.059,0.084,0.124,0.166,0.194,0.241c0.147,0.157,0.37,0.246,0.581,0.264C378.127,397.703,378.148,397.586,378.084,397.552z\"})),_path34||(_path34=/*#__PURE__*/React.createElement(\"path\",{d:\"M392.203,398.947c0.01-0.05,0.014-0.1,0.02-0.15c0.006-0.05,0.013-0.099,0.017-0.149c0.003-0.05,0-0.099-0.005-0.149 c-0.002-0.024-0.004-0.049-0.009-0.073c-0.003-0.013-0.008-0.018-0.016-0.028c-0.009-0.012-0.011-0.017-0.013-0.034 c-0.002-0.019-0.035-0.016-0.034,0.004c0.001,0.01,0.001,0.021,0.001,0.031c-0.028,0.027-0.023,0.072-0.027,0.11 c-0.005,0.045-0.011,0.091-0.017,0.136c-0.012,0.094-0.039,0.177-0.071,0.265c-0.061,0.172-0.132,0.343-0.23,0.497 c-0.035,0.055,0.046,0.121,0.091,0.071C392.049,399.327,392.16,399.149,392.203,398.947z\"})),_path35||(_path35=/*#__PURE__*/React.createElement(\"path\",{d:\"M391.98,400.699c0.121-0.157,0.197-0.336,0.247-0.527c0.025-0.095,0.041-0.189,0.044-0.287 c0.001-0.046,0.002-0.092,0.002-0.138c0-0.052-0.009-0.1-0.014-0.152c-0.002-0.021-0.034-0.023-0.034-0.001 c-0.002,0.047-0.012,0.092-0.017,0.138c-0.005,0.047-0.013,0.093-0.025,0.139c-0.022,0.089-0.047,0.179-0.076,0.266 c-0.058,0.172-0.15,0.337-0.246,0.491c-0.02,0.032-0.008,0.076,0.024,0.095C391.921,400.744,391.957,400.729,391.98,400.699z\"})),_path36||(_path36=/*#__PURE__*/React.createElement(\"path\",{d:\"M404.839,375.665c-0.063,0.079-0.102,0.176-0.15,0.264c-0.05,0.093-0.097,0.186-0.156,0.274 c-0.057,0.085-0.116,0.169-0.168,0.257c-0.055,0.091-0.102,0.185-0.167,0.27c-0.065,0.085,0.043,0.195,0.123,0.117 c0.076-0.076,0.157-0.149,0.226-0.231c0.074-0.087,0.134-0.191,0.18-0.295c0.045-0.101,0.091-0.203,0.125-0.308 c0.032-0.099,0.066-0.212,0.058-0.317C404.909,375.664,404.865,375.633,404.839,375.665z\"})),_path37||(_path37=/*#__PURE__*/React.createElement(\"path\",{d:\"M404.964,377.014c-0.003-0.005-0.009-0.008-0.015-0.008c-0.043,0.002-0.061,0.035-0.081,0.069 c-0.03,0.052-0.06,0.103-0.091,0.154c-0.058,0.097-0.091,0.217-0.124,0.324c-0.066,0.218-0.093,0.476-0.014,0.694 c0.022,0.059,0.124,0.07,0.135-0.003c0.034-0.213,0.031-0.431,0.06-0.645c0.014-0.106,0.045-0.205,0.069-0.309 c0.013-0.058,0.026-0.113,0.048-0.168C404.968,377.085,404.986,377.051,404.964,377.014z\"})),_path38||(_path38=/*#__PURE__*/React.createElement(\"path\",{d:\"M388.067,411.533c-0.063,0.079-0.102,0.176-0.15,0.264c-0.05,0.092-0.097,0.186-0.156,0.274 c-0.057,0.085-0.116,0.169-0.169,0.256c-0.055,0.091-0.102,0.185-0.167,0.271c-0.065,0.085,0.043,0.195,0.123,0.117 c0.076-0.076,0.157-0.149,0.226-0.231c0.074-0.087,0.134-0.191,0.18-0.295c0.045-0.101,0.09-0.203,0.125-0.308 c0.032-0.099,0.066-0.212,0.058-0.317C388.137,411.532,388.093,411.501,388.067,411.533z\"})),_path39||(_path39=/*#__PURE__*/React.createElement(\"path\",{d:\"M388.192,412.882c-0.003-0.005-0.009-0.008-0.015-0.008c-0.043,0.002-0.061,0.035-0.081,0.069 c-0.03,0.052-0.06,0.103-0.091,0.154c-0.058,0.097-0.091,0.216-0.124,0.324c-0.066,0.218-0.093,0.476-0.014,0.694 c0.022,0.06,0.123,0.07,0.135-0.003c0.034-0.213,0.031-0.431,0.06-0.645c0.014-0.106,0.045-0.205,0.069-0.309 c0.013-0.058,0.026-0.113,0.048-0.168C388.196,412.953,388.214,412.919,388.192,412.882z\"})),_path40||(_path40=/*#__PURE__*/React.createElement(\"path\",{d:\"M388.243,380.366c-0.204-0.396-0.492-0.784-0.866-1.032c-0.017-0.011-0.032,0.014-0.02,0.027 c0.146,0.163,0.291,0.328,0.415,0.509c0.123,0.179,0.225,0.369,0.304,0.571C388.124,380.565,388.305,380.487,388.243,380.366z\"})),_path41||(_path41=/*#__PURE__*/React.createElement(\"path\",{d:\"M387.938,381.417c-0.031-0.101-0.074-0.199-0.123-0.292c-0.047-0.09-0.1-0.178-0.158-0.261 c-0.03-0.043-0.06-0.087-0.092-0.129c-0.033-0.044-0.075-0.072-0.113-0.109c-0.014-0.014-0.036,0.005-0.026,0.021 c0.024,0.043,0.039,0.091,0.065,0.134c0.026,0.043,0.051,0.085,0.073,0.129c0.045,0.089,0.083,0.181,0.116,0.275 c0.033,0.093,0.06,0.188,0.086,0.283c0.026,0.095,0.056,0.189,0.083,0.284c0.022,0.077,0.145,0.059,0.141-0.023 C387.984,381.622,387.97,381.521,387.938,381.417z\"})),_path42||(_path42=/*#__PURE__*/React.createElement(\"path\",{d:\"M386.572,381.203c-0.047-0.127-0.09-0.26-0.153-0.379c-0.022-0.041-0.041-0.085-0.085-0.105 c-0.021-0.01-0.055-0.014-0.07,0.008c-0.023,0.034,0.029,0.091,0.052,0.055c0.001,0.007,0.003,0.013,0.004,0.018 c0.008,0.039,0.011,0.077,0.02,0.116c0.02,0.083,0.041,0.165,0.064,0.246c0.047,0.161,0.099,0.318,0.167,0.472 c0.031,0.07,0.134,0.043,0.116-0.035C386.658,381.464,386.62,381.332,386.572,381.203z\"})),_path43||(_path43=/*#__PURE__*/React.createElement(\"path\",{d:\"M390.768,387.244c-0.093-0.186-0.181-0.378-0.259-0.571c-0.038-0.095-0.081-0.188-0.119-0.283 c-0.04-0.099-0.066-0.198-0.087-0.303c-0.004-0.022-0.037-0.012-0.033,0.01c0.04,0.209,0.063,0.428,0.132,0.629 c0.07,0.204,0.161,0.39,0.278,0.571C390.717,387.354,390.798,387.302,390.768,387.244z\"}))),_path44||(_path44=/*#__PURE__*/React.createElement(\"path\",{d:\"M346.526,424.693c-0.094-0.186-0.181-0.378-0.259-0.571c-0.038-0.095-0.081-0.188-0.119-0.283 c-0.04-0.099-0.066-0.198-0.086-0.303c-0.004-0.022-0.037-0.012-0.033,0.01c0.04,0.209,0.063,0.428,0.133,0.629 c0.07,0.204,0.161,0.39,0.278,0.571C346.475,424.804,346.555,424.752,346.526,424.693z\"}))),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{fill:\"#263238\"},d:\"M360.159,372.085c0.056-0.186-2.22-2.099-2.27-2.561c-0.049-0.462,0.61-1.056,0.94-0.957 c0.33,0.099,2.111,2.364,2.474,2.54c0.363,0.176,3.761-0.165,4.883,0c1.122,0.165,4.629,2.307,5.737,2.395 c1.107,0.088,10.363-2.329,10.924-2.395c0.561-0.066,1.716-2.804,2.441-3.002c0.726-0.198,1.362,0,1.275,0.462 c-0.087,0.462-2.199,2.837-1.968,2.903c0.231,0.066,0.957,0.693,1.32,1.089c0.363,0.396,2.414,4.535,2.375,4.85 c-0.039,0.315-0.264,0.346-0.462,0.231c-0.198-0.116-2.639-4.421-3.052-4.685c-0.412-0.264-0.874-0.215-1.056,0.132 c-0.181,0.346-0.906,3.249-1.039,3.711c-0.247,0.858-0.198,2.507-0.528,2.623c-0.33,0.116-1.022,0.085-1.064-0.263 c-0.042-0.348,0.206-3.036,0.338-3.63c0.132-0.594,0.99-3.101,0.99-3.101s-10.088,2.395-10.924,2.263 C370.659,374.558,360.159,372.085,360.159,372.085z\"}),/*#__PURE__*/React.createElement(\"path\",{style:{fill:\"#263238\"},d:\"M382.979,370.783c0.142,0.095,0.283,0.172,0.43,0.233c0.147,0.059,0.296,0.107,0.45,0.125 c0.153,0.02,0.31,0.03,0.468,0.012c0.08-0.001,0.158-0.022,0.24-0.029c0.081-0.012,0.161-0.034,0.247-0.043 c-0.068,0.05-0.141,0.096-0.217,0.136c-0.079,0.031-0.157,0.073-0.243,0.089c-0.168,0.052-0.348,0.052-0.524,0.032 c-0.176-0.025-0.345-0.09-0.493-0.185C383.189,371.058,383.06,370.934,382.979,370.783z\"}),/*#__PURE__*/React.createElement(\"path\",{style:{fill:\"#263238\"},d:\"M383.065,370.87c0.122,0.109,0.246,0.201,0.377,0.274c0.132,0.07,0.268,0.129,0.412,0.153 c0.143,0.027,0.291,0.038,0.442,0.024c0.076-0.001,0.151-0.02,0.23-0.026c0.077-0.013,0.154-0.031,0.238-0.04 c-0.065,0.049-0.135,0.093-0.208,0.133c-0.076,0.03-0.152,0.07-0.234,0.086c-0.162,0.048-0.338,0.046-0.507,0.017 C383.476,371.423,383.177,371.181,383.065,370.87z\"}),/*#__PURE__*/React.createElement(\"path\",{style:{fill:\"#263238\"},d:\"M382.979,370.857c0.253,0.236,0.519,0.429,0.821,0.519c0.149,0.047,0.306,0.07,0.467,0.064 c0.162,0.001,0.323-0.034,0.498-0.06c-0.14,0.102-0.303,0.184-0.481,0.214c-0.177,0.04-0.366,0.024-0.542-0.028 c-0.175-0.055-0.337-0.149-0.466-0.273C383.145,371.169,383.038,371.022,382.979,370.857z\"}),/*#__PURE__*/React.createElement(\"path\",{style:{fill:\"#263238\"},d:\"M360.886,371.626c-0.457,0.078-5.21,10.664-5.464,11.324c-0.254,0.66-1.475,8.248-1.442,8.446 c0.033,0.198,12.009,2.045,13.955,1.914c1.947-0.132,14.699-1.848,15.128-2.046c0.429-0.198-2.031-10.524-2.064-11.217 c-0.033-0.693,1.221-7.786,1.848-8.941c0,0-9.01,2.593-10.924,2.395C370.01,373.304,362.678,371.321,360.886,371.626z\"}),/*#__PURE__*/React.createElement(\"path\",{style:{fill:\"#263238\"},d:\"M361.304,371.107c-0.865,0.186-4.883,12.473-5.147,13.907c-0.264,1.434-1.056,7.834-0.594,7.966 c0.462,0.132,9.303,1.353,12.438,1.353c3.134,0,13.592-1.353,13.856-1.716c0.264-0.363-1.518-10.689-1.65-12.141 c-0.132-1.452,1.749-7.951,2.639-9.369c0,0-0.231-0.198-2.408,0c-2.177,0.198-7.724,2.065-8.812,1.966 C370.538,372.974,366.055,370.084,361.304,371.107z\"}),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{fill:\"#263238\"},d:\"M381.766,391.085c-3.585,0.5-12.863,1.786-14.026,1.786c-0.002,0-0.002,0-0.002,0 c-0.752-0.002-8.865-1.024-12.296-1.46c0.008-0.186,0.02-0.387,0.034-0.595c4.625,0.587,11.617,1.458,12.262,1.46h0.002 c1.111,0,10.395-1.284,13.953-1.782C381.72,390.702,381.746,390.9,381.766,391.085z\"}),/*#__PURE__*/React.createElement(\"path\",{style:{fill:\"#263238\"},d:\"M381.335,387.97c-3.845,0.538-12.478,1.728-13.596,1.728c-0.002,0-0.002,0-0.002,0 c-0.732-0.002-8.451-0.972-12.02-1.425c0.02-0.2,0.044-0.397,0.068-0.591c4.621,0.587,11.322,1.419,11.953,1.421h0.002 c1.068,0,9.677-1.186,13.506-1.72C381.276,387.579,381.305,387.775,381.335,387.97z\"}),/*#__PURE__*/React.createElement(\"path\",{style:{fill:\"#263238\"},d:\"M381.593,389.755c-3.732,0.522-12.699,1.76-13.853,1.76c-0.002,0-0.002,0-0.002,0 c-0.766-0.002-8.627-0.992-12.203-1.447c0.034-0.385,0.071-0.786,0.113-1.187c5.036,0.643,11.502,1.441,12.09,1.443 c0.002,0,0.002,0,0.002,0c0.988,0,9.125-1.109,13.685-1.748C381.484,388.988,381.542,389.382,381.593,389.755z\"}),/*#__PURE__*/React.createElement(\"path\",{style:{fill:\"#263238\"},d:\"M380.845,384.775c-3.859,0.325-11.33,0.937-12.715,0.937c-0.038,0-0.072-0.002-0.099-0.002 c-0.701-0.024-7.826-0.917-11.695-1.407c0.087-0.315,0.202-0.706,0.339-1.157c4.367,0.552,10.798,1.353,11.393,1.373 c0.915,0.028,7.689-0.512,12.592-0.923C380.72,383.974,380.781,384.368,380.845,384.775z\"}),/*#__PURE__*/React.createElement(\"path\",{style:{fill:\"#263238\"},d:\"M380.484,378.392c-0.097,0.45-0.173,0.863-0.222,1.212c-3.915,0.333-10.591,0.881-12.209,0.881 c0,0-0.002,0-0.004,0c-0.625-0.002-6.133-0.69-10.125-1.2c0.129-0.379,0.26-0.766,0.393-1.151 c4.544,0.581,9.242,1.161,9.734,1.161c0,0,0.002,0,0.004,0C369.65,379.295,376.641,378.719,380.484,378.392z\"}),/*#__PURE__*/React.createElement(\"path\",{style:{fill:\"#263238\"},d:\"M380.535,382.781c-3.947,0.331-11.014,0.905-12.357,0.905h-0.099 c-0.667-0.022-7.197-0.839-11.153-1.339c0.113-0.363,0.236-0.75,0.369-1.155c4.336,0.548,10.254,1.286,10.824,1.304 c0.893,0.028,7.371-0.486,12.238-0.893C380.406,381.946,380.468,382.342,380.535,382.781z\"}),/*#__PURE__*/React.createElement(\"path\",{style:{fill:\"#263238\"},d:\"M380.274,381.023c-3.986,0.333-10.756,0.883-12.052,0.883c-0.038,0-0.069-0.002-0.097-0.002 c-0.633-0.02-6.669-0.774-10.647-1.276c0.061-0.19,0.125-0.383,0.19-0.577c3.966,0.5,9.877,1.238,10.475,1.258 c0.964,0.028,7.974-0.538,12.064-0.877c0,0.016,0,0.03,0.002,0.044C380.22,380.598,380.242,380.785,380.274,381.023z\"}),/*#__PURE__*/React.createElement(\"circle\",{style:{fill:\"#263238\"},cx:357.095,cy:386.173,r:0.506}),/*#__PURE__*/React.createElement(\"path\",{style:{fill:\"#263238\"},d:\"M360.251,386.558c0,0.279-0.226,0.506-0.506,0.506c-0.279,0-0.506-0.227-0.506-0.506 c0-0.279,0.227-0.506,0.506-0.506C360.025,386.052,360.251,386.278,360.251,386.558z\"}),/*#__PURE__*/React.createElement(\"path\",{style:{fill:\"#263238\"},d:\"M363.284,386.997c0,0.279-0.227,0.506-0.506,0.506c-0.279,0-0.506-0.226-0.506-0.506 s0.227-0.506,0.506-0.506C363.057,386.492,363.284,386.718,363.284,386.997z\"}),/*#__PURE__*/React.createElement(\"path\",{style:{fill:\"#263238\"},d:\"M366.377,387.324c0,0.279-0.226,0.506-0.506,0.506s-0.506-0.226-0.506-0.506 s0.227-0.506,0.506-0.506S366.377,387.045,366.377,387.324z\"}),/*#__PURE__*/React.createElement(\"path\",{style:{fill:\"#263238\"},d:\"M369.285,387.445c0,0.279-0.227,0.506-0.506,0.506c-0.279,0-0.506-0.227-0.506-0.506 c0-0.279,0.227-0.506,0.506-0.506C369.059,386.94,369.285,387.166,369.285,387.445z\"}),/*#__PURE__*/React.createElement(\"path\",{style:{fill:\"#263238\"},d:\"M372.243,387.203c0,0.279-0.227,0.506-0.506,0.506c-0.279,0-0.506-0.227-0.506-0.506 s0.227-0.506,0.506-0.506C372.017,386.698,372.243,386.924,372.243,387.203z\"}),/*#__PURE__*/React.createElement(\"path\",{style:{fill:\"#263238\"},d:\"M375.048,386.94c0,0.279-0.226,0.506-0.506,0.506c-0.279,0-0.506-0.226-0.506-0.506 c0-0.279,0.227-0.506,0.506-0.506C374.821,386.434,375.048,386.66,375.048,386.94z\"}),/*#__PURE__*/React.createElement(\"path\",{style:{fill:\"#263238\"},d:\"M377.832,386.618c0,0.279-0.227,0.506-0.506,0.506s-0.506-0.227-0.506-0.506 c0-0.279,0.227-0.506,0.506-0.506S377.832,386.338,377.832,386.618z\"}),/*#__PURE__*/React.createElement(\"path\",{style:{fill:\"#263238\"},d:\"M380.463,386.294c0,0.279-0.227,0.506-0.506,0.506c-0.279,0-0.506-0.227-0.506-0.506 c0-0.279,0.227-0.506,0.506-0.506C380.236,385.788,380.463,386.014,380.463,386.294z\"}))),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{fill:\"#263238\"},d:\"M413.364,375.892c-0.018,0-0.035-0.001-0.053-0.002c-5.312-0.474-8.755-3.445-8.899-3.571 c-0.247-0.217-0.272-0.593-0.055-0.84c0.217-0.247,0.593-0.271,0.84-0.055c0.037,0.033,3.134,2.689,7.813,3.239 c0.593-1.191,2.522-4.78,5.035-6.488c0.272-0.185,0.642-0.114,0.827,0.157c0.185,0.272,0.115,0.642-0.157,0.827 c-2.697,1.834-4.788,6.342-4.808,6.387C413.808,375.758,413.595,375.892,413.364,375.892z\"}),/*#__PURE__*/React.createElement(\"path\",{style:{fill:\"#263238\"},d:\"M411.534,381.962c-0.016,0-0.032-0.001-0.048-0.002c-6.831-0.544-9.026-3.554-9.116-3.682 c-0.189-0.269-0.125-0.64,0.144-0.829c0.268-0.189,0.637-0.125,0.827,0.141c0.014,0.019,0.511,0.682,1.749,1.397 c1.163,0.672,3.233,1.527,6.49,1.786c0.328,0.026,0.572,0.313,0.546,0.641C412.102,381.726,411.841,381.962,411.534,381.962z\"}),/*#__PURE__*/React.createElement(\"path\",{style:{fill:\"#263238\"},d:\"M414.769,378.314c-0.152,0-0.305-0.058-0.421-0.174c-1.381-1.381-1.567-2.711-1.574-2.767 c-0.042-0.326,0.188-0.625,0.514-0.667c0.324-0.041,0.621,0.186,0.666,0.509c0.004,0.028,0.17,1.016,1.236,2.082 c0.233,0.232,0.233,0.609,0,0.842C415.073,378.255,414.921,378.314,414.769,378.314z\"})),/*#__PURE__*/React.createElement(\"path\",{style:{fill:\"#263238\"},d:\"M403.303,379.366c0,0.541-0.439,0.98-0.98,0.98c-0.541,0-0.98-0.439-0.98-0.98 c0-0.541,0.439-0.98,0.98-0.98C402.864,378.386,403.303,378.824,403.303,379.366z\"}),/*#__PURE__*/React.createElement(\"circle\",{style:{fill:\"#263238\"},cx:404.451,cy:373.526,r:0.98}),/*#__PURE__*/React.createElement(\"path\",{style:{fill:\"#263238\"},d:\"M407.658,374.912c0,0.541-0.439,0.98-0.98,0.98c-0.541,0-0.98-0.439-0.98-0.98 s0.439-0.98,0.98-0.98C407.219,373.932,407.658,374.371,407.658,374.912z\"}),/*#__PURE__*/React.createElement(\"circle\",{style:{fill:\"#263238\"},cx:409.164,cy:376.007,r:0.98}),/*#__PURE__*/React.createElement(\"circle\",{style:{fill:\"#263238\"},cx:411.804,cy:376.667,r:0.98}),/*#__PURE__*/React.createElement(\"path\",{style:{fill:\"#263238\"},d:\"M414.495,378.672c0,0.541-0.439,0.98-0.98,0.98c-0.541,0-0.98-0.439-0.98-0.98 c0-0.541,0.439-0.98,0.98-0.98C414.056,377.692,414.495,378.131,414.495,378.672z\"}),/*#__PURE__*/React.createElement(\"path\",{style:{fill:\"#263238\"},d:\"M404.999,380.834c0,0.541-0.439,0.98-0.98,0.98s-0.98-0.439-0.98-0.98 c0-0.541,0.439-0.98,0.98-0.98S404.999,380.293,404.999,380.834z\"}),/*#__PURE__*/React.createElement(\"path\",{style:{fill:\"#263238\"},d:\"M407.11,381.814c0,0.541-0.439,0.98-0.98,0.98s-0.98-0.439-0.98-0.98 c0-0.541,0.439-0.98,0.98-0.98S407.11,381.272,407.11,381.814z\"}),/*#__PURE__*/React.createElement(\"path\",{style:{fill:\"#263238\"},d:\"M409.403,382.49c0,0.541-0.439,0.98-0.98,0.98s-0.98-0.439-0.98-0.98 c0-0.541,0.439-0.98,0.98-0.98S409.403,381.949,409.403,382.49z\"}),/*#__PURE__*/React.createElement(\"path\",{style:{fill:\"#263238\"},d:\"M411.911,382.886c0,0.541-0.439,0.98-0.98,0.98s-0.98-0.439-0.98-0.98 c0-0.541,0.439-0.98,0.98-0.98S411.911,382.345,411.911,382.886z\"}))))),/*#__PURE__*/React.createElement(\"g\",{id:\"Trees\"},_g3||(_g3=/*#__PURE__*/React.createElement(\"g\",{id:\"Capa_4\"})),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{fill:\"#FFC727\"},d:\"M114.685,474.894c0,0-48.315-78.242-50.367-133.219 c-2.235-59.904,34.391-123.943,34.391-123.943l-2.832-2.235c0,0-51.675,65.827-46.758,135.119 c4.765,67.139,43.81,124.278,43.81,124.278H114.685z\"}),/*#__PURE__*/React.createElement(\"path\",{style:{fill:\"#FFC727\"},d:\"M98.182,215.498c0,0-30.734-27.605-45.039-26.711c-14.305,0.894-43.14,33.305-43.14,34.422 c0,1.118,24.811-17.222,24.811-17.222l-14.529,18.786l20.788-19.223l-6.706,16.094l12.07-17.882l-3.353,16.988l11.4-16.317 l-5.758,12.517l9.111-10.181l-3.353,9.063l7.823-8.047l-6.259,11.623l10.506-10.729l-4.247,9.388c0,0,5.365-5.588,6.258-6.482 c0.894-0.894-1.788,6.259-1.788,6.259l8.717-8.941l-2.012,8.047l4.47-4.694l-0.894,4.694l4.47-4.694l-0.979,4.247l6.791-4.47 l-0.894,2.235L98.182,215.498z\"}),/*#__PURE__*/React.createElement(\"path\",{style:{fill:\"#FFC727\"},d:\"M97.918,215.263c0,0-49.246,5.264-61.093,14.205s-29.058,39.34-29.058,39.34l24.811-25.354 l-12.294,25.354l17.658-27.046l-3.576,22.352l12.964-25.258l-4.917,22.129l9.388-25.258l-3.076,24.14l11.346-26.376 l-3.129,18.999l9.611-21.234l-3.576,18.776l12.964-24.587l-4.918,21.011l9.526-22.576l-1.256,10.952l7.264-13.411l-2.57,8.941 l8.27-11.735l-1.118,7.264L97.918,215.263z\"}),/*#__PURE__*/React.createElement(\"path\",{style:{fill:\"#FFC727\"},d:\"M97.742,215.498c0,0-2.689-33.975-11.63-41.799c-8.941-7.823-38.169-16.764-38.169-16.764 l17.381,8.494l-17.381-1.565l23.64,4.917l-18.999,1.118l20.479,2.459l-19.361,5.141l21.458-1.565l-11.4,4.023l14.305,1.341 l-16.541,2.235l19.446,2.682H67.336l18.999,4.897c0,0-12.464-0.691-13.273,0c-0.809,0.691,14.838,4.491,14.838,4.491 l-8.132,1.118l9.249,1.565l-6.929,2.682l8.941,0.224L84.1,202.98l7.6,2.012l-3.129,1.341l5.812,2.784L97.742,215.498z\"}),/*#__PURE__*/React.createElement(\"path\",{style:{fill:\"#FFC727\"},d:\"M97.288,215.074c0,0,15.535,25.817,11.958,43.698c-3.576,17.882-23.693,49.845-23.693,49.845 l10.058-20.34L81.53,301.241l15.758-20.34l-15.758,9.164l14.125-14.305l-12.784,4.694l11.623-10.953l-12.964,4.918 l12.964-10.059l-11.623,2.906l15.199-9.835l-14.305,4.415l10.952-6.65l-10.282,1.565l12.852-7.6l-10.617,0.447l12.964-8.27 l-12.07,3.129l11.847-6.929l-9.835,0.671c0,0,8.047-6.035,8.494-6.035c0.447,0-7.6,1.341-7.6,1.341l6.817-7.376l-3.688-0.671 L97.288,215.074z\"}),/*#__PURE__*/React.createElement(\"path\",{style:{fill:\"#FFC727\"},d:\"M97.742,215.498c0,0,14.56-33.379,28.567-40.532c14.007-7.153,39.042-6.557,39.042-6.557 l-17.733,3.874l16.243,1.341l-26.376,2.533l25.183,2.235l-31.122,3.427l27.844,2.086l-23.395,4.023l12.368,3.129l-18.478-0.782 l15.348,3.167l-19.968,2.235l14.007,3.427h-24.14l14.007,4.023l-14.901-0.298l9.239,2.384c0,0-13.113,2.831-14.156,2.831 c-1.043,0,7.749,0.596,7.749,0.596l-14.454,2.98l4.917,0.447L97.742,215.498z\"}),/*#__PURE__*/React.createElement(\"path\",{style:{fill:\"#FFC727\"},d:\"M97.93,215.074c0,0-0.53-41.337,5.58-51.917c6.109-10.58,19.67-14.454,19.67-14.454 l-10.58,8.233l10.58-1.378l-11.027,6.706l11.921-0.894l-14.305,6.259l11.623-1.341l-10.716,4.917l7.14,0.298l-9.984,5.812 l8.494-1.937l-9.537,6.706l8.792-2.384l-10.729,7.451l7.898-2.533l-10.282,7.333l7.6-2.266l-7.749,5.067l4.619-0.894 l-6.11,5.066l5.215-2.384l-6.11,6.259l3.725-1.341L97.93,215.074z\"}),/*#__PURE__*/React.createElement(\"path\",{style:{fill:\"#FFC727\"},d:\"M97.293,216.254c0,0,46.791-14.699,67.801-7.499c21.011,7.201,30.995,32.086,30.995,32.086 l-14.901-15.348l4.768,16.54l-13.411-19.819l3.725,18.478l-8.941-18.627l3.13,19.223l-10.282-20.266l2.235,21.011 l-10.133-22.203l2.682,16.094l-10.133-18.441l5.514,21.719l-11.623-21.719c0,0,3.427,19.782,3.278,18.888 c-0.149-0.894-8.345-17.882-8.345-17.882l1.49,12.368l-6.407-11.623l1.214,8.941l-7.473-10.692l2.533,10.096l-7.451-10.096 l1.192,6.072c0,0-7.153-6.287-7.972-6.496C109.959,216.85,97.293,216.254,97.293,216.254z\"}),/*#__PURE__*/React.createElement(\"path\",{style:{fill:\"#FFC727\"},d:\"M97.293,215.498c0,0,26.934,6.966,35.279,18.739c8.345,11.772,0.745,56.178,0.745,56.178 l0.149-25.63l-5.663,12.219l4.619-18.776l-9.239,13.113l8.345-20.862l-9.835,15.348l7.153-20.713l-9.09,14.902l5.662-19.968 l-7.6,15.497l2.831-18.925l-5.514,11.474l2.533-14.752l-4.769,8.693l1.49-12.716l-2.906,7.004l-1.38-9.09l-0.32,4.917 l-2.993-9.734v4.966l-3.427-6.557L97.293,215.498z\"})),/*#__PURE__*/React.createElement(\"path\",{style:{fill:\"#FFC727\"},d:\"M115,474.894H80.832c0,0,2.201-12.136-13.463-17.924c0,0,11.036,0.747,16.077,10.269 c0,0-7.655-20.538-24.273-24.273c0,0,19.958,3.548,28.837,22.592c0,0,3.361-17.971-21.275-27.914c0,0,22.265,1.68,30.714,29.407 c0,0-4.481-24.086,14.004-34.168c0,0-11.576,11.389-9.896,25.766c0,0,5.041-17.551,26.513-16.804 c0,0-20.912,6.722-22.592,20.912c0,0,7.282-11.203,19.231-11.576c0,0-10.643,5.041-12.323,10.083c0,0,6.722-6.161,12.51-2.987 C124.896,458.277,112.573,459.957,115,474.894z\"})),/*#__PURE__*/React.createElement(\"g\",{style:{opacity:0.6}},_g4||(_g4=/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{d:\"M114.685,474.894c0,0-48.315-78.242-50.367-133.219c-2.235-59.904,34.391-123.943,34.391-123.943l-2.832-2.235 c0,0-51.675,65.827-46.758,135.119c4.765,67.139,43.81,124.278,43.81,124.278H114.685z\"}),/*#__PURE__*/React.createElement(\"path\",{d:\"M98.182,215.498c0,0-30.734-27.605-45.039-26.711c-14.305,0.894-43.14,33.305-43.14,34.422 c0,1.118,24.811-17.222,24.811-17.222l-14.529,18.786l20.788-19.223l-6.706,16.094l12.07-17.882l-3.353,16.988l11.4-16.317 l-5.758,12.517l9.111-10.181l-3.353,9.063l7.823-8.047l-6.259,11.623l10.506-10.729l-4.247,9.388c0,0,5.365-5.588,6.258-6.482 c0.894-0.894-1.788,6.259-1.788,6.259l8.717-8.941l-2.012,8.047l4.47-4.694l-0.894,4.694l4.47-4.694l-0.979,4.247l6.791-4.47 l-0.894,2.235L98.182,215.498z\"}),/*#__PURE__*/React.createElement(\"path\",{d:\"M97.918,215.263c0,0-49.246,5.264-61.093,14.205s-29.058,39.34-29.058,39.34l24.811-25.354l-12.294,25.354 l17.658-27.046l-3.576,22.352l12.964-25.258l-4.917,22.129l9.388-25.258l-3.076,24.14l11.346-26.376l-3.129,18.999 l9.611-21.234l-3.576,18.776l12.964-24.587l-4.918,21.011l9.526-22.576l-1.256,10.952l7.264-13.411l-2.57,8.941l8.27-11.735 l-1.118,7.264L97.918,215.263z\"}),/*#__PURE__*/React.createElement(\"path\",{d:\"M97.742,215.498c0,0-2.689-33.975-11.63-41.799c-8.941-7.823-38.169-16.764-38.169-16.764l17.381,8.494l-17.381-1.565 l23.64,4.917l-18.999,1.118l20.479,2.459l-19.361,5.141l21.458-1.565l-11.4,4.023l14.305,1.341l-16.541,2.235l19.446,2.682 H67.336l18.999,4.897c0,0-12.464-0.691-13.273,0c-0.809,0.691,14.838,4.491,14.838,4.491l-8.132,1.118l9.249,1.565 l-6.929,2.682l8.941,0.224L84.1,202.98l7.6,2.012l-3.129,1.341l5.812,2.784L97.742,215.498z\"}),/*#__PURE__*/React.createElement(\"path\",{d:\"M97.288,215.074c0,0,15.535,25.817,11.958,43.698c-3.576,17.882-23.693,49.845-23.693,49.845l10.058-20.34 L81.53,301.241l15.758-20.34l-15.758,9.164l14.125-14.305l-12.784,4.694l11.623-10.953l-12.964,4.918l12.964-10.059 l-11.623,2.906l15.199-9.835l-14.305,4.415l10.952-6.65l-10.282,1.565l12.852-7.6l-10.617,0.447l12.964-8.27l-12.07,3.129 l11.847-6.929l-9.835,0.671c0,0,8.047-6.035,8.494-6.035c0.447,0-7.6,1.341-7.6,1.341l6.817-7.376l-3.688-0.671L97.288,215.074 z\"}),/*#__PURE__*/React.createElement(\"path\",{d:\"M97.742,215.498c0,0,14.56-33.379,28.567-40.532c14.007-7.153,39.042-6.557,39.042-6.557l-17.733,3.874l16.243,1.341 l-26.376,2.533l25.183,2.235l-31.122,3.427l27.844,2.086l-23.395,4.023l12.368,3.129l-18.478-0.782l15.348,3.167l-19.968,2.235 l14.007,3.427h-24.14l14.007,4.023l-14.901-0.298l9.239,2.384c0,0-13.113,2.831-14.156,2.831c-1.043,0,7.749,0.596,7.749,0.596 l-14.454,2.98l4.917,0.447L97.742,215.498z\"}),/*#__PURE__*/React.createElement(\"path\",{d:\"M97.93,215.074c0,0-0.53-41.337,5.58-51.917c6.109-10.58,19.67-14.454,19.67-14.454l-10.58,8.233l10.58-1.378 l-11.027,6.706l11.921-0.894l-14.305,6.259l11.623-1.341l-10.716,4.917l7.14,0.298l-9.984,5.812l8.494-1.937l-9.537,6.706 l8.792-2.384l-10.729,7.451l7.898-2.533l-10.282,7.333l7.6-2.266l-7.749,5.067l4.619-0.894l-6.11,5.066l5.215-2.384 l-6.11,6.259l3.725-1.341L97.93,215.074z\"}),/*#__PURE__*/React.createElement(\"path\",{d:\"M97.293,216.254c0,0,46.791-14.699,67.801-7.499c21.011,7.201,30.995,32.086,30.995,32.086l-14.901-15.348l4.768,16.54 l-13.411-19.819l3.725,18.478l-8.941-18.627l3.13,19.223l-10.282-20.266l2.235,21.011l-10.133-22.203l2.682,16.094 l-10.133-18.441l5.514,21.719l-11.623-21.719c0,0,3.427,19.782,3.278,18.888c-0.149-0.894-8.345-17.882-8.345-17.882 l1.49,12.368l-6.407-11.623l1.214,8.941l-7.473-10.692l2.533,10.096l-7.451-10.096l1.192,6.072c0,0-7.153-6.287-7.972-6.496 C109.959,216.85,97.293,216.254,97.293,216.254z\"}),/*#__PURE__*/React.createElement(\"path\",{d:\"M97.293,215.498c0,0,26.934,6.966,35.279,18.739c8.345,11.772,0.745,56.178,0.745,56.178l0.149-25.63l-5.663,12.219 l4.619-18.776l-9.239,13.113l8.345-20.862l-9.835,15.348l7.153-20.713l-9.09,14.902l5.662-19.968l-7.6,15.497l2.831-18.925 l-5.514,11.474l2.533-14.752l-4.769,8.693l1.49-12.716l-2.906,7.004l-1.38-9.09l-0.32,4.917l-2.993-9.734v4.966l-3.427-6.557 L97.293,215.498z\"}))),_path45||(_path45=/*#__PURE__*/React.createElement(\"path\",{d:\"M115,474.894H80.832c0,0,2.201-12.136-13.463-17.924c0,0,11.036,0.747,16.077,10.269c0,0-7.655-20.538-24.273-24.273 c0,0,19.958,3.548,28.837,22.592c0,0,3.361-17.971-21.275-27.914c0,0,22.265,1.68,30.714,29.407c0,0-4.481-24.086,14.004-34.168 c0,0-11.576,11.389-9.896,25.766c0,0,5.041-17.551,26.513-16.804c0,0-20.912,6.722-22.592,20.912 c0,0,7.282-11.203,19.231-11.576c0,0-10.643,5.041-12.323,10.083c0,0,6.722-6.161,12.51-2.987 C124.896,458.277,112.573,459.957,115,474.894z\"})))),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{fill:\"#FFC727\"},d:\"M604.855,419.116c0,0,20.815-33.707,21.698-57.392c0.963-25.807-14.816-53.395-14.816-53.395 l1.22-0.963c0,0,22.262,28.359,20.144,58.21c-2.053,28.924-18.874,53.54-18.874,53.54H604.855z\"}),/*#__PURE__*/React.createElement(\"path\",{style:{fill:\"#FFC727\"},d:\"M611.964,307.367c0,0,13.24-11.892,19.403-11.507c6.163,0.385,18.585,14.348,18.585,14.829 c0,0.481-10.689-7.419-10.689-7.419l6.259,8.093l-8.955-8.281l2.889,6.933l-5.2-7.704l1.444,7.318l-4.911-7.029l2.481,5.392 l-3.925-4.386l1.444,3.904l-3.37-3.466l2.696,5.007l-4.526-4.622l1.83,4.044c0,0-2.311-2.407-2.696-2.793 c-0.385-0.385,0.77,2.696,0.77,2.696l-3.756-3.852l0.867,3.467l-1.926-2.022l0.385,2.022l-1.926-2.022l0.422,1.83l-2.925-1.926 l0.385,0.963L611.964,307.367z\"}),/*#__PURE__*/React.createElement(\"path\",{style:{fill:\"#FFC727\"},d:\"M612.078,307.265c0,0,21.215,2.268,26.319,6.12c5.104,3.852,12.518,16.948,12.518,16.948 l-10.689-10.923l5.296,10.923l-7.607-11.652l1.541,9.629l-5.585-10.881l2.119,9.533l-4.044-10.881l1.325,10.4l-4.888-11.363 l1.348,8.185l-4.141-9.148l1.541,8.089l-5.585-10.592l2.118,9.052l-4.104-9.726l0.541,4.718l-3.13-5.778l1.107,3.852 l-3.563-5.056l0.481,3.13L612.078,307.265z\"}),/*#__PURE__*/React.createElement(\"path\",{style:{fill:\"#FFC727\"},d:\"M612.154,307.367c0,0,1.158-14.637,5.01-18.007c3.852-3.37,16.443-7.222,16.443-7.222 l-7.488,3.659l7.488-0.674l-10.184,2.118l8.185,0.482l-8.823,1.059l8.341,2.215l-9.244-0.674l4.911,1.733l-6.163,0.578 l7.126,0.963l-8.378,1.156h5.874l-8.185,2.109c0,0,5.37-0.298,5.718,0c0.349,0.298-6.392,1.935-6.392,1.935l3.503,0.482 l-3.985,0.674l2.985,1.156l-3.852,0.096l2.985,0.77l-3.274,0.867l1.348,0.578l-2.504,1.199L612.154,307.367z\"}),/*#__PURE__*/React.createElement(\"path\",{style:{fill:\"#FFC727\"},d:\"M612.349,307.184c0,0-6.693,11.122-5.152,18.826c1.541,7.704,10.207,21.474,10.207,21.474 l-4.333-8.763l6.067,5.585l-6.789-8.763l6.789,3.948l-6.085-6.163l5.508,2.022l-5.007-4.718l5.585,2.118l-5.585-4.333 l5.007,1.252l-6.548-4.237l6.163,1.902l-4.718-2.865l4.43,0.674l-5.537-3.274l4.574,0.193l-5.585-3.563l5.2,1.348l-5.104-2.985 l4.237,0.289c0,0-3.467-2.6-3.659-2.6c-0.193,0,3.274,0.578,3.274,0.578l-2.937-3.178l1.589-0.289L612.349,307.184z\"}),/*#__PURE__*/React.createElement(\"path\",{style:{fill:\"#FFC727\"},d:\"M612.154,307.367c0,0-6.272-14.38-12.307-17.461c-6.034-3.081-16.82-2.825-16.82-2.825 l7.639,1.669l-6.997,0.578l11.363,1.091l-10.849,0.963l13.407,1.476l-11.995,0.899l10.079,1.733l-5.328,1.348l7.96-0.337 l-6.612,1.364l8.602,0.963l-6.034,1.477h10.4l-6.034,1.733l6.42-0.128l-3.98,1.027c0,0,5.649,1.22,6.099,1.22 c0.449,0-3.338,0.257-3.338,0.257l6.227,1.284l-2.118,0.193L612.154,307.367z\"}),/*#__PURE__*/React.createElement(\"path\",{style:{fill:\"#FFC727\"},d:\"M612.073,307.184c0,0,0.228-17.808-2.404-22.366c-2.632-4.558-8.474-6.227-8.474-6.227 l4.558,3.547l-4.558-0.594l4.75,2.889l-5.136-0.385l6.163,2.696l-5.007-0.578l4.617,2.118l-3.076,0.128l4.301,2.504 l-3.659-0.835l4.109,2.889l-3.788-1.027l4.622,3.21l-3.402-1.091l4.43,3.159l-3.274-0.976l3.338,2.183l-1.99-0.385l2.632,2.183 l-2.247-1.027l2.632,2.696l-1.605-0.578L612.073,307.184z\"}),/*#__PURE__*/React.createElement(\"path\",{style:{fill:\"#FFC727\"},d:\"M612.347,307.692c0,0-20.158-6.333-29.209-3.23c-9.052,3.102-13.353,13.823-13.353,13.823 l6.42-6.612l-2.054,7.126l5.778-8.538l-1.605,7.96l3.852-8.025l-1.348,8.281l4.43-8.731l-0.963,9.052l4.365-9.565l-1.156,6.933 l4.365-7.944l-2.375,9.357l5.007-9.357c0,0-1.477,8.522-1.412,8.137c0.064-0.385,3.595-7.703,3.595-7.703l-0.642,5.328 l2.76-5.007l-0.523,3.852l3.219-4.606l-1.091,4.349l3.21-4.349l-0.513,2.616c0,0,3.081-2.708,3.434-2.799 C606.891,307.949,612.347,307.692,612.347,307.692z\"}),/*#__PURE__*/React.createElement(\"path\",{style:{fill:\"#FFC727\"},d:\"M612.347,307.367c0,0-11.603,3.001-15.198,8.073c-3.595,5.072-0.321,24.202-0.321,24.202 l-0.064-11.042l2.439,5.264l-1.99-8.089l3.98,5.649l-3.595-8.987l4.237,6.612l-3.081-8.923l3.916,6.42l-2.439-8.602 l3.274,6.676l-1.22-8.153l2.375,4.943l-1.091-6.355l2.054,3.745l-0.642-5.478l1.252,3.017l0.595-3.916l0.138,2.118l1.29-4.193 v2.139l1.477-2.825L612.347,307.367z\"})),/*#__PURE__*/React.createElement(\"path\",{style:{fill:\"#FFC727\"},d:\"M602.8,419.116h23.496c0,0-1.513-8.345,9.258-12.326c0,0-7.589,0.513-11.055,7.062 c0,0,5.264-14.123,16.691-16.691c0,0-13.724,2.44-19.83,15.535c0,0-2.311-12.358,14.63-19.195c0,0-15.311,1.156-21.121,20.222 c0,0,3.081-16.563-9.629-23.496c0,0,7.96,7.832,6.805,17.718c0,0-3.467-12.069-18.232-11.555c0,0,14.38,4.622,15.535,14.38 c0,0-5.007-7.704-13.224-7.96c0,0,7.318,3.467,8.474,6.933c0,0-4.622-4.237-8.602-2.054 C595.995,407.689,604.469,408.845,602.8,419.116z\"})),/*#__PURE__*/React.createElement(\"g\",{style:{opacity:0.6}},_g5||(_g5=/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{d:\"M604.855,419.116c0,0,20.815-33.707,21.698-57.392c0.963-25.807-14.816-53.395-14.816-53.395l1.22-0.963 c0,0,22.262,28.359,20.144,58.21c-2.053,28.924-18.874,53.54-18.874,53.54H604.855z\"}),/*#__PURE__*/React.createElement(\"path\",{d:\"M611.964,307.367c0,0,13.24-11.892,19.403-11.507c6.163,0.385,18.585,14.348,18.585,14.829 c0,0.481-10.689-7.419-10.689-7.419l6.259,8.093l-8.955-8.281l2.889,6.933l-5.2-7.704l1.444,7.318l-4.911-7.029l2.481,5.392 l-3.925-4.386l1.444,3.904l-3.37-3.466l2.696,5.007l-4.526-4.622l1.83,4.044c0,0-2.311-2.407-2.696-2.793 c-0.385-0.385,0.77,2.696,0.77,2.696l-3.756-3.852l0.867,3.467l-1.926-2.022l0.385,2.022l-1.926-2.022l0.422,1.83l-2.925-1.926 l0.385,0.963L611.964,307.367z\"}),/*#__PURE__*/React.createElement(\"path\",{d:\"M612.078,307.265c0,0,21.215,2.268,26.319,6.12c5.104,3.852,12.518,16.948,12.518,16.948l-10.689-10.923l5.296,10.923 l-7.607-11.652l1.541,9.629l-5.585-10.881l2.119,9.533l-4.044-10.881l1.325,10.4l-4.888-11.363l1.348,8.185l-4.141-9.148 l1.541,8.089l-5.585-10.592l2.118,9.052l-4.104-9.726l0.541,4.718l-3.13-5.778l1.107,3.852l-3.563-5.056l0.481,3.13 L612.078,307.265z\"}),/*#__PURE__*/React.createElement(\"path\",{d:\"M612.154,307.367c0,0,1.158-14.637,5.01-18.007c3.852-3.37,16.443-7.222,16.443-7.222l-7.488,3.659l7.488-0.674 l-10.184,2.118l8.185,0.482l-8.823,1.059l8.341,2.215l-9.244-0.674l4.911,1.733l-6.163,0.578l7.126,0.963l-8.378,1.156h5.874 l-8.185,2.109c0,0,5.37-0.298,5.718,0c0.349,0.298-6.392,1.935-6.392,1.935l3.503,0.482l-3.985,0.674l2.985,1.156l-3.852,0.096 l2.985,0.77l-3.274,0.867l1.348,0.578l-2.504,1.199L612.154,307.367z\"}),/*#__PURE__*/React.createElement(\"path\",{d:\"M612.349,307.184c0,0-6.693,11.122-5.152,18.826c1.541,7.704,10.207,21.474,10.207,21.474l-4.333-8.763l6.067,5.585 l-6.789-8.763l6.789,3.948l-6.085-6.163l5.508,2.022l-5.007-4.718l5.585,2.118l-5.585-4.333l5.007,1.252l-6.548-4.237 l6.163,1.902l-4.718-2.865l4.43,0.674l-5.537-3.274l4.574,0.193l-5.585-3.563l5.2,1.348l-5.104-2.985l4.237,0.289 c0,0-3.467-2.6-3.659-2.6c-0.193,0,3.274,0.578,3.274,0.578l-2.937-3.178l1.589-0.289L612.349,307.184z\"}),/*#__PURE__*/React.createElement(\"path\",{d:\"M612.154,307.367c0,0-6.272-14.38-12.307-17.461c-6.034-3.081-16.82-2.825-16.82-2.825l7.639,1.669l-6.997,0.578 l11.363,1.091l-10.849,0.963l13.407,1.476l-11.995,0.899l10.079,1.733l-5.328,1.348l7.96-0.337l-6.612,1.364l8.602,0.963 l-6.034,1.477h10.4l-6.034,1.733l6.42-0.128l-3.98,1.027c0,0,5.649,1.22,6.099,1.22c0.449,0-3.338,0.257-3.338,0.257 l6.227,1.284l-2.118,0.193L612.154,307.367z\"}),/*#__PURE__*/React.createElement(\"path\",{d:\"M612.073,307.184c0,0,0.228-17.808-2.404-22.366c-2.632-4.558-8.474-6.227-8.474-6.227l4.558,3.547l-4.558-0.594 l4.75,2.889l-5.136-0.385l6.163,2.696l-5.007-0.578l4.617,2.118l-3.076,0.128l4.301,2.504l-3.659-0.835l4.109,2.889 l-3.788-1.027l4.622,3.21l-3.402-1.091l4.43,3.159l-3.274-0.976l3.338,2.183l-1.99-0.385l2.632,2.183l-2.247-1.027l2.632,2.696 l-1.605-0.578L612.073,307.184z\"}),/*#__PURE__*/React.createElement(\"path\",{d:\"M612.347,307.692c0,0-20.158-6.333-29.209-3.23c-9.052,3.102-13.353,13.823-13.353,13.823l6.42-6.612l-2.054,7.126 l5.778-8.538l-1.605,7.96l3.852-8.025l-1.348,8.281l4.43-8.731l-0.963,9.052l4.365-9.565l-1.156,6.933l4.365-7.944 l-2.375,9.357l5.007-9.357c0,0-1.477,8.522-1.412,8.137c0.064-0.385,3.595-7.703,3.595-7.703l-0.642,5.328l2.76-5.007 l-0.523,3.852l3.219-4.606l-1.091,4.349l3.21-4.349l-0.513,2.616c0,0,3.081-2.708,3.434-2.799 C606.891,307.949,612.347,307.692,612.347,307.692z\"}),/*#__PURE__*/React.createElement(\"path\",{d:\"M612.347,307.367c0,0-11.603,3.001-15.198,8.073c-3.595,5.072-0.321,24.202-0.321,24.202l-0.064-11.042l2.439,5.264 l-1.99-8.089l3.98,5.649l-3.595-8.987l4.237,6.612l-3.081-8.923l3.916,6.42l-2.439-8.602l3.274,6.676l-1.22-8.153l2.375,4.943 l-1.091-6.355l2.054,3.745l-0.642-5.478l1.252,3.017l0.595-3.916l0.138,2.118l1.29-4.193v2.139l1.477-2.825L612.347,307.367z\"}))),_path46||(_path46=/*#__PURE__*/React.createElement(\"path\",{d:\"M602.8,419.116h23.496c0,0-1.513-8.345,9.258-12.326c0,0-7.589,0.513-11.055,7.062c0,0,5.264-14.123,16.691-16.691 c0,0-13.724,2.44-19.83,15.535c0,0-2.311-12.358,14.63-19.195c0,0-15.311,1.156-21.121,20.222c0,0,3.081-16.563-9.629-23.496 c0,0,7.96,7.832,6.805,17.718c0,0-3.467-12.069-18.232-11.555c0,0,14.38,4.622,15.535,14.38c0,0-5.007-7.704-13.224-7.96 c0,0,7.318,3.467,8.474,6.933c0,0-4.622-4.237-8.602-2.054C595.995,407.689,604.469,408.845,602.8,419.116z\"})))),/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"g\",null,/*#__PURE__*/React.createElement(\"path\",{style:{fill:\"#FFC727\"},d:\"M638.396,419.116h-31.407c0,0,53.424-45.33,61.843-90.012 c8.418-44.682-6.799-64.109-6.799-64.109l3.238-1.943c0,0,17.161,29.788,9.066,67.023S638.396,419.116,638.396,419.116z\"}),/*#__PURE__*/React.createElement(\"path\",{style:{fill:\"#FFC727\"},d:\"M665.162,266.506c0,0,28.493,10.577,37.559,18.995c9.066,8.418,11.224,42.524,11.224,42.524 l-6.044-23.744l2.59,20.29l-7.339-26.119l0.648,25.687l-4.965-32.378l-0.432,26.335l-3.238-27.845l-2.375,21.253l-1.079-22.548 l-2.159,17.268l-2.59-20.938l0.648,18.78l-5.828-21.586l1.079,13.599l-6.357-14.894l2.255,11.225l-4.749-14.031l1.079,7.771 L665.162,266.506z\"}),/*#__PURE__*/React.createElement(\"path\",{style:{fill:\"#FFC727\"},d:\"M665.162,266.506c0,0-16.621,9.714-18.995,23.312c-2.374,13.599,3.454,41.444,3.454,41.444 l0.216-22.017l5.544,14.678l-3.169-21.37l5.396,15.757l-2.227-21.046l5.033,11.117l-3.454-17.916l5.396,8.418l-3.885-14.678 l5.612,8.634l-3.238-15.542l4.317,7.339l-2.159-11.872l3.454,4.749l-2.374-7.555L665.162,266.506z\"}),/*#__PURE__*/React.createElement(\"path\",{style:{fill:\"#FFC727\"},d:\"M666.457,269.068c0,0,11.224-20.262,29.141-26.522c17.916-6.26,37.343,3.022,37.343,3.022 l-20.938-1.295l14.031,5.396l-20.29-1.943l15.542,8.202l-21.586-5.396c0,0,13.599,13.383,12.951,12.52 c-0.648-0.863-16.621-11.009-16.621-11.009l9.282,14.462l-14.462-11.783l8.85,14.346l-13.383-10.765l10.793,12.52l-15.973-7.771 l8.418,8.418l-11.872-4.965l5.181,4.965l-10.145-4.965L666.457,269.068z\"}),/*#__PURE__*/React.createElement(\"path\",{style:{fill:\"#FFC727\"},d:\"M665.162,266.506c0,0-1.727-33.242,5.828-48.784c7.555-15.542,33.242-23.312,33.242-23.312 l-17.269,13.599l17.269-6.691l-19.62,10.577c0,0,15.95-2.806,16.598-3.022c0.648-0.216-18.995,7.339-18.995,7.339l19.427-0.432 l-19.859,4.317l17.916,0.647l-18.779,4.317l18.779,0.648l-23.193,4.749l19.308-1.511l-19.308,5.828l16.286-0.648l-18.348,6.25 l15.11-1.285l-15.973,4.965l9.714-0.648l-11.872,4.965l8.85,0.432l-9.929,2.806l6.163,1.079l-7.89,3.233h8.85l-8.85,4.538 L665.162,266.506z\"}),/*#__PURE__*/React.createElement(\"path\",{style:{fill:\"#FFC727\"},d:\"M665.162,269.096c0,0-16.837-9.282-30.436-7.339c-13.599,1.943-31.083,16.837-31.083,16.837 l11.224-5.612l-5.396,9.282l9.282-10.387l-3.022,13.625l6.044-12.951l0.432,11.656l6.26-12.736v12.088l5.181-12.088 l-0.432,14.031l6.691-14.031l0.863,9.929l3.238-11.656l1.59,8.203l2.943-7.339l2.374,6.476l1.727-8.203l1.537,6.536l2.995-5.888 L665.162,269.096z\"}),/*#__PURE__*/React.createElement(\"path\",{style:{fill:\"#FFC727\"},d:\"M664.992,265.427c0,0,2.113-30.22-4.363-43.171c-6.476-12.951-27.414-26.766-27.414-26.766 l12.383,13.815l-13.678-3.669l16.701,8.634h-15.621l17.484,3.669c0,0-10.577,4.965-11.872,4.749s14.031-1.943,14.031-1.943 l-10.895,7.771l13.27-3.454l-11.872,6.368l12.52-1.943l-9.606,4.425l11.333-0.432c0,0-7.879,3.777-8.203,3.777 s9.929-0.54,9.929-0.54l-8.634,5.396l8.85-0.54l-7.771,3.67l7.879-0.216l-5.289,1.943l6.368,1.511l-6.152,0.648l6.368,1.619 l-5.72,1.187l5.936,0.863l-4.209,1.403l5.504,0.971l-3.238,1.943l4.209,1.403l-2.266,0.971L664.992,265.427z\"}),/*#__PURE__*/React.createElement(\"path\",{style:{fill:\"#FFC727\"},d:\"M665.162,269.096c0,0-12.358-27.737-26.119-36.156c-13.761-8.418-44.682-5.342-44.682-5.342 l25.093,4.371l-18.617,7.285l23.474-3.076l-16.027,7.609l21.478-5.18l-14.516,8.742l21.208-6.314l-16.837,10.523l20.722-7.771 l-13.275,12.137l16.189-9.708l-12.466,11.656l14.811-9.066l-8.173,11.332l11.196-8.095l-6.874,9.59l9.438-6.838l-5.587,8.257 l8.016-4.695l-4.993,7.069l8.393-4.803l-5.504,5.882c0,0,7.285-3.454,7.771-3.454s-3.252,3.454-3.252,3.454l5.033-1.079 L665.162,269.096z\"})),/*#__PURE__*/React.createElement(\"g\",{style:{opacity:0.6}},_path47||(_path47=/*#__PURE__*/React.createElement(\"path\",{d:\"M638.396,419.116h-31.407c0,0,53.424-45.33,61.843-90.012c8.418-44.682-6.799-64.109-6.799-64.109l3.238-1.943 c0,0,17.161,29.788,9.066,67.023S638.396,419.116,638.396,419.116z\"})),_path48||(_path48=/*#__PURE__*/React.createElement(\"path\",{d:\"M665.162,266.506c0,0,28.493,10.577,37.559,18.995c9.066,8.418,11.224,42.524,11.224,42.524l-6.044-23.744l2.59,20.29 l-7.339-26.119l0.648,25.687l-4.965-32.378l-0.432,26.335l-3.238-27.845l-2.375,21.253l-1.079-22.548l-2.159,17.268 l-2.59-20.938l0.648,18.78l-5.828-21.586l1.079,13.599l-6.357-14.894l2.255,11.225l-4.749-14.031l1.079,7.771L665.162,266.506z\"})),_path49||(_path49=/*#__PURE__*/React.createElement(\"path\",{d:\"M665.162,266.506c0,0-16.621,9.714-18.995,23.312c-2.374,13.599,3.454,41.444,3.454,41.444l0.216-22.017l5.544,14.678 l-3.169-21.37l5.396,15.757l-2.227-21.046l5.033,11.117l-3.454-17.916l5.396,8.418l-3.885-14.678l5.612,8.634l-3.238-15.542 l4.317,7.339l-2.159-11.872l3.454,4.749l-2.374-7.555L665.162,266.506z\"})),_path50||(_path50=/*#__PURE__*/React.createElement(\"path\",{d:\"M666.457,269.068c0,0,11.224-20.262,29.141-26.522c17.916-6.26,37.343,3.022,37.343,3.022l-20.938-1.295l14.031,5.396 l-20.29-1.943l15.542,8.202l-21.586-5.396c0,0,13.599,13.383,12.951,12.52c-0.648-0.863-16.621-11.009-16.621-11.009 l9.282,14.462l-14.462-11.783l8.85,14.346l-13.383-10.765l10.793,12.52l-15.973-7.771l8.418,8.418l-11.872-4.965l5.181,4.965 l-10.145-4.965L666.457,269.068z\"})),_path51||(_path51=/*#__PURE__*/React.createElement(\"path\",{d:\"M665.162,266.506c0,0-1.727-33.242,5.828-48.784c7.555-15.542,33.242-23.312,33.242-23.312l-17.269,13.599l17.269-6.691 l-19.62,10.577c0,0,15.95-2.806,16.598-3.022c0.648-0.216-18.995,7.339-18.995,7.339l19.427-0.432l-19.859,4.317l17.916,0.647 l-18.779,4.317l18.779,0.648l-23.193,4.749l19.308-1.511l-19.308,5.828l16.286-0.648l-18.348,6.25l15.11-1.285l-15.973,4.965 l9.714-0.648l-11.872,4.965l8.85,0.432l-9.929,2.806l6.163,1.079l-7.89,3.233h8.85l-8.85,4.538L665.162,266.506z\"})),_path52||(_path52=/*#__PURE__*/React.createElement(\"path\",{d:\"M665.162,269.096c0,0-16.837-9.282-30.436-7.339c-13.599,1.943-31.083,16.837-31.083,16.837l11.224-5.612l-5.396,9.282 l9.282-10.387l-3.022,13.625l6.044-12.951l0.432,11.656l6.26-12.736v12.088l5.181-12.088l-0.432,14.031l6.691-14.031 l0.863,9.929l3.238-11.656l1.59,8.203l2.943-7.339l2.374,6.476l1.727-8.203l1.537,6.536l2.995-5.888L665.162,269.096z\"})),_path53||(_path53=/*#__PURE__*/React.createElement(\"path\",{d:\"M664.992,265.427c0,0,2.113-30.22-4.363-43.171c-6.476-12.951-27.414-26.766-27.414-26.766l12.383,13.815l-13.678-3.669 l16.701,8.634h-15.621l17.484,3.669c0,0-10.577,4.965-11.872,4.749s14.031-1.943,14.031-1.943l-10.895,7.771l13.27-3.454 l-11.872,6.368l12.52-1.943l-9.606,4.425l11.333-0.432c0,0-7.879,3.777-8.203,3.777s9.929-0.54,9.929-0.54l-8.634,5.396 l8.85-0.54l-7.771,3.67l7.879-0.216l-5.289,1.943l6.368,1.511l-6.152,0.648l6.368,1.619l-5.72,1.187l5.936,0.863l-4.209,1.403 l5.504,0.971l-3.238,1.943l4.209,1.403l-2.266,0.971L664.992,265.427z\"})),_path54||(_path54=/*#__PURE__*/React.createElement(\"path\",{d:\"M665.162,269.096c0,0-12.358-27.737-26.119-36.156c-13.761-8.418-44.682-5.342-44.682-5.342l25.093,4.371l-18.617,7.285 l23.474-3.076l-16.027,7.609l21.478-5.18l-14.516,8.742l21.208-6.314l-16.837,10.523l20.722-7.771l-13.275,12.137l16.189-9.708 l-12.466,11.656l14.811-9.066l-8.173,11.332l11.196-8.095l-6.874,9.59l9.438-6.838l-5.587,8.257l8.016-4.695l-4.993,7.069 l8.393-4.803l-5.504,5.882c0,0,7.285-3.454,7.771-3.454s-3.252,3.454-3.252,3.454l5.033-1.079L665.162,269.096z\"})))))));}const ForwardRef=/*#__PURE__*/React.forwardRef(SvgPyramid);export default __webpack_public_path__+\"static/media/pyramid.1d28662475e809e16e0ef06b748e8c2f.svg\";export{ForwardRef as ReactComponent};","import React from 'react'\r\nimport '../styles/HomePageWelcome.css'\r\nimport Pyramid from \"../assets/svgs/pyramid.svg\"\r\n\r\nfunction HomePageWelcome() {\r\n\r\n  function show(e){\r\n    console.log(\"Ran\")\r\n      if(e.target.id === 'Pyramid'){\r\n        console.log(\"Inside\")\r\n        document.querySelector('.hidden').classList.add('show');\r\n      }\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n    <div className=\"HPWelcomeBody\">\r\n    <section className='hidden'><h1 >Give us your money!</h1></section> \r\n      \r\n      <div className=\"landPyramid\">\r\n          \r\n        <img src={Pyramid} alt=\"\"  onMouseEnter={show} id='Pyramid'/>\r\n         </div>\r\n    \r\n      <section>\r\n        <span></span>\r\n        <span></span>\r\n        <span></span>\r\n        <span></span>\r\n        <span></span>\r\n        <span></span>\r\n        <span></span>\r\n        <span></span>\r\n        <span></span>\r\n        <span></span>\r\n        <span></span>\r\n        <span></span>\r\n        <span></span>\r\n        <span></span>\r\n      </section>\r\n      <div className=\"HPWelcomeBodyBackground\">\r\n      \r\n      </div>\r\n    </div>\r\n    \r\n    </>\r\n  )\r\n}\r\n\r\nexport default HomePageWelcome","var _g;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgBlob1(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    id: \"visual\",\n    viewBox: \"0 0 900 600\",\n    width: 900,\n    height: 600,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    transform: \"translate(454.99748009005094 305.5235750061594)\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M119.9 -137.9C149.7 -90 164.4 -45 167.8 3.4C171.2 51.9 163.4 103.7 133.5 146.5C103.7 189.4 51.9 223.2 -9.4 232.6C-70.7 242 -141.4 227.1 -166.4 184.3C-191.4 141.4 -170.7 70.7 -166.5 4.2C-162.2 -62.2 -174.5 -124.5 -149.5 -172.3C-124.5 -220.1 -62.2 -253.6 -8.6 -245C45 -236.4 90 -185.7 119.9 -137.9\",\n    fill: \"#f60059\"\n  }))));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgBlob1);\nexport default __webpack_public_path__ + \"static/media/blob1.2e066037c994b3293047260f648628c9.svg\";\nexport { ForwardRef as ReactComponent };","var _g;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgBlob2(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    id: \"visual\",\n    viewBox: \"0 0 900 600\",\n    width: 900,\n    height: 600,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    transform: \"translate(433.52012468853354 287.0490656278989)\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M115.7 -99.9C160.7 -70.7 215.4 -35.4 227.6 12.3C239.9 59.9 209.7 119.7 164.7 150.2C119.7 180.7 59.9 181.9 -5.4 187.3C-70.7 192.7 -141.4 202.4 -173.4 171.9C-205.4 141.4 -198.7 70.7 -191.1 7.7C-183.4 -55.4 -174.8 -110.8 -142.8 -139.9C-110.8 -169.1 -55.4 -172.1 -10 -162C35.4 -152 70.7 -129 115.7 -99.9\",\n    fill: \"#f60059\"\n  }))));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgBlob2);\nexport default __webpack_public_path__ + \"static/media/blob2.1c1499a71bc59ad6809e24ed50484565.svg\";\nexport { ForwardRef as ReactComponent };","import React from 'react';\r\nimport '../styles/footer.css';\r\n\r\nfunction Footer() {\r\n  return (\r\n    <footer className=\"Footer\">\r\n      <div className=\"footer-content\">\r\n        <h3>Hash Slingers</h3>\r\n        <p>Bringing you the most exciting and engaging gaming experiences. Explore our wide range of games and join our gaming community!</p>\r\n      </div>\r\n      <div className=\"footer-bottom\">\r\n        <p>Connect with us:</p>\r\n        <div className=\"social-icons\">\r\n          <a href=\"https://www.tiktok.com\">TikTok</a> |\r\n          <a href=\"https://www.instagram.com\">Instagram</a>| \r\n          <a href=\"https://www.twitter.com\">Twitter</a>\r\n        </div>\r\n        <p>© 2023 Hash Slingers. All rights reserved.</p>\r\n        <p><a href=\"#privacy\">Privacy Policy</a> | <a href=\"#terms\">Terms of Service</a></p>\r\n      </div>\r\n    </footer>\r\n  );\r\n}\r\n\r\nexport default Footer;","import React from 'react'\r\nimport Header from '../components/Header.jsx'\r\nimport LandScreen from '../components/HomePageWelcome.jsx'\r\nimport '../styles/HomePage.css'\r\nimport blob1 from \"../assets/svgs/blob1.svg\"\r\nimport blob2 from \"../assets/svgs/blob2.svg\"\r\nimport rouletteImg from \"../assets/images/roulette.jpg\"\r\nimport horseImg from \"../assets/images/horseRace.jpg\"\r\nimport coinTossImg from \"../assets/images/coinToss.png\"\r\nimport Footer from '../components/Footer.jsx'\r\n\r\nfunction Homepage() {\r\n  return (\r\n    <>\r\n      <LandScreen />\r\n      <Header />\r\n      <div className=\"HomepageBody\">\r\n        <img src={blob1} alt=\"\" className='blob1' />\r\n        <div className=\"homepageContent\">\r\n          <div className=\"gamesList\">\r\n            <h1>Our games</h1>\r\n            <div className=\"gameContainer\">\r\n              <div className=\"game\">\r\n                <div className=\"gameBack\"></div>\r\n                <h1>Coin Toss</h1>\r\n                <img src={coinTossImg} alt=\"Image\" />\r\n                <p>Expe1rience the thrill of the Coin Toss! A simple yet exciting game where your luck is tested with a flip of a coin.</p>\r\n              </div>\r\n              <div className=\"game\">\r\n                <div className=\"gameBack\"></div>\r\n                <h1>Roulette</h1>\r\n                <img src={rouletteImg} alt=\"Image\" />\r\n                <p>Join the Roulette frenzy! Spin the wheel and let fortune decide your fate in this classic game of chance.</p>\r\n              </div>\r\n              <div className=\"game\">\r\n                <div className=\"gameBack\"></div>\r\n                <h1>Horse Race</h1>\r\n                <img src={horseImg} alt=\"Image\" />\r\n                <p>Get in on the action with our Horse Race game. Bet on your favorite and watch as they gallop towards victory.</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"homeInfo\">\r\n          <h3>Hash-Slinging Casino offers many of the most popular casino games you will find in some of the most famous casinos around the world. Enjoy the safe and secure online casino experience, where you can play online slots, Poker, Baccarat, Roulette, Blackjack, and many more online casino games!</h3>\r\n\r\n          </div>\r\n        </div>\r\n        <img src={blob2} alt=\"\" className='blob2' />\r\n      </div>\r\n      <Footer /> \r\n    </>\r\n  )\r\n}\r\n\r\nexport default Homepage\r\n","var _defs, _g;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgMnyTruck(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 48 48\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), _defs || (_defs = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"style\", null, \".cls-1{fill:#7c7d7d;}.cls-2{fill:#919191;}.cls-3{fill:#dad7e5;}.cls-4{fill:#edebf2;}.cls-5{fill:#374f68;}.cls-6{fill:#425b72;}.cls-7{fill:#9fdbf3;}.cls-8{fill:#b2e5fb;}.cls-9{fill:#fc6;}.cls-10{fill:#ffde76;}.cls-11{fill:#f8834b;}\"))), title === undefined ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, \"Money Transport\") : title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    id: \"Money_Transport\",\n    \"data-name\": \"Money Transport\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    className: \"cls-1\",\n    d: \"M31,32v4H2a1,1,0,0,1-1-1V32Z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    className: \"cls-2\",\n    d: \"M31,32v2H6a2,2,0,0,1-2-2Z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    className: \"cls-3\",\n    d: \"M31,16V32H1V17a1,1,0,0,1,1-1Z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    className: \"cls-4\",\n    d: \"M31,16V29H7a3,3,0,0,1-3-3V16Z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    className: \"cls-5\",\n    d: \"M15,36a4,4,0,1,1-5.64-3.64A4,4,0,0,1,15,36Z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    className: \"cls-6\",\n    d: \"M14.64,37.64a4,4,0,0,1-5.28-5.28A4,4,0,0,1,14.64,37.64Z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    className: \"cls-3\",\n    d: \"M47,30.62V35a1,1,0,0,1-1,1H31V20h7.61a2,2,0,0,1,1.88,1.3L43,28C46.58,29.78,47,29.79,47,30.62Z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    className: \"cls-4\",\n    d: \"M47,30.62V34H37a3,3,0,0,1-3-3V20h4.61a2,2,0,0,1,1.88,1.3L43,28C46.55,29.77,47,29.79,47,30.62Z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    className: \"cls-4\",\n    d: \"M11,37a1,1,0,1,1,1-1A1,1,0,0,1,11,37Z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    className: \"cls-3\",\n    d: \"M39,20H31V16h4A4,4,0,0,1,39,20Z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    className: \"cls-4\",\n    d: \"M38.46,18H35a2,2,0,0,1-2-2C34.91,16,37.13,15.69,38.46,18Z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    className: \"cls-7\",\n    d: \"M43,28H37a1,1,0,0,1-1-1V25a1,1,0,0,1,1-1h4.5Z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    className: \"cls-8\",\n    d: \"M42.25,26H39a1,1,0,0,1-1-1V24h3.5Z\"\n  }), /*#__PURE__*/React.createElement(\"circle\", {\n    className: \"cls-5\",\n    cx: 39,\n    cy: 36,\n    r: 4\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    className: \"cls-6\",\n    d: \"M42.64,37.64a4,4,0,0,1-5.28-5.28A4,4,0,0,1,42.64,37.64Z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    className: \"cls-4\",\n    d: \"M38.26,35.29a1,1,0,0,1,1.42,1.42A1,1,0,0,1,38.26,35.29Z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    className: \"cls-9\",\n    d: \"M25,17A9,9,0,1,1,10.72,9.72,9,9,0,0,1,25,17Z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    className: \"cls-10\",\n    d: \"M23.67,21.69c-8,4.86-17.26-4.33-12.36-12.36C19.34,4.41,28.57,13.69,23.67,21.69Z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    className: \"cls-11\",\n    d: \"M16,16a1,1,0,1,1,1-1,1,1,0,0,0,1,1c1.66,0,1.21-3-1-3.82a1,1,0,1,0-2,0A3,3,0,0,0,16,18a1,1,0,1,1-1,1,1,1,0,0,0-1-1c-1.66,0-1.21,3,1,3.82a1,1,0,1,0,2,0A3,3,0,0,0,16,16Z\"\n  }))));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgMnyTruck);\nexport default __webpack_public_path__ + \"static/media/mnyTruck.4c4fbc513d800f405caba2242024e6a9.svg\";\nexport { ForwardRef as ReactComponent };","import React, { useState } from 'react';\r\nimport Header from '../components/Header.jsx';\r\nimport Footer from '../components/Footer.jsx';\r\nimport '../styles/Funds.css';\r\nimport moneyTruck from \"../assets/svgs/mnyTruck.svg\";\r\nimport { useBalance } from \"../BalanceContext\"; \r\n\r\nfunction Funds() {\r\n  const [inputAmount, setInputAmount] = useState('');\r\n  const { balance, updateBalance } = useBalance(); \r\n\r\n  const handleUpdateBalance = () => {\r\n    const inputNumber = parseFloat(inputAmount);\r\n    if (!isNaN(inputNumber) && inputNumber > 0) {\r\n      const newBalance = balance + inputNumber;\r\n      updateBalance(newBalance); \r\n      setInputAmount(''); \r\n      window.alert(\"Funds added!\");\r\n    } else {\r\n      console.error('Invalid input amount');\r\n      window.alert(\"Invalid amount entered. Please enter a positive number.\");\r\n    }\r\n  };\r\n\r\n  const resetBalance = () => {\r\n    if (window.confirm(\"Are you sure you want to reset the balance?\")) {\r\n      updateBalance(0);\r\n      alert(\"Balance has been reset to $0\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Header />\r\n      <div className=\"fundsBody\">\r\n        <img src={moneyTruck} alt=\"Money Truck\" />\r\n        <div className=\"addFundsPanel\">\r\n          <h1>Add funds</h1>\r\n          <div className=\"fundInputs\">\r\n            <input\r\n              type=\"number\"\r\n              placeholder=\"$ amount\"\r\n              value={inputAmount}\r\n              onChange={e => setInputAmount(e.target.value)}\r\n            />\r\n            <button onClick={handleUpdateBalance}>Submit</button>\r\n          </div>\r\n          {/* Positioned Reset Balance link below the Submit button */}\r\n          <div className=\"reset-wrapper\">\r\n            <div className=\"reset-link\" onClick={resetBalance}>\r\n              <small>Reset Balance</small>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <Footer />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Funds;","import {React,useState} from 'react'\r\nimport Header from '../components/Header.jsx'\r\nimport '../styles/Games.css'\r\nimport wheelIcon from \"../assets/images/rouletteWhl.png\"\r\nimport h1 from \"../assets/images/horse0.png\"\r\nimport h2 from \"../assets/images/horse1.png\"\r\nimport h3 from \"../assets/images/horse2.png\"\r\nimport h4 from \"../assets/images/horse3.png\"\r\nimport Footer from '../components/Footer.jsx'\r\nfunction Games() {\r\n  const [coinResult, setCoinResult] = useState(0);\r\n\r\n  const headsImage = require(\"../assets/images/heads.png\")\r\n  const tailsImage = require(\"../assets/images/tails.png\")\r\n\r\n\r\n \r\n\r\n\r\n    const rotationValues = [\r\n      [\r\n        { minDegree: 0, maxDegree: 9.7, value: 0 },\r\n        { minDegree: 9.8, maxDegree: 19.4, value: 32 },\r\n        { minDegree: 19.5, maxDegree: 29.1, value: 15 },\r\n        { minDegree: 29.2, maxDegree: 38.8, value: 19 },\r\n        { minDegree: 38.9, maxDegree: 48.5, value: 4 },\r\n        { minDegree: 48.6, maxDegree: 58.2, value: 21 },\r\n        { minDegree: 58.3, maxDegree: 67.9, value: 2 },\r\n        { minDegree: 68.0, maxDegree: 77.6, value: 25 },\r\n        { minDegree: 77.7, maxDegree: 87.3, value: 17 },\r\n        { minDegree: 87.4, maxDegree: 97.0, value: 34 },\r\n        { minDegree: 97.1, maxDegree: 106.7, value: 6 },\r\n        { minDegree: 106.8, maxDegree: 116.4, value: 27 },\r\n        { minDegree: 116.5, maxDegree: 126.1, value: 13 },\r\n        { minDegree: 126.2, maxDegree: 135.8, value: 36 },\r\n        { minDegree: 135.9, maxDegree: 145.5, value: 11 },\r\n        { minDegree: 145.6, maxDegree: 155.2, value: 30 },\r\n        { minDegree: 155.3, maxDegree: 164.9, value: 8 },\r\n        { minDegree: 165.0, maxDegree: 174.6, value: 23 },\r\n        { minDegree: 174.7, maxDegree: 184.3, value: 10 },\r\n        { minDegree: 184.4, maxDegree: 194.0, value: 5 },\r\n        { minDegree: 194.1, maxDegree: 203.7, value: 24 },\r\n        { minDegree: 203.8, maxDegree: 213.4, value: 16 },\r\n        { minDegree: 213.5, maxDegree: 223.1, value: 33 },\r\n        { minDegree: 223.2, maxDegree: 232.8, value: 1 },\r\n        { minDegree: 232.9, maxDegree: 242.5, value: 20 },\r\n        { minDegree: 242.6, maxDegree: 252.2, value: 14 },\r\n        { minDegree: 252.3, maxDegree: 261.9, value: 31 },\r\n        { minDegree: 262.0, maxDegree: 271.6, value: 9 },\r\n        { minDegree: 271.7, maxDegree: 281.3, value: 22 },\r\n        { minDegree: 281.4, maxDegree: 291.0, value: 18 },\r\n        { minDegree: 291.1, maxDegree: 300.7, value: 29 },\r\n        { minDegree: 300.8, maxDegree: 310.4, value: 7 },\r\n        { minDegree: 310.5, maxDegree: 320.1, value: 28 },\r\n        { minDegree: 320.2, maxDegree: 329.8, value: 12 },\r\n        { minDegree: 329.9, maxDegree: 339.5, value: 35 },\r\n        { minDegree: 339.6, maxDegree: 349.2, value: 3 },\r\n        { minDegree: 349.2, maxDegree: 360, value: 26 },\r\n      ],\r\n    ];\r\n    const [rotation, setRotation] = useState(0);\r\n    \r\n    let balance = 100; // Initial balance\r\n    let selectedRange = null; // Stores rotation\r\n    let tempRotation = null;\r\n    function getRandomRouletteValue() {\r\n      const randomDegree = Math.random() * 360;\r\n\r\n      let selectedValue = null;\r\n      for (let i = 0; i < rotationValues[0].length; i++) {\r\n        const range = rotationValues[0][i];\r\n        if (randomDegree >= range.minDegree &&randomDegree < range.maxDegree) {\r\n          selectedValue = range.value;\r\n          break;\r\n        }\r\n      }\r\n\r\n      const isEven = selectedValue % 2 === 0;\r\n\r\n      if (selectedValue !== null) {\r\n        selectedRange = rotationValues[0].find(\r\n          (range) => range.value === selectedValue\r\n        );\r\n    }\r\n\r\n      return { value: selectedValue, isEven };\r\n    }\r\n\r\n    function placeBet() {\r\n      const betAmount = parseFloat(document.getElementById(\"betInput\").value);\r\n      const userGuess = document\r\n        .getElementById(\"guessInput\")\r\n        .value.toLowerCase();\r\n      const { value, isEven } = getRandomRouletteValue();\r\n\r\n      if (selectedRange) {\r\n        setRotation(-selectedRange.minDegree);\r\n      }\r\n\r\n      console.log(`Random Roulette Value: ${value}, Is Even: ${isEven}`);\r\n\r\n      if (isNaN(betAmount) || betAmount <= 0) {\r\n        alert(\"Please enter a valid bet amount.\");\r\n        return;\r\n      }\r\n\r\n      if (balance < betAmount) {\r\n        alert(\"Insufficient balance. Please enter a smaller bet amount.\");\r\n        return;\r\n      }\r\n\r\n      if (\r\n        (userGuess === \"even\" && isEven) ||\r\n        (userGuess === \"odd\" && !isEven)\r\n      ) {\r\n        \r\n        setTimeout(() => {\r\n          alert(`Congratulations! You won $${betAmount * 2}!`);\r\n          balance += betAmount * 2;\r\n        }, 1500);\r\n      \r\n      } else {\r\n        \r\n        setTimeout(() => {\r\n          alert(`Sorry, you lost $${betAmount}.`);\r\n        balance -= betAmount;\r\n        }, 1500);\r\n        \r\n      }\r\n\r\n      updateBalance();\r\n    }\r\n\r\n    function updateBalance() {\r\n      document.getElementById(\r\n        \"balance\"\r\n      ).textContent = `Balance: $${balance.toFixed(2)}`;\r\n    }\r\n    const [hBet, sethBet] = useState(0);\r\n    const [horse, setHorse] = useState(0);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const [translations, setTranslations] = useState([0, 0, 0, 0]);\r\n    const[winner, setWinner] = useState();\r\n    const[won, setwon] = useState();\r\n    //const [places, setPlaces] = useState([3,2,1,0]);\r\n\r\n    function horseGame(){\r\n      console.log(hBet)\r\n      console.log(horse);\r\n      const goalNumber = Math.floor(Math.random() * 100) + 1;\r\n\r\n  \r\n    let winningHorse = null;\r\n    let closestDistance = Infinity;\r\n\r\n    //sets the winning horse\r\n    for (let i = 1; i <= 4; i++) {\r\n       \r\n        const horseNumber = Math.floor(Math.random() * 100) + 1;\r\n        const distance = Math.abs(horseNumber - goalNumber);\r\n        if (distance < closestDistance) {\r\n            closestDistance = distance;\r\n            winningHorse = i;\r\n        }\r\n\r\n        \r\n        console.log(`Horse ${i} number: ${horseNumber}`);\r\n       \r\n        \r\n    }\r\n    if(winningHorse == 1){\r\n      console.log(\"Set first horse first\")\r\n      setWinner(\"First Horse\")\r\n      setTranslations([425, 75, 250,50])\r\n    }else if(winningHorse == 2){\r\n      console.log(\"Set second horse first\")\r\n      setWinner(\"Second Horse\")\r\n      setTranslations([305, 425, 150,25])\r\n    }else if(winningHorse == 3){\r\n      console.log(\"Set third horse first\")\r\n      setWinner(\"Third Horse\")\r\n      setTranslations([305, 150, 425,90])\r\n    }else{\r\n      console.log(\"Set fourth horse first\")\r\n      setWinner(\"Fourth Horse\")\r\n      setTranslations([225, 150, 75,425])\r\n    }\r\n    console.log(`Goal number: ${goalNumber}`);\r\n    console.log(`Winning horse: ${winningHorse}`);\r\n    if (horse === winningHorse) {\r\n        console.log(\"Congratulations! You won!\");\r\n        setwon(\"You win!!\")\r\n        \r\n    } else {\r\n        console.log(\"Sorry, you lost. Try again!\");\r\n        setwon(\"You lose!!\")\r\n    }\r\n\r\n\r\n  \r\n\r\n\r\n  \r\n    setTimeout(() => {\r\n      setTranslations([0, 0, 0, 0]);\r\n      setWinner();\r\n      setwon();\r\n    }, 3500);\r\n  }\r\n  \r\n  \r\n\r\n  function flipCoin() {\r\n    return Math.random() < 0.5 ? 'heads' : 'tails';\r\n  }\r\n\r\n  const [fBet, setfBet] = useState(0);\r\n\r\n  function coinFlip() {\r\n    if (fBet < 1) {\r\n      alert(\"Please enter a bet amount more than $1.\")\r\n      return;\r\n    }\r\n\r\n    const userChoice = fBet > 0.5 ? 'heads' : 'tails';\r\n  \r\n    const coinResult = flipCoin();\r\n    setCoinResult(coinResult);\r\n  \r\n    if (userChoice.toLowerCase() === coinResult) {\r\n      const winnings = fBet * 1.5;\r\n      alert(\"Congratulations! You win $\" + winnings + \"!\");\r\n    } else {\r\n      alert(\"Sorry, you lose $\" + fBet + \". Better luck next time!\");\r\n    }\r\n  }\r\n  \r\n\r\n  return (\r\n    <>\r\n    \r\n    <Header/>\r\n    <div className=\"gamesBody\">\r\n    <div className=\"playableGames\">\r\n      <div className=\"coinTossGame\"></div>\r\n      <div className=\"rouletteGame\">\r\n      <h1>Roulette: </h1>\r\n      \r\n    <p id=\"balance\">Balance: $100</p>\r\n    \r\n\r\n    <form id=\"betForm\">\r\n      <label for=\"betInput\">Enter your bet amount:</label>\r\n      <input\r\n        type=\"number\"\r\n        id=\"betInput\"\r\n        placeholder=\"Enter bet amount\"\r\n        required\r\n      />\r\n      <label for=\"guessInput\">Do you bet on 'even' or 'odd'?</label>\r\n      <input\r\n        type=\"text\"\r\n        id=\"guessInput\"\r\n        placeholder=\"Enter 'even' or 'odd'\"\r\n        required\r\n      />\r\n      <button type=\"button\" onClick={placeBet} >Place Bet</button>\r\n    </form>\r\n\r\n    <div className=\"gameWheel\">\r\n      <img src={wheelIcon} alt=\"\" style={{  transform: `rotate(${rotation}deg)`,\r\n       transition: 'transform 1s ease-in-out'\r\n    \r\n    \r\n    }} />\r\n    </div>\r\n   \r\n      </div>\r\n      <hr />\r\n    <div className=\"horceRacing\">\r\n\r\n      <div className=\"horseTrack\">\r\n        <div className=\"horse\" >\r\n        <img src={h1} alt=\"\" style={{ transform: `translateX(${translations[0]}px)`, transition: 'transform 1s ease-in-out' }}/>\r\n        <hr />\r\n      </div>\r\n      \r\n      <div className=\"horse\" >\r\n        <img src={h2} alt=\"\" style={{ transform: `translateX(${translations[1]}px)`, transition: 'transform 1s ease-in-out' }}/>\r\n        <hr />\r\n      </div>\r\n      \r\n      <div className=\"horse\" >\r\n        <img src={h3} alt=\"\" style={{ transform: `translateX(${translations[2]}px)`, transition: 'transform 1s ease-in-out' }} />\r\n        <hr />\r\n      </div>\r\n      \r\n      <div className=\"horse\" >\r\n        <img src={h4} alt=\"\" style={{ transform: `translateX(${translations[3]}px)`, transition: 'transform 1s ease-in-out' }} />\r\n        <hr />\r\n      </div>\r\n      \r\n      </div>\r\n\r\n      <div className=\"horseInput\">\r\n        <div className=\"horseIContent\">\r\n      <form onSubmit={(e) => {e.preventDefault();horseGame();}}>\r\n        <input type=\"number\" placeholder='Enter Bet' onChange={(e) => sethBet(e.target.value)} required/>\r\n        <label htmlFor=\"Horses\">Horses</label>\r\n        <select name=\"Horses\" id=\"Horses\" onChange={(e) => setHorse(parseInt(e.target.value, 10))}>\r\n          <option value=\"1\">Horse One</option>\r\n          <option value=\"2\">Horse Two</option>\r\n          <option value=\"3\">Horse Three</option>\r\n          <option value=\"4\">Horse Four</option>\r\n        </select>\r\n        \r\n        <button type=\"submit\">Start Race</button>\r\n        </form>\r\n        <div className=\"Winner\">\r\n         <div className=\"WinnerContent\">\r\n           <h3>Winner is: </h3>\r\n           <h2>{winner}</h2>\r\n           <h1>{won}</h1>\r\n         </div>\r\n        \r\n        </div>\r\n       \r\n        </div>\r\n      </div>\r\n    \r\n      </div>\r\n      <hr />\r\n      <div className=\"coinFlipGame\">\r\n            <h1>Coin Flip</h1>\r\n            <form id=\"coinBetForm\">\r\n              <label htmlFor=\"coinBetInput\">Enter your bet amount:</label>\r\n              <input\r\n                type=\"number\"\r\n                id=\"coinBetInput\"\r\n                placeholder=\"Enter bet amount\"\r\n                value={fBet}\r\n                onChange={(e) => setfBet(e.target.value)}\r\n                required\r\n              />\r\n\r\n              <label htmlFor=\"coinChoice\">Choose Heads or Tails:</label>\r\n              <select id=\"coinChoice\" name=\"coinChoice\">\r\n                <option value=\"heads\">Heads</option>\r\n                <option value=\"tails\">Tails</option>\r\n              </select>\r\n            </form>\r\n\r\n            <button onClick={coinFlip}>Flip Coin</button>\r\n            {coinResult !== null && (\r\n              <><p>\r\n                The coin landed on: {coinResult === 'heads' ? 'Heads' : 'Tails'}\r\n              </p>\r\n              <img\r\n              src={coinResult === 'heads' ? headsImage : tailsImage}\r\n              alt={coinResult === 'heads' ? 'Heads' : 'Tails'}\r\n              />\r\n            </>\r\n          )}\r\n    </div>\r\n  </div>\r\n  </div>\r\n  <Footer />\r\n    \r\n    </>\r\n    \r\n  )\r\n}\r\n\r\nexport default Games\r\n","import { React, useState, useEffect } from 'react';\r\nimport Header from '../components/Header.jsx';\r\nimport '../styles/Login.css';\r\nimport Pyramid from '../assets/svgs/pyramid.svg';\r\nimport { performLogin } from '../logic/loginAuth.js';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport UpdateBalance from '../logic/UpdateBalance.js';\r\nimport Footer from '../components/Footer.jsx'\r\n\r\nfunction Login() {\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const navigate = useNavigate();\r\n\r\n  const verifyLogin = async () => {\r\n    try {\r\n      const response = await fetch('/auth/signin', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          username,\r\n          password,\r\n        }),\r\n      });\r\n  \r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        console.log('Login Successful', data);\r\n  \r\n        localStorage.setItem('isLogged', true);\r\n        localStorage.setItem('token', data.token);\r\n\r\n        navigate('/');\r\n  \r\n        window.location.reload();\r\n      } else {\r\n        console.log('Login Failed');\r\n        alert('Invalid credentials');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error during login', error);\r\n      alert('Error during login');\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    window.dispatchEvent(new Event('storage'));\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Header />\r\n      <div className=\"LoginBody\">\r\n        <span></span>\r\n        <span></span>\r\n        <span></span>\r\n        <span></span>\r\n        <span></span>\r\n        <img src={Pyramid} alt=\"\" />\r\n        <div className=\"LoginPanel\">\r\n          <h1>Login</h1>\r\n          <div className=\"LoginInput\">\r\n            <form action=\"\">\r\n              <div className=\"lgnFields\">\r\n                <input type=\"text\" placeholder=\"Username\" onChange={(e) => setUsername(e.target.value)} />\r\n                <input type=\"password\" placeholder=\"Password\" onChange={(e) => setPassword(e.target.value)} />\r\n              </div>\r\n              <div className=\"loginBtn\">\r\n                <button type=\"button\" value=\"Submit\" onClick={verifyLogin}>\r\n                  Submit\r\n                </button>\r\n              </div>\r\n              <div className=\"lgnReg\">\r\n                <Link to=\"/Register\">Don't have an account?</Link>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"LoginSand\"></div>\r\n      <Footer /> \r\n    </>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","import {React, useState} from 'react'\r\nimport Header from '../components/Header.jsx'\r\nimport '../styles/Register.css'\r\nimport Pyramid from \"../assets/svgs/pyramid.svg\"\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport Footer from '../components/Footer.jsx'\r\n\r\n\r\nfunction Register() {\r\n\r\n    const [username, setUsername] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [fullname, setFullname] = useState('');\r\n    const [dateOfBirth, setDateOfBirth] = useState('');\r\n    const navigate = useNavigate();\r\n\r\n    const createAccount = async () => {\r\n      if (fullname && username && password && email && dateOfBirth) {\r\n        try {\r\n          const response = await fetch('/api/user', {\r\n            method: 'POST',\r\n            headers: {\r\n              'Content-Type': 'application/json',\r\n              },\r\n              body: JSON.stringify({\r\n                username,\r\n                password,\r\n                email,\r\n                fullname,\r\n                dateOfBirth,\r\n                balance: 100\r\n              }),\r\n            });\r\n      \r\n          if (response.ok) {\r\n            console.log('Account created successfully');\r\n            alert('Account created successfully! You will be redirected to login.');\r\n            navigate('/Login');\r\n          } else {\r\n            console.log('Account creation failed');\r\n            alert('Failed to create account.');\r\n          }\r\n        } catch (error) {\r\n            console.error('Error during account creation:', error);\r\n            alert('An error occured. Please try again.');\r\n        }\r\n      } else {\r\n          console.log('Account creation failed');\r\n          alert('Missing input');\r\n      }\r\n    };\r\n\r\n    return (\r\n      <>\r\n        <Header/>\r\n        <div className=\"regBody\">\r\n          <img src={Pyramid} alt=\"\"/>\r\n          <div className=\"regPanel\">\r\n            <h1>Register</h1>\r\n            <div className=\"regInput\">\r\n              <form onSubmit={(e) => e.preventDefault()}>\r\n                <div className=\"regFields\">\r\n                  <div className=\"names\">\r\n                    <input type=\"text\" placeholder='Full Name' required onChange={e => setFullname(e.target.value)}/>\r\n                  </div>\r\n                  <input type=\"text\" placeholder='Username' required onChange={e => setUsername(e.target.value)}/>\r\n                  <input type=\"email\" placeholder='Email' required onChange={e => setEmail(e.target.value)}/>\r\n                  <input type=\"password\" placeholder='Password' required onChange={e => setPassword(e.target.value)}/>\r\n                  <input type=\"date\" placeholder='Date of Birth' required onChange={e => setDateOfBirth(e.target.value)}/>\r\n                </div>\r\n                <div className=\"regBtn\">\r\n                  <button type=\"submit\" onClick={createAccount}>Submit</button>\r\n                </div>\r\n                <div className=\"regLogin\">\r\n                  <Link to=\"/Login\">Login</Link>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <Footer /> \r\n      </>\r\n    );\r\n    }\r\n\r\nexport default Register\r\n","import React, { useState, useEffect } from 'react';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Routes,\r\n  Route,\r\n} from \"react-router-dom\";\r\nimport Home from './pages/Homepage';\r\nimport AddFunds from './pages/Funds';\r\nimport Games from './pages/Games';\r\nimport Login from './pages/Login';\r\nimport Register from './pages/Register';\r\nimport \"./styles/App.css\";\r\nimport { BalanceProvider } from './BalanceContext'; \r\n\r\nfunction App() {\r\n  const [backendData, setBackendData] = useState([{}]);\r\n\r\n  useEffect(() => {\r\n    fetch(\"/api/user\").then(response => response.json()).then(\r\n      data => { setBackendData(data); }\r\n    );\r\n  }, []);\r\n\r\n  return (\r\n    <BalanceProvider> {}\r\n      <Router>\r\n        <Routes>\r\n          <Route path=\"/\" element={<Home />} />\r\n          <Route path=\"/AddFunds\" element={<AddFunds />} />\r\n          <Route path=\"/Games\" element={<Games />} />\r\n          <Route path=\"/Login\" element={<Login />} />\r\n          <Route path=\"/Register\" element={<Register />} />\r\n        </Routes>\r\n      </Router>\r\n    </BalanceProvider>\r\n  );\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"names":["aa","require","ca","p","a","b","c","arguments","length","encodeURIComponent","da","Set","ea","fa","ha","add","ia","window","document","createElement","ja","Object","prototype","hasOwnProperty","ka","la","ma","v","d","e","f","g","this","acceptsBooleans","attributeName","attributeNamespace","mustUseProperty","propertyName","type","sanitizeURL","removeEmptyString","z","split","forEach","toLowerCase","ra","sa","toUpperCase","ta","slice","pa","isNaN","qa","call","test","oa","removeAttribute","setAttribute","setAttributeNS","replace","xlinkHref","ua","__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","va","Symbol","for","wa","ya","za","Aa","Ba","Ca","Da","Ea","Fa","Ga","Ha","Ia","Ja","iterator","Ka","La","A","assign","Ma","Error","stack","trim","match","Na","Oa","prepareStackTrace","defineProperty","set","Reflect","construct","l","h","k","displayName","includes","name","Pa","tag","render","Qa","$$typeof","_context","_payload","_init","Ra","Sa","Ta","nodeName","Va","_valueTracker","getOwnPropertyDescriptor","constructor","get","configurable","enumerable","getValue","setValue","stopTracking","Ua","Wa","checked","value","Xa","activeElement","body","Ya","defaultChecked","defaultValue","_wrapperState","initialChecked","Za","initialValue","controlled","ab","bb","cb","db","ownerDocument","eb","Array","isArray","fb","options","selected","defaultSelected","disabled","gb","dangerouslySetInnerHTML","children","hb","ib","jb","textContent","kb","lb","mb","nb","namespaceURI","innerHTML","valueOf","toString","firstChild","removeChild","appendChild","MSApp","execUnsafeLocalFunction","ob","lastChild","nodeType","nodeValue","pb","animationIterationCount","aspectRatio","borderImageOutset","borderImageSlice","borderImageWidth","boxFlex","boxFlexGroup","boxOrdinalGroup","columnCount","columns","flex","flexGrow","flexPositive","flexShrink","flexNegative","flexOrder","gridArea","gridRow","gridRowEnd","gridRowSpan","gridRowStart","gridColumn","gridColumnEnd","gridColumnSpan","gridColumnStart","fontWeight","lineClamp","lineHeight","opacity","order","orphans","tabSize","widows","zIndex","zoom","fillOpacity","floodOpacity","stopOpacity","strokeDasharray","strokeDashoffset","strokeMiterlimit","strokeOpacity","strokeWidth","qb","rb","sb","style","indexOf","setProperty","keys","charAt","substring","tb","menuitem","area","base","br","col","embed","hr","img","input","keygen","link","meta","param","source","track","wbr","ub","vb","is","wb","xb","target","srcElement","correspondingUseElement","parentNode","yb","zb","Ab","Bb","Cb","stateNode","Db","Eb","push","Fb","Gb","Hb","Ib","Jb","Kb","Lb","Mb","addEventListener","removeEventListener","Nb","apply","m","onError","Ob","Pb","Qb","Rb","Sb","Tb","Vb","alternate","return","flags","Wb","memoizedState","dehydrated","Xb","Zb","child","sibling","current","Yb","$b","ac","unstable_scheduleCallback","bc","unstable_cancelCallback","cc","unstable_shouldYield","dc","unstable_requestPaint","B","unstable_now","ec","unstable_getCurrentPriorityLevel","fc","unstable_ImmediatePriority","gc","unstable_UserBlockingPriority","hc","unstable_NormalPriority","ic","unstable_LowPriority","jc","unstable_IdlePriority","kc","lc","oc","Math","clz32","pc","qc","log","LN2","rc","sc","tc","uc","pendingLanes","suspendedLanes","pingedLanes","entangledLanes","entanglements","vc","xc","yc","zc","Ac","eventTimes","Cc","C","Dc","Ec","Fc","Gc","Hc","Ic","Jc","Kc","Lc","Mc","Nc","Oc","Map","Pc","Qc","Rc","Sc","delete","pointerId","Tc","nativeEvent","blockedOn","domEventName","eventSystemFlags","targetContainers","Vc","Wc","priority","isDehydrated","containerInfo","Xc","Yc","dispatchEvent","shift","Zc","$c","ad","bd","cd","ReactCurrentBatchConfig","dd","ed","transition","fd","gd","hd","id","Uc","stopPropagation","jd","kd","ld","md","nd","od","keyCode","charCode","pd","qd","rd","_reactName","_targetInst","currentTarget","isDefaultPrevented","defaultPrevented","returnValue","isPropagationStopped","preventDefault","cancelBubble","persist","isPersistent","wd","xd","yd","sd","eventPhase","bubbles","cancelable","timeStamp","Date","now","isTrusted","td","ud","view","detail","vd","Ad","screenX","screenY","clientX","clientY","pageX","pageY","ctrlKey","shiftKey","altKey","metaKey","getModifierState","zd","button","buttons","relatedTarget","fromElement","toElement","movementX","movementY","Bd","Dd","dataTransfer","Fd","Hd","animationName","elapsedTime","pseudoElement","Id","clipboardData","Jd","Ld","data","Md","Esc","Spacebar","Left","Up","Right","Down","Del","Win","Menu","Apps","Scroll","MozPrintableKey","Nd","Od","Alt","Control","Meta","Shift","Pd","Qd","key","String","fromCharCode","code","location","repeat","locale","which","Rd","Td","width","height","pressure","tangentialPressure","tiltX","tiltY","twist","pointerType","isPrimary","Vd","touches","targetTouches","changedTouches","Xd","Yd","deltaX","wheelDeltaX","deltaY","wheelDeltaY","wheelDelta","deltaZ","deltaMode","Zd","$d","ae","be","documentMode","ce","de","ee","fe","ge","he","ie","le","color","date","datetime","email","month","number","password","range","search","tel","text","time","url","week","me","ne","oe","event","listeners","pe","qe","re","se","te","ue","ve","we","xe","ye","ze","oninput","Ae","detachEvent","Be","Ce","attachEvent","De","Ee","Fe","He","Ie","Je","Ke","node","offset","nextSibling","Le","contains","compareDocumentPosition","Me","HTMLIFrameElement","contentWindow","href","Ne","contentEditable","Oe","focusedElem","selectionRange","documentElement","start","end","selectionStart","selectionEnd","min","defaultView","getSelection","extend","rangeCount","anchorNode","anchorOffset","focusNode","focusOffset","createRange","setStart","removeAllRanges","addRange","setEnd","element","left","scrollLeft","top","scrollTop","focus","Pe","Qe","Re","Se","Te","Ue","Ve","We","animationend","animationiteration","animationstart","transitionend","Xe","Ye","Ze","animation","$e","af","bf","cf","df","ef","ff","gf","hf","lf","mf","concat","nf","Ub","instance","listener","D","of","has","pf","qf","rf","random","sf","bind","capture","passive","n","t","J","x","u","w","F","tf","uf","parentWindow","vf","wf","na","xa","$a","ba","je","char","ke","unshift","xf","yf","zf","Af","Bf","Cf","Df","Ef","__html","Ff","setTimeout","Gf","clearTimeout","Hf","Promise","Jf","queueMicrotask","resolve","then","catch","If","Kf","Lf","Mf","previousSibling","Nf","Of","Pf","Qf","Rf","Sf","Tf","Uf","E","G","Vf","H","Wf","Xf","Yf","contextTypes","__reactInternalMemoizedUnmaskedChildContext","__reactInternalMemoizedMaskedChildContext","Zf","childContextTypes","$f","ag","bg","getChildContext","cg","__reactInternalMemoizedMergedChildContext","dg","eg","fg","gg","hg","jg","kg","lg","mg","ng","og","pg","qg","rg","sg","tg","ug","vg","wg","xg","yg","I","zg","Ag","Bg","elementType","deletions","Cg","pendingProps","overflow","treeContext","retryLane","Dg","mode","Eg","Fg","Gg","memoizedProps","Hg","Ig","Jg","Kg","Lg","defaultProps","Mg","Ng","Og","Pg","Qg","Rg","_currentValue","Sg","childLanes","Tg","dependencies","firstContext","lanes","Ug","Vg","context","memoizedValue","next","Wg","Xg","Yg","interleaved","Zg","$g","ah","updateQueue","baseState","firstBaseUpdate","lastBaseUpdate","shared","pending","effects","bh","ch","eventTime","lane","payload","callback","dh","K","eh","fh","gh","q","r","y","hh","ih","jh","Component","refs","kh","nh","isMounted","_reactInternals","enqueueSetState","L","lh","mh","enqueueReplaceState","enqueueForceUpdate","oh","shouldComponentUpdate","isPureReactComponent","ph","contextType","state","updater","qh","componentWillReceiveProps","UNSAFE_componentWillReceiveProps","rh","props","getDerivedStateFromProps","getSnapshotBeforeUpdate","UNSAFE_componentWillMount","componentWillMount","componentDidMount","sh","ref","_owner","_stringRef","th","join","uh","vh","index","wh","xh","yh","implementation","zh","Ah","done","Bh","Ch","Dh","Eh","Fh","Gh","Hh","Ih","tagName","Jh","Kh","Lh","M","Mh","revealOrder","Nh","Oh","_workInProgressVersionPrimary","Ph","ReactCurrentDispatcher","Qh","Rh","N","O","P","Sh","Th","Uh","Vh","Q","Wh","Xh","Yh","Zh","$h","ai","bi","ci","baseQueue","queue","di","ei","fi","lastRenderedReducer","action","hasEagerState","eagerState","lastRenderedState","dispatch","gi","hi","ii","ji","ki","getSnapshot","li","mi","R","ni","lastEffect","stores","oi","pi","qi","ri","create","destroy","deps","si","ti","ui","vi","wi","xi","yi","zi","Ai","Bi","Ci","Di","Ei","Fi","Gi","Hi","Ii","Ji","readContext","useCallback","useContext","useEffect","useImperativeHandle","useInsertionEffect","useLayoutEffect","useMemo","useReducer","useRef","useState","useDebugValue","useDeferredValue","useTransition","useMutableSource","useSyncExternalStore","useId","unstable_isNewReconciler","identifierPrefix","Ki","message","digest","Li","Mi","console","error","Ni","WeakMap","Oi","Pi","Qi","Ri","getDerivedStateFromError","componentDidCatch","Si","componentStack","Ti","pingCache","Ui","Vi","Wi","Xi","ReactCurrentOwner","Yi","Zi","$i","aj","bj","compare","cj","dj","ej","baseLanes","cachePool","transitions","fj","gj","hj","ij","jj","UNSAFE_componentWillUpdate","componentWillUpdate","componentDidUpdate","kj","lj","pendingContext","mj","Aj","Bj","Cj","Dj","nj","oj","pj","fallback","qj","rj","tj","dataset","dgst","uj","vj","_reactRetry","sj","subtreeFlags","wj","xj","isBackwards","rendering","renderingStartTime","last","tail","tailMode","yj","Ej","S","Fj","Gj","wasMultiple","multiple","suppressHydrationWarning","onClick","onclick","size","createElementNS","autoFocus","createTextNode","T","Hj","Ij","Jj","Kj","U","Lj","WeakSet","V","Mj","W","Nj","Oj","Qj","Rj","Sj","Tj","Uj","Vj","Wj","insertBefore","_reactRootContainer","Xj","X","Yj","Zj","ak","onCommitFiberUnmount","componentWillUnmount","bk","ck","dk","ek","fk","isHidden","gk","hk","display","ik","jk","kk","lk","__reactInternalSnapshotBeforeUpdate","src","Wk","mk","ceil","nk","ok","pk","Y","Z","qk","rk","sk","tk","uk","Infinity","vk","wk","xk","yk","zk","Ak","Bk","Ck","Dk","Ek","callbackNode","expirationTimes","expiredLanes","wc","callbackPriority","ig","Fk","Gk","Hk","Ik","Jk","Kk","Lk","Mk","Nk","Ok","Pk","finishedWork","finishedLanes","Qk","timeoutHandle","Rk","Sk","Tk","Uk","Vk","mutableReadLanes","Bc","Pj","onCommitFiberRoot","mc","onRecoverableError","Xk","onPostCommitFiberRoot","Yk","Zk","al","isReactComponent","pendingChildren","bl","mutableSourceEagerHydrationData","cl","cache","pendingSuspenseBoundaries","el","fl","gl","hl","il","jl","zj","$k","ll","reportError","ml","_internalRoot","nl","ol","pl","ql","sl","rl","unmount","unstable_scheduleHydration","splice","querySelectorAll","JSON","stringify","form","tl","usingClientEntryPoint","Events","ul","findFiberByHostInstance","bundleType","version","rendererPackageName","vl","rendererConfig","overrideHookState","overrideHookStateDeletePath","overrideHookStateRenamePath","overrideProps","overridePropsDeletePath","overridePropsRenamePath","setErrorHandler","setSuspenseHandler","scheduleUpdate","currentDispatcherRef","findHostInstanceByFiber","findHostInstancesForRefresh","scheduleRefresh","scheduleRoot","setRefreshHandler","getCurrentFiber","reconcilerVersion","__REACT_DEVTOOLS_GLOBAL_HOOK__","wl","isDisabled","supportsFiber","inject","exports","createPortal","dl","createRoot","unstable_strictMode","findDOMNode","flushSync","hydrate","hydrateRoot","hydratedSources","_getVersion","_source","unmountComponentAtNode","unstable_batchedUpdates","unstable_renderSubtreeIntoContainer","checkDCE","err","module","__self","__source","Fragment","jsx","jsxs","setState","forceUpdate","escape","_status","_result","default","Children","map","count","toArray","only","Profiler","PureComponent","StrictMode","Suspense","cloneElement","createContext","_currentValue2","_threadCount","Provider","Consumer","_defaultValue","_globalName","createFactory","createRef","forwardRef","isValidElement","lazy","memo","startTransition","unstable_act","pop","sortIndex","performance","setImmediate","startTime","expirationTime","priorityLevel","navigator","scheduling","isInputPending","MessageChannel","port2","port1","onmessage","postMessage","unstable_Profiling","unstable_continueExecution","unstable_forceFrameRate","floor","unstable_getFirstCallbackNode","unstable_next","unstable_pauseExecution","unstable_runWithPriority","delay","unstable_wrapCallback","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","leafPrototypes","getProto","getPrototypeOf","obj","__esModule","ns","def","getOwnPropertyNames","definition","o","chunkId","all","reduce","promises","miniCssF","prop","inProgress","dataWebpackPrefix","script","needAttach","scripts","getElementsByTagName","i","s","getAttribute","charset","timeout","nc","onScriptComplete","prev","onerror","onload","doneFns","fn","head","toStringTag","installedChunks","j","installedChunkData","promise","reject","errorType","realSrc","request","webpackJsonpCallback","parentChunkLoadingFunction","chunkIds","moreModules","runtime","some","chunkLoadingGlobal","self","Action","PopStateEventType","invariant","warning","cond","warn","getHistoryState","usr","idx","createLocation","to","_extends","pathname","hash","parsePath","substr","createPath","_ref","path","parsedPath","hashIndex","searchIndex","getUrlBasedHistory","getLocation","createHref","validateLocation","v5Compat","globalHistory","history","Pop","getIndex","handlePop","nextIndex","delta","createURL","origin","URL","replaceState","listen","encodeLocation","Push","historyState","pushState","DOMException","Replace","go","ResultType","matchRoutes","routes","locationArg","basename","stripBasename","branches","flattenRoutes","sort","score","siblings","every","compareIndexes","routesMeta","childrenIndex","rankRouteBranches","matches","matchRouteBranch","safelyDecodeURI","parentsMeta","parentPath","flattenRoute","route","relativePath","caseSensitive","startsWith","joinPaths","computeScore","_route$path","exploded","explodeOptionalSegments","segments","first","rest","isOptional","endsWith","required","restExploded","result","subpath","paramRe","dynamicSegmentValue","indexRouteValue","emptySegmentValue","staticSegmentValue","splatPenalty","isSplat","initialScore","filter","segment","branch","matchedParams","matchedPathname","remainingPathname","matchPath","params","pathnameBase","normalizePathname","pattern","matcher","compiledParams","regexpSource","_","paramName","RegExp","compilePath","captureGroups","splatValue","decodeURIComponent","safelyDecodeURIComponent","decodeURI","startIndex","nextChar","getInvalidPathError","field","dest","getPathContributingMatches","resolveTo","toArg","routePathnames","locationPathname","isPathRelative","from","isEmptyPath","toPathname","routePathnameIndex","toSegments","fromPathname","resolvePathname","normalizeSearch","normalizeHash","resolvePath","hasExplicitTrailingSlash","hasCurrentTrailingSlash","paths","isRouteErrorResponse","status","statusText","internal","validMutationMethodsArr","validRequestMethodsArr","DataRouterContext","React","DataRouterStateContext","NavigationContext","LocationContext","RouteContext","outlet","isDataRoute","RouteErrorContext","useInRouterContext","useLocation","UNSAFE_invariant","useIsomorphicLayoutEffect","static","useNavigate","router","useDataRouterContext","DataRouterHook","UseNavigateStable","useCurrentRouteId","DataRouterStateHook","activeRef","navigate","fromRouteId","useNavigateStable","dataRouterContext","routePathnamesJson","UNSAFE_getPathContributingMatches","parse","relative","useNavigateUnstable","useResolvedPath","_temp2","useRoutesImpl","dataRouterState","parentMatches","routeMatch","parentParams","parentPathnameBase","locationFromContext","_parsedLocationArg$pa","parsedLocationArg","renderedMatches","_renderMatches","navigationType","DefaultErrorComponent","_state$errors","useDataRouterState","UseRouteError","routeId","errors","useRouteError","lightgrey","preStyles","padding","backgroundColor","fontStyle","defaultErrorElement","RenderErrorBoundary","super","revalidation","errorInfo","routeContext","component","RenderedRoute","staticContext","errorElement","ErrorBoundary","_deepestRenderedBoundaryId","_dataRouterState2","_dataRouterState","errorIndex","findIndex","reduceRight","getChildren","hookName","ctx","useRouteContext","thisRoute","Route","_props","Router","_ref5","basenameProp","locationProp","staticProp","navigationContext","locationContext","trailingPathname","Routes","_ref6","createRoutesFromChildren","treePath","loader","hasErrorBoundary","shouldRevalidate","handle","startTransitionImpl","BrowserRouter","_ref4","future","historyRef","setStateImpl","v7_startTransition","newState","isBrowser","ABSOLUTE_URL_REGEX","Link","_ref7","absoluteHref","reloadDocument","preventScrollReset","unstable_viewTransition","_objectWithoutPropertiesLoose","_excluded","UNSAFE_NavigationContext","isExternal","currentUrl","targetUrl","protocol","_temp","joinedPathname","useHref","internalOnClick","replaceProp","isModifiedEvent","shouldProcessLinkClick","useLinkClickHandler","BalanceContext","useBalance","BalanceProvider","balance","setBalance","parseFloat","localStorage","getItem","_jsx","updateBalance","newBalance","setItem","Navigation","isLogged","setIsLogged","handleStorageChange","className","_jsxs","handleSignOut","Balance","_Fragment","fundLogo","alt","toFixed","Pyramid","onMouseEnter","querySelector","classList","LandScreen","Header","blob1","coinTossImg","rouletteImg","horseImg","blob2","Footer","inputAmount","setInputAmount","moneyTruck","placeholder","onChange","handleUpdateBalance","inputNumber","alert","resetBalance","confirm","coinResult","setCoinResult","headsImage","tailsImage","rotationValues","minDegree","maxDegree","rotation","setRotation","selectedRange","hBet","sethBet","horse","setHorse","translations","setTranslations","winner","setWinner","won","setwon","fBet","setfBet","betAmount","getElementById","userGuess","isEven","randomDegree","selectedValue","find","getRandomRouletteValue","wheelIcon","transform","h1","h2","h3","h4","onSubmit","goalNumber","winningHorse","closestDistance","horseNumber","distance","abs","horseGame","htmlFor","parseInt","userChoice","username","setUsername","setPassword","Event","async","response","fetch","method","headers","json","token","reload","setEmail","fullname","setFullname","dateOfBirth","setDateOfBirth","backendData","setBackendData","Home","AddFunds","Games","Login","Register","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","App","reportWebVitals"],"sourceRoot":""}